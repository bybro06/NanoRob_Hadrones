lv_v0_1 = 0
lv_vmax_1 = 0
lv_distancia1_1 = 0
lv_distancia2_1 = 0
lv_distancia3_1 = 0
lv_v0_1 = 15
lv_vmax_1 = 90
lv_distancia1_1 = 20
lv_distancia2_1 = 150
lv_distancia3_1 = 20
m_recto_acceldecel_5 ()
Sub m_recto_acceldecel_5
lv_start_b_1 = Motor.GetCount ( "B" )
lv_start_c_1 = Motor.GetCount ( "C" )
lv_encoder_b_1 = 0
lv_encoder_c_1 = 0
lv_v0_1 = Math.Max ( 8 , lv_v0_1 ) * 1
lv_vmax_1 = Math.Min ( 90 , lv_vmax_1 ) * 1
lv_vel_1 = 0
lv_kp_1 = 0.4
lv_ki_1 = 0.0001
lv_kd_1 = 0.5
lv_error_1 = 0
lv_olderror_1 = 0
lv_errsum_1 = 0
lv_grados1_1 = lv_distancia1_1 * 360 / ( 5.6 * math.pi )
lv_grados2_1 = lv_distancia2_1 * 360 / ( 5.6 * math.pi )
lv_grados3_1 = lv_distancia3_1 * 360 / ( 5.6 * math.pi )
While lv_encoder_c_1 < lv_grados1_1 + lv_grados2_1 + lv_grados3_1
lv_encoder_b_1 = Motor.GetCount ( "B" ) - lv_start_b_1
lv_encoder_c_1 = Motor.GetCount ( "C" ) - lv_start_c_1
If lv_encoder_c_1 < lv_grados1_1 + lv_grados2_1 Then
lv_pendiente_1 = ( lv_vmax_1 - lv_v0_1 ) / lv_grados1_1
lv_vel_1 = Math.Min ( lv_vmax_1 , lv_pendiente_1 * lv_encoder_c_1 + lv_v0_1 )
Else
lv_pendiente_1 = ( lv_v0_1 - lv_vmax_1 ) / lv_grados3_1
lv_vel_1 = Math.Max ( lv_v0_1 , lv_pendiente_1 * ( lv_encoder_c_1 - lv_grados1_1 - lv_grados2_1 ) + lv_vmax_1 )
EndIf
lv_error_1 = ( - 1 * lv_encoder_b_1 - lv_encoder_c_1 ) * 1
lv_errsum_1 = lv_errsum_1 + lv_error_1
lv_correccion_1 = lv_error_1 * lv_kp_1 + ( lv_error_1 - lv_olderror_1 ) * lv_kd_1 + lv_errsum_1 * lv_ki_1
Motor.StartSync ( "BC" , - ( lv_vel_1 - lv_correccion_1 ) , ( lv_vel_1 + lv_correccion_1 ) )
lv_olderror_1 = lv_error_1
EndWhile
MotorBC.OffAndBrake ()
LCD.Clear ()
LCD.Write ( 5 , 10 , "Distancia cm: " + MotorC.GetTacho () * 5.6 * Math.Pi / 360 )
EndSub
