lv_v1_42 = 0
lv_v2_42 = 0
lv_angle_42 = 0
lv_v1_41 = 0
lv_v2_41 = 0
lv_angle_41 = 0
lv_velocidad_81 = 0
lv_kp_81 = 0
lv_ki_81 = 0
lv_kd_81 = 0
lv_encoder_81 = 0
lv_velocidad_1 = 0
lv_distancia_1 = 0
lv_v_114 = 0
lv_aenc_114 = 0
lv_v0_60 = 0
lv_vmax_60 = 0
lv_kp_60 = 0
lv_ki_60 = 0
lv_kd_60 = 0
lv_accelencoder_60 = 0
lv_encoder_60 = 0
lv_velocidad_95 = 0
lv_kp_95 = 0
lv_ki_95 = 0
lv_kd_95 = 0
lv_reader_95 = 0
lv_velocidad_82 = 0
lv_kp_82 = 0
lv_ki_82 = 0
lv_kd_82 = 0
lv_encoder_82 = 0
lv_velocidad_2 = 0
lv_distancia_2 = 0
lv_velocidad_77 = 0
lv_kp_77 = 0
lv_ki_77 = 0
lv_kd_77 = 0
lv_velocidad_96 = 0
lv_kp_96 = 0
lv_ki_96 = 0
lv_kd_96 = 0
lv_reader_96 = 0
lv_velocidad_7 = 0
lv_sens_7 = 0
lv_velocidad_5 = 0
lv_sens_5 = 0
lv_velocidad_15 = 0
lv_tiempo_15 = 0
lv_velocidad_89 = 0
lv_kp_89 = 0
lv_ki_89 = 0
lv_kd_89 = 0
lv_encoder_89 = 0
lv_velocidad_90 = 0
lv_kp_90 = 0
lv_ki_90 = 0
lv_kd_90 = 0
lv_encoder_90 = 0
lv_velocidad_8 = 0
lv_sens_8 = 0
lv_v0_62 = 0
lv_vmax_62 = 0
lv_kp_62 = 0
lv_ki_62 = 0
lv_kd_62 = 0
lv_accelencoder_62 = 0
lv_velocidad_78 = 0
lv_kp_78 = 0
lv_ki_78 = 0
lv_kd_78 = 0
lv_vmax_104 = 0
lv_kp_104 = 0
lv_ki_104 = 0
lv_kd_104 = 0
lv_color_136 = 0
lv_reps_124 = 0
lv_color_124 = 0
lv_reps_125 = 0
lv_color_125 = 0
lv_reps_126 = 0
lv_color_126 = 0
lv_reps_127 = 0
lv_color_127 = 0
lv_v_123 = 0
lv_aenc_123 = 0
lv_v_122 = 0
lv_t_122 = 0
lv_color_128 = 0
lv_color_129 = 0
lv_color_130 = 0
lv_color_131 = 0
lv_read_140 = 0
gv_velocidad = 0
gv_kp = 0
gv_ki = 0
gv_kd = 0
gv_diameter = 0
gv_centro = 0
gv_num_bloques = 0
gv_sentido_motores = 0
gv_correccion = 0
gv_g1 = 0
gv_tiempohastalinea = 0
gv_velocidad = 100
gv_kp = 0.07
gv_ki = 0.0001
gv_kd = 1
gv_diameter = 56
gv_centro = 0
gv_num_bloques = 0
gv_sentido_motores = 1
gv_correccion = 0
gv_sentido_motores = 1
gv_sentido_motores = 1
gv_g1 = 124 / 36
gv_g1 = 114 / 36
gv_sentido_motores = 1
gv_sentido_motores = 1
gv_sentido_motores = 1
gv_sentido_motores = 1
f_setup_0 ()
Thread.Run = f_display_0
Thread.Run = f_stop_0
f_main_0 ()
Sub f_setup_0
Sensor.SetMode ( 1 , 0 )
Sensor.SetMode ( 2 , 4 )
Sensor.SetMode ( 3 , 0 )
Sensor.SetMode ( 4 , 0 )
EndSub
Sub f_startarm_0
Time.Reset1 ()
While Time.Get1 () < 800
MotorA.StartSpeed ( 85 )
MotorD.StartSpeed ( - 80 )
EndWhile
MotorAD.OffAndBrake ()
Program.Delay ( 100 )
Thread.Run = f_colocard_0
f_colocara_0 ()
MotorA.ResetCount ()
MotorD.ResetCount ()
Program.Delay ( 100 )
EndSub
Sub f_colocara_0
Motor.Move ( "A" , - 50 , 400 , "True" )
EndSub
Sub f_colocard_0
Motor.Move ( "D" , 90 , 600 , "True" )
EndSub
Sub f_display_0
gv_old_b = 0
gv_old_c = 0
While "True"
LCD.StopUpdate ()
LCD.Clear ()
LCD.Write ( 5 , 15 , "Bloques: " + gv_num_bloques )
LCD.Write ( 5 , 35 , "centro: " + gv_centro )
LCD.Write ( 5 , 45 , "Velocidad de B:  " + MotorB.GetSpeed () * - 1 )
LCD.Write ( 5 , 55 , "Velocidad de C:  " + MotorC.GetSpeed () )
LCD.Write ( 5 , 65 , "rad/s de B:  " + Math.GetRadians ( MotorB.GetTacho () - gv_old_b ) / 0.05 * - 1 )
LCD.Write ( 5 , 75 , "rad/s de C:  " + Math.GetRadians ( MotorC.GetTacho () - gv_old_c ) / 0.05 )
LCD.Write ( 5 , 85 , "Encoder de B:  " + MotorB.GetTacho () * - 1 )
LCD.Write ( 5 , 95 , "Encoder de C:  " + MotorC.GetTacho () )
LCD.Update ()
Program.Delay ( 50 )
gv_old_b = MotorB.GetTacho ()
gv_old_c = MotorC.GetTacho ()
EndWhile
EndSub
Sub f_stop_0
While "True"
if Buttons.Current = "E" Then
MotorBC.OffAndBrake ()
MotorAD.OffAndBrake ()
Program.End ()
EndIf
EndWhile
EndSub
Sub f_main_0
f_startarm_0 ()
lv_v1_42 = 0
lv_v2_42 = 30
lv_angle_42 = 60
f_gunivencmmf_3 ()
lv_v1_41 = 30
lv_v2_41 = 0
lv_angle_41 = 60
f_gunivencmm_3 ()
lv_velocidad_81 = 32
lv_kp_81 = gv_kp * 0.7
lv_ki_81 = gv_ki
lv_kd_81 = gv_kd
lv_encoder_81 = 16.5
f_sl14pidenc_5 ()
lv_v1_41 = 20
lv_v2_41 = - 20
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_1 = 20
lv_distancia_1 = 5.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 20
lv_distancia_1 = 6
f_encoderrectomm_2 ()
lv_v1_41 = - 20
lv_v2_41 = 20
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_81 = 30
lv_kp_81 = gv_kp * 0.5
lv_ki_81 = gv_ki
lv_kd_81 = gv_kd
lv_encoder_81 = 10
f_sl14pidenc_5 ()
lv_v1_41 = 20
lv_v2_41 = - 20
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_1 = 15
lv_distancia_1 = 6.25
f_encoderrectomm_2 ()
f_coger_0 ()
lv_v_114 = gv_velocidad * 0.4
lv_aenc_114 = - 110
f_bmovea_2 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 6.5
f_encoderrectomm_2 ()
lv_v1_41 = - 30
lv_v2_41 = 30
lv_angle_41 = 96
f_gunivencmm_3 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 22
f_encoderrectomm_2 ()
MotorBC.OffAndBrake ()
Program.Delay ( 200 )
lv_v0_60 = 20
lv_vmax_60 = 60
lv_kp_60 = gv_kp
lv_ki_60 = gv_ki
lv_kd_60 = gv_kd
lv_accelencoder_60 = 7
lv_encoder_60 = 7
f_sl14sief_7 ()
Time.Reset4 ()
lv_velocidad_95 = 35
lv_kp_95 = gv_kp
lv_ki_95 = gv_ki
lv_kd_95 = gv_kd
lv_reader_95 = 3
f_sl1spidcross_5 ()
lv_velocidad_1 = 30
lv_distancia_1 = 2.5
f_encoderrectomm_2 ()
gv_tiempohastalinea = Time.Get4 ()
LCD.Clear ()
LCD.Write ( 5 , 5 , gv_tiempohastalinea )
lv_v1_41 = - 30
lv_v2_41 = 30
lv_angle_41 = 90
f_gunivencmm_3 ()
lv_velocidad_82 = 40
lv_kp_82 = gv_kp * 1.3
lv_ki_82 = gv_ki
lv_kd_82 = gv_kd
lv_encoder_82 = 20
f_sl14pidencf_5 ()
lv_velocidad_2 = 40
lv_distancia_2 = 12
f_encoderrectommf_2 ()
lv_velocidad_77 = 30
lv_kp_77 = gv_kp * 0.6
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
f_sl14pid_4 ()
If gv_tiempohastalinea < 850 Then
f_casopsoe_0 ()
Else
f_casovox_0 ()
EndIf
lv_velocidad_1 = - 30
lv_distancia_1 = 7.5
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * - 0.3
lv_v2_41 = gv_velocidad * 0.3
lv_angle_41 = 90
f_gunivencmm_3 ()
lv_velocidad_82 = gv_velocidad * 0.3
lv_kp_82 = gv_kp
lv_ki_82 = gv_ki
lv_kd_82 = gv_kd
lv_encoder_82 = 3
f_sl14pidencf_5 ()
lv_velocidad_96 = gv_velocidad * 0.3
lv_kp_96 = gv_kp
lv_ki_96 = gv_ki
lv_kd_96 = gv_kd
lv_reader_96 = 3
f_sl1spidcrossf_5 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 2.5
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * - 0.3
lv_v2_41 = gv_velocidad * 0.3
lv_angle_41 = 94
f_gunivencmm_3 ()
lv_velocidad_82 = gv_velocidad * 0.3
lv_kp_82 = gv_kp
lv_ki_82 = gv_ki
lv_kd_82 = gv_kd
lv_encoder_82 = 20
f_sl14pidencf_5 ()
lv_velocidad_2 = gv_velocidad * 0.3
lv_distancia_2 = 15
f_encoderrectommf_2 ()
lv_velocidad_77 = gv_velocidad * 0.3
lv_kp_77 = gv_kp
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
f_sl14pid_4 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 3
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * - 0.3
lv_v2_41 = gv_velocidad * 0.3
lv_angle_41 = 93
f_gunivencmm_3 ()
lv_velocidad_81 = gv_velocidad * 0.25
lv_kp_81 = gv_kp
lv_ki_81 = gv_ki
lv_kd_81 = gv_kd
lv_encoder_81 = 10
f_sl14pidenc_5 ()
lv_v1_41 = 30
lv_v2_41 = - 30
lv_angle_41 = 93
f_gunivencmm_3 ()
lv_velocidad_1 = 20
lv_distancia_1 = 6.25
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 7.5
f_encoderrectomm_2 ()
lv_v1_41 = - 20
lv_v2_41 = 20
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_81 = gv_velocidad * 0.25
lv_kp_81 = gv_kp
lv_ki_81 = gv_ki
lv_kd_81 = gv_kd
lv_encoder_81 = 13
f_sl14pidenc_5 ()
lv_v1_41 = 20
lv_v2_41 = - 20
lv_angle_41 = 95
f_gunivencmm_3 ()
lv_velocidad_1 = 20
lv_distancia_1 = 7.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 10
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * 0.2
lv_v2_41 = gv_velocidad * - 0.2
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_95 = gv_velocidad * 0.3
lv_kp_95 = gv_kp
lv_ki_95 = gv_ki
lv_kd_95 = gv_kd
lv_reader_95 = 4
f_sl1spidcross_5 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 3.5
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 95
f_gunivencmm_3 ()
lv_velocidad_81 = gv_velocidad * 0.25
lv_kp_81 = gv_kp
lv_ki_81 = gv_ki
lv_kd_81 = gv_kd
lv_encoder_81 = 12
f_sl14pidenc_5 ()
f_soltar_0 ()
lv_velocidad_1 = gv_velocidad * - 0.15
lv_distancia_1 = 6
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 66.5
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.85
lv_distancia_1 = 95
f_encoderrectomm_2 ()
Program.Delay ( 250 )
lv_v_114 = 50
lv_aenc_114 = 230
f_bmovea_2 ()
Program.Delay ( 250 )
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 20
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.15
lv_distancia_1 = 7.5
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 9
f_gunivencmm_3 ()
Program.Delay ( 250 )
lv_v_114 = 50
lv_aenc_114 = - 200
f_bmovea_2 ()
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 15
f_gunivencmm_3 ()
lv_v_114 = 50
lv_aenc_114 = - 500
f_bmovea_2 ()
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 170
f_gunivencmm_3 ()
lv_v_114 = 50
lv_aenc_114 = 0
f_bmovea_2 ()
lv_velocidad_1 = gv_velocidad * 0.8
lv_distancia_1 = 55
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 87
f_gunivencmm_3 ()
lv_velocidad_7 = 30
lv_sens_7 = 1
f_1blancorectomm_2 ()
lv_velocidad_5 = 20
lv_sens_5 = 1
f_1negrorectomm_2 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 3
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * - 0.3
lv_v2_41 = gv_velocidad * 0.3
lv_angle_41 = 75
f_gunivencmm_3 ()
Program.Delay ( 250 )
lv_velocidad_82 = gv_velocidad * 0.3
lv_kp_82 = gv_kp
lv_ki_82 = gv_ki
lv_kd_82 = gv_kd
lv_encoder_82 = 10
f_sl14pidencf_5 ()
lv_velocidad_96 = gv_velocidad * 0.5
lv_kp_96 = gv_kp
lv_ki_96 = gv_ki
lv_kd_96 = gv_kd
lv_reader_96 = 3
f_sl1spidcrossf_5 ()
lv_velocidad_81 = gv_velocidad * 0.7
lv_kp_81 = gv_kp
lv_ki_81 = gv_ki
lv_kd_81 = gv_kd
lv_encoder_81 = 20
f_sl14pidenc_5 ()
Program.Delay ( 250 )
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 50
f_gunivencmm_3 ()
lv_v_114 = 50
lv_aenc_114 = 0
f_bmovea_2 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 18
f_encoderrectomm_2 ()
lv_v_114 = 50
lv_aenc_114 = 220
f_bmovea_2 ()
lv_velocidad_1 = gv_velocidad * - 0.3
lv_distancia_1 = 7
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * - 0.3
lv_v2_41 = gv_velocidad * 0.3
lv_angle_41 = 125
f_gunivencmm_3 ()
lv_v_114 = 50
lv_aenc_114 = 0
f_bmovea_2 ()
lv_velocidad_1 = gv_velocidad * 0.7
lv_distancia_1 = 35
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 42
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.8
lv_distancia_1 = 50
f_encoderrectomm_2 ()
lv_velocidad_1 = gv_velocidad * - 0.3
lv_distancia_1 = 15
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * - 0.05
lv_v2_41 = gv_velocidad * - 0.6
lv_angle_41 = 140
f_gunivencmm_3 ()
lv_velocidad_15 = gv_velocidad * - 0.6
lv_tiempo_15 = 1100
f_tiemporectomm_2 ()
lv_velocidad_1 = gv_velocidad * 0.2
lv_distancia_1 = 12
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * - 0.3
lv_v2_41 = gv_velocidad * 0.3
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 3
f_encoderrectomm_2 ()
lv_velocidad_7 = gv_velocidad * 0.3
lv_sens_7 = 3
f_1blancorectomm_2 ()
lv_velocidad_1 = gv_velocidad * - 0.3
lv_distancia_1 = 15
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 94
f_gunivencmm_3 ()
lv_velocidad_2 = gv_velocidad * 0.3
lv_distancia_2 = 24
f_encoderrectommf_2 ()
lv_v1_41 = gv_velocidad * - 0.2
lv_v2_41 = gv_velocidad * 0.2
lv_angle_41 = 107
f_gunivencmm_3 ()
lv_v_114 = 50
lv_aenc_114 = 230
f_bmovea_2 ()
lv_velocidad_2 = gv_velocidad * 0.3
lv_distancia_2 = 21
f_encoderrectommf_2 ()
lv_velocidad_1 = gv_velocidad * 0.1
lv_distancia_1 = 4
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * 0.2
lv_v2_41 = gv_velocidad * - 0.2
lv_angle_41 = 5
f_gunivencmm_3 ()
lv_v_114 = 80
lv_aenc_114 = - 500
f_bmovea_2 ()
lv_v1_41 = gv_velocidad * 0.1
lv_v2_41 = gv_velocidad * - 0.04
lv_angle_41 = 40
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * - 0.9
lv_distancia_1 = 30
f_encoderrectomm_2 ()
lv_v_114 = 80
lv_aenc_114 = 0
f_bmovea_2 ()
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 89
f_gunivencmm_3 ()
lv_velocidad_2 = gv_velocidad * 0.8
lv_distancia_2 = 63
f_encoderrectommf_2 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 15
f_encoderrectomm_2 ()
f_coger_0 ()
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 96
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.8
lv_distancia_1 = 61
f_encoderrectomm_2 ()
f_soltar_0 ()
lv_velocidad_1 = gv_velocidad * - 0.8
lv_distancia_1 = 10
f_encoderrectomm_2 ()
f_finprueba_0 ()
EndSub
Sub f_casopsoe_0
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 2
f_encoderrectomm_2 ()
lv_v1_41 = 20
lv_v2_41 = - 20
lv_angle_41 = 94
f_gunivencmm_3 ()
lv_velocidad_89 = 30
lv_kp_89 = gv_kp
lv_ki_89 = gv_ki
lv_kd_89 = gv_kd
lv_encoder_89 = 30
f_sl31pidenc_5 ()
lv_v1_41 = - 20
lv_v2_41 = 20
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_1 = 30
lv_distancia_1 = 6.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 6.4
f_encoderrectomm_2 ()
lv_v1_41 = - 20
lv_v2_41 = 20
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_81 = 20
lv_kp_81 = gv_kp
lv_ki_81 = gv_ki
lv_kd_81 = gv_kd
lv_encoder_81 = 9
f_sl14pidenc_5 ()
lv_v1_41 = 20
lv_v2_41 = - 20
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_1 = 20
lv_distancia_1 = 6.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 7
f_encoderrectomm_2 ()
lv_v1_41 = - 20
lv_v2_41 = 20
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_82 = 20
lv_kp_82 = gv_kp
lv_ki_82 = gv_ki
lv_kd_82 = gv_kd
lv_encoder_82 = 5
f_sl14pidencf_5 ()
lv_velocidad_96 = 30
lv_kp_96 = gv_kp
lv_ki_96 = gv_ki
lv_kd_96 = gv_kd
lv_reader_96 = 3
f_sl1spidcrossf_5 ()
lv_velocidad_81 = 30
lv_kp_81 = gv_kp
lv_ki_81 = gv_ki
lv_kd_81 = gv_kd
lv_encoder_81 = 22.5
f_sl14pidenc_5 ()
lv_v1_41 = gv_velocidad * - 0.2
lv_v2_41 = gv_velocidad * 0.2
lv_angle_41 = 93
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 13.5
f_encoderrectomm_2 ()
f_soltar_0 ()
lv_velocidad_1 = gv_velocidad * - 0.3
lv_distancia_1 = 4
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * - 0.3
lv_v2_41 = gv_velocidad * 0.3
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_90 = gv_velocidad * 0.2
lv_kp_90 = gv_kp * 1.25
lv_ki_90 = gv_ki
lv_kd_90 = gv_kd
lv_encoder_90 = 5
f_sl31pidencf_5 ()
lv_velocidad_96 = gv_velocidad * 0.3
lv_kp_96 = gv_kp
lv_ki_96 = gv_ki
lv_kd_96 = gv_kd
lv_reader_96 = 4
f_sl1spidcrossf_5 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 2.5
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * - 0.3
lv_v2_41 = gv_velocidad * 0.3
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 7
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 5.5
f_encoderrectomm_2 ()
lv_v1_41 = 30
lv_v2_41 = - 30
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_81 = 15
lv_kp_81 = gv_kp
lv_ki_81 = gv_ki
lv_kd_81 = gv_kd
lv_encoder_81 = 10
f_sl14pidenc_5 ()
lv_v1_41 = - 30
lv_v2_41 = 30
lv_angle_41 = 92
f_gunivencmm_3 ()
lv_velocidad_1 = 30
lv_distancia_1 = 5.5
f_encoderrectomm_2 ()
f_coger_0 ()
EndSub
Sub f_casovox_0
lv_velocidad_1 = 16
lv_distancia_1 = 9.75
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 6.5
f_encoderrectomm_2 ()
lv_v1_41 = 30
lv_v2_41 = - 30
lv_angle_41 = 98
f_gunivencmm_3 ()
lv_velocidad_81 = 20
lv_kp_81 = gv_kp
lv_ki_81 = gv_ki
lv_kd_81 = gv_kd
lv_encoder_81 = 8.5
f_sl14pidenc_5 ()
lv_v1_41 = - 20
lv_v2_41 = 20
lv_angle_41 = 95
f_gunivencmm_3 ()
lv_velocidad_1 = 20
lv_distancia_1 = 6.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_v1_41 = 30
lv_v2_41 = - 30
lv_angle_41 = 176
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 20
f_encoderrectomm_2 ()
lv_velocidad_8 = 20
lv_sens_8 = 3
f_1blancorectommf_2 ()
lv_velocidad_5 = 30
lv_sens_5 = 3
f_1negrorectomm_2 ()
Program.Delay ( 250 )
lv_velocidad_1 = - 30
lv_distancia_1 = 5
f_encoderrectomm_2 ()
f_soltar_0 ()
lv_v1_41 = 30
lv_v2_41 = - 30
lv_angle_41 = 110
f_gunivencmm_3 ()
lv_velocidad_8 = 20
lv_sens_8 = 1
f_1blancorectommf_2 ()
lv_velocidad_5 = 30
lv_sens_5 = 1
f_1negrorectomm_2 ()
lv_velocidad_1 = 30
lv_distancia_1 = 3
f_encoderrectomm_2 ()
lv_v1_41 = - 20
lv_v2_41 = 20
lv_angle_41 = 91
f_gunivencmm_3 ()
lv_velocidad_82 = 25
lv_kp_82 = gv_kp
lv_ki_82 = gv_ki * 1.5
lv_kd_82 = gv_kd
lv_encoder_82 = 10
f_sl14pidencf_5 ()
lv_velocidad_2 = 30
lv_distancia_2 = 10
f_encoderrectommf_2 ()
lv_velocidad_77 = 35
lv_kp_77 = gv_kp * 0.8
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
f_sl14pid_4 ()
lv_velocidad_1 = gv_velocidad * 0.25
lv_distancia_1 = 9
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = gv_velocidad * - 0.3
lv_distancia_1 = 6
f_encoderrectomm_2 ()
lv_v1_41 = gv_velocidad * 0.3
lv_v2_41 = gv_velocidad * - 0.3
lv_angle_41 = 91
f_gunivencmm_3 ()
lv_velocidad_81 = 20
lv_kp_81 = gv_kp
lv_ki_81 = gv_ki
lv_kd_81 = gv_kd
lv_encoder_81 = 9
f_sl14pidenc_5 ()
Program.Delay ( 400 )
lv_v1_41 = gv_velocidad * - 0.3
lv_v2_41 = gv_velocidad * 0.3
lv_angle_41 = 95
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.25
lv_distancia_1 = 6
f_encoderrectomm_2 ()
f_coger_0 ()
EndSub
Sub f_finprueba_0
MotorBC.OffAndBrake ()
MotorAD.OffAndBrake ()
Program.End ()
EndSub
Sub f_encoderrectomm_2
lv_velocidad_1 = lv_velocidad_1 * gv_sentido_motores
lv_diametro_1 = 5.6
lv_enc_1 = lv_distancia_1 * 360 / Math.Pi / lv_diametro_1
lv_start_b_1 = Motor.GetCount ( "B" ) * - 1 + ( gv_correccion / 30 * lv_velocidad_1 )
lv_start_c_1 = Motor.GetCount ( "C" )
lv_encoder_c_1 = Motor.GetCount ( "C" ) - lv_start_c_1
While Math.abs ( lv_encoder_c_1 ) < lv_enc_1
lv_encoder_b_1 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_1
lv_encoder_c_1 = Motor.GetCount ( "C" ) - lv_start_c_1
lv_error_1 = ( lv_encoder_b_1 - lv_encoder_c_1 ) * gv_sentido_motores
lv_proporcial_1 = lv_error_1 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_1 - lv_proporcial_1 ) , lv_velocidad_1 + lv_proporcial_1 )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub f_encoderrectommf_2
lv_velocidad_2 = lv_velocidad_2 * gv_sentido_motores
lv_diametro_2 = 5.6
lv_enc_2 = lv_distancia_2 * 360 / Math.Pi / lv_diametro_2
lv_start_b_2 = Motor.GetCount ( "B" ) * - 1 + gv_correccion
lv_start_c_2 = Motor.GetCount ( "C" )
lv_encoder_c_2 = Motor.GetCount ( "C" ) - lv_start_c_2
While Math.abs ( lv_encoder_c_2 ) < lv_enc_2
lv_encoder_b_2 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_2
lv_encoder_c_2 = Motor.GetCount ( "C" ) - lv_start_c_2
lv_error_2 = ( lv_encoder_b_2 - lv_encoder_c_2 ) * gv_sentido_motores
lv_proporcial_2 = lv_error_2 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_2 - lv_proporcial_2 ) , lv_velocidad_2 + lv_proporcial_2 )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub f_1negrorectomm_2
lv_velocidad_5 = lv_velocidad_5 * gv_sentido_motores
lv_start_b_5 = Motor.GetCount ( "B" ) * - 1 + gv_correccion
lv_start_c_5 = Motor.GetCount ( "C" )
While Sensor.ReadPercent ( lv_sens_5 ) > 10
lv_encoder_b_5 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_5
lv_encoder_c_5 = Motor.GetCount ( "C" ) - lv_start_c_5
lv_error_5 = ( lv_encoder_b_5 - lv_encoder_c_5 ) * gv_sentido_motores
lv_proporcial_5 = lv_error_5 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_5 - lv_proporcial_5 ) , ( lv_velocidad_5 + lv_proporcial_5 ) )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub f_1blancorectomm_2
lv_velocidad_7 = lv_velocidad_7 * gv_sentido_motores
lv_start_b_7 = Motor.GetCount ( "B" ) * - 1 + gv_correccion
lv_start_c_7 = Motor.GetCount ( "C" )
While Sensor.ReadPercent ( lv_sens_7 ) < 50
lv_encoder_b_7 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_7
lv_encoder_c_7 = Motor.GetCount ( "C" ) - lv_start_c_7
lv_error_7 = ( lv_encoder_b_7 - lv_encoder_c_7 ) * gv_sentido_motores
lv_proporcial_7 = lv_error_7 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_7 - lv_proporcial_7 ) , lv_velocidad_7 + lv_proporcial_7 )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub f_1blancorectommf_2
lv_velocidad_8 = lv_velocidad_8 * gv_sentido_motores
lv_start_b_8 = Motor.GetCount ( "B" ) * - 1 + gv_correccion
lv_start_c_8 = Motor.GetCount ( "C" )
While Sensor.ReadPercent ( lv_sens_8 ) < 50
lv_encoder_b_8 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_8
lv_encoder_c_8 = Motor.GetCount ( "C" ) - lv_start_c_8
lv_error_8 = ( lv_encoder_b_8 - lv_encoder_c_8 ) * gv_sentido_motores
lv_proporcial_8 = lv_error_8 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_8 - lv_proporcial_8 ) , lv_velocidad_8 + lv_proporcial_8 )
EndWhile
Motor.Stop ( "BC" , "False" )
EndSub
Sub f_tiemporectomm_2
lv_velocidad_15 = lv_velocidad_15 * gv_sentido_motores
lv_start_b_15 = Motor.GetCount ( "B" ) * - 1 + gv_correccion
lv_start_c_15 = Motor.GetCount ( "C" )
Time.Reset3 ()
While Time.Get3 () < lv_tiempo_15
lv_encoder_b_15 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_15
lv_encoder_c_15 = Motor.GetCount ( "C" ) - lv_start_c_15
lv_error_15 = ( lv_encoder_b_15 - lv_encoder_c_15 ) * gv_sentido_motores
lv_proporcial_15 = lv_error_15 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_15 - lv_proporcial_15 ) , lv_velocidad_15 + lv_proporcial_15 )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub f_gunivencmm_3
lv_i_41 = "B"
lv_d_41 = "C"
lv_signo_41 = ( lv_v1_41 / lv_v2_41 ) / Math.Abs ( lv_v1_41 / lv_v2_41 )
lv_vmin_41 = Math.Min ( Math.Abs ( lv_v1_41 ) , Math.Abs ( lv_v2_41 ) )
lv_vmax_41 = Math.Max ( Math.Abs ( lv_v1_41 ) , Math.Abs ( lv_v2_41 ) )
lv_encodr_41 = lv_angle_41 * gv_g1 * ( - 2 / ( lv_signo_41 * lv_vmin_41 / lv_vmax_41 - 1 ) )
Program.Delay ( 100 )
Motor.MoveSync ( lv_i_41 + lv_d_41 , - lv_v1_41 , lv_v2_41 , lv_encodr_41 , "True" )
lv_v1_41 = 0
lv_v2_41 = 0
lv_angle_41 = 0
Program.Delay ( 100 )
EndSub
Sub f_gunivencmmf_3
lv_i_42 = "B"
lv_d_42 = "C"
lv_signo_42 = ( lv_v1_42 / lv_v2_42 ) / Math.Abs ( lv_v1_42 / lv_v2_42 )
lv_vmin_42 = Math.Min ( Math.Abs ( lv_v1_42 ) , Math.Abs ( lv_v2_42 ) )
lv_vmax_42 = Math.Max ( Math.Abs ( lv_v1_42 ) , Math.Abs ( lv_v2_42 ) )
lv_encodr_42 = lv_angle_42 * gv_g1 * ( - 2 / ( lv_signo_42 * lv_vmin_42 / lv_vmax_42 - 1 ) )
Program.Delay ( 100 )
Motor.MoveSync ( lv_i_42 + lv_d_42 , - lv_v1_42 , lv_v2_42 , lv_encodr_42 , "False" )
lv_v1_42 = 0
lv_v2_42 = 0
lv_angle_42 = 0
Program.Delay ( 100 )
EndSub
Sub f_sl14sief_7
lv_i_60 = "B"
lv_d_60 = "C"
lv_accelencoder_60 = ( lv_accelencoder_60 / ( 5.6 * Math.Pi ) ) * 360
lv_encoder_60 = ( lv_encoder_60 / ( 5.6 * Math.Pi ) ) * 360
lv_u_60 = 0
lv_error_60 = 0
lv_olderror_60 = 0
lv_errsum_60 = 0
Motor.ResetCount ( "C" )
While Motor.GetCount ( "C" ) < lv_encoder_60
lv_vel_60 = ( Motor.GetCount ( "C" ) / lv_accelencoder_60 * 0.72 ) * ( lv_vmax_60 + lv_v0_60 ) + lv_v0_60
lv_vel_60 = Math.Min ( lv_vel_60 , lv_vmax_60 )
lv_sentido_60 = lv_vel_60 / Math.Abs ( lv_vel_60 )
lv_error_60 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_60
lv_errsum_60 = lv_errsum_60 + lv_error_60
lv_u_60 = lv_error_60 * lv_kp_60 + ( lv_error_60 - lv_olderror_60 ) * lv_kd_60 + lv_errsum_60 * lv_ki_60
Motor.StartSync ( lv_i_60 + lv_d_60 , - ( lv_vel_60 + lv_u_60 ) * gv_sentido_motores , ( lv_vel_60 - lv_u_60 ) * gv_sentido_motores )
lv_olderror_60 = lv_error_60
EndWhile
Motor.Stop ( lv_i_60 + lv_d_60 , "False" )
EndSub
Sub f_sl14sicf_6
lv_i_62 = "B"
lv_d_62 = "C"
lv_accelencoder_62 = ( lv_accelencoder_62 / ( 5.6 * Math.Pi ) ) * 360
lv_u_62 = 0
lv_error_62 = 0
lv_olderror_62 = 0
lv_errsum_62 = 0
Motor.ResetCount ( "C" )
While Sensor.ReadPercent ( 1 ) > 15 Or Sensor.ReadPercent ( 4 ) > 15
lv_vel_62 = ( Motor.GetCount ( "C" ) / lv_accelencoder_62 * 0.72 ) * ( lv_vmax_62 + lv_v0_62 ) + lv_v0_62
lv_vel_62 = Math.Min ( lv_vel_62 , lv_vmax_62 )
lv_sentido_62 = lv_vel_62 / Math.Abs ( lv_vel_62 )
lv_error_62 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_62
lv_errsum_62 = lv_errsum_62 + lv_error_62
lv_u_62 = lv_error_62 * lv_kp_62 + ( lv_error_62 - lv_olderror_62 ) * lv_kd_62 + lv_errsum_62 * lv_ki_62
Motor.StartSync ( lv_i_62 + lv_d_62 , - ( lv_vel_62 + lv_u_62 ) * gv_sentido_motores , ( lv_vel_62 - lv_u_62 ) * gv_sentido_motores )
lv_olderror_62 = lv_error_62
EndWhile
Motor.Stop ( lv_i_62 + lv_d_62 , "False" )
EndSub
Sub f_sl14pid_4
lv_velocidad_77 = lv_velocidad_77 * gv_sentido_motores
lv_i_77 = "B"
lv_d_77 = "C"
lv_diametro_77 = 5.6
lv_distancia_77 = 5 * 360 / ( lv_diametro_77 * Math.Pi )
lv_error_77 = 0
lv_olderror_77 = 0
lv_errsum_77 = 0
lv_u_77 = 0
lv_sentido_77 = lv_velocidad_77 / Math.Abs ( lv_velocidad_77 )
lv_start_velocidad_77 = lv_velocidad_77
lv_start_kp_77 = lv_kp_77
lv_start_ki_77 = lv_ki_77
lv_start_kd_77 = lv_kd_77
lv_encoder_inicio_77 = MotorC.GetTacho ()
While Sensor.ReadPercent ( 1 ) > 5 Or Sensor.ReadPercent ( 4 ) > 5
If MotorC.GetTacho () - lv_encoder_inicio_77 < lv_distancia_77 Then
lv_velocidad_77 = lv_start_velocidad_77 * 0.65
lv_kp_77 = lv_start_kp_77 * 1
lv_ki_77 = lv_start_ki_77 * 1
lv_kd_77 = lv_start_kd_77 * 1
Else
lv_velocidad_77 = lv_start_velocidad_77
lv_kp_77 = lv_start_kp_77
lv_ki_77 = lv_start_ki_77
lv_kd_77 = lv_start_kd_77
EndIf
lv_error_77 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_77 * gv_sentido_motores
lv_errsum_77 = lv_errsum_77 + lv_error_77
lv_u_77 = lv_error_77 * lv_kp_77 + ( lv_error_77 - lv_olderror_77 ) * lv_kd_77 + lv_errsum_77 * lv_ki_77
Motor.StartSync ( lv_i_77 + lv_d_77 , - ( lv_velocidad_77 + lv_u_77 ) , lv_velocidad_77 - lv_u_77 )
lv_olderror_77 = lv_error_77
EndWhile
Motor.Stop ( lv_i_77 + lv_d_77 , "True" )
EndSub
Sub f_sl14pidf_4
lv_velocidad_78 = lv_velocidad_78 * gv_sentido_motores
lv_i_78 = "B"
lv_d_78 = "C"
lv_diametro_78 = 5.6
lv_distancia_78 = 5 * 360 / ( lv_diametro_78 * Math.Pi )
lv_error_78 = 0
lv_olderror_78 = 0
lv_errsum_78 = 0
lv_u_78 = 0
lv_sentido_78 = lv_velocidad_78 / Math.Abs ( lv_velocidad_78 )
lv_start_velocidad_78 = lv_velocidad_78
lv_start_kp_78 = lv_kp_78
lv_start_ki_78 = lv_ki_78
lv_start_kd_78 = lv_kd_78
lv_encoder_inicio_78 = MotorC.GetTacho ()
While Sensor.ReadPercent ( 1 ) > 5 Or Sensor.ReadPercent ( 4 ) > 5
If MotorC.GetTacho () - lv_encoder_inicio_78 < lv_distancia_78 Then
lv_velocidad_78 = lv_start_velocidad_78 * 0.65
lv_kp_78 = lv_start_kp_78 * 1
lv_ki_78 = lv_start_ki_78 * 1
lv_kd_78 = lv_start_kd_78 * 1
Else
lv_velocidad_78 = lv_start_velocidad_78
lv_kp_78 = lv_start_kp_78
lv_ki_78 = lv_start_ki_78
lv_kd_78 = lv_start_kd_78
EndIf
lv_error_78 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_78 * gv_sentido_motores
lv_errsum_78 = lv_errsum_78 + lv_error_78
lv_u_78 = lv_error_78 * lv_kp_78 + ( lv_error_78 - lv_olderror_78 ) * lv_kd_78 + lv_errsum_78 * lv_ki_78
Motor.StartSync ( lv_i_78 + lv_d_78 , - ( lv_velocidad_78 + lv_u_78 ) , lv_velocidad_78 - lv_u_78 )
lv_olderror_78 = lv_error_78
EndWhile
Motor.Stop ( lv_i_78 + lv_d_78 , "False" )
EndSub
Sub f_sl14pidenc_5
lv_velocidad_81 = lv_velocidad_81 * gv_sentido_motores
lv_i_81 = "B"
lv_d_81 = "C"
lv_diametro_81 = 5.6
lv_distancia_81 = 5 * 360 / ( lv_diametro_81 * Math.Pi )
lv_error_81 = 0
lv_olderror_81 = 0
lv_errsum_81 = 0
lv_u_81 = 0
lv_sentido_81 = lv_velocidad_81 / Math.Abs ( lv_velocidad_81 )
lv_start_velocidad_81 = lv_velocidad_81
lv_start_kp_81 = lv_kp_81
lv_start_ki_81 = lv_ki_81
lv_start_kd_81 = lv_kd_81
lv_encoder_81 = lv_encoder_81 / ( lv_diametro_81 * Math.Pi ) * 360
lv_start_c_81 = Motor.GetCount ( "C" )
lv_encoder_c_81 = 0
While Math.Abs ( lv_encoder_c_81 ) < lv_encoder_81
lv_encoder_c_81 = Motor.GetCount ( "C" ) - lv_start_c_81
If lv_encoder_c_81 < lv_distancia_81 Then
lv_velocidad_81 = lv_start_velocidad_81 * 0.65
lv_kp_81 = lv_start_kp_81 * 1
lv_ki_81 = lv_start_ki_81 * 1
lv_kd_81 = lv_start_kd_81 * 1
Else
lv_velocidad_81 = lv_start_velocidad_81
lv_kp_81 = lv_start_kp_81
lv_ki_81 = lv_start_ki_81
lv_kd_81 = lv_start_kd_81
EndIf
lv_error_81 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_81 * gv_sentido_motores
lv_errsum_81 = lv_errsum_81 + lv_error_81
lv_u_81 = lv_error_81 * lv_kp_81 + ( lv_error_81 - lv_olderror_81 ) * lv_kd_81 + lv_errsum_81 * lv_ki_81
Motor.StartSync ( lv_i_81 + lv_d_81 , - ( lv_velocidad_81 + lv_u_81 ) , lv_velocidad_81 - lv_u_81 )
lv_olderror_81 = lv_error_81
EndWhile
Motor.Stop ( lv_i_81 + lv_d_81 , "True" )
EndSub
Sub f_sl14pidencf_5
lv_velocidad_82 = lv_velocidad_82 * gv_sentido_motores
lv_i_82 = "B"
lv_d_82 = "C"
lv_diametro_82 = 5.6
lv_distancia_82 = 5 * 360 / ( lv_diametro_82 * Math.Pi )
lv_error_82 = 0
lv_olderror_82 = 0
lv_errsum_82 = 0
lv_u_82 = 0
lv_sentido_82 = lv_velocidad_82 / Math.Abs ( lv_velocidad_82 )
lv_start_velocidad_82 = lv_velocidad_82
lv_start_kp_82 = lv_kp_82
lv_start_ki_82 = lv_ki_82
lv_start_kd_82 = lv_kd_82
lv_encoder_82 = lv_encoder_82 / ( lv_diametro_82 * Math.Pi ) * 360
lv_start_c_82 = Motor.GetCount ( "C" )
lv_encoder_c_82 = 0
While Math.Abs ( lv_encoder_c_82 ) < lv_encoder_82
lv_encoder_c_82 = Motor.GetCount ( "C" ) - lv_start_c_82
If lv_encoder_c_82 < lv_distancia_82 Then
lv_velocidad_82 = lv_start_velocidad_82 * 0.65
lv_kp_82 = lv_start_kp_82 * 1
lv_ki_82 = lv_start_ki_82 * 1
lv_kd_82 = lv_start_kd_82 * 1
Else
lv_velocidad_82 = lv_start_velocidad_82
lv_kp_82 = lv_start_kp_82
lv_ki_82 = lv_start_ki_82
lv_kd_82 = lv_start_kd_82
EndIf
lv_error_82 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_82 * gv_sentido_motores
lv_errsum_82 = lv_errsum_82 + lv_error_82
lv_u_82 = lv_error_82 * lv_kp_82 + ( lv_error_82 - lv_olderror_82 ) * lv_kd_82 + lv_errsum_82 * lv_ki_82
Motor.StartSync ( lv_i_82 + lv_d_82 , - ( lv_velocidad_82 + lv_u_82 ) , lv_velocidad_82 - lv_u_82 )
lv_olderror_82 = lv_error_82
EndWhile
Motor.Stop ( lv_i_82 + lv_d_82 , "False" )
EndSub
Sub f_sl31pidenc_5
lv_velocidad_89 = lv_velocidad_89 * gv_sentido_motores
lv_i_89 = "B"
lv_d_89 = "C"
lv_diametro_89 = 5.6
lv_distancia_89 = 5 * 360 / ( lv_diametro_89 * Math.Pi )
lv_error_89 = 0
lv_olderror_89 = 0
lv_errsum_89 = 0
lv_u_89 = 0
lv_sentido_89 = lv_velocidad_89 / Math.Abs ( lv_velocidad_89 )
lv_start_velocidad_89 = lv_velocidad_89
lv_start_kp_89 = lv_kp_89
lv_start_ki_89 = lv_ki_89
lv_start_kd_89 = lv_kd_89
lv_encoder_89 = lv_encoder_89 / ( lv_diametro_89 * Math.Pi ) * 360
lv_start_c_89 = Motor.GetCount ( "C" )
lv_encoder_c_89 = 0
While Math.Abs ( lv_encoder_c_89 ) < lv_encoder_89
lv_encoder_c_89 = Motor.GetCount ( "C" ) - lv_start_c_89
If lv_encoder_c_89 < lv_distancia_89 Then
lv_velocidad_89 = lv_start_velocidad_89 * 0.65
lv_kp_89 = lv_start_kp_89 * 1
lv_ki_89 = lv_start_ki_89 * 1
lv_kd_89 = lv_start_kd_89 * 1
Else
lv_velocidad_89 = lv_start_velocidad_89
lv_kp_89 = lv_start_kp_89
lv_ki_89 = lv_start_ki_89
lv_kd_89 = lv_start_kd_89
EndIf
lv_error_89 = ( Sensor.ReadPercent ( 3 ) - Sensor.ReadPercent ( 1 ) ) * lv_sentido_89 * gv_sentido_motores
lv_errsum_89 = lv_errsum_89 + lv_error_89
lv_u_89 = lv_error_89 * lv_kp_89 + ( lv_error_89 - lv_olderror_89 ) * lv_kd_89 + lv_errsum_89 * lv_ki_89
Motor.StartSync ( lv_i_89 + lv_d_89 , - ( lv_velocidad_89 + lv_u_89 ) , lv_velocidad_89 - lv_u_89 )
lv_olderror_89 = lv_error_89
EndWhile
Motor.Stop ( lv_i_89 + lv_d_89 , "True" )
EndSub
Sub f_sl31pidencf_5
lv_velocidad_90 = lv_velocidad_90 * gv_sentido_motores
lv_i_90 = "B"
lv_d_90 = "C"
lv_diametro_90 = 5.6
lv_distancia_90 = 5 * 360 / ( lv_diametro_90 * Math.Pi )
lv_error_90 = 0
lv_olderror_90 = 0
lv_errsum_90 = 0
lv_u_90 = 0
lv_sentido_90 = lv_velocidad_90 / Math.Abs ( lv_velocidad_90 )
lv_start_velocidad_90 = lv_velocidad_90
lv_start_kp_90 = lv_kp_90
lv_start_ki_90 = lv_ki_90
lv_start_kd_90 = lv_kd_90
lv_encoder_90 = lv_encoder_90 / ( lv_diametro_90 * Math.Pi ) * 360
lv_start_c_90 = Motor.GetCount ( "C" )
lv_encoder_c_90 = 0
While Math.Abs ( lv_encoder_c_90 ) < lv_encoder_90
lv_encoder_c_90 = Motor.GetCount ( "C" ) - lv_start_c_90
If lv_encoder_c_90 < lv_distancia_90 Then
lv_velocidad_90 = lv_start_velocidad_90 * 0.65
lv_kp_90 = lv_start_kp_90 * 1
lv_ki_90 = lv_start_ki_90 * 1
lv_kd_90 = lv_start_kd_90 * 1
Else
lv_velocidad_90 = lv_start_velocidad_90
lv_kp_90 = lv_start_kp_90
lv_ki_90 = lv_start_ki_90
lv_kd_90 = lv_start_kd_90
EndIf
lv_error_90 = ( Sensor.ReadPercent ( 3 ) - Sensor.ReadPercent ( 1 ) ) * lv_sentido_90 * gv_sentido_motores
lv_errsum_90 = lv_errsum_90 + lv_error_90
lv_u_90 = lv_error_90 * lv_kp_90 + ( lv_error_90 - lv_olderror_90 ) * lv_kd_90 + lv_errsum_90 * lv_ki_90
Motor.StartSync ( lv_i_90 + lv_d_90 , - ( lv_velocidad_90 + lv_u_90 ) , lv_velocidad_90 - lv_u_90 )
lv_olderror_90 = lv_error_90
EndWhile
Motor.Stop ( lv_i_90 + lv_d_90 , "False" )
EndSub
Sub f_sl1spidcross_5
lv_velocidad_95 = lv_velocidad_95 * gv_sentido_motores
lv_i_95 = "B"
lv_d_95 = "C"
lv_error_95 = 0
lv_olderror_95 = 0
lv_errsum_95 = 0
lv_u_95 = 0
lv_sentido_95 = lv_velocidad_95 / Math.Abs ( lv_velocidad_95 )
If lv_reader_95 = 3 Then
lv_reader1_95 = 1
lv_reader2_95 = 4
Else
lv_reader1_95 = 3
lv_reader2_95 = 1
EndIf
While Sensor.ReadPercent ( lv_reader_95 ) > 10
lv_error_95 = ( Sensor.ReadPercent ( lv_reader1_95 ) - Sensor.ReadPercent ( lv_reader2_95 ) ) * lv_sentido_95 * gv_sentido_motores
lv_errsum_95 = lv_errsum_95 + lv_error_95
lv_u_95 = lv_error_95 * lv_kp_95 + ( lv_error_95 - lv_olderror_95 ) * lv_kd_95 + lv_errsum_95 * lv_ki_95
Motor.StartSync ( lv_i_95 + lv_d_95 , - ( lv_velocidad_95 + lv_u_95 ) , lv_velocidad_95 - lv_u_95 )
lv_olderror_95 = lv_error_95
EndWhile
Motor.Stop ( lv_i_95 + lv_d_95 , "True" )
EndSub
Sub f_sl1spidcrossf_5
lv_velocidad_96 = lv_velocidad_96 * gv_sentido_motores
lv_i_96 = "B"
lv_d_96 = "C"
lv_error_96 = 0
lv_olderror_96 = 0
lv_errsum_96 = 0
lv_u_96 = 0
lv_sentido_96 = lv_velocidad_96 / Math.Abs ( lv_velocidad_96 )
If lv_reader_96 = 3 Then
lv_reader1_96 = 1
lv_reader2_96 = 4
Else
lv_reader1_96 = 3
lv_reader2_96 = 1
EndIf
While Sensor.ReadPercent ( lv_reader_96 ) > 10
lv_error_96 = ( Sensor.ReadPercent ( lv_reader1_96 ) - Sensor.ReadPercent ( lv_reader2_96 ) ) * lv_sentido_96 * gv_sentido_motores
lv_errsum_96 = lv_errsum_96 + lv_error_96
lv_u_96 = lv_error_96 * lv_kp_96 + ( lv_error_96 - lv_olderror_96 ) * lv_kd_96 + lv_errsum_96 * lv_ki_96
Motor.StartSync ( lv_i_96 + lv_d_96 , - ( lv_velocidad_96 + lv_u_96 ) , lv_velocidad_96 - lv_u_96 )
lv_olderror_96 = lv_error_96
EndWhile
Motor.Stop ( lv_i_96 + lv_d_96 , "False" )
EndSub
Sub f_smart14pidf_4
lv_vmax_104 = lv_vmax_104 * gv_sentido_motores
lv_i_104 = "B"
lv_d_104 = "C"
lv_v0_104 = 10 * gv_sentido_motores
lv_accelencoder_104 = 150
lv_u_104 = 0
lv_errsum_104 = 0
lv_olderror_104 = 0
Motor.ResetCount ( "C" )
While Sensor.ReadPercent ( 1 ) > 15 Or Sensor.ReadPercent ( 4 ) > 15
lv_vel_104 = ( Motor.GetCount ( "C" ) / lv_accelencoder_104 ) * ( lv_vmax_104 + lv_v0_104 ) + lv_v0_104
lv_vel_104 = Math.Min ( lv_vel_104 , lv_vmax_104 )
lv_sentido_104 = lv_vel_104 / Math.Abs ( lv_vel_104 )
lv_error_104 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_104 * gv_sentido_motores
lv_errsum_104 = lv_errsum_104 * 0.9 + lv_error_104
lv_u_104 = lv_error_104 * lv_kp_104 + ( lv_error_104 - lv_olderror_104 ) * lv_kd_104 + lv_errsum_104 * lv_ki_104
Motor.StartSync ( lv_i_104 + lv_d_104 , - ( lv_vel_104 + lv_u_104 ) , lv_vel_104 - lv_u_104 )
lv_olderror_104 = lv_error_104
EndWhile
Motor.Stop ( lv_i_104 + lv_d_104 , "False" )
EndSub
Sub f_bmovea_2
lv_encdiff_114 = lv_aenc_114 - Motor.GetCount ( "A" )
lv_signo_114 = lv_encdiff_114 / Math.Abs ( lv_encdiff_114 )
lv_safetytimer_114 = Math.Max ( ( ( Math.abs ( lv_encdiff_114 ) / 100 ) / ( lv_v_114 / 20 ) * 650 * 2 ) , 400 )
Time.Reset3 ()
If lv_encdiff_114 <> 0 Then
While Math.Abs ( Motor.GetCount ( "A" ) - lv_aenc_114 ) > 25 and Time.Get3 () < 2000
MotorA.StartSpeed ( lv_signo_114 * lv_v_114 )
EndWhile
Motor.Stop ( "A" , "True" )
EndIf
EndSub
Sub f_bmovedtimer_2
Time.Reset1 ()
While Time.Get1 () < lv_t_122
MotorD.StartSpeed ( lv_v_122 )
EndWhile
MotorD.OffAndBrake ()
EndSub
Sub f_bmoved_2
lv_encdiff_123 = lv_aenc_123 - Motor.GetCount ( "D" )
lv_signo_123 = lv_encdiff_123 / Math.Abs ( lv_encdiff_123 )
lv_safetytimer_123 = Math.Max ( ( ( Math.abs ( lv_encdiff_123 ) / 100 ) / ( lv_v_123 / 20 ) * 650 * 2 ) , 400 )
Time.Reset3 ()
If lv_encdiff_123 <> 0 Then
While Math.Abs ( Motor.GetCount ( "D" ) - lv_aenc_123 ) > 15 and Time.Get3 () < lv_safetytimer_123
MotorD.StartSpeed ( lv_signo_123 * lv_v_123 )
LCD.Clear ()
LCD.Write ( 5 , 30 , "SafetyTimer: " + lv_safetytimer_123 )
EndWhile
Motor.Stop ( "D" , "True" )
EndIf
EndSub
Sub f_rgbdetect1_2
Sensor.SetMode ( 1 , 4 )
lv_red_124 = 15
lv_yellow_124 = 60
lv_green_124 = 170
lv_blue_124 = 330
lv_valuenegro_124 = 10
lv_valueblanco_124 = 100
lv_rwhite_124 = 147
lv_gwhite_124 = 143
lv_bwhite_124 = 160
lv_hue_124 = 0
lv_sat_124 = 0
lv_value_124 = 0
lv_color_124 = 0
lv_rnorma_124 [ 0 ] = 0
lv_gnorma_124 [ 0 ] = 0
lv_bnorma_124 [ 0 ] = 0
lv_maxa_124 [ 0 ] = 0
LCD.Clear ()
For lv_j_124 = 1 To lv_reps_124 Step 1
lv_rgb_124 = Sensor.ReadRaw ( 1 , 3 )
lv_rraw_124 = lv_rgb_124 [ 0 ]
lv_graw_124 = lv_rgb_124 [ 1 ]
lv_braw_124 = lv_rgb_124 [ 2 ]
lv_rnorma_124 [ lv_j_124 ] = Math.Round ( lv_rraw_124 / lv_rwhite_124 * 255 )
lv_gnorma_124 [ lv_j_124 ] = Math.Round ( lv_graw_124 / lv_gwhite_124 * 255 )
lv_bnorma_124 [ lv_j_124 ] = Math.Round ( lv_braw_124 / lv_bwhite_124 * 255 )
lv_maxa_124 [ lv_j_124 ] = Math.Max ( Math.Max ( lv_rnorma_124 [ lv_j_124 ] , lv_gnorma_124 [ lv_j_124 ] ) , lv_bnorma_124 [ lv_j_124 ] )
Program.Delay ( 5 )
EndFor
For lv_j_124 = 1 To lv_reps_124 Step 2
lv_rnorm_124 = lv_rnorma_124 [ lv_j_124 ] + lv_rnorma_124 [ lv_j_124 + 1 ]
lv_gnorm_124 = lv_gnorma_124 [ lv_j_124 ] + lv_gnorma_124 [ lv_j_124 + 1 ]
lv_bnorm_124 = lv_bnorma_124 [ lv_j_124 ] + lv_bnorma_124 [ lv_j_124 + 1 ]
lv_max_124 = lv_maxa_124 [ lv_j_124 ] + lv_maxa_124 [ lv_j_124 + 1 ]
EndFor
lv_rnorm_124 = lv_rnorm_124 / lv_reps_124
lv_gnorm_124 = lv_gnorm_124 / lv_reps_124
lv_bnorm_124 = lv_bnorm_124 / lv_reps_124
lv_max_124 = lv_max_124 / lv_reps_124
lv_min_124 = Math.Min ( Math.Min ( lv_rnorm_124 , lv_gnorm_124 ) , lv_bnorm_124 )
If lv_max_124 = lv_min_124 Then
lv_hue_124 = 0
ElseIf lv_max_124 = lv_rnorm_124 Then
If lv_gnorm_124 >= lv_bnorm_124 Then
lv_hue_124 = 60 * ( lv_gnorm_124 - lv_bnorm_124 ) / ( lv_max_124 - lv_min_124 )
Else
lv_hue_124 = 60 * ( lv_gnorm_124 - lv_bnorm_124 ) / ( lv_max_124 - lv_min_124 ) + 360
EndIf
ElseIf lv_max_124 = lv_gnorm_124 Then
lv_hue_124 = 60 * ( lv_bnorm_124 - lv_rnorm_124 ) / ( lv_max_124 - lv_min_124 ) + 120
Else
lv_hue_124 = 60 * ( lv_rnorm_124 - lv_gnorm_124 ) / ( lv_max_124 - lv_min_124 ) + 240
EndIf
If lv_max_124 = 0 Then
lv_sat_124 = 0
Else
lv_sat_124 = 1 - lv_min_124 / lv_max_124
EndIf
lv_value_124 = lv_max_124
lv_rgbgrey_124 = ( lv_valueblanco_124 + lv_valuenegro_124 ) / 2
If lv_rnorm_124 + lv_gnorm_124 + lv_bnorm_124 <= 3 Then
lv_color_124 = 0
Else
If lv_sat_124 < 0.4 Then
If lv_value_124 > lv_rgbgrey_124 Then
lv_color_124 = 6
Else
lv_color_124 = 1
EndIf
Else
If lv_hue_124 >= 0 And lv_hue_124 < lv_red_124 Then
lv_color_124 = 5
ElseIf lv_hue_124 >= lv_red_124 And lv_hue_124 < lv_yellow_124 Then
lv_color_124 = 4
ElseIf lv_hue_124 >= lv_yellow_124 And lv_hue_124 < lv_green_124 Then
lv_color_124 = 3
ElseIf lv_hue_124 >= lv_green_124 And lv_hue_124 < lv_blue_124 Then
lv_color_124 = 2
Else
lv_color_124 = 5
EndIf
EndIf
EndIf
LCD.Write ( 33 , 20 , "R: " + lv_rraw_124 )
LCD.Write ( 33 , 35 , "G: " + lv_graw_124 )
LCD.Write ( 33 , 50 , "B: " + lv_braw_124 )
LCD.Write ( 33 , 70 , "Color: " + lv_color_124 )
LCD.Write ( 33 , 90 , "Value: " + lv_value_124 )
lv_color_136 = lv_color_124
f_leercolor_1 ()
EndSub
Sub f_rgbdetect2_2
Sensor.SetMode ( 2 , 4 )
lv_red_125 = 15
lv_yellow_125 = 60
lv_green_125 = 170
lv_blue_125 = 330
lv_valuenegro_125 = 10
lv_valueblanco_125 = 100
lv_rwhite_125 = 147
lv_gwhite_125 = 143
lv_bwhite_125 = 160
lv_hue_125 = 0
lv_sat_125 = 0
lv_value_125 = 0
lv_color_125 = 0
lv_rnorma_125 [ 0 ] = 0
lv_gnorma_125 [ 0 ] = 0
lv_bnorma_125 [ 0 ] = 0
lv_maxa_125 [ 0 ] = 0
LCD.Clear ()
For lv_j_125 = 1 To lv_reps_125 Step 1
lv_rgb_125 = Sensor.ReadRaw ( 2 , 3 )
lv_rraw_125 = lv_rgb_125 [ 0 ]
lv_graw_125 = lv_rgb_125 [ 1 ]
lv_braw_125 = lv_rgb_125 [ 2 ]
lv_rnorma_125 [ lv_j_125 ] = Math.Round ( lv_rraw_125 / lv_rwhite_125 * 255 )
lv_gnorma_125 [ lv_j_125 ] = Math.Round ( lv_graw_125 / lv_gwhite_125 * 255 )
lv_bnorma_125 [ lv_j_125 ] = Math.Round ( lv_braw_125 / lv_bwhite_125 * 255 )
lv_maxa_125 [ lv_j_125 ] = Math.Max ( Math.Max ( lv_rnorma_125 [ lv_j_125 ] , lv_gnorma_125 [ lv_j_125 ] ) , lv_bnorma_125 [ lv_j_125 ] )
Program.Delay ( 5 )
EndFor
For lv_j_125 = 1 To lv_reps_125 Step 2
lv_rnorm_125 = lv_rnorma_125 [ lv_j_125 ] + lv_rnorma_125 [ lv_j_125 + 1 ]
lv_gnorm_125 = lv_gnorma_125 [ lv_j_125 ] + lv_gnorma_125 [ lv_j_125 + 1 ]
lv_bnorm_125 = lv_bnorma_125 [ lv_j_125 ] + lv_bnorma_125 [ lv_j_125 + 1 ]
lv_max_125 = lv_maxa_125 [ lv_j_125 ] + lv_maxa_125 [ lv_j_125 + 1 ]
EndFor
lv_rnorm_125 = lv_rnorm_125 / lv_reps_125
lv_gnorm_125 = lv_gnorm_125 / lv_reps_125
lv_bnorm_125 = lv_bnorm_125 / lv_reps_125
lv_max_125 = lv_max_125 / lv_reps_125
lv_min_125 = Math.Min ( Math.Min ( lv_rnorm_125 , lv_gnorm_125 ) , lv_bnorm_125 )
If lv_max_125 = lv_min_125 Then
lv_hue_125 = 0
ElseIf lv_max_125 = lv_rnorm_125 Then
If lv_gnorm_125 >= lv_bnorm_125 Then
lv_hue_125 = 60 * ( lv_gnorm_125 - lv_bnorm_125 ) / ( lv_max_125 - lv_min_125 )
Else
lv_hue_125 = 60 * ( lv_gnorm_125 - lv_bnorm_125 ) / ( lv_max_125 - lv_min_125 ) + 360
EndIf
ElseIf lv_max_125 = lv_gnorm_125 Then
lv_hue_125 = 60 * ( lv_bnorm_125 - lv_rnorm_125 ) / ( lv_max_125 - lv_min_125 ) + 120
Else
lv_hue_125 = 60 * ( lv_rnorm_125 - lv_gnorm_125 ) / ( lv_max_125 - lv_min_125 ) + 240
EndIf
If lv_max_125 = 0 Then
lv_sat_125 = 0
Else
lv_sat_125 = 1 - lv_min_125 / lv_max_125
EndIf
lv_value_125 = lv_max_125
lv_rgbgrey_125 = ( lv_valueblanco_125 + lv_valuenegro_125 ) / 2
If lv_rnorm_125 + lv_gnorm_125 + lv_bnorm_125 <= 3 Then
lv_color_125 = 0
Else
If lv_sat_125 < 0.4 Then
If lv_value_125 > lv_rgbgrey_125 Then
lv_color_125 = 6
Else
lv_color_125 = 1
EndIf
Else
If lv_hue_125 >= 0 And lv_hue_125 < lv_red_125 Then
lv_color_125 = 5
ElseIf lv_hue_125 >= lv_red_125 And lv_hue_125 < lv_yellow_125 Then
lv_color_125 = 4
ElseIf lv_hue_125 >= lv_yellow_125 And lv_hue_125 < lv_green_125 Then
lv_color_125 = 3
ElseIf lv_hue_125 >= lv_green_125 And lv_hue_125 < lv_blue_125 Then
lv_color_125 = 2
Else
lv_color_125 = 5
EndIf
EndIf
EndIf
LCD.Write ( 33 , 20 , "R: " + lv_rraw_125 )
LCD.Write ( 33 , 35 , "G: " + lv_graw_125 )
LCD.Write ( 33 , 50 , "B: " + lv_braw_125 )
LCD.Write ( 33 , 70 , "Color: " + lv_color_125 )
LCD.Write ( 33 , 90 , "Value: " + lv_value_125 )
lv_color_136 = lv_color_125
f_leercolor_1 ()
EndSub
Sub f_rgbdetect3_2
Sensor.SetMode ( 3 , 4 )
lv_red_126 = 15
lv_yellow_126 = 60
lv_green_126 = 170
lv_blue_126 = 330
lv_valuenegro_126 = 10
lv_valueblanco_126 = 100
lv_rwhite_126 = 147
lv_gwhite_126 = 143
lv_bwhite_126 = 160
lv_hue_126 = 0
lv_sat_126 = 0
lv_value_126 = 0
lv_color_126 = 0
lv_rnorma_126 [ 0 ] = 0
lv_gnorma_126 [ 0 ] = 0
lv_bnorma_126 [ 0 ] = 0
lv_maxa_126 [ 0 ] = 0
LCD.Clear ()
For lv_j_126 = 1 To lv_reps_126 Step 1
lv_rgb_126 = Sensor.ReadRaw ( 3 , 3 )
lv_rraw_126 = lv_rgb_126 [ 0 ]
lv_graw_126 = lv_rgb_126 [ 1 ]
lv_braw_126 = lv_rgb_126 [ 2 ]
lv_rnorma_126 [ lv_j_126 ] = Math.Round ( lv_rraw_126 / lv_rwhite_126 * 255 )
lv_gnorma_126 [ lv_j_126 ] = Math.Round ( lv_graw_126 / lv_gwhite_126 * 255 )
lv_bnorma_126 [ lv_j_126 ] = Math.Round ( lv_braw_126 / lv_bwhite_126 * 255 )
lv_maxa_126 [ lv_j_126 ] = Math.Max ( Math.Max ( lv_rnorma_126 [ lv_j_126 ] , lv_gnorma_126 [ lv_j_126 ] ) , lv_bnorma_126 [ lv_j_126 ] )
Program.Delay ( 5 )
EndFor
For lv_j_126 = 1 To lv_reps_126 Step 2
lv_rnorm_126 = lv_rnorma_126 [ lv_j_126 ] + lv_rnorma_126 [ lv_j_126 + 1 ]
lv_gnorm_126 = lv_gnorma_126 [ lv_j_126 ] + lv_gnorma_126 [ lv_j_126 + 1 ]
lv_bnorm_126 = lv_bnorma_126 [ lv_j_126 ] + lv_bnorma_126 [ lv_j_126 + 1 ]
lv_max_126 = lv_maxa_126 [ lv_j_126 ] + lv_maxa_126 [ lv_j_126 + 1 ]
EndFor
lv_rnorm_126 = lv_rnorm_126 / lv_reps_126
lv_gnorm_126 = lv_gnorm_126 / lv_reps_126
lv_bnorm_126 = lv_bnorm_126 / lv_reps_126
lv_max_126 = lv_max_126 / lv_reps_126
lv_min_126 = Math.Min ( Math.Min ( lv_rnorm_126 , lv_gnorm_126 ) , lv_bnorm_126 )
If lv_max_126 = lv_min_126 Then
lv_hue_126 = 0
ElseIf lv_max_126 = lv_rnorm_126 Then
If lv_gnorm_126 >= lv_bnorm_126 Then
lv_hue_126 = 60 * ( lv_gnorm_126 - lv_bnorm_126 ) / ( lv_max_126 - lv_min_126 )
Else
lv_hue_126 = 60 * ( lv_gnorm_126 - lv_bnorm_126 ) / ( lv_max_126 - lv_min_126 ) + 360
EndIf
ElseIf lv_max_126 = lv_gnorm_126 Then
lv_hue_126 = 60 * ( lv_bnorm_126 - lv_rnorm_126 ) / ( lv_max_126 - lv_min_126 ) + 120
Else
lv_hue_126 = 60 * ( lv_rnorm_126 - lv_gnorm_126 ) / ( lv_max_126 - lv_min_126 ) + 240
EndIf
If lv_max_126 = 0 Then
lv_sat_126 = 0
Else
lv_sat_126 = 1 - lv_min_126 / lv_max_126
EndIf
lv_value_126 = lv_max_126
lv_rgbgrey_126 = ( lv_valueblanco_126 + lv_valuenegro_126 ) / 2
If lv_rnorm_126 + lv_gnorm_126 + lv_bnorm_126 <= 3 Then
lv_color_126 = 0
Else
If lv_sat_126 < 0.4 Then
If lv_value_126 > lv_rgbgrey_126 Then
lv_color_126 = 6
Else
lv_color_126 = 1
EndIf
Else
If lv_hue_126 >= 0 And lv_hue_126 < lv_red_126 Then
lv_color_126 = 5
ElseIf lv_hue_126 >= lv_red_126 And lv_hue_126 < lv_yellow_126 Then
lv_color_126 = 4
ElseIf lv_hue_126 >= lv_yellow_126 And lv_hue_126 < lv_green_126 Then
lv_color_126 = 3
ElseIf lv_hue_126 >= lv_green_126 And lv_hue_126 < lv_blue_126 Then
lv_color_126 = 2
Else
lv_color_126 = 5
EndIf
EndIf
EndIf
LCD.Write ( 33 , 20 , "R: " + lv_rraw_126 )
LCD.Write ( 33 , 35 , "G: " + lv_graw_126 )
LCD.Write ( 33 , 50 , "B: " + lv_braw_126 )
LCD.Write ( 33 , 70 , "Color: " + lv_color_126 )
LCD.Write ( 33 , 90 , "Value: " + lv_value_126 )
lv_color_136 = lv_color_126
f_leercolor_1 ()
EndSub
Sub f_rgbdetect4_2
Sensor.SetMode ( 4 , 4 )
lv_red_127 = 15
lv_yellow_127 = 60
lv_green_127 = 170
lv_blue_127 = 330
lv_valuenegro_127 = 10
lv_valueblanco_127 = 100
lv_rwhite_127 = 147
lv_gwhite_127 = 143
lv_bwhite_127 = 160
lv_hue_127 = 0
lv_sat_127 = 0
lv_value_127 = 0
lv_color_127 = 0
lv_rnorma_127 [ 0 ] = 0
lv_gnorma_127 [ 0 ] = 0
lv_bnorma_127 [ 0 ] = 0
lv_maxa_127 [ 0 ] = 0
LCD.Clear ()
For lv_j_127 = 1 To lv_reps_127 Step 1
lv_rgb_127 = Sensor.ReadRaw ( 4 , 3 )
lv_rraw_127 = lv_rgb_127 [ 0 ]
lv_graw_127 = lv_rgb_127 [ 1 ]
lv_braw_127 = lv_rgb_127 [ 2 ]
lv_rnorma_127 [ lv_j_127 ] = Math.Round ( lv_rraw_127 / lv_rwhite_127 * 255 )
lv_gnorma_127 [ lv_j_127 ] = Math.Round ( lv_graw_127 / lv_gwhite_127 * 255 )
lv_bnorma_127 [ lv_j_127 ] = Math.Round ( lv_braw_127 / lv_bwhite_127 * 255 )
lv_maxa_127 [ lv_j_127 ] = Math.Max ( Math.Max ( lv_rnorma_127 [ lv_j_127 ] , lv_gnorma_127 [ lv_j_127 ] ) , lv_bnorma_127 [ lv_j_127 ] )
Program.Delay ( 5 )
EndFor
For lv_j_127 = 1 To lv_reps_127 Step 2
lv_rnorm_127 = lv_rnorma_127 [ lv_j_127 ] + lv_rnorma_127 [ lv_j_127 + 1 ]
lv_gnorm_127 = lv_gnorma_127 [ lv_j_127 ] + lv_gnorma_127 [ lv_j_127 + 1 ]
lv_bnorm_127 = lv_bnorma_127 [ lv_j_127 ] + lv_bnorma_127 [ lv_j_127 + 1 ]
lv_max_127 = lv_maxa_127 [ lv_j_127 ] + lv_maxa_127 [ lv_j_127 + 1 ]
EndFor
lv_rnorm_127 = lv_rnorm_127 / lv_reps_127
lv_gnorm_127 = lv_gnorm_127 / lv_reps_127
lv_bnorm_127 = lv_bnorm_127 / lv_reps_127
lv_max_127 = lv_max_127 / lv_reps_127
lv_min_127 = Math.Min ( Math.Min ( lv_rnorm_127 , lv_gnorm_127 ) , lv_bnorm_127 )
If lv_max_127 = lv_min_127 Then
lv_hue_127 = 0
ElseIf lv_max_127 = lv_rnorm_127 Then
If lv_gnorm_127 >= lv_bnorm_127 Then
lv_hue_127 = 60 * ( lv_gnorm_127 - lv_bnorm_127 ) / ( lv_max_127 - lv_min_127 )
Else
lv_hue_127 = 60 * ( lv_gnorm_127 - lv_bnorm_127 ) / ( lv_max_127 - lv_min_127 ) + 360
EndIf
ElseIf lv_max_127 = lv_gnorm_127 Then
lv_hue_127 = 60 * ( lv_bnorm_127 - lv_rnorm_127 ) / ( lv_max_127 - lv_min_127 ) + 120
Else
lv_hue_127 = 60 * ( lv_rnorm_127 - lv_gnorm_127 ) / ( lv_max_127 - lv_min_127 ) + 240
EndIf
If lv_max_127 = 0 Then
lv_sat_127 = 0
Else
lv_sat_127 = 1 - lv_min_127 / lv_max_127
EndIf
lv_value_127 = lv_max_127
lv_rgbgrey_127 = ( lv_valueblanco_127 + lv_valuenegro_127 ) / 2
If lv_rnorm_127 + lv_gnorm_127 + lv_bnorm_127 <= 3 Then
lv_color_127 = 0
Else
If lv_sat_127 < 0.4 Then
If lv_value_127 > lv_rgbgrey_127 Then
lv_color_127 = 6
Else
lv_color_127 = 1
EndIf
Else
If lv_hue_127 >= 0 And lv_hue_127 < lv_red_127 Then
lv_color_127 = 5
ElseIf lv_hue_127 >= lv_red_127 And lv_hue_127 < lv_yellow_127 Then
lv_color_127 = 4
ElseIf lv_hue_127 >= lv_yellow_127 And lv_hue_127 < lv_green_127 Then
lv_color_127 = 3
ElseIf lv_hue_127 >= lv_green_127 And lv_hue_127 < lv_blue_127 Then
lv_color_127 = 2
Else
lv_color_127 = 5
EndIf
EndIf
EndIf
LCD.Write ( 33 , 20 , "R: " + lv_rraw_127 )
LCD.Write ( 33 , 35 , "G: " + lv_graw_127 )
LCD.Write ( 33 , 50 , "B: " + lv_braw_127 )
LCD.Write ( 33 , 70 , "Color: " + lv_color_127 )
LCD.Write ( 33 , 90 , "Value: " + lv_value_127 )
lv_color_136 = lv_color_127
f_leercolor_1 ()
EndSub
Sub f_leercolor_1
If lv_color_136 = 0 Then
Speaker.Play ( 100 , "WRO2023/Zero" )
ElseIf lv_color_136 = 1 Then
Speaker.Play ( 100 , "WRO2023/Black" )
ElseIf lv_color_136 = 2 Then
Speaker.Play ( 100 , "WRO2023/Blue" )
ElseIf lv_color_136 = 3 Then
Speaker.Play ( 100 , "WRO2023/Green" )
ElseIf lv_color_136 = 4 Then
Speaker.Play ( 100 , "WRO2023/Yellow" )
ElseIf lv_color_136 = 5 Then
Speaker.Play ( 100 , "WRO2023/Red" )
ElseIf lv_color_136 = 6 Then
Speaker.Play ( 100 , "WRO2023/White" )
ElseIf lv_color_136 = 7 Then
Speaker.Play ( 100 , "WRO2023/Brown" )
EndIf
EndSub
Sub f_coger_0
Program.Delay ( 150 )
lv_v_114 = 60
lv_aenc_114 = 90
f_bmovea_2 ()
lv_v_123 = 40
lv_aenc_123 = 0
f_bmoved_2 ()
gv_num_bloques = gv_num_bloques + 1
lv_v_114 = 80
lv_aenc_114 = 360
f_bmovea_2 ()
MotorAD.OffAndBrake ()
Program.Delay ( 100 )
lv_v_123 = 60
lv_aenc_123 = - 50
f_bmoved_2 ()
lv_v_122 = - 60
lv_t_122 = 500
f_bmovedtimer_2 ()
lv_v_114 = 60
lv_aenc_114 = - 80
f_bmovea_2 ()
EndSub
Sub f_soltar_0
lv_v_114 = 60
lv_aenc_114 = 280
f_bmovea_2 ()
lv_v_123 = 40
lv_aenc_123 = - 70
f_bmoved_2 ()
gv_num_bloques = Math.Max ( 0 , gv_num_bloques - 4 )
lv_v_114 = 60
lv_aenc_114 = - 720
f_bmovea_2 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 10
f_encoderrectomm_2 ()
lv_v_114 = 60
lv_aenc_114 = 0
f_bmovea_2 ()
EndSub
