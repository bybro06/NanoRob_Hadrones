lv_v_111 = 0
lv_aenc_111 = 0
lv_v_121 = 0
lv_aenc_121 = 0
lv_v1_38 = 0
lv_v2_38 = 0
lv_angle_38 = 0
lv_v1_37 = 0
lv_v2_37 = 0
lv_angle_37 = 0
lv_velocidad_77 = 0
lv_kp_77 = 0
lv_ki_77 = 0
lv_kd_77 = 0
lv_encoder_77 = 0
lv_velocidad_1 = 0
lv_distancia_1 = 0
lv_v_107 = 0
lv_aenc_107 = 0
lv_v0_56 = 0
lv_vmax_56 = 0
lv_kp_56 = 0
lv_ki_56 = 0
lv_kd_56 = 0
lv_accelencoder_56 = 0
lv_encoder_56 = 0
lv_velocidad_91 = 0
lv_kp_91 = 0
lv_ki_91 = 0
lv_kd_91 = 0
lv_reader_91 = 0
lv_velocidad_78 = 0
lv_kp_78 = 0
lv_ki_78 = 0
lv_kd_78 = 0
lv_encoder_78 = 0
lv_velocidad_2 = 0
lv_distancia_2 = 0
lv_velocidad_73 = 0
lv_kp_73 = 0
lv_ki_73 = 0
lv_kd_73 = 0
lv_velocidad_92 = 0
lv_kp_92 = 0
lv_ki_92 = 0
lv_kd_92 = 0
lv_reader_92 = 0
lv_velocidad_7 = 0
lv_sens_7 = 0
lv_velocidad_5 = 0
lv_sens_5 = 0
lv_velocidad_15 = 0
lv_tiempo_15 = 0
lv_velocidad1_20 = 0
lv_velocidad2_20 = 0
lv_sens_20 = 0
lv_velocidad1_18 = 0
lv_velocidad2_18 = 0
lv_encoder_18 = 0
lv_velocidad_85 = 0
lv_kp_85 = 0
lv_ki_85 = 0
lv_kd_85 = 0
lv_encoder_85 = 0
lv_velocidad_86 = 0
lv_kp_86 = 0
lv_ki_86 = 0
lv_kd_86 = 0
lv_encoder_86 = 0
lv_velocidad_8 = 0
lv_sens_8 = 0
lv_v0_58 = 0
lv_vmax_58 = 0
lv_kp_58 = 0
lv_ki_58 = 0
lv_kd_58 = 0
lv_accelencoder_58 = 0
lv_velocidad_74 = 0
lv_kp_74 = 0
lv_ki_74 = 0
lv_kd_74 = 0
lv_vmax_100 = 0
lv_kp_100 = 0
lv_ki_100 = 0
lv_kd_100 = 0
lv_color_134 = 0
lv_reps_122 = 0
lv_color_122 = 0
lv_reps_123 = 0
lv_color_123 = 0
lv_reps_124 = 0
lv_color_124 = 0
lv_reps_125 = 0
lv_color_125 = 0
lv_v_117 = 0
lv_aenc_117 = 0
lv_v_120 = 0
lv_t_120 = 0
lv_color_126 = 0
lv_color_127 = 0
lv_color_128 = 0
lv_color_129 = 0
lv_read_138 = 0
gv_velocidad = 0
gv_kp = 0
gv_ki = 0
gv_kd = 0
gv_diameter = 0
gv_centro = 0
gv_num_bloques = 0
gv_sentido_motores = 0
gv_correccion = 0
gv_g1 = 0
gv_tiempohastalinea = 0
gv_velocidad = 100
gv_kp = 0.12
gv_ki = 0.0001
gv_kd = 2
gv_diameter = 56
gv_centro = 0
gv_num_bloques = 0
gv_sentido_motores = 1
gv_correccion = 0
gv_sentido_motores = 1
gv_sentido_motores = 1
gv_g1 = 124 / 36
gv_sentido_motores = 1
gv_sentido_motores = 1
gv_sentido_motores = 1
gv_sentido_motores = 1
f_setup_0 ()
Thread.Run = f_display_0
Thread.Run = f_stop_0
f_main_0 ()
Sub f_setup_0
Sensor.SetMode ( 1 , 0 )
Sensor.SetMode ( 2 , 4 )
Sensor.SetMode ( 3 , 0 )
Sensor.SetMode ( 4 , 0 )
EndSub
Sub f_startarm_0
Time.Reset1 ()
While Time.Get1 () < 800
MotorA.StartSpeed ( 85 )
MotorD.StartSpeed ( - 80 )
EndWhile
MotorAD.OffAndBrake ()
Program.Delay ( 100 )
Thread.Run = f_colocard_0
f_colocara_0 ()
MotorA.ResetCount ()
MotorD.ResetCount ()
Program.Delay ( 100 )
EndSub
Sub f_colocara_0
Motor.Move ( "A" , - 50 , 350 , "True" )
EndSub
Sub f_colocard_0
Motor.Move ( "D" , 90 , 550 , "True" )
EndSub
Sub f_display_0
gv_old_b = 0
gv_old_c = 0
While "True"
LCD.StopUpdate ()
LCD.Clear ()
LCD.Write ( 5 , 15 , "Bloques: " + gv_num_bloques )
LCD.Write ( 5 , 35 , "centro: " + gv_centro )
LCD.Write ( 5 , 45 , "Velocidad de B:  " + MotorB.GetSpeed () * - 1 )
LCD.Write ( 5 , 55 , "Velocidad de C:  " + MotorC.GetSpeed () )
LCD.Write ( 5 , 65 , "rad/s de B:  " + Math.GetRadians ( MotorB.GetTacho () - gv_old_b ) / 0.05 * - 1 )
LCD.Write ( 5 , 75 , "rad/s de C:  " + Math.GetRadians ( MotorC.GetTacho () - gv_old_c ) / 0.05 )
LCD.Write ( 5 , 85 , "Encoder de B:  " + MotorB.GetTacho () * - 1 )
LCD.Write ( 5 , 95 , "Encoder de C:  " + MotorC.GetTacho () )
LCD.Update ()
Program.Delay ( 50 )
gv_old_b = MotorB.GetTacho ()
gv_old_c = MotorC.GetTacho ()
EndWhile
EndSub
Sub f_stop_0
While "True"
if Buttons.Current = "E" Then
MotorBC.OffAndBrake ()
MotorAD.OffAndBrake ()
lv_v_111 = 60
lv_aenc_111 = 0
f_bmoveasafe_2 ()
lv_v_121 = 60
lv_aenc_121 = 0
f_bmovedsafe_2 ()
Program.End ()
EndIf
EndWhile
EndSub
Sub f_main_0
f_startarm_0 ()
lv_v1_38 = 0
lv_v2_38 = 30
lv_angle_38 = 60
f_gunivencmmf_3 ()
lv_v1_37 = 30
lv_v2_37 = 0
lv_angle_37 = 60
f_gunivencmm_3 ()
lv_velocidad_77 = 32
lv_kp_77 = gv_kp * 0.7
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 16.5
f_sl14pidenc_5 ()
lv_v1_37 = 20
lv_v2_37 = - 20
lv_angle_37 = 96
f_gunivencmm_3 ()
lv_velocidad_1 = 20
lv_distancia_1 = 5.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 20
lv_distancia_1 = 6
f_encoderrectomm_2 ()
lv_v1_37 = - 20
lv_v2_37 = 20
lv_angle_37 = 92
f_gunivencmm_3 ()
lv_velocidad_77 = 20
lv_kp_77 = gv_kp * 0.5
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 9
f_sl14pidenc_5 ()
lv_v1_37 = 20
lv_v2_37 = - 20
lv_angle_37 = 93
f_gunivencmm_3 ()
lv_velocidad_1 = 15
lv_distancia_1 = 6.25
f_encoderrectomm_2 ()
f_coger_0 ()
lv_v_107 = gv_velocidad * 0.4
lv_aenc_107 = - 110
f_bmovea_2 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 6.5
f_encoderrectomm_2 ()
lv_v1_37 = - 30
lv_v2_37 = 30
lv_angle_37 = 94
f_gunivencmm_3 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 22
f_encoderrectomm_2 ()
MotorBC.OffAndBrake ()
Program.Delay ( 200 )
lv_v0_56 = 20
lv_vmax_56 = 60
lv_kp_56 = gv_kp
lv_ki_56 = gv_ki
lv_kd_56 = gv_kd
lv_accelencoder_56 = 7
lv_encoder_56 = 7
f_sl14sief_7 ()
Time.Reset4 ()
lv_velocidad_91 = 35
lv_kp_91 = gv_kp
lv_ki_91 = gv_ki
lv_kd_91 = gv_kd
lv_reader_91 = 3
f_sl1spidcross_5 ()
lv_velocidad_1 = 30
lv_distancia_1 = 2
f_encoderrectomm_2 ()
gv_tiempohastalinea = Time.Get4 ()
LCD.Clear ()
LCD.Write ( 5 , 5 , gv_tiempohastalinea )
lv_v1_37 = - 30
lv_v2_37 = 30
lv_angle_37 = 92
f_gunivencmm_3 ()
lv_velocidad_78 = 40
lv_kp_78 = gv_kp * 1.3
lv_ki_78 = gv_ki
lv_kd_78 = gv_kd
lv_encoder_78 = 20
f_sl14pidencf_5 ()
lv_velocidad_2 = 40
lv_distancia_2 = 12
f_encoderrectommf_2 ()
lv_velocidad_73 = 30
lv_kp_73 = gv_kp * 0.6
lv_ki_73 = gv_ki
lv_kd_73 = gv_kd
f_sl14pid_4 ()
If gv_tiempohastalinea < 850 Then
f_casopsoe_0 ()
Else
f_casovox_0 ()
EndIf
lv_velocidad_1 = - 30
lv_distancia_1 = 8
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * - 0.3
lv_v2_37 = gv_velocidad * 0.3
lv_angle_37 = 90
f_gunivencmm_3 ()
lv_velocidad_78 = gv_velocidad * 0.3
lv_kp_78 = gv_kp
lv_ki_78 = gv_ki
lv_kd_78 = gv_kd
lv_encoder_78 = 3
f_sl14pidencf_5 ()
lv_velocidad_92 = gv_velocidad * 0.3
lv_kp_92 = gv_kp
lv_ki_92 = gv_ki
lv_kd_92 = gv_kd
lv_reader_92 = 3
f_sl1spidcrossf_5 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 2
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * - 0.3
lv_v2_37 = gv_velocidad * 0.3
lv_angle_37 = 90
f_gunivencmm_3 ()
lv_velocidad_78 = gv_velocidad * 0.3
lv_kp_78 = gv_kp
lv_ki_78 = gv_ki
lv_kd_78 = gv_kd
lv_encoder_78 = 20
f_sl14pidencf_5 ()
lv_velocidad_2 = gv_velocidad * 0.3
lv_distancia_2 = 15
f_encoderrectommf_2 ()
lv_velocidad_73 = gv_velocidad * 0.3
lv_kp_73 = gv_kp
lv_ki_73 = gv_ki
lv_kd_73 = gv_kd
f_sl14pid_4 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 2
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * - 0.3
lv_v2_37 = gv_velocidad * 0.3
lv_angle_37 = 93
f_gunivencmm_3 ()
lv_velocidad_77 = gv_velocidad * 0.25
lv_kp_77 = gv_kp
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 10
f_sl14pidenc_5 ()
lv_v1_37 = 30
lv_v2_37 = - 30
lv_angle_37 = 96
f_gunivencmm_3 ()
lv_velocidad_1 = 20
lv_distancia_1 = 5.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 7
f_encoderrectomm_2 ()
lv_v1_37 = - 20
lv_v2_37 = 20
lv_angle_37 = 90
f_gunivencmm_3 ()
lv_velocidad_77 = gv_velocidad * 0.25
lv_kp_77 = gv_kp
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 13
f_sl14pidenc_5 ()
lv_v1_37 = 20
lv_v2_37 = - 20
lv_angle_37 = 96
f_gunivencmm_3 ()
lv_velocidad_1 = 20
lv_distancia_1 = 6.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 9
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * 0.2
lv_v2_37 = gv_velocidad * - 0.2
lv_angle_37 = 93
f_gunivencmm_3 ()
lv_velocidad_91 = gv_velocidad * 0.3
lv_kp_91 = gv_kp
lv_ki_91 = gv_ki
lv_kd_91 = gv_kd
lv_reader_91 = 4
f_sl1spidcross_5 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 3
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * 0.3
lv_v2_37 = gv_velocidad * - 0.3
lv_angle_37 = 96
f_gunivencmm_3 ()
lv_velocidad_77 = gv_velocidad * 0.3
lv_kp_77 = gv_kp
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 12
f_sl14pidenc_5 ()
f_soltar_0 ()
lv_velocidad_1 = gv_velocidad * - 0.3
lv_distancia_1 = 6
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * 0.3
lv_v2_37 = gv_velocidad * - 0.3
lv_angle_37 = 66
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.8
lv_distancia_1 = 95
f_encoderrectomm_2 ()
Program.Delay ( 250 )
lv_v_107 = 50
lv_aenc_107 = 200
f_bmovea_2 ()
lv_v1_37 = gv_velocidad * - 0.3
lv_v2_37 = gv_velocidad * 0.3
lv_angle_37 = 155
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.8
lv_distancia_1 = 50
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * 0.3
lv_v2_37 = gv_velocidad * - 0.3
lv_angle_37 = 91
f_gunivencmm_3 ()
lv_velocidad_7 = 30
lv_sens_7 = 1
f_1blancorectomm_2 ()
lv_velocidad_5 = 20
lv_sens_5 = 1
f_1negrorectomm_2 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 3
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * - 0.3
lv_v2_37 = gv_velocidad * 0.3
lv_angle_37 = 93
f_gunivencmm_3 ()
Program.Delay ( 250 )
lv_velocidad_78 = gv_velocidad * 0.3
lv_kp_78 = gv_kp
lv_ki_78 = gv_ki
lv_kd_78 = gv_kd
lv_encoder_78 = 10
f_sl14pidencf_5 ()
lv_velocidad_92 = gv_velocidad * 0.5
lv_kp_92 = gv_kp
lv_ki_92 = gv_ki
lv_kd_92 = gv_kd
lv_reader_92 = 3
f_sl1spidcrossf_5 ()
lv_velocidad_77 = gv_velocidad * 0.7
lv_kp_77 = gv_kp
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 20
f_sl14pidenc_5 ()
Program.Delay ( 250 )
lv_v1_37 = gv_velocidad * 0.3
lv_v2_37 = gv_velocidad * - 0.3
lv_angle_37 = 45
f_gunivencmm_3 ()
lv_v_107 = 50
lv_aenc_107 = 0
f_bmovea_2 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 18
f_encoderrectomm_2 ()
lv_v_107 = 50
lv_aenc_107 = 200
f_bmovea_2 ()
lv_velocidad_1 = gv_velocidad * - 0.3
lv_distancia_1 = 7
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * - 0.3
lv_v2_37 = gv_velocidad * 0.3
lv_angle_37 = 125
f_gunivencmm_3 ()
lv_v_107 = 50
lv_aenc_107 = 0
f_bmovea_2 ()
lv_velocidad_1 = gv_velocidad * 0.7
lv_distancia_1 = 35
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * 0.3
lv_v2_37 = gv_velocidad * - 0.3
lv_angle_37 = 42
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.8
lv_distancia_1 = 50
f_encoderrectomm_2 ()
lv_velocidad_1 = gv_velocidad * - 0.3
lv_distancia_1 = 15
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * - 0.05
lv_v2_37 = gv_velocidad * - 0.6
lv_angle_37 = 130
f_gunivencmm_3 ()
lv_velocidad_15 = gv_velocidad * - 0.6
lv_tiempo_15 = 500
f_tiemporectomm_2 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 5
f_encoderrectomm_2 ()
lv_velocidad_15 = gv_velocidad * - 0.6
lv_tiempo_15 = 500
f_tiemporectomm_2 ()
lv_velocidad_1 = gv_velocidad * 0.2
lv_distancia_1 = 12
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * - 0.3
lv_v2_37 = gv_velocidad * 0.3
lv_angle_37 = 95
f_gunivencmm_3 ()
lv_velocidad_7 = gv_velocidad * 0.3
lv_sens_7 = 3
f_1blancorectomm_2 ()
lv_velocidad_1 = gv_velocidad * - 0.3
lv_distancia_1 = 5
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * 0.3
lv_v2_37 = gv_velocidad * - 0.3
lv_angle_37 = 88
f_gunivencmm_3 ()
lv_velocidad_2 = gv_velocidad * 0.3
lv_distancia_2 = 20
f_encoderrectommf_2 ()
lv_v1_37 = gv_velocidad * - 0.2
lv_v2_37 = gv_velocidad * 0.2
lv_angle_37 = 83
f_gunivencmm_3 ()
lv_v_107 = 50
lv_aenc_107 = 230
f_bmovea_2 ()
lv_velocidad_2 = gv_velocidad * 0.3
lv_distancia_2 = 11
f_encoderrectommf_2 ()
lv_velocidad_1 = gv_velocidad * 0.1
lv_distancia_1 = 4
f_encoderrectomm_2 ()
lv_v_107 = 80
lv_aenc_107 = - 700
f_bmovea_2 ()
lv_v1_37 = gv_velocidad * 0.1
lv_v2_37 = gv_velocidad * - 0.05
lv_angle_37 = 20
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * - 0.9
lv_distancia_1 = 20
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * 0.3
lv_v2_37 = gv_velocidad * - 0.3
lv_angle_37 = 15
f_gunivencmm_3 ()
lv_velocidad1_20 = gv_velocidad * 0.41
lv_velocidad2_20 = gv_velocidad * 0.35
lv_sens_20 = 1
f_1negrogirommf_3 ()
lv_velocidad1_18 = gv_velocidad * 0.15
lv_velocidad2_18 = gv_velocidad * 0.45
lv_encoder_18 = 10
f_encodergirommf_3 ()
lv_velocidad_77 = gv_velocidad * 0.6
lv_kp_77 = gv_kp
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 35
f_sl14pidenc_5 ()
lv_velocidad_73 = gv_velocidad * 0.5
lv_kp_73 = gv_kp
lv_ki_73 = gv_ki
lv_kd_73 = gv_kd
f_sl14pid_4 ()
f_finprueba_0 ()
EndSub
Sub f_casopsoe_0
lv_v1_37 = 20
lv_v2_37 = - 20
lv_angle_37 = 92
f_gunivencmm_3 ()
lv_velocidad_85 = 30
lv_kp_85 = gv_kp
lv_ki_85 = gv_ki
lv_kd_85 = gv_kd
lv_encoder_85 = 26.5
f_sl31pidenc_5 ()
lv_v1_37 = - 20
lv_v2_37 = 20
lv_angle_37 = 94
f_gunivencmm_3 ()
lv_velocidad_1 = 30
lv_distancia_1 = 6.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 7.5
f_encoderrectomm_2 ()
lv_v1_37 = - 20
lv_v2_37 = 20
lv_angle_37 = 93
f_gunivencmm_3 ()
lv_velocidad_77 = 15
lv_kp_77 = gv_kp
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 9
f_sl14pidenc_5 ()
lv_v1_37 = 20
lv_v2_37 = - 20
lv_angle_37 = 92
f_gunivencmm_3 ()
lv_velocidad_1 = 20
lv_distancia_1 = 6.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 7
f_encoderrectomm_2 ()
lv_v1_37 = - 20
lv_v2_37 = 20
lv_angle_37 = 90
f_gunivencmm_3 ()
lv_velocidad_78 = 20
lv_kp_78 = gv_kp
lv_ki_78 = gv_ki
lv_kd_78 = gv_kd
lv_encoder_78 = 5
f_sl14pidencf_5 ()
lv_velocidad_92 = 30
lv_kp_92 = gv_kp
lv_ki_92 = gv_ki
lv_kd_92 = gv_kd
lv_reader_92 = 3
f_sl1spidcrossf_5 ()
lv_velocidad_77 = 30
lv_kp_77 = gv_kp
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 22.5
f_sl14pidenc_5 ()
lv_v1_37 = gv_velocidad * - 0.2
lv_v2_37 = gv_velocidad * 0.2
lv_angle_37 = 100
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 13.5
f_encoderrectomm_2 ()
f_soltar_0 ()
lv_velocidad_1 = gv_velocidad * - 0.3
lv_distancia_1 = 6
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * - 0.3
lv_v2_37 = gv_velocidad * 0.3
lv_angle_37 = 90
f_gunivencmm_3 ()
lv_velocidad_86 = gv_velocidad * 0.2
lv_kp_86 = gv_kp * 1.25
lv_ki_86 = gv_ki
lv_kd_86 = gv_kd
lv_encoder_86 = 5
f_sl31pidencf_5 ()
lv_velocidad_92 = gv_velocidad * 0.3
lv_kp_92 = gv_kp
lv_ki_92 = gv_ki
lv_kd_92 = gv_kd
lv_reader_92 = 4
f_sl1spidcrossf_5 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 1
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * - 0.3
lv_v2_37 = gv_velocidad * 0.3
lv_angle_37 = 90
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 7
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 6.5
f_encoderrectomm_2 ()
lv_v1_37 = 30
lv_v2_37 = - 30
lv_angle_37 = 91
f_gunivencmm_3 ()
lv_velocidad_77 = 15
lv_kp_77 = gv_kp
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 10
f_sl14pidenc_5 ()
lv_v1_37 = - 30
lv_v2_37 = 30
lv_angle_37 = 93
f_gunivencmm_3 ()
lv_velocidad_1 = 30
lv_distancia_1 = 5.5
f_encoderrectomm_2 ()
f_coger_0 ()
EndSub
Sub f_casovox_0
lv_velocidad_1 = gv_velocidad * 0.17
lv_distancia_1 = 9.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 5
f_encoderrectomm_2 ()
lv_v1_37 = 30
lv_v2_37 = - 30
lv_angle_37 = 92
f_gunivencmm_3 ()
lv_velocidad_77 = 20
lv_kp_77 = gv_kp
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 7.5
f_sl14pidenc_5 ()
lv_v1_37 = - 20
lv_v2_37 = 20
lv_angle_37 = 97
f_gunivencmm_3 ()
lv_velocidad_1 = 20
lv_distancia_1 = 6.5
f_encoderrectomm_2 ()
f_coger_0 ()
lv_v1_37 = 30
lv_v2_37 = - 30
lv_angle_37 = 168
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 20
f_encoderrectomm_2 ()
lv_velocidad_8 = 20
lv_sens_8 = 3
f_1blancorectommf_2 ()
lv_velocidad_5 = 30
lv_sens_5 = 3
f_1negrorectomm_2 ()
Program.Delay ( 250 )
lv_velocidad_1 = - 30
lv_distancia_1 = 3.5
f_encoderrectomm_2 ()
f_soltar_0 ()
lv_v1_37 = 30
lv_v2_37 = - 30
lv_angle_37 = 110
f_gunivencmm_3 ()
lv_velocidad_8 = 20
lv_sens_8 = 1
f_1blancorectommf_2 ()
lv_velocidad_5 = 30
lv_sens_5 = 1
f_1negrorectomm_2 ()
lv_velocidad_1 = 30
lv_distancia_1 = 2.5
f_encoderrectomm_2 ()
lv_v1_37 = - 20
lv_v2_37 = 20
lv_angle_37 = 91
f_gunivencmm_3 ()
lv_velocidad_78 = 25
lv_kp_78 = gv_kp
lv_ki_78 = gv_ki * 1.5
lv_kd_78 = gv_kd
lv_encoder_78 = 10
f_sl14pidencf_5 ()
lv_velocidad_2 = 30
lv_distancia_2 = 10
f_encoderrectommf_2 ()
lv_velocidad_73 = 35
lv_kp_73 = gv_kp * 0.8
lv_ki_73 = gv_ki
lv_kd_73 = gv_kd
f_sl14pid_4 ()
lv_velocidad_1 = gv_velocidad * 0.25
lv_distancia_1 = 9
f_encoderrectomm_2 ()
f_coger_0 ()
lv_velocidad_1 = gv_velocidad * - 0.3
lv_distancia_1 = 5
f_encoderrectomm_2 ()
lv_v1_37 = gv_velocidad * 0.3
lv_v2_37 = gv_velocidad * - 0.3
lv_angle_37 = 91
f_gunivencmm_3 ()
lv_velocidad_77 = 20
lv_kp_77 = gv_kp
lv_ki_77 = gv_ki
lv_kd_77 = gv_kd
lv_encoder_77 = 9
f_sl14pidenc_5 ()
Program.Delay ( 400 )
lv_v1_37 = gv_velocidad * - 0.3
lv_v2_37 = gv_velocidad * 0.3
lv_angle_37 = 94
f_gunivencmm_3 ()
lv_velocidad_1 = gv_velocidad * 0.3
lv_distancia_1 = 4.5
f_encoderrectomm_2 ()
f_coger_0 ()
f_finprueba_0 ()
EndSub
Sub f_finprueba_0
MotorBC.OffAndBrake ()
MotorAD.OffAndBrake ()
lv_v_111 = 20
lv_aenc_111 = 0
f_bmoveasafe_2 ()
lv_v_121 = 20
lv_aenc_121 = 0
f_bmovedsafe_2 ()
Program.End ()
EndSub
Sub f_encoderrectomm_2
lv_velocidad_1 = lv_velocidad_1 * gv_sentido_motores
lv_diametro_1 = 5.6
lv_enc_1 = lv_distancia_1 * 360 / Math.Pi / lv_diametro_1
lv_start_b_1 = Motor.GetCount ( "B" ) * - 1 + ( gv_correccion / 30 * lv_velocidad_1 )
lv_start_c_1 = Motor.GetCount ( "C" )
lv_encoder_c_1 = Motor.GetCount ( "C" ) - lv_start_c_1
While Math.abs ( lv_encoder_c_1 ) < lv_enc_1
lv_encoder_b_1 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_1
lv_encoder_c_1 = Motor.GetCount ( "C" ) - lv_start_c_1
lv_error_1 = ( lv_encoder_b_1 - lv_encoder_c_1 ) * gv_sentido_motores
lv_proporcial_1 = lv_error_1 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_1 - lv_proporcial_1 ) , lv_velocidad_1 + lv_proporcial_1 )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub f_encoderrectommf_2
lv_velocidad_2 = lv_velocidad_2 * gv_sentido_motores
lv_diametro_2 = 5.6
lv_enc_2 = lv_distancia_2 * 360 / Math.Pi / lv_diametro_2
lv_start_b_2 = Motor.GetCount ( "B" ) * - 1 + gv_correccion
lv_start_c_2 = Motor.GetCount ( "C" )
lv_encoder_c_2 = Motor.GetCount ( "C" ) - lv_start_c_2
While Math.abs ( lv_encoder_c_2 ) < lv_enc_2
lv_encoder_b_2 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_2
lv_encoder_c_2 = Motor.GetCount ( "C" ) - lv_start_c_2
lv_error_2 = ( lv_encoder_b_2 - lv_encoder_c_2 ) * gv_sentido_motores
lv_proporcial_2 = lv_error_2 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_2 - lv_proporcial_2 ) , lv_velocidad_2 + lv_proporcial_2 )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub f_1negrorectomm_2
lv_velocidad_5 = lv_velocidad_5 * gv_sentido_motores
lv_start_b_5 = Motor.GetCount ( "B" ) * - 1 + gv_correccion
lv_start_c_5 = Motor.GetCount ( "C" )
While Sensor.ReadPercent ( lv_sens_5 ) > 10
lv_encoder_b_5 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_5
lv_encoder_c_5 = Motor.GetCount ( "C" ) - lv_start_c_5
lv_error_5 = ( lv_encoder_b_5 - lv_encoder_c_5 ) * gv_sentido_motores
lv_proporcial_5 = lv_error_5 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_5 - lv_proporcial_5 ) , ( lv_velocidad_5 + lv_proporcial_5 ) )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub f_1blancorectomm_2
lv_velocidad_7 = lv_velocidad_7 * gv_sentido_motores
lv_start_b_7 = Motor.GetCount ( "B" ) * - 1 + gv_correccion
lv_start_c_7 = Motor.GetCount ( "C" )
While Sensor.ReadPercent ( lv_sens_7 ) < 50
lv_encoder_b_7 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_7
lv_encoder_c_7 = Motor.GetCount ( "C" ) - lv_start_c_7
lv_error_7 = ( lv_encoder_b_7 - lv_encoder_c_7 ) * gv_sentido_motores
lv_proporcial_7 = lv_error_7 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_7 - lv_proporcial_7 ) , lv_velocidad_7 + lv_proporcial_7 )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub f_1blancorectommf_2
lv_velocidad_8 = lv_velocidad_8 * gv_sentido_motores
lv_start_b_8 = Motor.GetCount ( "B" ) * - 1 + gv_correccion
lv_start_c_8 = Motor.GetCount ( "C" )
While Sensor.ReadPercent ( lv_sens_8 ) < 50
lv_encoder_b_8 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_8
lv_encoder_c_8 = Motor.GetCount ( "C" ) - lv_start_c_8
lv_error_8 = ( lv_encoder_b_8 - lv_encoder_c_8 ) * gv_sentido_motores
lv_proporcial_8 = lv_error_8 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_8 - lv_proporcial_8 ) , lv_velocidad_8 + lv_proporcial_8 )
EndWhile
Motor.Stop ( "BC" , "False" )
EndSub
Sub f_tiemporectomm_2
lv_velocidad_15 = lv_velocidad_15 * gv_sentido_motores
lv_start_b_15 = Motor.GetCount ( "B" ) * - 1 + gv_correccion
lv_start_c_15 = Motor.GetCount ( "C" )
Time.Reset3 ()
While Time.Get3 () < lv_tiempo_15
lv_encoder_b_15 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_15
lv_encoder_c_15 = Motor.GetCount ( "C" ) - lv_start_c_15
lv_error_15 = ( lv_encoder_b_15 - lv_encoder_c_15 ) * gv_sentido_motores
lv_proporcial_15 = lv_error_15 * 1.2
Motor.StartSync ( "BC" , - ( lv_velocidad_15 - lv_proporcial_15 ) , lv_velocidad_15 + lv_proporcial_15 )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub f_encodergirommf_3
lv_velocidad1_18 = lv_velocidad1_18 * gv_sentido_motores
lv_velocidad2_18 = lv_velocidad2_18 * gv_sentido_motores
lv_diametro_18 = 5.6
lv_distancia_18 = lv_encoder_18 / ( lv_diametro_18 * Math.Pi ) * 360
Motor.MoveSync ( "BC" , - lv_velocidad1_18 , lv_velocidad2_18 , lv_distancia_18 , "False" )
EndSub
Sub f_1negrogirommf_3
lv_velocidad1_20 = lv_velocidad1_20 * gv_sentido_motores
lv_velocidad2_20 = lv_velocidad2_20 * gv_sentido_motores
While Sensor.ReadPercent ( lv_sens_20 ) > 15
Motor.StartSync ( "BC" , - lv_velocidad1_20 , lv_velocidad2_20 )
EndWhile
Motor.Stop ( "BC" , "False" )
EndSub
Sub f_gunivencmm_3
lv_i_37 = "B"
lv_d_37 = "C"
lv_signo_37 = ( lv_v1_37 / lv_v2_37 ) / Math.Abs ( lv_v1_37 / lv_v2_37 )
lv_vmin_37 = Math.Min ( Math.Abs ( lv_v1_37 ) , Math.Abs ( lv_v2_37 ) )
lv_vmax_37 = Math.Max ( Math.Abs ( lv_v1_37 ) , Math.Abs ( lv_v2_37 ) )
lv_encodr_37 = lv_angle_37 * gv_g1 * ( - 2 / ( lv_signo_37 * lv_vmin_37 / lv_vmax_37 - 1 ) )
Motor.MoveSync ( lv_i_37 + lv_d_37 , - lv_v1_37 , lv_v2_37 , lv_encodr_37 , "True" )
lv_v1_37 = 0
lv_v2_37 = 0
lv_angle_37 = 0
Program.Delay ( 200 )
EndSub
Sub f_gunivencmmf_3
lv_i_38 = "B"
lv_d_38 = "C"
lv_signo_38 = ( lv_v1_38 / lv_v2_38 ) / Math.Abs ( lv_v1_38 / lv_v2_38 )
lv_vmin_38 = Math.Min ( Math.Abs ( lv_v1_38 ) , Math.Abs ( lv_v2_38 ) )
lv_vmax_38 = Math.Max ( Math.Abs ( lv_v1_38 ) , Math.Abs ( lv_v2_38 ) )
lv_encodr_38 = lv_angle_38 * gv_g1 * ( - 2 / ( lv_signo_38 * lv_vmin_38 / lv_vmax_38 - 1 ) )
Motor.MoveSync ( lv_i_38 + lv_d_38 , - lv_v1_38 , lv_v2_38 , lv_encodr_38 , "False" )
lv_v1_38 = 0
lv_v2_38 = 0
lv_angle_38 = 0
EndSub
Sub f_sl14sief_7
lv_i_56 = "B"
lv_d_56 = "C"
lv_accelencoder_56 = ( lv_accelencoder_56 / ( 5.6 * Math.Pi ) ) * 360
lv_encoder_56 = ( lv_encoder_56 / ( 5.6 * Math.Pi ) ) * 360
lv_u_56 = 0
lv_error_56 = 0
lv_olderror_56 = 0
lv_errsum_56 = 0
Motor.ResetCount ( "C" )
While Motor.GetCount ( "C" ) < lv_encoder_56
lv_vel_56 = ( Motor.GetCount ( "C" ) / lv_accelencoder_56 * 0.72 ) * ( lv_vmax_56 + lv_v0_56 ) + lv_v0_56
lv_vel_56 = Math.Min ( lv_vel_56 , lv_vmax_56 )
lv_sentido_56 = lv_vel_56 / Math.Abs ( lv_vel_56 )
lv_error_56 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_56
lv_errsum_56 = lv_errsum_56 + lv_error_56
lv_u_56 = lv_error_56 * lv_kp_56 + ( lv_error_56 - lv_olderror_56 ) * lv_kd_56 + lv_errsum_56 * lv_ki_56
Motor.StartSync ( lv_i_56 + lv_d_56 , - ( lv_vel_56 + lv_u_56 ) * gv_sentido_motores , ( lv_vel_56 - lv_u_56 ) * gv_sentido_motores )
lv_olderror_56 = lv_error_56
EndWhile
Motor.Stop ( lv_i_56 + lv_d_56 , "False" )
EndSub
Sub f_sl14sicf_6
lv_i_58 = "B"
lv_d_58 = "C"
lv_accelencoder_58 = ( lv_accelencoder_58 / ( 5.6 * Math.Pi ) ) * 360
lv_u_58 = 0
lv_error_58 = 0
lv_olderror_58 = 0
lv_errsum_58 = 0
Motor.ResetCount ( "C" )
While Sensor.ReadPercent ( 1 ) > 15 Or Sensor.ReadPercent ( 4 ) > 15
lv_vel_58 = ( Motor.GetCount ( "C" ) / lv_accelencoder_58 * 0.72 ) * ( lv_vmax_58 + lv_v0_58 ) + lv_v0_58
lv_vel_58 = Math.Min ( lv_vel_58 , lv_vmax_58 )
lv_sentido_58 = lv_vel_58 / Math.Abs ( lv_vel_58 )
lv_error_58 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_58
lv_errsum_58 = lv_errsum_58 + lv_error_58
lv_u_58 = lv_error_58 * lv_kp_58 + ( lv_error_58 - lv_olderror_58 ) * lv_kd_58 + lv_errsum_58 * lv_ki_58
Motor.StartSync ( lv_i_58 + lv_d_58 , - ( lv_vel_58 + lv_u_58 ) * gv_sentido_motores , ( lv_vel_58 - lv_u_58 ) * gv_sentido_motores )
lv_olderror_58 = lv_error_58
EndWhile
Motor.Stop ( lv_i_58 + lv_d_58 , "False" )
EndSub
Sub f_sl14pid_4
lv_velocidad_73 = lv_velocidad_73 * gv_sentido_motores
lv_i_73 = "B"
lv_d_73 = "C"
lv_error_73 = 0
lv_olderror_73 = 0
lv_errsum_73 = 0
lv_u_73 = 0
lv_sentido_73 = lv_velocidad_73 / Math.Abs ( lv_velocidad_73 )
While Sensor.ReadPercent ( 1 ) > 5 Or Sensor.ReadPercent ( 4 ) > 5
lv_error_73 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_73 * gv_sentido_motores
lv_errsum_73 = lv_errsum_73 + lv_error_73
lv_u_73 = lv_error_73 * lv_kp_73 + ( lv_error_73 - lv_olderror_73 ) * lv_kd_73 + lv_errsum_73 * lv_ki_73
Motor.StartSync ( lv_i_73 + lv_d_73 , - ( lv_velocidad_73 + lv_u_73 ) , lv_velocidad_73 - lv_u_73 )
lv_olderror_73 = lv_error_73
EndWhile
Motor.Stop ( lv_i_73 + lv_d_73 , "True" )
EndSub
Sub f_sl14pidf_4
lv_velocidad_74 = lv_velocidad_74 * gv_sentido_motores
lv_i_74 = "B"
lv_d_74 = "C"
lv_error_74 = 0
lv_olderror_74 = 0
lv_errsum_74 = 0
lv_u_74 = 0
lv_sentido_74 = lv_velocidad_74 / Math.Abs ( lv_velocidad_74 )
While Sensor.ReadPercent ( 1 ) > 5 Or Sensor.ReadPercent ( 4 ) > 5
lv_error_74 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_74 * gv_sentido_motores
lv_errsum_74 = lv_errsum_74 + lv_error_74
lv_u_74 = lv_error_74 * lv_kp_74 + ( lv_error_74 - lv_olderror_74 ) * lv_kd_74 + lv_errsum_74 * lv_ki_74
Motor.StartSync ( lv_i_74 + lv_d_74 , - ( lv_velocidad_74 + lv_u_74 ) , lv_velocidad_74 - lv_u_74 )
lv_olderror_74 = lv_error_74
EndWhile
Motor.Stop ( lv_i_74 + lv_d_74 , "False" )
EndSub
Sub f_sl14pidenc_5
lv_velocidad_77 = lv_velocidad_77 * gv_sentido_motores
lv_i_77 = "B"
lv_d_77 = "C"
lv_error_77 = 0
lv_olderror_77 = 0
lv_errsum_77 = 0
lv_u_77 = 0
lv_sentido_77 = lv_velocidad_77 / Math.Abs ( lv_velocidad_77 )
lv_encoder_77 = lv_encoder_77 / ( 5.6 * Math.Pi ) * 360
lv_start_c_77 = Motor.GetCount ( "C" )
lv_encoder_c_77 = 0
While Math.Abs ( lv_encoder_c_77 ) < lv_encoder_77
lv_encoder_c_77 = Motor.GetCount ( "C" ) - lv_start_c_77
lv_error_77 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_77 * gv_sentido_motores
lv_errsum_77 = lv_errsum_77 + lv_error_77
lv_u_77 = lv_error_77 * lv_kp_77 + ( lv_error_77 - lv_olderror_77 ) * lv_kd_77 + lv_errsum_77 * lv_ki_77
Motor.StartSync ( lv_i_77 + lv_d_77 , - ( lv_velocidad_77 + lv_u_77 ) , lv_velocidad_77 - lv_u_77 )
lv_olderror_77 = lv_error_77
EndWhile
Motor.Stop ( lv_i_77 + lv_d_77 , "True" )
EndSub
Sub f_sl14pidencf_5
lv_velocidad_78 = lv_velocidad_78 * gv_sentido_motores
lv_i_78 = "B"
lv_d_78 = "C"
lv_error_78 = 0
lv_olderror_78 = 0
lv_errsum_78 = 0
lv_u_78 = 0
lv_sentido_78 = lv_velocidad_78 / Math.Abs ( lv_velocidad_78 )
lv_encoder_78 = lv_encoder_78 / ( 5.6 * Math.Pi ) * 360
lv_start_c_78 = Motor.GetCount ( "C" )
lv_encoder_c_78 = 0
While Math.Abs ( lv_encoder_c_78 ) < lv_encoder_78
lv_encoder_c_78 = Motor.GetCount ( "C" ) - lv_start_c_78
lv_error_78 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_78 * gv_sentido_motores
lv_errsum_78 = lv_errsum_78 + lv_error_78
lv_u_78 = lv_error_78 * lv_kp_78 + ( lv_error_78 - lv_olderror_78 ) * lv_kd_78 + lv_errsum_78 * lv_ki_78
Motor.StartSync ( lv_i_78 + lv_d_78 , - ( lv_velocidad_78 + lv_u_78 ) , lv_velocidad_78 - lv_u_78 )
lv_olderror_78 = lv_error_78
EndWhile
Motor.Stop ( lv_i_78 + lv_d_78 , "False" )
EndSub
Sub f_sl31pidenc_5
lv_velocidad_85 = lv_velocidad_85 * gv_sentido_motores
lv_i_85 = "B"
lv_d_85 = "C"
lv_error_85 = 0
lv_olderror_85 = 0
lv_errsum_85 = 0
lv_u_85 = 0
lv_sentido_85 = lv_velocidad_85 / Math.Abs ( lv_velocidad_85 )
lv_encoder_85 = lv_encoder_85 / ( 5.6 * Math.Pi ) * 360
lv_start_c_85 = Motor.GetCount ( "C" )
lv_encoder_c_85 = 0
While Math.Abs ( lv_encoder_c_85 ) < lv_encoder_85
lv_encoder_c_85 = Motor.GetCount ( "C" ) - lv_start_c_85
lv_error_85 = ( Sensor.ReadPercent ( 3 ) - Sensor.ReadPercent ( 1 ) ) * lv_sentido_85 * gv_sentido_motores
lv_errsum_85 = lv_errsum_85 + lv_error_85
lv_u_85 = lv_error_85 * lv_kp_85 + ( lv_error_85 - lv_olderror_85 ) * lv_kd_85 + lv_errsum_85 * lv_ki_85
Motor.StartSync ( lv_i_85 + lv_d_85 , - ( lv_velocidad_85 + lv_u_85 ) , lv_velocidad_85 - lv_u_85 )
lv_olderror_85 = lv_error_85
EndWhile
Motor.Stop ( lv_i_85 + lv_d_85 , "True" )
EndSub
Sub f_sl31pidencf_5
lv_velocidad_86 = lv_velocidad_86 * gv_sentido_motores
lv_i_86 = "B"
lv_d_86 = "C"
lv_error_86 = 0
lv_olderror_86 = 0
lv_errsum_86 = 0
lv_u_86 = 0
lv_sentido_86 = lv_velocidad_86 / Math.Abs ( lv_velocidad_86 )
lv_encoder_86 = lv_encoder_86 / ( 5.6 * Math.Pi ) * 360
lv_start_c_86 = Motor.GetCount ( "C" )
lv_encoder_c_86 = 0
While Math.Abs ( lv_encoder_c_86 ) < lv_encoder_86
lv_encoder_c_86 = Motor.GetCount ( "C" ) - lv_start_c_86
lv_error_86 = ( Sensor.ReadPercent ( 3 ) - Sensor.ReadPercent ( 1 ) ) * lv_sentido_86 * gv_sentido_motores
lv_errsum_86 = lv_errsum_86 + lv_error_86
lv_u_86 = lv_error_86 * lv_kp_86 + ( lv_error_86 - lv_olderror_86 ) * lv_kd_86 + lv_errsum_86 * lv_ki_86
Motor.StartSync ( lv_i_86 + lv_d_86 , - ( lv_velocidad_86 + lv_u_86 ) , lv_velocidad_86 - lv_u_86 )
lv_olderror_86 = lv_error_86
EndWhile
Motor.Stop ( lv_i_86 + lv_d_86 , "False" )
EndSub
Sub f_sl1spidcross_5
lv_velocidad_91 = lv_velocidad_91 * gv_sentido_motores
lv_i_91 = "B"
lv_d_91 = "C"
lv_error_91 = 0
lv_olderror_91 = 0
lv_errsum_91 = 0
lv_u_91 = 0
lv_sentido_91 = lv_velocidad_91 / Math.Abs ( lv_velocidad_91 )
If lv_reader_91 = 3 Then
lv_reader1_91 = 1
lv_reader2_91 = 4
Else
lv_reader1_91 = 3
lv_reader2_91 = 1
EndIf
While Sensor.ReadPercent ( lv_reader_91 ) > 10
lv_error_91 = ( Sensor.ReadPercent ( lv_reader1_91 ) - Sensor.ReadPercent ( lv_reader2_91 ) ) * lv_sentido_91 * gv_sentido_motores
lv_errsum_91 = lv_errsum_91 + lv_error_91
lv_u_91 = lv_error_91 * lv_kp_91 + ( lv_error_91 - lv_olderror_91 ) * lv_kd_91 + lv_errsum_91 * lv_ki_91
Motor.StartSync ( lv_i_91 + lv_d_91 , - ( lv_velocidad_91 + lv_u_91 ) , lv_velocidad_91 - lv_u_91 )
lv_olderror_91 = lv_error_91
EndWhile
Motor.Stop ( lv_i_91 + lv_d_91 , "True" )
EndSub
Sub f_sl1spidcrossf_5
lv_velocidad_92 = lv_velocidad_92 * gv_sentido_motores
lv_i_92 = "B"
lv_d_92 = "C"
lv_error_92 = 0
lv_olderror_92 = 0
lv_errsum_92 = 0
lv_u_92 = 0
lv_sentido_92 = lv_velocidad_92 / Math.Abs ( lv_velocidad_92 )
If lv_reader_92 = 3 Then
lv_reader1_92 = 1
lv_reader2_92 = 4
Else
lv_reader1_92 = 3
lv_reader2_92 = 1
EndIf
While Sensor.ReadPercent ( lv_reader_92 ) > 10
lv_error_92 = ( Sensor.ReadPercent ( lv_reader1_92 ) - Sensor.ReadPercent ( lv_reader2_92 ) ) * lv_sentido_92 * gv_sentido_motores
lv_errsum_92 = lv_errsum_92 + lv_error_92
lv_u_92 = lv_error_92 * lv_kp_92 + ( lv_error_92 - lv_olderror_92 ) * lv_kd_92 + lv_errsum_92 * lv_ki_92
Motor.StartSync ( lv_i_92 + lv_d_92 , - ( lv_velocidad_92 + lv_u_92 ) , lv_velocidad_92 - lv_u_92 )
lv_olderror_92 = lv_error_92
EndWhile
Motor.Stop ( lv_i_92 + lv_d_92 , "False" )
EndSub
Sub f_smart14pidf_4
lv_vmax_100 = lv_vmax_100 * gv_sentido_motores
lv_i_100 = "B"
lv_d_100 = "C"
lv_v0_100 = 10 * gv_sentido_motores
lv_accelencoder_100 = 150
lv_u_100 = 0
lv_errsum_100 = 0
lv_olderror_100 = 0
Motor.ResetCount ( "C" )
While Sensor.ReadPercent ( 1 ) > 15 Or Sensor.ReadPercent ( 4 ) > 15
lv_vel_100 = ( Motor.GetCount ( "C" ) / lv_accelencoder_100 ) * ( lv_vmax_100 + lv_v0_100 ) + lv_v0_100
lv_vel_100 = Math.Min ( lv_vel_100 , lv_vmax_100 )
lv_sentido_100 = lv_vel_100 / Math.Abs ( lv_vel_100 )
lv_error_100 = ( Sensor.ReadPercent ( 1 ) - Sensor.ReadPercent ( 4 ) ) * lv_sentido_100 * gv_sentido_motores
lv_errsum_100 = lv_errsum_100 * 0.9 + lv_error_100
lv_u_100 = lv_error_100 * lv_kp_100 + ( lv_error_100 - lv_olderror_100 ) * lv_kd_100 + lv_errsum_100 * lv_ki_100
Motor.StartSync ( lv_i_100 + lv_d_100 , - ( lv_vel_100 + lv_u_100 ) , lv_vel_100 - lv_u_100 )
lv_olderror_100 = lv_error_100
EndWhile
Motor.Stop ( lv_i_100 + lv_d_100 , "False" )
EndSub
Sub f_bmovea_2
lv_encdiff_107 = lv_aenc_107 - Motor.GetCount ( "A" )
lv_signo_107 = lv_encdiff_107 / Math.Abs ( lv_encdiff_107 )
If lv_encdiff_107 <> 0 Then
While Math.Abs ( Motor.GetCount ( "A" ) - lv_aenc_107 ) > 15
MotorA.StartSpeed ( lv_signo_107 * lv_v_107 )
EndWhile
Motor.Stop ( "A" , "True" )
EndIf
EndSub
Sub f_bmoveasafe_2
lv_encdiff_111 = lv_aenc_111 - Motor.GetCount ( "A" )
lv_signo_111 = lv_encdiff_111 / Math.Abs ( lv_encdiff_111 )
lv_safetytimer_111 = Math.Max ( ( ( Math.abs ( lv_encdiff_111 ) / 100 ) / ( lv_v_111 / 20 ) * 650 * 2 ) , 400 )
Time.Reset3 ()
If lv_encdiff_111 <> 0 Then
While Math.Abs ( Motor.GetCount ( "A" ) - lv_aenc_111 ) > 5 and Time.Get3 () < 2000
MotorA.StartSpeed ( lv_signo_111 * lv_v_111 )
EndWhile
Motor.Stop ( "A" , "True" )
EndIf
EndSub
Sub f_bmoved_2
lv_encdiff_117 = lv_aenc_117 - Motor.GetCount ( "D" )
lv_signo_117 = lv_encdiff_117 / Math.Abs ( lv_encdiff_117 )
If lv_encdiff_117 <> 0 Then
MotorD.StartSpeed ( lv_signo_117 * lv_v_117 )
While Math.Abs ( Motor.GetCount ( "D" ) - lv_aenc_117 ) > 10
EndWhile
Motor.Stop ( "D" , "True" )
EndIf
EndSub
Sub f_bmovedtimer_2
Time.Reset1 ()
While Time.Get1 () < lv_t_120
MotorD.StartSpeed ( lv_v_120 )
EndWhile
MotorD.OffAndBrake ()
EndSub
Sub f_bmovedsafe_2
lv_encdiff_121 = lv_aenc_121 - Motor.GetCount ( "D" )
lv_signo_121 = lv_encdiff_121 / Math.Abs ( lv_encdiff_121 )
lv_safetytimer_121 = Math.Max ( ( ( Math.abs ( lv_encdiff_121 ) / 100 ) / ( lv_v_121 / 20 ) * 650 * 2 ) , 400 )
Time.Reset3 ()
If lv_encdiff_121 <> 0 Then
While Math.Abs ( Motor.GetCount ( "D" ) - lv_aenc_121 ) > 5 and Time.Get3 () < lv_safetytimer_121
MotorD.StartSpeed ( lv_signo_121 * lv_v_121 )
LCD.Clear ()
LCD.Write ( 5 , 30 , "SafetyTimer: " + lv_safetytimer_121 )
EndWhile
Motor.Stop ( "D" , "True" )
EndIf
EndSub
Sub f_rgbdetect1_2
Sensor.SetMode ( 1 , 4 )
lv_red_122 = 15
lv_yellow_122 = 60
lv_green_122 = 170
lv_blue_122 = 330
lv_valuenegro_122 = 10
lv_valueblanco_122 = 100
lv_rwhite_122 = 147
lv_gwhite_122 = 143
lv_bwhite_122 = 160
lv_hue_122 = 0
lv_sat_122 = 0
lv_value_122 = 0
lv_color_122 = 0
lv_rnorma_122 [ 0 ] = 0
lv_gnorma_122 [ 0 ] = 0
lv_bnorma_122 [ 0 ] = 0
lv_maxa_122 [ 0 ] = 0
LCD.Clear ()
For lv_j_122 = 1 To lv_reps_122 Step 1
lv_rgb_122 = Sensor.ReadRaw ( 1 , 3 )
lv_rraw_122 = lv_rgb_122 [ 0 ]
lv_graw_122 = lv_rgb_122 [ 1 ]
lv_braw_122 = lv_rgb_122 [ 2 ]
lv_rnorma_122 [ lv_j_122 ] = Math.Round ( lv_rraw_122 / lv_rwhite_122 * 255 )
lv_gnorma_122 [ lv_j_122 ] = Math.Round ( lv_graw_122 / lv_gwhite_122 * 255 )
lv_bnorma_122 [ lv_j_122 ] = Math.Round ( lv_braw_122 / lv_bwhite_122 * 255 )
lv_maxa_122 [ lv_j_122 ] = Math.Max ( Math.Max ( lv_rnorma_122 [ lv_j_122 ] , lv_gnorma_122 [ lv_j_122 ] ) , lv_bnorma_122 [ lv_j_122 ] )
Program.Delay ( 5 )
EndFor
For lv_j_122 = 1 To lv_reps_122 Step 2
lv_rnorm_122 = lv_rnorma_122 [ lv_j_122 ] + lv_rnorma_122 [ lv_j_122 + 1 ]
lv_gnorm_122 = lv_gnorma_122 [ lv_j_122 ] + lv_gnorma_122 [ lv_j_122 + 1 ]
lv_bnorm_122 = lv_bnorma_122 [ lv_j_122 ] + lv_bnorma_122 [ lv_j_122 + 1 ]
lv_max_122 = lv_maxa_122 [ lv_j_122 ] + lv_maxa_122 [ lv_j_122 + 1 ]
EndFor
lv_rnorm_122 = lv_rnorm_122 / lv_reps_122
lv_gnorm_122 = lv_gnorm_122 / lv_reps_122
lv_bnorm_122 = lv_bnorm_122 / lv_reps_122
lv_max_122 = lv_max_122 / lv_reps_122
lv_min_122 = Math.Min ( Math.Min ( lv_rnorm_122 , lv_gnorm_122 ) , lv_bnorm_122 )
If lv_max_122 = lv_min_122 Then
lv_hue_122 = 0
ElseIf lv_max_122 = lv_rnorm_122 Then
If lv_gnorm_122 >= lv_bnorm_122 Then
lv_hue_122 = 60 * ( lv_gnorm_122 - lv_bnorm_122 ) / ( lv_max_122 - lv_min_122 )
Else
lv_hue_122 = 60 * ( lv_gnorm_122 - lv_bnorm_122 ) / ( lv_max_122 - lv_min_122 ) + 360
EndIf
ElseIf lv_max_122 = lv_gnorm_122 Then
lv_hue_122 = 60 * ( lv_bnorm_122 - lv_rnorm_122 ) / ( lv_max_122 - lv_min_122 ) + 120
Else
lv_hue_122 = 60 * ( lv_rnorm_122 - lv_gnorm_122 ) / ( lv_max_122 - lv_min_122 ) + 240
EndIf
If lv_max_122 = 0 Then
lv_sat_122 = 0
Else
lv_sat_122 = 1 - lv_min_122 / lv_max_122
EndIf
lv_value_122 = lv_max_122
lv_rgbgrey_122 = ( lv_valueblanco_122 + lv_valuenegro_122 ) / 2
If lv_rnorm_122 + lv_gnorm_122 + lv_bnorm_122 <= 3 Then
lv_color_122 = 0
Else
If lv_sat_122 < 0.4 Then
If lv_value_122 > lv_rgbgrey_122 Then
lv_color_122 = 6
Else
lv_color_122 = 1
EndIf
Else
If lv_hue_122 >= 0 And lv_hue_122 < lv_red_122 Then
lv_color_122 = 5
ElseIf lv_hue_122 >= lv_red_122 And lv_hue_122 < lv_yellow_122 Then
lv_color_122 = 4
ElseIf lv_hue_122 >= lv_yellow_122 And lv_hue_122 < lv_green_122 Then
lv_color_122 = 3
ElseIf lv_hue_122 >= lv_green_122 And lv_hue_122 < lv_blue_122 Then
lv_color_122 = 2
Else
lv_color_122 = 5
EndIf
EndIf
EndIf
LCD.Write ( 33 , 20 , "R: " + lv_rraw_122 )
LCD.Write ( 33 , 35 , "G: " + lv_graw_122 )
LCD.Write ( 33 , 50 , "B: " + lv_braw_122 )
LCD.Write ( 33 , 70 , "Color: " + lv_color_122 )
LCD.Write ( 33 , 90 , "Value: " + lv_value_122 )
lv_color_134 = lv_color_122
f_leercolor_1 ()
EndSub
Sub f_rgbdetect2_2
Sensor.SetMode ( 2 , 4 )
lv_red_123 = 15
lv_yellow_123 = 60
lv_green_123 = 170
lv_blue_123 = 330
lv_valuenegro_123 = 10
lv_valueblanco_123 = 100
lv_rwhite_123 = 147
lv_gwhite_123 = 143
lv_bwhite_123 = 160
lv_hue_123 = 0
lv_sat_123 = 0
lv_value_123 = 0
lv_color_123 = 0
lv_rnorma_123 [ 0 ] = 0
lv_gnorma_123 [ 0 ] = 0
lv_bnorma_123 [ 0 ] = 0
lv_maxa_123 [ 0 ] = 0
LCD.Clear ()
For lv_j_123 = 1 To lv_reps_123 Step 1
lv_rgb_123 = Sensor.ReadRaw ( 2 , 3 )
lv_rraw_123 = lv_rgb_123 [ 0 ]
lv_graw_123 = lv_rgb_123 [ 1 ]
lv_braw_123 = lv_rgb_123 [ 2 ]
lv_rnorma_123 [ lv_j_123 ] = Math.Round ( lv_rraw_123 / lv_rwhite_123 * 255 )
lv_gnorma_123 [ lv_j_123 ] = Math.Round ( lv_graw_123 / lv_gwhite_123 * 255 )
lv_bnorma_123 [ lv_j_123 ] = Math.Round ( lv_braw_123 / lv_bwhite_123 * 255 )
lv_maxa_123 [ lv_j_123 ] = Math.Max ( Math.Max ( lv_rnorma_123 [ lv_j_123 ] , lv_gnorma_123 [ lv_j_123 ] ) , lv_bnorma_123 [ lv_j_123 ] )
Program.Delay ( 5 )
EndFor
For lv_j_123 = 1 To lv_reps_123 Step 2
lv_rnorm_123 = lv_rnorma_123 [ lv_j_123 ] + lv_rnorma_123 [ lv_j_123 + 1 ]
lv_gnorm_123 = lv_gnorma_123 [ lv_j_123 ] + lv_gnorma_123 [ lv_j_123 + 1 ]
lv_bnorm_123 = lv_bnorma_123 [ lv_j_123 ] + lv_bnorma_123 [ lv_j_123 + 1 ]
lv_max_123 = lv_maxa_123 [ lv_j_123 ] + lv_maxa_123 [ lv_j_123 + 1 ]
EndFor
lv_rnorm_123 = lv_rnorm_123 / lv_reps_123
lv_gnorm_123 = lv_gnorm_123 / lv_reps_123
lv_bnorm_123 = lv_bnorm_123 / lv_reps_123
lv_max_123 = lv_max_123 / lv_reps_123
lv_min_123 = Math.Min ( Math.Min ( lv_rnorm_123 , lv_gnorm_123 ) , lv_bnorm_123 )
If lv_max_123 = lv_min_123 Then
lv_hue_123 = 0
ElseIf lv_max_123 = lv_rnorm_123 Then
If lv_gnorm_123 >= lv_bnorm_123 Then
lv_hue_123 = 60 * ( lv_gnorm_123 - lv_bnorm_123 ) / ( lv_max_123 - lv_min_123 )
Else
lv_hue_123 = 60 * ( lv_gnorm_123 - lv_bnorm_123 ) / ( lv_max_123 - lv_min_123 ) + 360
EndIf
ElseIf lv_max_123 = lv_gnorm_123 Then
lv_hue_123 = 60 * ( lv_bnorm_123 - lv_rnorm_123 ) / ( lv_max_123 - lv_min_123 ) + 120
Else
lv_hue_123 = 60 * ( lv_rnorm_123 - lv_gnorm_123 ) / ( lv_max_123 - lv_min_123 ) + 240
EndIf
If lv_max_123 = 0 Then
lv_sat_123 = 0
Else
lv_sat_123 = 1 - lv_min_123 / lv_max_123
EndIf
lv_value_123 = lv_max_123
lv_rgbgrey_123 = ( lv_valueblanco_123 + lv_valuenegro_123 ) / 2
If lv_rnorm_123 + lv_gnorm_123 + lv_bnorm_123 <= 3 Then
lv_color_123 = 0
Else
If lv_sat_123 < 0.4 Then
If lv_value_123 > lv_rgbgrey_123 Then
lv_color_123 = 6
Else
lv_color_123 = 1
EndIf
Else
If lv_hue_123 >= 0 And lv_hue_123 < lv_red_123 Then
lv_color_123 = 5
ElseIf lv_hue_123 >= lv_red_123 And lv_hue_123 < lv_yellow_123 Then
lv_color_123 = 4
ElseIf lv_hue_123 >= lv_yellow_123 And lv_hue_123 < lv_green_123 Then
lv_color_123 = 3
ElseIf lv_hue_123 >= lv_green_123 And lv_hue_123 < lv_blue_123 Then
lv_color_123 = 2
Else
lv_color_123 = 5
EndIf
EndIf
EndIf
LCD.Write ( 33 , 20 , "R: " + lv_rraw_123 )
LCD.Write ( 33 , 35 , "G: " + lv_graw_123 )
LCD.Write ( 33 , 50 , "B: " + lv_braw_123 )
LCD.Write ( 33 , 70 , "Color: " + lv_color_123 )
LCD.Write ( 33 , 90 , "Value: " + lv_value_123 )
lv_color_134 = lv_color_123
f_leercolor_1 ()
EndSub
Sub f_rgbdetect3_2
Sensor.SetMode ( 3 , 4 )
lv_red_124 = 15
lv_yellow_124 = 60
lv_green_124 = 170
lv_blue_124 = 330
lv_valuenegro_124 = 10
lv_valueblanco_124 = 100
lv_rwhite_124 = 147
lv_gwhite_124 = 143
lv_bwhite_124 = 160
lv_hue_124 = 0
lv_sat_124 = 0
lv_value_124 = 0
lv_color_124 = 0
lv_rnorma_124 [ 0 ] = 0
lv_gnorma_124 [ 0 ] = 0
lv_bnorma_124 [ 0 ] = 0
lv_maxa_124 [ 0 ] = 0
LCD.Clear ()
For lv_j_124 = 1 To lv_reps_124 Step 1
lv_rgb_124 = Sensor.ReadRaw ( 3 , 3 )
lv_rraw_124 = lv_rgb_124 [ 0 ]
lv_graw_124 = lv_rgb_124 [ 1 ]
lv_braw_124 = lv_rgb_124 [ 2 ]
lv_rnorma_124 [ lv_j_124 ] = Math.Round ( lv_rraw_124 / lv_rwhite_124 * 255 )
lv_gnorma_124 [ lv_j_124 ] = Math.Round ( lv_graw_124 / lv_gwhite_124 * 255 )
lv_bnorma_124 [ lv_j_124 ] = Math.Round ( lv_braw_124 / lv_bwhite_124 * 255 )
lv_maxa_124 [ lv_j_124 ] = Math.Max ( Math.Max ( lv_rnorma_124 [ lv_j_124 ] , lv_gnorma_124 [ lv_j_124 ] ) , lv_bnorma_124 [ lv_j_124 ] )
Program.Delay ( 5 )
EndFor
For lv_j_124 = 1 To lv_reps_124 Step 2
lv_rnorm_124 = lv_rnorma_124 [ lv_j_124 ] + lv_rnorma_124 [ lv_j_124 + 1 ]
lv_gnorm_124 = lv_gnorma_124 [ lv_j_124 ] + lv_gnorma_124 [ lv_j_124 + 1 ]
lv_bnorm_124 = lv_bnorma_124 [ lv_j_124 ] + lv_bnorma_124 [ lv_j_124 + 1 ]
lv_max_124 = lv_maxa_124 [ lv_j_124 ] + lv_maxa_124 [ lv_j_124 + 1 ]
EndFor
lv_rnorm_124 = lv_rnorm_124 / lv_reps_124
lv_gnorm_124 = lv_gnorm_124 / lv_reps_124
lv_bnorm_124 = lv_bnorm_124 / lv_reps_124
lv_max_124 = lv_max_124 / lv_reps_124
lv_min_124 = Math.Min ( Math.Min ( lv_rnorm_124 , lv_gnorm_124 ) , lv_bnorm_124 )
If lv_max_124 = lv_min_124 Then
lv_hue_124 = 0
ElseIf lv_max_124 = lv_rnorm_124 Then
If lv_gnorm_124 >= lv_bnorm_124 Then
lv_hue_124 = 60 * ( lv_gnorm_124 - lv_bnorm_124 ) / ( lv_max_124 - lv_min_124 )
Else
lv_hue_124 = 60 * ( lv_gnorm_124 - lv_bnorm_124 ) / ( lv_max_124 - lv_min_124 ) + 360
EndIf
ElseIf lv_max_124 = lv_gnorm_124 Then
lv_hue_124 = 60 * ( lv_bnorm_124 - lv_rnorm_124 ) / ( lv_max_124 - lv_min_124 ) + 120
Else
lv_hue_124 = 60 * ( lv_rnorm_124 - lv_gnorm_124 ) / ( lv_max_124 - lv_min_124 ) + 240
EndIf
If lv_max_124 = 0 Then
lv_sat_124 = 0
Else
lv_sat_124 = 1 - lv_min_124 / lv_max_124
EndIf
lv_value_124 = lv_max_124
lv_rgbgrey_124 = ( lv_valueblanco_124 + lv_valuenegro_124 ) / 2
If lv_rnorm_124 + lv_gnorm_124 + lv_bnorm_124 <= 3 Then
lv_color_124 = 0
Else
If lv_sat_124 < 0.4 Then
If lv_value_124 > lv_rgbgrey_124 Then
lv_color_124 = 6
Else
lv_color_124 = 1
EndIf
Else
If lv_hue_124 >= 0 And lv_hue_124 < lv_red_124 Then
lv_color_124 = 5
ElseIf lv_hue_124 >= lv_red_124 And lv_hue_124 < lv_yellow_124 Then
lv_color_124 = 4
ElseIf lv_hue_124 >= lv_yellow_124 And lv_hue_124 < lv_green_124 Then
lv_color_124 = 3
ElseIf lv_hue_124 >= lv_green_124 And lv_hue_124 < lv_blue_124 Then
lv_color_124 = 2
Else
lv_color_124 = 5
EndIf
EndIf
EndIf
LCD.Write ( 33 , 20 , "R: " + lv_rraw_124 )
LCD.Write ( 33 , 35 , "G: " + lv_graw_124 )
LCD.Write ( 33 , 50 , "B: " + lv_braw_124 )
LCD.Write ( 33 , 70 , "Color: " + lv_color_124 )
LCD.Write ( 33 , 90 , "Value: " + lv_value_124 )
lv_color_134 = lv_color_124
f_leercolor_1 ()
EndSub
Sub f_rgbdetect4_2
Sensor.SetMode ( 4 , 4 )
lv_red_125 = 15
lv_yellow_125 = 60
lv_green_125 = 170
lv_blue_125 = 330
lv_valuenegro_125 = 10
lv_valueblanco_125 = 100
lv_rwhite_125 = 147
lv_gwhite_125 = 143
lv_bwhite_125 = 160
lv_hue_125 = 0
lv_sat_125 = 0
lv_value_125 = 0
lv_color_125 = 0
lv_rnorma_125 [ 0 ] = 0
lv_gnorma_125 [ 0 ] = 0
lv_bnorma_125 [ 0 ] = 0
lv_maxa_125 [ 0 ] = 0
LCD.Clear ()
For lv_j_125 = 1 To lv_reps_125 Step 1
lv_rgb_125 = Sensor.ReadRaw ( 4 , 3 )
lv_rraw_125 = lv_rgb_125 [ 0 ]
lv_graw_125 = lv_rgb_125 [ 1 ]
lv_braw_125 = lv_rgb_125 [ 2 ]
lv_rnorma_125 [ lv_j_125 ] = Math.Round ( lv_rraw_125 / lv_rwhite_125 * 255 )
lv_gnorma_125 [ lv_j_125 ] = Math.Round ( lv_graw_125 / lv_gwhite_125 * 255 )
lv_bnorma_125 [ lv_j_125 ] = Math.Round ( lv_braw_125 / lv_bwhite_125 * 255 )
lv_maxa_125 [ lv_j_125 ] = Math.Max ( Math.Max ( lv_rnorma_125 [ lv_j_125 ] , lv_gnorma_125 [ lv_j_125 ] ) , lv_bnorma_125 [ lv_j_125 ] )
Program.Delay ( 5 )
EndFor
For lv_j_125 = 1 To lv_reps_125 Step 2
lv_rnorm_125 = lv_rnorma_125 [ lv_j_125 ] + lv_rnorma_125 [ lv_j_125 + 1 ]
lv_gnorm_125 = lv_gnorma_125 [ lv_j_125 ] + lv_gnorma_125 [ lv_j_125 + 1 ]
lv_bnorm_125 = lv_bnorma_125 [ lv_j_125 ] + lv_bnorma_125 [ lv_j_125 + 1 ]
lv_max_125 = lv_maxa_125 [ lv_j_125 ] + lv_maxa_125 [ lv_j_125 + 1 ]
EndFor
lv_rnorm_125 = lv_rnorm_125 / lv_reps_125
lv_gnorm_125 = lv_gnorm_125 / lv_reps_125
lv_bnorm_125 = lv_bnorm_125 / lv_reps_125
lv_max_125 = lv_max_125 / lv_reps_125
lv_min_125 = Math.Min ( Math.Min ( lv_rnorm_125 , lv_gnorm_125 ) , lv_bnorm_125 )
If lv_max_125 = lv_min_125 Then
lv_hue_125 = 0
ElseIf lv_max_125 = lv_rnorm_125 Then
If lv_gnorm_125 >= lv_bnorm_125 Then
lv_hue_125 = 60 * ( lv_gnorm_125 - lv_bnorm_125 ) / ( lv_max_125 - lv_min_125 )
Else
lv_hue_125 = 60 * ( lv_gnorm_125 - lv_bnorm_125 ) / ( lv_max_125 - lv_min_125 ) + 360
EndIf
ElseIf lv_max_125 = lv_gnorm_125 Then
lv_hue_125 = 60 * ( lv_bnorm_125 - lv_rnorm_125 ) / ( lv_max_125 - lv_min_125 ) + 120
Else
lv_hue_125 = 60 * ( lv_rnorm_125 - lv_gnorm_125 ) / ( lv_max_125 - lv_min_125 ) + 240
EndIf
If lv_max_125 = 0 Then
lv_sat_125 = 0
Else
lv_sat_125 = 1 - lv_min_125 / lv_max_125
EndIf
lv_value_125 = lv_max_125
lv_rgbgrey_125 = ( lv_valueblanco_125 + lv_valuenegro_125 ) / 2
If lv_rnorm_125 + lv_gnorm_125 + lv_bnorm_125 <= 3 Then
lv_color_125 = 0
Else
If lv_sat_125 < 0.4 Then
If lv_value_125 > lv_rgbgrey_125 Then
lv_color_125 = 6
Else
lv_color_125 = 1
EndIf
Else
If lv_hue_125 >= 0 And lv_hue_125 < lv_red_125 Then
lv_color_125 = 5
ElseIf lv_hue_125 >= lv_red_125 And lv_hue_125 < lv_yellow_125 Then
lv_color_125 = 4
ElseIf lv_hue_125 >= lv_yellow_125 And lv_hue_125 < lv_green_125 Then
lv_color_125 = 3
ElseIf lv_hue_125 >= lv_green_125 And lv_hue_125 < lv_blue_125 Then
lv_color_125 = 2
Else
lv_color_125 = 5
EndIf
EndIf
EndIf
LCD.Write ( 33 , 20 , "R: " + lv_rraw_125 )
LCD.Write ( 33 , 35 , "G: " + lv_graw_125 )
LCD.Write ( 33 , 50 , "B: " + lv_braw_125 )
LCD.Write ( 33 , 70 , "Color: " + lv_color_125 )
LCD.Write ( 33 , 90 , "Value: " + lv_value_125 )
lv_color_134 = lv_color_125
f_leercolor_1 ()
EndSub
Sub f_leercolor_1
If lv_color_134 = 0 Then
Speaker.Play ( 100 , "WRO2023/Zero" )
ElseIf lv_color_134 = 1 Then
Speaker.Play ( 100 , "WRO2023/Black" )
ElseIf lv_color_134 = 2 Then
Speaker.Play ( 100 , "WRO2023/Blue" )
ElseIf lv_color_134 = 3 Then
Speaker.Play ( 100 , "WRO2023/Green" )
ElseIf lv_color_134 = 4 Then
Speaker.Play ( 100 , "WRO2023/Yellow" )
ElseIf lv_color_134 = 5 Then
Speaker.Play ( 100 , "WRO2023/Red" )
ElseIf lv_color_134 = 6 Then
Speaker.Play ( 100 , "WRO2023/White" )
ElseIf lv_color_134 = 7 Then
Speaker.Play ( 100 , "WRO2023/Brown" )
EndIf
EndSub
Sub f_coger_0
Program.Delay ( 150 )
lv_v_107 = 60
lv_aenc_107 = 50
f_bmovea_2 ()
lv_v_117 = 40
lv_aenc_117 = 0
f_bmoved_2 ()
gv_num_bloques = gv_num_bloques + 1
lv_v_107 = 80
lv_aenc_107 = 360
f_bmovea_2 ()
MotorAD.OffAndBrake ()
Program.Delay ( 100 )
lv_v_120 = - 60
lv_t_120 = 500
f_bmovedtimer_2 ()
lv_v_107 = 60
lv_aenc_107 = - 80
f_bmovea_2 ()
EndSub
Sub f_soltar_0
lv_v_107 = 60
lv_aenc_107 = 250
f_bmovea_2 ()
lv_v_117 = 40
lv_aenc_117 = - 70
f_bmoved_2 ()
gv_num_bloques = Math.Max ( 0 , gv_num_bloques - 4 )
lv_v_107 = 60
lv_aenc_107 = - 660
f_bmovea_2 ()
lv_velocidad_1 = - 30
lv_distancia_1 = 10
f_encoderrectomm_2 ()
lv_v_107 = 60
lv_aenc_107 = 0
f_bmovea_2 ()
EndSub
