DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_111
DATAF VLV_AENC_111
DATAF VLV_V_121
DATAF VLV_AENC_121
DATAF VLV_V1_38
DATAF VLV_V2_38
DATAF VLV_ANGLE_38
DATAF VLV_V1_37
DATAF VLV_V2_37
DATAF VLV_ANGLE_37
DATAF VLV_VELOCIDAD_77
DATAF VLV_KP_77
DATAF VLV_KI_77
DATAF VLV_KD_77
DATAF VLV_ENCODER_77
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V_107
DATAF VLV_AENC_107
DATAF VLV_V0_56
DATAF VLV_VMAX_56
DATAF VLV_KP_56
DATAF VLV_KI_56
DATAF VLV_KD_56
DATAF VLV_ACCELENCODER_56
DATAF VLV_ENCODER_56
DATAF VLV_VELOCIDAD_91
DATAF VLV_KP_91
DATAF VLV_KI_91
DATAF VLV_KD_91
DATAF VLV_READER_91
DATAF VLV_VELOCIDAD_78
DATAF VLV_KP_78
DATAF VLV_KI_78
DATAF VLV_KD_78
DATAF VLV_ENCODER_78
DATAF VLV_VELOCIDAD_2
DATAF VLV_DISTANCIA_2
DATAF VLV_VELOCIDAD_73
DATAF VLV_KP_73
DATAF VLV_KI_73
DATAF VLV_KD_73
DATAF VLV_VELOCIDAD_92
DATAF VLV_KP_92
DATAF VLV_KI_92
DATAF VLV_KD_92
DATAF VLV_READER_92
DATAF VLV_VELOCIDAD_7
DATAF VLV_SENS_7
DATAF VLV_VELOCIDAD_5
DATAF VLV_SENS_5
DATAF VLV_VELOCIDAD_15
DATAF VLV_TIEMPO_15
DATAF VLV_VELOCIDAD1_20
DATAF VLV_VELOCIDAD2_20
DATAF VLV_SENS_20
DATAF VLV_VELOCIDAD1_18
DATAF VLV_VELOCIDAD2_18
DATAF VLV_ENCODER_18
DATAF VLV_VELOCIDAD_85
DATAF VLV_KP_85
DATAF VLV_KI_85
DATAF VLV_KD_85
DATAF VLV_ENCODER_85
DATAF VLV_VELOCIDAD_86
DATAF VLV_KP_86
DATAF VLV_KI_86
DATAF VLV_KD_86
DATAF VLV_ENCODER_86
DATAF VLV_VELOCIDAD_8
DATAF VLV_SENS_8
DATAF VLV_V0_58
DATAF VLV_VMAX_58
DATAF VLV_KP_58
DATAF VLV_KI_58
DATAF VLV_KD_58
DATAF VLV_ACCELENCODER_58
DATAF VLV_VELOCIDAD_74
DATAF VLV_KP_74
DATAF VLV_KI_74
DATAF VLV_KD_74
DATAF VLV_VMAX_100
DATAF VLV_KP_100
DATAF VLV_KI_100
DATAF VLV_KD_100
DATAF VLV_COLOR_134
DATAF VLV_REPS_122
DATAF VLV_COLOR_122
DATAF VLV_REPS_123
DATAF VLV_COLOR_123
DATAF VLV_REPS_124
DATAF VLV_COLOR_124
DATAF VLV_REPS_125
DATAF VLV_COLOR_125
DATAF VLV_V_117
DATAF VLV_AENC_117
DATAF VLV_V_120
DATAF VLV_T_120
DATAF VLV_COLOR_126
DATAF VLV_COLOR_127
DATAF VLV_COLOR_128
DATAF VLV_COLOR_129
DATAF VLV_READ_138
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DIAMETER
DATAF VGV_CENTRO
DATAF VGV_NUM_BLOQUES
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_CORRECCION
DATAF VGV_G1
DATAF VGV_TIEMPOHASTALINEA
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAF VLV_DIAMETRO_2
DATAF VLV_ENC_2
DATAF VLV_START_B_2
DATAF VLV_START_C_2
DATAF VLV_ENCODER_C_2
DATAF VLV_ENCODER_B_2
DATAF VLV_ERROR_2
DATAF VLV_PROPORCIAL_2
DATAF VLV_START_B_5
DATAF VLV_START_C_5
DATAF VLV_ENCODER_B_5
DATAF VLV_ENCODER_C_5
DATAF VLV_ERROR_5
DATAF VLV_PROPORCIAL_5
DATAF VLV_START_B_7
DATAF VLV_START_C_7
DATAF VLV_ENCODER_B_7
DATAF VLV_ENCODER_C_7
DATAF VLV_ERROR_7
DATAF VLV_PROPORCIAL_7
DATAF VLV_START_B_8
DATAF VLV_START_C_8
DATAF VLV_ENCODER_B_8
DATAF VLV_ENCODER_C_8
DATAF VLV_ERROR_8
DATAF VLV_PROPORCIAL_8
DATAF VLV_START_B_15
DATAF VLV_START_C_15
DATAF VLV_ENCODER_B_15
DATAF VLV_ENCODER_C_15
DATAF VLV_ERROR_15
DATAF VLV_PROPORCIAL_15
DATAF VLV_DIAMETRO_18
DATAF VLV_DISTANCIA_18
DATAS VLV_I_37 252
DATAS VLV_D_37 252
DATAF VLV_SIGNO_37
DATAF VLV_VMIN_37
DATAF VLV_VMAX_37
DATAF VLV_ENCODR_37
DATAS VLV_I_38 252
DATAS VLV_D_38 252
DATAF VLV_SIGNO_38
DATAF VLV_VMIN_38
DATAF VLV_VMAX_38
DATAF VLV_ENCODR_38
DATAS VLV_I_56 252
DATAS VLV_D_56 252
DATAF VLV_U_56
DATAF VLV_ERROR_56
DATAF VLV_OLDERROR_56
DATAF VLV_ERRSUM_56
DATAF VLV_VEL_56
DATAF VLV_SENTIDO_56
DATAS VLV_I_58 252
DATAS VLV_D_58 252
DATAF VLV_U_58
DATAF VLV_ERROR_58
DATAF VLV_OLDERROR_58
DATAF VLV_ERRSUM_58
DATAF VLV_VEL_58
DATAF VLV_SENTIDO_58
DATAS VLV_I_73 252
DATAS VLV_D_73 252
DATAF VLV_ERROR_73
DATAF VLV_OLDERROR_73
DATAF VLV_ERRSUM_73
DATAF VLV_U_73
DATAF VLV_SENTIDO_73
DATAS VLV_I_74 252
DATAS VLV_D_74 252
DATAF VLV_ERROR_74
DATAF VLV_OLDERROR_74
DATAF VLV_ERRSUM_74
DATAF VLV_U_74
DATAF VLV_SENTIDO_74
DATAS VLV_I_77 252
DATAS VLV_D_77 252
DATAF VLV_ERROR_77
DATAF VLV_OLDERROR_77
DATAF VLV_ERRSUM_77
DATAF VLV_U_77
DATAF VLV_SENTIDO_77
DATAF VLV_START_C_77
DATAF VLV_ENCODER_C_77
DATAS VLV_I_78 252
DATAS VLV_D_78 252
DATAF VLV_ERROR_78
DATAF VLV_OLDERROR_78
DATAF VLV_ERRSUM_78
DATAF VLV_U_78
DATAF VLV_SENTIDO_78
DATAF VLV_START_C_78
DATAF VLV_ENCODER_C_78
DATAS VLV_I_85 252
DATAS VLV_D_85 252
DATAF VLV_ERROR_85
DATAF VLV_OLDERROR_85
DATAF VLV_ERRSUM_85
DATAF VLV_U_85
DATAF VLV_SENTIDO_85
DATAF VLV_START_C_85
DATAF VLV_ENCODER_C_85
DATAS VLV_I_86 252
DATAS VLV_D_86 252
DATAF VLV_ERROR_86
DATAF VLV_OLDERROR_86
DATAF VLV_ERRSUM_86
DATAF VLV_U_86
DATAF VLV_SENTIDO_86
DATAF VLV_START_C_86
DATAF VLV_ENCODER_C_86
DATAS VLV_I_91 252
DATAS VLV_D_91 252
DATAF VLV_ERROR_91
DATAF VLV_OLDERROR_91
DATAF VLV_ERRSUM_91
DATAF VLV_U_91
DATAF VLV_SENTIDO_91
DATAF VLV_READER1_91
DATAF VLV_READER2_91
DATAS VLV_I_92 252
DATAS VLV_D_92 252
DATAF VLV_ERROR_92
DATAF VLV_OLDERROR_92
DATAF VLV_ERRSUM_92
DATAF VLV_U_92
DATAF VLV_SENTIDO_92
DATAF VLV_READER1_92
DATAF VLV_READER2_92
DATAS VLV_I_100 252
DATAS VLV_D_100 252
DATAF VLV_V0_100
DATAF VLV_ACCELENCODER_100
DATAF VLV_U_100
DATAF VLV_ERRSUM_100
DATAF VLV_OLDERROR_100
DATAF VLV_VEL_100
DATAF VLV_SENTIDO_100
DATAF VLV_ERROR_100
DATAF VLV_ENCDIFF_107
DATAF VLV_SIGNO_107
DATAF VLV_ENCDIFF_111
DATAF VLV_SIGNO_111
DATAF VLV_SAFETYTIMER_111
DATAF VLV_ENCDIFF_117
DATAF VLV_SIGNO_117
DATAF VLV_ENCDIFF_121
DATAF VLV_SIGNO_121
DATAF VLV_SAFETYTIMER_121
DATAF VLV_RED_122
DATAF VLV_YELLOW_122
DATAF VLV_GREEN_122
DATAF VLV_BLUE_122
DATAF VLV_VALUENEGRO_122
DATAF VLV_VALUEBLANCO_122
DATAF VLV_RWHITE_122
DATAF VLV_GWHITE_122
DATAF VLV_BWHITE_122
DATAF VLV_HUE_122
DATAF VLV_SAT_122
DATAF VLV_VALUE_122
ARRAY16 VLV_RNORMA_122 2
ARRAY16 VLV_GNORMA_122 2
ARRAY16 VLV_BNORMA_122 2
ARRAY16 VLV_MAXA_122 2
DATAF VLV_J_122
ARRAY16 VLV_RGB_122 2
DATAF VLV_RRAW_122
DATAF VLV_GRAW_122
DATAF VLV_BRAW_122
DATAF VLV_RNORM_122
DATAF VLV_GNORM_122
DATAF VLV_BNORM_122
DATAF VLV_MAX_122
DATAF VLV_MIN_122
DATAF VLV_RGBGREY_122
DATAF VLV_RED_123
DATAF VLV_YELLOW_123
DATAF VLV_GREEN_123
DATAF VLV_BLUE_123
DATAF VLV_VALUENEGRO_123
DATAF VLV_VALUEBLANCO_123
DATAF VLV_RWHITE_123
DATAF VLV_GWHITE_123
DATAF VLV_BWHITE_123
DATAF VLV_HUE_123
DATAF VLV_SAT_123
DATAF VLV_VALUE_123
ARRAY16 VLV_RNORMA_123 2
ARRAY16 VLV_GNORMA_123 2
ARRAY16 VLV_BNORMA_123 2
ARRAY16 VLV_MAXA_123 2
DATAF VLV_J_123
ARRAY16 VLV_RGB_123 2
DATAF VLV_RRAW_123
DATAF VLV_GRAW_123
DATAF VLV_BRAW_123
DATAF VLV_RNORM_123
DATAF VLV_GNORM_123
DATAF VLV_BNORM_123
DATAF VLV_MAX_123
DATAF VLV_MIN_123
DATAF VLV_RGBGREY_123
DATAF VLV_RED_124
DATAF VLV_YELLOW_124
DATAF VLV_GREEN_124
DATAF VLV_BLUE_124
DATAF VLV_VALUENEGRO_124
DATAF VLV_VALUEBLANCO_124
DATAF VLV_RWHITE_124
DATAF VLV_GWHITE_124
DATAF VLV_BWHITE_124
DATAF VLV_HUE_124
DATAF VLV_SAT_124
DATAF VLV_VALUE_124
ARRAY16 VLV_RNORMA_124 2
ARRAY16 VLV_GNORMA_124 2
ARRAY16 VLV_BNORMA_124 2
ARRAY16 VLV_MAXA_124 2
DATAF VLV_J_124
ARRAY16 VLV_RGB_124 2
DATAF VLV_RRAW_124
DATAF VLV_GRAW_124
DATAF VLV_BRAW_124
DATAF VLV_RNORM_124
DATAF VLV_GNORM_124
DATAF VLV_BNORM_124
DATAF VLV_MAX_124
DATAF VLV_MIN_124
DATAF VLV_RGBGREY_124
DATAF VLV_RED_125
DATAF VLV_YELLOW_125
DATAF VLV_GREEN_125
DATAF VLV_BLUE_125
DATAF VLV_VALUENEGRO_125
DATAF VLV_VALUEBLANCO_125
DATAF VLV_RWHITE_125
DATAF VLV_GWHITE_125
DATAF VLV_BWHITE_125
DATAF VLV_HUE_125
DATAF VLV_SAT_125
DATAF VLV_VALUE_125
ARRAY16 VLV_RNORMA_125 2
ARRAY16 VLV_GNORMA_125 2
ARRAY16 VLV_BNORMA_125 2
ARRAY16 VLV_MAXA_125 2
DATAF VLV_J_125
ARRAY16 VLV_RGB_125 2
DATAF VLV_RRAW_125
DATAF VLV_GRAW_125
DATAF VLV_BRAW_125
DATAF VLV_RNORM_125
DATAF VLV_GNORM_125
DATAF VLV_BNORM_125
DATAF VLV_MAX_125
DATAF VLV_MIN_125
DATAF VLV_RGBGREY_125
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0
DATA32 RUNCOUNTER_F_COLOCARD_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_ENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_91
    MOVEF_F 0.0 VLV_KP_91
    MOVEF_F 0.0 VLV_KI_91
    MOVEF_F 0.0 VLV_KD_91
    MOVEF_F 0.0 VLV_READER_91
    MOVEF_F 0.0 VLV_VELOCIDAD_78
    MOVEF_F 0.0 VLV_KP_78
    MOVEF_F 0.0 VLV_KI_78
    MOVEF_F 0.0 VLV_KD_78
    MOVEF_F 0.0 VLV_ENCODER_78
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VELOCIDAD_92
    MOVEF_F 0.0 VLV_KP_92
    MOVEF_F 0.0 VLV_KI_92
    MOVEF_F 0.0 VLV_KD_92
    MOVEF_F 0.0 VLV_READER_92
    MOVEF_F 0.0 VLV_VELOCIDAD_7
    MOVEF_F 0.0 VLV_SENS_7
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VELOCIDAD_15
    MOVEF_F 0.0 VLV_TIEMPO_15
    MOVEF_F 0.0 VLV_VELOCIDAD1_20
    MOVEF_F 0.0 VLV_VELOCIDAD2_20
    MOVEF_F 0.0 VLV_SENS_20
    MOVEF_F 0.0 VLV_VELOCIDAD1_18
    MOVEF_F 0.0 VLV_VELOCIDAD2_18
    MOVEF_F 0.0 VLV_ENCODER_18
    MOVEF_F 0.0 VLV_VELOCIDAD_85
    MOVEF_F 0.0 VLV_KP_85
    MOVEF_F 0.0 VLV_KI_85
    MOVEF_F 0.0 VLV_KD_85
    MOVEF_F 0.0 VLV_ENCODER_85
    MOVEF_F 0.0 VLV_VELOCIDAD_86
    MOVEF_F 0.0 VLV_KP_86
    MOVEF_F 0.0 VLV_KI_86
    MOVEF_F 0.0 VLV_KD_86
    MOVEF_F 0.0 VLV_ENCODER_86
    MOVEF_F 0.0 VLV_VELOCIDAD_8
    MOVEF_F 0.0 VLV_SENS_8
    MOVEF_F 0.0 VLV_V0_58
    MOVEF_F 0.0 VLV_VMAX_58
    MOVEF_F 0.0 VLV_KP_58
    MOVEF_F 0.0 VLV_KI_58
    MOVEF_F 0.0 VLV_KD_58
    MOVEF_F 0.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_VELOCIDAD_74
    MOVEF_F 0.0 VLV_KP_74
    MOVEF_F 0.0 VLV_KI_74
    MOVEF_F 0.0 VLV_KD_74
    MOVEF_F 0.0 VLV_VMAX_100
    MOVEF_F 0.0 VLV_KP_100
    MOVEF_F 0.0 VLV_KI_100
    MOVEF_F 0.0 VLV_KD_100
    MOVEF_F 0.0 VLV_COLOR_134
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_125
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_T_120
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_COLOR_129
    MOVEF_F 0.0 VLV_READ_138
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_TIEMPOHASTALINEA
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    MOVEF_F 0.0 VLV_DIAMETRO_2
    MOVEF_F 0.0 VLV_ENC_2
    MOVEF_F 0.0 VLV_START_B_2
    MOVEF_F 0.0 VLV_START_C_2
    MOVEF_F 0.0 VLV_ENCODER_C_2
    MOVEF_F 0.0 VLV_ENCODER_B_2
    MOVEF_F 0.0 VLV_ERROR_2
    MOVEF_F 0.0 VLV_PROPORCIAL_2
    MOVEF_F 0.0 VLV_START_B_5
    MOVEF_F 0.0 VLV_START_C_5
    MOVEF_F 0.0 VLV_ENCODER_B_5
    MOVEF_F 0.0 VLV_ENCODER_C_5
    MOVEF_F 0.0 VLV_ERROR_5
    MOVEF_F 0.0 VLV_PROPORCIAL_5
    MOVEF_F 0.0 VLV_START_B_7
    MOVEF_F 0.0 VLV_START_C_7
    MOVEF_F 0.0 VLV_ENCODER_B_7
    MOVEF_F 0.0 VLV_ENCODER_C_7
    MOVEF_F 0.0 VLV_ERROR_7
    MOVEF_F 0.0 VLV_PROPORCIAL_7
    MOVEF_F 0.0 VLV_START_B_8
    MOVEF_F 0.0 VLV_START_C_8
    MOVEF_F 0.0 VLV_ENCODER_B_8
    MOVEF_F 0.0 VLV_ENCODER_C_8
    MOVEF_F 0.0 VLV_ERROR_8
    MOVEF_F 0.0 VLV_PROPORCIAL_8
    MOVEF_F 0.0 VLV_START_B_15
    MOVEF_F 0.0 VLV_START_C_15
    MOVEF_F 0.0 VLV_ENCODER_B_15
    MOVEF_F 0.0 VLV_ENCODER_C_15
    MOVEF_F 0.0 VLV_ERROR_15
    MOVEF_F 0.0 VLV_PROPORCIAL_15
    MOVEF_F 0.0 VLV_DIAMETRO_18
    MOVEF_F 0.0 VLV_DISTANCIA_18
    STRINGS DUPLICATE '' VLV_I_37
    STRINGS DUPLICATE '' VLV_D_37
    MOVEF_F 0.0 VLV_SIGNO_37
    MOVEF_F 0.0 VLV_VMIN_37
    MOVEF_F 0.0 VLV_VMAX_37
    MOVEF_F 0.0 VLV_ENCODR_37
    STRINGS DUPLICATE '' VLV_I_38
    STRINGS DUPLICATE '' VLV_D_38
    MOVEF_F 0.0 VLV_SIGNO_38
    MOVEF_F 0.0 VLV_VMIN_38
    MOVEF_F 0.0 VLV_VMAX_38
    MOVEF_F 0.0 VLV_ENCODR_38
    STRINGS DUPLICATE '' VLV_I_56
    STRINGS DUPLICATE '' VLV_D_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    MOVEF_F 0.0 VLV_VEL_56
    MOVEF_F 0.0 VLV_SENTIDO_56
    STRINGS DUPLICATE '' VLV_I_58
    STRINGS DUPLICATE '' VLV_D_58
    MOVEF_F 0.0 VLV_U_58
    MOVEF_F 0.0 VLV_ERROR_58
    MOVEF_F 0.0 VLV_OLDERROR_58
    MOVEF_F 0.0 VLV_ERRSUM_58
    MOVEF_F 0.0 VLV_VEL_58
    MOVEF_F 0.0 VLV_SENTIDO_58
    STRINGS DUPLICATE '' VLV_I_73
    STRINGS DUPLICATE '' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MOVEF_F 0.0 VLV_SENTIDO_73
    STRINGS DUPLICATE '' VLV_I_74
    STRINGS DUPLICATE '' VLV_D_74
    MOVEF_F 0.0 VLV_ERROR_74
    MOVEF_F 0.0 VLV_OLDERROR_74
    MOVEF_F 0.0 VLV_ERRSUM_74
    MOVEF_F 0.0 VLV_U_74
    MOVEF_F 0.0 VLV_SENTIDO_74
    STRINGS DUPLICATE '' VLV_I_77
    STRINGS DUPLICATE '' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MOVEF_F 0.0 VLV_SENTIDO_77
    MOVEF_F 0.0 VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
    STRINGS DUPLICATE '' VLV_I_78
    STRINGS DUPLICATE '' VLV_D_78
    MOVEF_F 0.0 VLV_ERROR_78
    MOVEF_F 0.0 VLV_OLDERROR_78
    MOVEF_F 0.0 VLV_ERRSUM_78
    MOVEF_F 0.0 VLV_U_78
    MOVEF_F 0.0 VLV_SENTIDO_78
    MOVEF_F 0.0 VLV_START_C_78
    MOVEF_F 0.0 VLV_ENCODER_C_78
    STRINGS DUPLICATE '' VLV_I_85
    STRINGS DUPLICATE '' VLV_D_85
    MOVEF_F 0.0 VLV_ERROR_85
    MOVEF_F 0.0 VLV_OLDERROR_85
    MOVEF_F 0.0 VLV_ERRSUM_85
    MOVEF_F 0.0 VLV_U_85
    MOVEF_F 0.0 VLV_SENTIDO_85
    MOVEF_F 0.0 VLV_START_C_85
    MOVEF_F 0.0 VLV_ENCODER_C_85
    STRINGS DUPLICATE '' VLV_I_86
    STRINGS DUPLICATE '' VLV_D_86
    MOVEF_F 0.0 VLV_ERROR_86
    MOVEF_F 0.0 VLV_OLDERROR_86
    MOVEF_F 0.0 VLV_ERRSUM_86
    MOVEF_F 0.0 VLV_U_86
    MOVEF_F 0.0 VLV_SENTIDO_86
    MOVEF_F 0.0 VLV_START_C_86
    MOVEF_F 0.0 VLV_ENCODER_C_86
    STRINGS DUPLICATE '' VLV_I_91
    STRINGS DUPLICATE '' VLV_D_91
    MOVEF_F 0.0 VLV_ERROR_91
    MOVEF_F 0.0 VLV_OLDERROR_91
    MOVEF_F 0.0 VLV_ERRSUM_91
    MOVEF_F 0.0 VLV_U_91
    MOVEF_F 0.0 VLV_SENTIDO_91
    MOVEF_F 0.0 VLV_READER1_91
    MOVEF_F 0.0 VLV_READER2_91
    STRINGS DUPLICATE '' VLV_I_92
    STRINGS DUPLICATE '' VLV_D_92
    MOVEF_F 0.0 VLV_ERROR_92
    MOVEF_F 0.0 VLV_OLDERROR_92
    MOVEF_F 0.0 VLV_ERRSUM_92
    MOVEF_F 0.0 VLV_U_92
    MOVEF_F 0.0 VLV_SENTIDO_92
    MOVEF_F 0.0 VLV_READER1_92
    MOVEF_F 0.0 VLV_READER2_92
    STRINGS DUPLICATE '' VLV_I_100
    STRINGS DUPLICATE '' VLV_D_100
    MOVEF_F 0.0 VLV_V0_100
    MOVEF_F 0.0 VLV_ACCELENCODER_100
    MOVEF_F 0.0 VLV_U_100
    MOVEF_F 0.0 VLV_ERRSUM_100
    MOVEF_F 0.0 VLV_OLDERROR_100
    MOVEF_F 0.0 VLV_VEL_100
    MOVEF_F 0.0 VLV_SENTIDO_100
    MOVEF_F 0.0 VLV_ERROR_100
    MOVEF_F 0.0 VLV_ENCDIFF_107
    MOVEF_F 0.0 VLV_SIGNO_107
    MOVEF_F 0.0 VLV_ENCDIFF_111
    MOVEF_F 0.0 VLV_SIGNO_111
    MOVEF_F 0.0 VLV_SAFETYTIMER_111
    MOVEF_F 0.0 VLV_ENCDIFF_117
    MOVEF_F 0.0 VLV_SIGNO_117
    MOVEF_F 0.0 VLV_ENCDIFF_121
    MOVEF_F 0.0 VLV_SIGNO_121
    MOVEF_F 0.0 VLV_SAFETYTIMER_121
    MOVEF_F 0.0 VLV_RED_122
    MOVEF_F 0.0 VLV_YELLOW_122
    MOVEF_F 0.0 VLV_GREEN_122
    MOVEF_F 0.0 VLV_BLUE_122
    MOVEF_F 0.0 VLV_VALUENEGRO_122
    MOVEF_F 0.0 VLV_VALUEBLANCO_122
    MOVEF_F 0.0 VLV_RWHITE_122
    MOVEF_F 0.0 VLV_GWHITE_122
    MOVEF_F 0.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_MAXA_122
    MOVEF_F 0.0 VLV_J_122
    CALL ARRAYCREATE_FLOAT VLV_RGB_122
    MOVEF_F 0.0 VLV_RRAW_122
    MOVEF_F 0.0 VLV_GRAW_122
    MOVEF_F 0.0 VLV_BRAW_122
    MOVEF_F 0.0 VLV_RNORM_122
    MOVEF_F 0.0 VLV_GNORM_122
    MOVEF_F 0.0 VLV_BNORM_122
    MOVEF_F 0.0 VLV_MAX_122
    MOVEF_F 0.0 VLV_MIN_122
    MOVEF_F 0.0 VLV_RGBGREY_122
    MOVEF_F 0.0 VLV_RED_123
    MOVEF_F 0.0 VLV_YELLOW_123
    MOVEF_F 0.0 VLV_GREEN_123
    MOVEF_F 0.0 VLV_BLUE_123
    MOVEF_F 0.0 VLV_VALUENEGRO_123
    MOVEF_F 0.0 VLV_VALUEBLANCO_123
    MOVEF_F 0.0 VLV_RWHITE_123
    MOVEF_F 0.0 VLV_GWHITE_123
    MOVEF_F 0.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_MAXA_123
    MOVEF_F 0.0 VLV_J_123
    CALL ARRAYCREATE_FLOAT VLV_RGB_123
    MOVEF_F 0.0 VLV_RRAW_123
    MOVEF_F 0.0 VLV_GRAW_123
    MOVEF_F 0.0 VLV_BRAW_123
    MOVEF_F 0.0 VLV_RNORM_123
    MOVEF_F 0.0 VLV_GNORM_123
    MOVEF_F 0.0 VLV_BNORM_123
    MOVEF_F 0.0 VLV_MAX_123
    MOVEF_F 0.0 VLV_MIN_123
    MOVEF_F 0.0 VLV_RGBGREY_123
    MOVEF_F 0.0 VLV_RED_124
    MOVEF_F 0.0 VLV_YELLOW_124
    MOVEF_F 0.0 VLV_GREEN_124
    MOVEF_F 0.0 VLV_BLUE_124
    MOVEF_F 0.0 VLV_VALUENEGRO_124
    MOVEF_F 0.0 VLV_VALUEBLANCO_124
    MOVEF_F 0.0 VLV_RWHITE_124
    MOVEF_F 0.0 VLV_GWHITE_124
    MOVEF_F 0.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_MAXA_124
    MOVEF_F 0.0 VLV_J_124
    CALL ARRAYCREATE_FLOAT VLV_RGB_124
    MOVEF_F 0.0 VLV_RRAW_124
    MOVEF_F 0.0 VLV_GRAW_124
    MOVEF_F 0.0 VLV_BRAW_124
    MOVEF_F 0.0 VLV_RNORM_124
    MOVEF_F 0.0 VLV_GNORM_124
    MOVEF_F 0.0 VLV_BNORM_124
    MOVEF_F 0.0 VLV_MAX_124
    MOVEF_F 0.0 VLV_MIN_124
    MOVEF_F 0.0 VLV_RGBGREY_124
    MOVEF_F 0.0 VLV_RED_125
    MOVEF_F 0.0 VLV_YELLOW_125
    MOVEF_F 0.0 VLV_GREEN_125
    MOVEF_F 0.0 VLV_BLUE_125
    MOVEF_F 0.0 VLV_VALUENEGRO_125
    MOVEF_F 0.0 VLV_VALUEBLANCO_125
    MOVEF_F 0.0 VLV_RWHITE_125
    MOVEF_F 0.0 VLV_GWHITE_125
    MOVEF_F 0.0 VLV_BWHITE_125
    MOVEF_F 0.0 VLV_HUE_125
    MOVEF_F 0.0 VLV_SAT_125
    MOVEF_F 0.0 VLV_VALUE_125
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_MAXA_125
    MOVEF_F 0.0 VLV_J_125
    CALL ARRAYCREATE_FLOAT VLV_RGB_125
    MOVEF_F 0.0 VLV_RRAW_125
    MOVEF_F 0.0 VLV_GRAW_125
    MOVEF_F 0.0 VLV_BRAW_125
    MOVEF_F 0.0 VLV_RNORM_125
    MOVEF_F 0.0 VLV_GNORM_125
    MOVEF_F 0.0 VLV_BNORM_125
    MOVEF_F 0.0 VLV_MAX_125
    MOVEF_F 0.0 VLV_MIN_125
    MOVEF_F 0.0 VLV_RGBGREY_125
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    MOVE32_32 0 RUNCOUNTER_F_COLOCARD_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 1
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_COLOCARD_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_COLOCARD_0 2
    CALL GETANDINC32 RUNCOUNTER_F_COLOCARD_0 -1 RUNCOUNTER_F_COLOCARD_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
subcall PROGRAM_F_COLOCARD_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1446
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1446:
    JR_NEQ32 SUBPROGRAM 1 dispatch1447
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1447:
    JR_NEQ32 SUBPROGRAM 2 dispatch1448
    WRITE32 ENDSUB_F_COLOCARD_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COLOCARD_0
  dispatch1448:
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_ENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_91
    MOVEF_F 0.0 VLV_KP_91
    MOVEF_F 0.0 VLV_KI_91
    MOVEF_F 0.0 VLV_KD_91
    MOVEF_F 0.0 VLV_READER_91
    MOVEF_F 0.0 VLV_VELOCIDAD_78
    MOVEF_F 0.0 VLV_KP_78
    MOVEF_F 0.0 VLV_KI_78
    MOVEF_F 0.0 VLV_KD_78
    MOVEF_F 0.0 VLV_ENCODER_78
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VELOCIDAD_92
    MOVEF_F 0.0 VLV_KP_92
    MOVEF_F 0.0 VLV_KI_92
    MOVEF_F 0.0 VLV_KD_92
    MOVEF_F 0.0 VLV_READER_92
    MOVEF_F 0.0 VLV_VELOCIDAD_7
    MOVEF_F 0.0 VLV_SENS_7
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VELOCIDAD_15
    MOVEF_F 0.0 VLV_TIEMPO_15
    MOVEF_F 0.0 VLV_VELOCIDAD1_20
    MOVEF_F 0.0 VLV_VELOCIDAD2_20
    MOVEF_F 0.0 VLV_SENS_20
    MOVEF_F 0.0 VLV_VELOCIDAD1_18
    MOVEF_F 0.0 VLV_VELOCIDAD2_18
    MOVEF_F 0.0 VLV_ENCODER_18
    MOVEF_F 0.0 VLV_VELOCIDAD_85
    MOVEF_F 0.0 VLV_KP_85
    MOVEF_F 0.0 VLV_KI_85
    MOVEF_F 0.0 VLV_KD_85
    MOVEF_F 0.0 VLV_ENCODER_85
    MOVEF_F 0.0 VLV_VELOCIDAD_86
    MOVEF_F 0.0 VLV_KP_86
    MOVEF_F 0.0 VLV_KI_86
    MOVEF_F 0.0 VLV_KD_86
    MOVEF_F 0.0 VLV_ENCODER_86
    MOVEF_F 0.0 VLV_VELOCIDAD_8
    MOVEF_F 0.0 VLV_SENS_8
    MOVEF_F 0.0 VLV_V0_58
    MOVEF_F 0.0 VLV_VMAX_58
    MOVEF_F 0.0 VLV_KP_58
    MOVEF_F 0.0 VLV_KI_58
    MOVEF_F 0.0 VLV_KD_58
    MOVEF_F 0.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_VELOCIDAD_74
    MOVEF_F 0.0 VLV_KP_74
    MOVEF_F 0.0 VLV_KI_74
    MOVEF_F 0.0 VLV_KD_74
    MOVEF_F 0.0 VLV_VMAX_100
    MOVEF_F 0.0 VLV_KP_100
    MOVEF_F 0.0 VLV_KI_100
    MOVEF_F 0.0 VLV_KD_100
    MOVEF_F 0.0 VLV_COLOR_134
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_125
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_T_120
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_COLOR_129
    MOVEF_F 0.0 VLV_READ_138
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_TIEMPOHASTALINEA
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.12 VGV_KP
    MOVEF_F 0.0001 VGV_KI
    MOVEF_F 2.0 VGV_KD
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.44444444444444 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB0 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB0:
    DATA32 tmp1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp1
    JR_NEQ32 0 tmp1 alreadylaunched1
    OBJECT_START TF_DISPLAY_0
  alreadylaunched1:
    DATA32 tmp2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp2
    JR_NEQ32 0 tmp2 alreadylaunched2
    OBJECT_START TF_STOP_0
  alreadylaunched2:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB3 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB3:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 1.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 4.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    DATA8 layer7
	DATA8 no7
	DATA8 mode87
	
	MOVEF_8 4.0 no7
	SUB8 no7 1 no7
	DIV8 no7 4 layer7
	MATH MOD8 no7 4 no7

	MOVEF_8 0.0 mode87
	
	INPUT_DEVICE READY_RAW layer7 no7 0 mode87 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while9:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 800.0 endwhile9
  whilebody9:
    MOVEF_8 85.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 -80.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 800.0 whilebody9
  endwhile9:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    DATA32 milliseconds15
	MOVEF_32 100.0 milliseconds15
	DATA32 timer15
	TIMER_WAIT milliseconds15 timer15
	TIMER_READY timer15
    DATA32 tmp16
    CALL GETANDINC32 RUNCOUNTER_F_COLOCARD_0 1  RUNCOUNTER_F_COLOCARD_0 tmp16
    JR_NEQ32 0 tmp16 alreadylaunched16
    OBJECT_START TF_COLOCARD_0
  alreadylaunched16:
    WRITE32 ENDSUB_F_COLOCARA_0:CALLSUB17 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COLOCARA_0
CALLSUB17:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds20
	MOVEF_32 100.0 milliseconds20
	DATA32 timer20
	TIMER_WAIT milliseconds20 timer20
	TIMER_READY timer20
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_COLOCARA_0:
    CALL MOTOR.SCHEDULE 'A' -50.0 0.0 350.0 0.0 'True' 

	DATA8 layer21
	DATA8 nos21
	DATA8 busy21
	CALL MOTORDECODEPORTSDESCRIPTOR 'A' layer21 nos21
	JR_EQ8 0 nos21 motornotbusy21
  motorwaiting21:
	OUTPUT_TEST layer21 nos21 busy21
	JR_EQ8 busy21 0 motornotbusy21
	SLEEP
	JR motorwaiting21
  motornotbusy21:
RETSUB_F_COLOCARA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COLOCARA_0:
SUB_F_COLOCARD_0:
    CALL MOTOR.SCHEDULE 'D' 90.0 0.0 550.0 0.0 'True' 

	DATA8 layer22
	DATA8 nos22
	DATA8 busy22
	CALL MOTORDECODEPORTSDESCRIPTOR 'D' layer22 nos22
	JR_EQ8 0 nos22 motornotbusy22
  motorwaiting22:
	OUTPUT_TEST layer22 nos22 busy22
	JR_EQ8 busy22 0 motornotbusy22
	SLEEP
	JR motorwaiting22
  motornotbusy22:
RETSUB_F_COLOCARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COLOCARD_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while23:
  whilebody23:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_NUM_BLOQUES '%g' 99 S.1
    CALL TEXT.APPEND 'Bloques: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf44
    DATA8 flag44
    DIVF F.2 0.05 tmpf44
    CP_EQF 0.0 0.05 flag44
    SELECTF flag44 0.0 tmpf44 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf52
    DATA8 flag52
    DIVF F.1 0.05 tmpf52
    CP_EQF 0.0 0.05 flag52
    SELECTF flag52 0.0 tmpf52 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds66
	MOVEF_32 50.0 milliseconds66
	DATA32 timer66
	TIMER_WAIT milliseconds66 timer66
	TIMER_READY timer66
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody23
  endwhile23:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_STOP_0:
  while69:
  whilebody69:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else70_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 60.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEASAFE_2:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEASAFE_2
CALLSUB75:
    MOVEF_F 60.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB76:
    PROGRAM_STOP -1
  else70_1:
  endif70:
    JR whilebody69
  endwhile69:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB78:
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 30.0 VLV_V2_38
    MOVEF_F 60.0 VLV_ANGLE_38
    WRITE32 ENDSUB_F_GUNIVENCMMF_3:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMMF_3
CALLSUB79:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 60.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB80:
    MOVEF_F 32.0 VLV_VELOCIDAD_77
    MULF VGV_KP 0.7 VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 16.5 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB82:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 96.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB83:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 5.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB84:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB85:
    MOVEF_F -20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB86:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB87:
    MOVEF_F 20.0 VLV_VELOCIDAD_77
    MULF VGV_KP 0.5 VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 9.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB89:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB90:
    MOVEF_F 15.0 VLV_VELOCIDAD_1
    MOVEF_F 6.25 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB91:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB92:
    MULF VGV_VELOCIDAD 0.4 VLV_V_107
    MOVEF_F -110.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB94:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB95:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB96:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 22.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB97:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    DATA32 milliseconds99
	MOVEF_32 200.0 milliseconds99
	DATA32 timer99
	TIMER_WAIT milliseconds99 timer99
	TIMER_READY timer99
    MOVEF_F 20.0 VLV_V0_56
    MOVEF_F 60.0 VLV_VMAX_56
    MOVEF_F VGV_KP VLV_KP_56
    MOVEF_F VGV_KI VLV_KI_56
    MOVEF_F VGV_KD VLV_KD_56
    MOVEF_F 7.0 VLV_ACCELENCODER_56
    MOVEF_F 7.0 VLV_ENCODER_56
    WRITE32 ENDSUB_F_SL14SIEF_7:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14SIEF_7
CALLSUB100:
    TIMER_READ timeMC4
    MOVEF_F 35.0 VLV_VELOCIDAD_91
    MOVEF_F VGV_KP VLV_KP_91
    MOVEF_F VGV_KI VLV_KI_91
    MOVEF_F VGV_KD VLV_KD_91
    MOVEF_F 3.0 VLV_READER_91
    WRITE32 ENDSUB_F_SL1SPIDCROSS_5:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_5
CALLSUB102:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB103:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp VGV_TIEMPOHASTALINEA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_TIEMPOHASTALINEA '%g' 99 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB108:
    MOVEF_F 40.0 VLV_VELOCIDAD_78
    MULF VGV_KP 1.3 VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 20.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB110:
    MOVEF_F 40.0 VLV_VELOCIDAD_2
    MOVEF_F 12.0 VLV_DISTANCIA_2
    WRITE32 ENDSUB_F_ENCODERRECTOMMF_2:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMMF_2
CALLSUB111:
    MOVEF_F 30.0 VLV_VELOCIDAD_73
    MULF VGV_KP 0.6 VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB113:
    JR_GTEQF VGV_TIEMPOHASTALINEA 850.0 else114_1
    WRITE32 ENDSUB_F_CASOPSOE_0:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASOPSOE_0
CALLSUB115:
    JR endif114
  else114_1:
    WRITE32 ENDSUB_F_CASOVOX_0:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASOVOX_0
CALLSUB116:
  else114_2:
  endif114:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 8.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB117:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 90.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB120:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_78
    MOVEF_F VGV_KP VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 3.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB122:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB124:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB126:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 90.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB129:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_78
    MOVEF_F VGV_KP VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 20.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB131:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_2
    MOVEF_F 15.0 VLV_DISTANCIA_2
    WRITE32 ENDSUB_F_ENCODERRECTOMMF_2:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMMF_2
CALLSUB133:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_73
    MOVEF_F VGV_KP VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB135:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB137:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB140:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 10.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB142:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 96.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB143:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 5.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB144:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB145:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB146:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 90.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB147:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 13.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB149:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 96.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB150:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB151:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB152:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB153:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_37
    MULF VGV_VELOCIDAD -0.2 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB156:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_91
    MOVEF_F VGV_KP VLV_KP_91
    MOVEF_F VGV_KI VLV_KI_91
    MOVEF_F VGV_KD VLV_KD_91
    MOVEF_F 4.0 VLV_READER_91
    WRITE32 ENDSUB_F_SL1SPIDCROSS_5:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_5
CALLSUB158:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB160:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 96.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB163:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 12.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB165:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB166:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB168:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 66.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB171:
    MULF VGV_VELOCIDAD 0.8 VLV_VELOCIDAD_1
    MOVEF_F 95.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB173:
    DATA32 milliseconds174
	MOVEF_32 250.0 milliseconds174
	DATA32 timer174
	TIMER_WAIT milliseconds174 timer174
	TIMER_READY timer174
    MOVEF_F 50.0 VLV_V_107
    MOVEF_F 200.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB175:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 155.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB178:
    MULF VGV_VELOCIDAD 0.8 VLV_VELOCIDAD_1
    MOVEF_F 50.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB180:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 91.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB183:
    MOVEF_F 30.0 VLV_VELOCIDAD_7
    MOVEF_F 1.0 VLV_SENS_7
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB184:
    MOVEF_F 20.0 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB185:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB187:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB190:
    DATA32 milliseconds191
	MOVEF_32 250.0 milliseconds191
	DATA32 timer191
	TIMER_WAIT milliseconds191 timer191
	TIMER_READY timer191
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_78
    MOVEF_F VGV_KP VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 10.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB193:
    MULF VGV_VELOCIDAD 0.5 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB195:
    MULF VGV_VELOCIDAD 0.7 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 20.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB197:
    DATA32 milliseconds198
	MOVEF_32 250.0 milliseconds198
	DATA32 timer198
	TIMER_WAIT milliseconds198 timer198
	TIMER_READY timer198
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 45.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB201:
    MOVEF_F 50.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB202:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 18.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB204:
    MOVEF_F 50.0 VLV_V_107
    MOVEF_F 200.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB205:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB207:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 125.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB210:
    MOVEF_F 50.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB211:
    MULF VGV_VELOCIDAD 0.7 VLV_VELOCIDAD_1
    MOVEF_F 35.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB213:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 42.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB216:
    MULF VGV_VELOCIDAD 0.8 VLV_VELOCIDAD_1
    MOVEF_F 50.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB218:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB220:
    MULF VGV_VELOCIDAD -0.05 VLV_V1_37
    MULF VGV_VELOCIDAD -0.6 VLV_V2_37
    MOVEF_F 130.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB223:
    MULF VGV_VELOCIDAD -0.6 VLV_VELOCIDAD_15
    MOVEF_F 500.0 VLV_TIEMPO_15
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB225:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB227:
    MULF VGV_VELOCIDAD -0.6 VLV_VELOCIDAD_15
    MOVEF_F 500.0 VLV_TIEMPO_15
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB229:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB231:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB234:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_7
    MOVEF_F 3.0 VLV_SENS_7
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB236:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB238:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 88.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB241:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_2
    MOVEF_F 20.0 VLV_DISTANCIA_2
    WRITE32 ENDSUB_F_ENCODERRECTOMMF_2:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMMF_2
CALLSUB243:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_37
    MULF VGV_VELOCIDAD 0.2 VLV_V2_37
    MOVEF_F 83.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB246:
    MOVEF_F 50.0 VLV_V_107
    MOVEF_F 230.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB247:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_2
    MOVEF_F 11.0 VLV_DISTANCIA_2
    WRITE32 ENDSUB_F_ENCODERRECTOMMF_2:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMMF_2
CALLSUB249:
    MULF VGV_VELOCIDAD 0.1 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB251:
    MOVEF_F 80.0 VLV_V_107
    MOVEF_F -700.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB252:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_37
    MULF VGV_VELOCIDAD -0.05 VLV_V2_37
    MOVEF_F 20.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB255:
    MULF VGV_VELOCIDAD -0.9 VLV_VELOCIDAD_1
    MOVEF_F 20.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB257:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 15.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB260:
    MULF VGV_VELOCIDAD 0.41 VLV_VELOCIDAD1_20
    MULF VGV_VELOCIDAD 0.35 VLV_VELOCIDAD2_20
    MOVEF_F 1.0 VLV_SENS_20
    WRITE32 ENDSUB_F_1NEGROGIROMMF_3:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGROGIROMMF_3
CALLSUB263:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD1_18
    MULF VGV_VELOCIDAD 0.45 VLV_VELOCIDAD2_18
    MOVEF_F 10.0 VLV_ENCODER_18
    WRITE32 ENDSUB_F_ENCODERGIROMMF_3:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMMF_3
CALLSUB266:
    MULF VGV_VELOCIDAD 0.6 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 35.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB268:
    MULF VGV_VELOCIDAD 0.5 VLV_VELOCIDAD_73
    MOVEF_F VGV_KP VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB270:
    WRITE32 ENDSUB_F_FINPRUEBA_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINPRUEBA_0
CALLSUB271:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_CASOPSOE_0:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB272:
    MOVEF_F 30.0 VLV_VELOCIDAD_85
    MOVEF_F VGV_KP VLV_KP_85
    MOVEF_F VGV_KI VLV_KI_85
    MOVEF_F VGV_KD VLV_KD_85
    MOVEF_F 26.5 VLV_ENCODER_85
    WRITE32 ENDSUB_F_SL31PIDENC_5:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENC_5
CALLSUB273:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB274:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB275:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB276:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB277:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB278:
    MOVEF_F 15.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 9.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB279:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB280:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB281:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB282:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB283:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 90.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB284:
    MOVEF_F 20.0 VLV_VELOCIDAD_78
    MOVEF_F VGV_KP VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 5.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB285:
    MOVEF_F 30.0 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB286:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 22.5 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB287:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_37
    MULF VGV_VELOCIDAD 0.2 VLV_V2_37
    MOVEF_F 100.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB290:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 13.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB292:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB293:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB295:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 90.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB298:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_86
    MULF VGV_KP 1.25 VLV_KP_86
    MOVEF_F VGV_KI VLV_KI_86
    MOVEF_F VGV_KD VLV_KD_86
    MOVEF_F 5.0 VLV_ENCODER_86
    WRITE32 ENDSUB_F_SL31PIDENCF_5:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENCF_5
CALLSUB301:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 4.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB303:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 1.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB305:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 90.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB308:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB310:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB311:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB312:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 91.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB313:
    MOVEF_F 15.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 10.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB314:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB315:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB316:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB317:
RETSUB_F_CASOPSOE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOPSOE_0:
SUB_F_CASOVOX_0:
    MULF VGV_VELOCIDAD 0.17 VLV_VELOCIDAD_1
    MOVEF_F 9.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB319:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB320:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB321:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB322:
    MOVEF_F 20.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 7.5 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB323:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 97.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB324:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB325:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB326:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 168.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB327:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 20.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB329:
    MOVEF_F 20.0 VLV_VELOCIDAD_8
    MOVEF_F 3.0 VLV_SENS_8
    WRITE32 ENDSUB_F_1BLANCORECTOMMF_2:CALLSUB330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMMF_2
CALLSUB330:
    MOVEF_F 30.0 VLV_VELOCIDAD_5
    MOVEF_F 3.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB331:
    DATA32 milliseconds332
	MOVEF_32 250.0 milliseconds332
	DATA32 timer332
	TIMER_WAIT milliseconds332 timer332
	TIMER_READY timer332
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 3.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB333:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB334:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 110.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB335:
    MOVEF_F 20.0 VLV_VELOCIDAD_8
    MOVEF_F 1.0 VLV_SENS_8
    WRITE32 ENDSUB_F_1BLANCORECTOMMF_2:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMMF_2
CALLSUB336:
    MOVEF_F 30.0 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB337:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 2.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB338:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 91.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB339:
    MOVEF_F 25.0 VLV_VELOCIDAD_78
    MOVEF_F VGV_KP VLV_KP_78
    MULF VGV_KI 1.5 VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 10.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB341:
    MOVEF_F 30.0 VLV_VELOCIDAD_2
    MOVEF_F 10.0 VLV_DISTANCIA_2
    WRITE32 ENDSUB_F_ENCODERRECTOMMF_2:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMMF_2
CALLSUB342:
    MOVEF_F 35.0 VLV_VELOCIDAD_73
    MULF VGV_KP 0.8 VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB344:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB346:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB347:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB349:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 91.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB352:
    MOVEF_F 20.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 9.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB353:
    DATA32 milliseconds354
	MOVEF_32 400.0 milliseconds354
	DATA32 timer354
	TIMER_WAIT milliseconds354 timer354
	TIMER_READY timer354
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB357:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 4.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB359:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB360:
    WRITE32 ENDSUB_F_FINPRUEBA_0:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINPRUEBA_0
CALLSUB361:
RETSUB_F_CASOVOX_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOVOX_0:
SUB_F_FINPRUEBA_0:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEASAFE_2:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEASAFE_2
CALLSUB364:
    MOVEF_F 20.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB365:
    PROGRAM_STOP -1
RETSUB_F_FINPRUEBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINPRUEBA_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf370
    DATA8 flag370
    DIVF F.1 F.2 tmpf370
    CP_EQF 0.0 F.2 flag370
    SELECTF flag370 0.0 tmpf370 F.0

    DATAF tmpf371
    DATA8 flag371
    DIVF F.0 VLV_DIAMETRO_1 tmpf371
    CP_EQF 0.0 VLV_DIAMETRO_1 flag371
    SELECTF flag371 0.0 tmpf371 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    DATAF tmpf374
    DATA8 flag374
    DIVF VGV_CORRECCION 30.0 tmpf374
    CP_EQF 0.0 30.0 flag374
    SELECTF flag374 0.0 tmpf374 F.2

    MULF F.2 VLV_VELOCIDAD_1 F.1
    ADDF F.0 F.1 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while380:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile380
  whilebody380:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 1.2 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody380
  endwhile380:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_ENCODERRECTOMMF_2:
    MULF VLV_VELOCIDAD_2 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_2
    MOVEF_F 5.6 VLV_DIAMETRO_2
    MULF VLV_DISTANCIA_2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf399
    DATA8 flag399
    DIVF F.1 F.2 tmpf399
    CP_EQF 0.0 F.2 flag399
    SELECTF flag399 0.0 tmpf399 F.0

    DATAF tmpf400
    DATA8 flag400
    DIVF F.0 VLV_DIAMETRO_2 tmpf400
    CP_EQF 0.0 VLV_DIAMETRO_2 flag400
    SELECTF flag400 0.0 tmpf400 VLV_ENC_2

    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_2
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
  while407:
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_GTEQF F.0 VLV_ENC_2 endwhile407
  whilebody407:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_2 VLV_ENCODER_B_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
    SUBF VLV_ENCODER_B_2 VLV_ENCODER_C_2 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_2
    MULF VLV_ERROR_2 1.2 VLV_PROPORCIAL_2
    SUBF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_LTF F.0 VLV_ENC_2 whilebody407
  endwhile407:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMMF_2:
SUB_F_1NEGRORECTOMM_2:
    MULF VLV_VELOCIDAD_5 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_5
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_5
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_5
  while428:
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_LTEQF F.0 10.0 endwhile428
  whilebody428:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_5 VLV_ENCODER_B_5
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_5 VLV_ENCODER_C_5
    SUBF VLV_ENCODER_B_5 VLV_ENCODER_C_5 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_5
    MULF VLV_ERROR_5 1.2 VLV_PROPORCIAL_5
    SUBF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_GTF F.0 10.0 whilebody428
  endwhile428:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGRORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMM_2:
SUB_F_1BLANCORECTOMM_2:
    MULF VLV_VELOCIDAD_7 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_7
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_7
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_7
  while449:
    CALL SENSOR.READPERCENT VLV_SENS_7 F.0
    JR_GTEQF F.0 50.0 endwhile449
  whilebody449:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_7 VLV_ENCODER_B_7
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_7 VLV_ENCODER_C_7
    SUBF VLV_ENCODER_B_7 VLV_ENCODER_C_7 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_7
    MULF VLV_ERROR_7 1.2 VLV_PROPORCIAL_7
    SUBF VLV_VELOCIDAD_7 VLV_PROPORCIAL_7 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_7 VLV_PROPORCIAL_7 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_7 F.0
    JR_LTF F.0 50.0 whilebody449
  endwhile449:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1BLANCORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMM_2:
SUB_F_1BLANCORECTOMMF_2:
    MULF VLV_VELOCIDAD_8 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_8
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_8
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_8
  while470:
    CALL SENSOR.READPERCENT VLV_SENS_8 F.0
    JR_GTEQF F.0 50.0 endwhile470
  whilebody470:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_8 VLV_ENCODER_B_8
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_8 VLV_ENCODER_C_8
    SUBF VLV_ENCODER_B_8 VLV_ENCODER_C_8 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_8
    MULF VLV_ERROR_8 1.2 VLV_PROPORCIAL_8
    SUBF VLV_VELOCIDAD_8 VLV_PROPORCIAL_8 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_8 VLV_PROPORCIAL_8 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_8 F.0
    JR_LTF F.0 50.0 whilebody470
  endwhile470:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_F_1BLANCORECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMMF_2:
SUB_F_TIEMPORECTOMM_2:
    MULF VLV_VELOCIDAD_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_15
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_15
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_15
    TIMER_READ timeMC3
  while492:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_15 endwhile492
  whilebody492:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_15 VLV_ENCODER_B_15
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_15 VLV_ENCODER_C_15
    SUBF VLV_ENCODER_B_15 VLV_ENCODER_C_15 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_15
    MULF VLV_ERROR_15 1.2 VLV_PROPORCIAL_15
    SUBF VLV_VELOCIDAD_15 VLV_PROPORCIAL_15 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_15 VLV_PROPORCIAL_15 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_15 whilebody492
  endwhile492:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPORECTOMM_2:
SUB_F_ENCODERGIROMMF_3:
    MULF VLV_VELOCIDAD1_18 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_18
    MULF VLV_VELOCIDAD2_18 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_18
    MOVEF_F 5.6 VLV_DIAMETRO_18
    MOVEF_F 3.1415926535897932384 F.2
    MULF VLV_DIAMETRO_18 F.2 F.1
    DATAF tmpf512
    DATA8 flag512
    DIVF VLV_ENCODER_18 F.1 tmpf512
    CP_EQF 0.0 F.1 flag512
    SELECTF flag512 0.0 tmpf512 F.0

    MULF F.0 360.0 VLV_DISTANCIA_18
    MATH NEGATE VLV_VELOCIDAD1_18 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_18 VLV_DISTANCIA_18 'False'

	DATA8 layer515
	DATA8 nos515
	DATA8 busy515
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer515 nos515
	JR_EQ8 0 nos515 motornotbusy515
  motorwaiting515:
	OUTPUT_TEST layer515 nos515 busy515
	JR_EQ8 busy515 0 motornotbusy515
	SLEEP
	JR motorwaiting515
  motornotbusy515:
RETSUB_F_ENCODERGIROMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERGIROMMF_3:
SUB_F_1NEGROGIROMMF_3:
    MULF VLV_VELOCIDAD1_20 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_20
    MULF VLV_VELOCIDAD2_20 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_20
  while518:
    CALL SENSOR.READPERCENT VLV_SENS_20 F.0
    JR_LTEQF F.0 15.0 endwhile518
  whilebody518:
    MATH NEGATE VLV_VELOCIDAD1_20 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_20
    CALL SENSOR.READPERCENT VLV_SENS_20 F.0
    JR_GTF F.0 15.0 whilebody518
  endwhile518:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_F_1NEGROGIROMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGROGIROMMF_3:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_37
    STRINGS DUPLICATE 'C' VLV_D_37
    DATAF tmpf524
    DATA8 flag524
    DIVF VLV_V1_37 VLV_V2_37 tmpf524
    CP_EQF 0.0 VLV_V2_37 flag524
    SELECTF flag524 0.0 tmpf524 F.0

    DATAF tmpf525
    DATA8 flag525
    DIVF VLV_V1_37 VLV_V2_37 tmpf525
    CP_EQF 0.0 VLV_V2_37 flag525
    SELECTF flag525 0.0 tmpf525 F.2

    MATH ABS F.2 F.1
    DATAF tmpf527
    DATA8 flag527
    DIVF F.0 F.1 tmpf527
    CP_EQF 0.0 F.1 flag527
    SELECTF flag527 0.0 tmpf527 VLV_SIGNO_37

    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag530
	CP_LTF F.0 F.1 flag530
	SELECTF flag530 F.0 F.1 VLV_VMIN_37
    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag533
	CP_GTF F.0 F.1 flag533
	SELECTF flag533 F.0 F.1 VLV_VMAX_37
    MULF VLV_ANGLE_37 VGV_G1 F.0
    MULF VLV_SIGNO_37 VLV_VMIN_37 F.4
    DATAF tmpf536
    DATA8 flag536
    DIVF F.4 VLV_VMAX_37 tmpf536
    CP_EQF 0.0 VLV_VMAX_37 flag536
    SELECTF flag536 0.0 tmpf536 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf538
    DATA8 flag538
    DIVF -2.0 F.2 tmpf538
    CP_EQF 0.0 F.2 flag538
    SELECTF flag538 0.0 tmpf538 F.1

    MULF F.0 F.1 VLV_ENCODR_37
    CALL TEXT.APPEND VLV_I_37 VLV_D_37 S.0
    MATH NEGATE VLV_V1_37 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_37 VLV_ENCODR_37 'True'

	DATA8 layer542
	DATA8 nos542
	DATA8 busy542
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer542 nos542
	JR_EQ8 0 nos542 motornotbusy542
  motorwaiting542:
	OUTPUT_TEST layer542 nos542 busy542
	JR_EQ8 busy542 0 motornotbusy542
	SLEEP
	JR motorwaiting542
  motornotbusy542:
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    DATA32 milliseconds543
	MOVEF_32 200.0 milliseconds543
	DATA32 timer543
	TIMER_WAIT milliseconds543 timer543
	TIMER_READY timer543
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_GUNIVENCMMF_3:
    STRINGS DUPLICATE 'B' VLV_I_38
    STRINGS DUPLICATE 'C' VLV_D_38
    DATAF tmpf544
    DATA8 flag544
    DIVF VLV_V1_38 VLV_V2_38 tmpf544
    CP_EQF 0.0 VLV_V2_38 flag544
    SELECTF flag544 0.0 tmpf544 F.0

    DATAF tmpf545
    DATA8 flag545
    DIVF VLV_V1_38 VLV_V2_38 tmpf545
    CP_EQF 0.0 VLV_V2_38 flag545
    SELECTF flag545 0.0 tmpf545 F.2

    MATH ABS F.2 F.1
    DATAF tmpf547
    DATA8 flag547
    DIVF F.0 F.1 tmpf547
    CP_EQF 0.0 F.1 flag547
    SELECTF flag547 0.0 tmpf547 VLV_SIGNO_38

    MATH ABS VLV_V1_38 F.0
    MATH ABS VLV_V2_38 F.1
    DATA8 flag550
	CP_LTF F.0 F.1 flag550
	SELECTF flag550 F.0 F.1 VLV_VMIN_38
    MATH ABS VLV_V1_38 F.0
    MATH ABS VLV_V2_38 F.1
    DATA8 flag553
	CP_GTF F.0 F.1 flag553
	SELECTF flag553 F.0 F.1 VLV_VMAX_38
    MULF VLV_ANGLE_38 VGV_G1 F.0
    MULF VLV_SIGNO_38 VLV_VMIN_38 F.4
    DATAF tmpf556
    DATA8 flag556
    DIVF F.4 VLV_VMAX_38 tmpf556
    CP_EQF 0.0 VLV_VMAX_38 flag556
    SELECTF flag556 0.0 tmpf556 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf558
    DATA8 flag558
    DIVF -2.0 F.2 tmpf558
    CP_EQF 0.0 F.2 flag558
    SELECTF flag558 0.0 tmpf558 F.1

    MULF F.0 F.1 VLV_ENCODR_38
    CALL TEXT.APPEND VLV_I_38 VLV_D_38 S.0
    MATH NEGATE VLV_V1_38 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_38 VLV_ENCODR_38 'False'

	DATA8 layer562
	DATA8 nos562
	DATA8 busy562
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer562 nos562
	JR_EQ8 0 nos562 motornotbusy562
  motorwaiting562:
	OUTPUT_TEST layer562 nos562 busy562
	JR_EQ8 busy562 0 motornotbusy562
	SLEEP
	JR motorwaiting562
  motornotbusy562:
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
RETSUB_F_GUNIVENCMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMMF_3:
SUB_F_SL14SIEF_7:
    STRINGS DUPLICATE 'B' VLV_I_56
    STRINGS DUPLICATE 'C' VLV_D_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf565
    DATA8 flag565
    DIVF VLV_ACCELENCODER_56 F.1 tmpf565
    CP_EQF 0.0 F.1 flag565
    SELECTF flag565 0.0 tmpf565 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf569
    DATA8 flag569
    DIVF VLV_ENCODER_56 F.1 tmpf569
    CP_EQF 0.0 F.1 flag569
    SELECTF flag569 0.0 tmpf569 F.0

    MULF F.0 360.0 VLV_ENCODER_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    CALL MOTOR.RESETCOUNT 'C'
  while572:
    CALL MOTOR.GETCOUNT 'C' F.0
    JR_GTEQF F.0 VLV_ENCODER_56 endwhile572
  whilebody572:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf575
    DATA8 flag575
    DIVF F.3 VLV_ACCELENCODER_56 tmpf575
    CP_EQF 0.0 VLV_ACCELENCODER_56 flag575
    SELECTF flag575 0.0 tmpf575 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_56 VLV_V0_56 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_56 VLV_VEL_56
    DATA8 flag580
	CP_LTF VLV_VEL_56 VLV_VMAX_56 flag580
	SELECTF flag580 VLV_VEL_56 VLV_VMAX_56 VLV_VEL_56
    MATH ABS VLV_VEL_56 F.0
    DATAF tmpf582
    DATA8 flag582
    DIVF VLV_VEL_56 F.0 tmpf582
    CP_EQF 0.0 F.0 flag582
    SELECTF flag582 0.0 tmpf582 VLV_SENTIDO_56

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_56 VLV_ERROR_56
    ADDF VLV_ERRSUM_56 VLV_ERROR_56 VLV_ERRSUM_56
    MULF VLV_ERROR_56 VLV_KP_56 F.1
    SUBF VLV_ERROR_56 VLV_OLDERROR_56 F.3
    MULF F.3 VLV_KD_56 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_56 VLV_KI_56 F.1
    ADDF F.0 F.1 VLV_U_56
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    ADDF VLV_VEL_56 VLV_U_56 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_56 VLV_U_56 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_56 VLV_OLDERROR_56
    CALL MOTOR.GETCOUNT 'C' F.0
    JR_LTF F.0 VLV_ENCODER_56 whilebody572
  endwhile572:
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SIEF_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SIEF_7:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_58
    STRINGS DUPLICATE 'C' VLV_D_58
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf606
    DATA8 flag606
    DIVF VLV_ACCELENCODER_58 F.1 tmpf606
    CP_EQF 0.0 F.1 flag606
    SELECTF flag606 0.0 tmpf606 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_U_58
    MOVEF_F 0.0 VLV_ERROR_58
    MOVEF_F 0.0 VLV_OLDERROR_58
    MOVEF_F 0.0 VLV_ERRSUM_58
    CALL MOTOR.RESETCOUNT 'C'
  while609:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or610
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile609
  or610:
  whilebody609:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf614
    DATA8 flag614
    DIVF F.3 VLV_ACCELENCODER_58 tmpf614
    CP_EQF 0.0 VLV_ACCELENCODER_58 flag614
    SELECTF flag614 0.0 tmpf614 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_58 VLV_V0_58 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_58 VLV_VEL_58
    DATA8 flag619
	CP_LTF VLV_VEL_58 VLV_VMAX_58 flag619
	SELECTF flag619 VLV_VEL_58 VLV_VMAX_58 VLV_VEL_58
    MATH ABS VLV_VEL_58 F.0
    DATAF tmpf621
    DATA8 flag621
    DIVF VLV_VEL_58 F.0 tmpf621
    CP_EQF 0.0 F.0 flag621
    SELECTF flag621 0.0 tmpf621 VLV_SENTIDO_58

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_58 VLV_ERROR_58
    ADDF VLV_ERRSUM_58 VLV_ERROR_58 VLV_ERRSUM_58
    MULF VLV_ERROR_58 VLV_KP_58 F.1
    SUBF VLV_ERROR_58 VLV_OLDERROR_58 F.3
    MULF F.3 VLV_KD_58 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_58 VLV_KI_58 F.1
    ADDF F.0 F.1 VLV_U_58
    CALL TEXT.APPEND VLV_I_58 VLV_D_58 S.0
    ADDF VLV_VEL_58 VLV_U_58 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_58 VLV_U_58 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_58 VLV_OLDERROR_58
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody609
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody609
  endwhile609:
    CALL TEXT.APPEND VLV_I_58 VLV_D_58 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PID_4:
    MULF VLV_VELOCIDAD_73 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_73
    STRINGS DUPLICATE 'B' VLV_I_73
    STRINGS DUPLICATE 'C' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MATH ABS VLV_VELOCIDAD_73 F.0
    DATAF tmpf646
    DATA8 flag646
    DIVF VLV_VELOCIDAD_73 F.0 tmpf646
    CP_EQF 0.0 F.0 flag646
    SELECTF flag646 0.0 tmpf646 VLV_SENTIDO_73

  while647:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 5.0 or648
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 5.0 endwhile647
  or648:
  whilebody647:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_73 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_73
    ADDF VLV_ERRSUM_73 VLV_ERROR_73 VLV_ERRSUM_73
    MULF VLV_ERROR_73 VLV_KP_73 F.1
    SUBF VLV_ERROR_73 VLV_OLDERROR_73 F.3
    MULF F.3 VLV_KD_73 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_73 VLV_KI_73 F.1
    ADDF F.0 F.1 VLV_U_73
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    ADDF VLV_VELOCIDAD_73 VLV_U_73 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_73 VLV_U_73 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_73 VLV_OLDERROR_73
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 5.0 whilebody647
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 5.0 whilebody647
  endwhile647:
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PID_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PID_4:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_74 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_74
    STRINGS DUPLICATE 'B' VLV_I_74
    STRINGS DUPLICATE 'C' VLV_D_74
    MOVEF_F 0.0 VLV_ERROR_74
    MOVEF_F 0.0 VLV_OLDERROR_74
    MOVEF_F 0.0 VLV_ERRSUM_74
    MOVEF_F 0.0 VLV_U_74
    MATH ABS VLV_VELOCIDAD_74 F.0
    DATAF tmpf674
    DATA8 flag674
    DIVF VLV_VELOCIDAD_74 F.0 tmpf674
    CP_EQF 0.0 F.0 flag674
    SELECTF flag674 0.0 tmpf674 VLV_SENTIDO_74

  while675:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 5.0 or676
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 5.0 endwhile675
  or676:
  whilebody675:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_74 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_74
    ADDF VLV_ERRSUM_74 VLV_ERROR_74 VLV_ERRSUM_74
    MULF VLV_ERROR_74 VLV_KP_74 F.1
    SUBF VLV_ERROR_74 VLV_OLDERROR_74 F.3
    MULF F.3 VLV_KD_74 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_74 VLV_KI_74 F.1
    ADDF F.0 F.1 VLV_U_74
    CALL TEXT.APPEND VLV_I_74 VLV_D_74 S.0
    ADDF VLV_VELOCIDAD_74 VLV_U_74 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_74 VLV_U_74 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_74 VLV_OLDERROR_74
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 5.0 whilebody675
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 5.0 whilebody675
  endwhile675:
    CALL TEXT.APPEND VLV_I_74 VLV_D_74 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_77 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_77
    STRINGS DUPLICATE 'B' VLV_I_77
    STRINGS DUPLICATE 'C' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MATH ABS VLV_VELOCIDAD_77 F.0
    DATAF tmpf702
    DATA8 flag702
    DIVF VLV_VELOCIDAD_77 F.0 tmpf702
    CP_EQF 0.0 F.0 flag702
    SELECTF flag702 0.0 tmpf702 VLV_SENTIDO_77

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf705
    DATA8 flag705
    DIVF VLV_ENCODER_77 F.1 tmpf705
    CP_EQF 0.0 F.1 flag705
    SELECTF flag705 0.0 tmpf705 F.0

    MULF F.0 360.0 VLV_ENCODER_77
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
  while708:
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_GTEQF F.0 VLV_ENCODER_77 endwhile708
  whilebody708:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_77 VLV_ENCODER_C_77
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_77 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_77
    ADDF VLV_ERRSUM_77 VLV_ERROR_77 VLV_ERRSUM_77
    MULF VLV_ERROR_77 VLV_KP_77 F.1
    SUBF VLV_ERROR_77 VLV_OLDERROR_77 F.3
    MULF F.3 VLV_KD_77 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_77 VLV_KI_77 F.1
    ADDF F.0 F.1 VLV_U_77
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    ADDF VLV_VELOCIDAD_77 VLV_U_77 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_77 VLV_U_77 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_77 VLV_OLDERROR_77
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_LTF F.0 VLV_ENCODER_77 whilebody708
  endwhile708:
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_78 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_78
    STRINGS DUPLICATE 'B' VLV_I_78
    STRINGS DUPLICATE 'C' VLV_D_78
    MOVEF_F 0.0 VLV_ERROR_78
    MOVEF_F 0.0 VLV_OLDERROR_78
    MOVEF_F 0.0 VLV_ERRSUM_78
    MOVEF_F 0.0 VLV_U_78
    MATH ABS VLV_VELOCIDAD_78 F.0
    DATAF tmpf734
    DATA8 flag734
    DIVF VLV_VELOCIDAD_78 F.0 tmpf734
    CP_EQF 0.0 F.0 flag734
    SELECTF flag734 0.0 tmpf734 VLV_SENTIDO_78

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf737
    DATA8 flag737
    DIVF VLV_ENCODER_78 F.1 tmpf737
    CP_EQF 0.0 F.1 flag737
    SELECTF flag737 0.0 tmpf737 F.0

    MULF F.0 360.0 VLV_ENCODER_78
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_78
    MOVEF_F 0.0 VLV_ENCODER_C_78
  while740:
    MATH ABS VLV_ENCODER_C_78 F.0
    JR_GTEQF F.0 VLV_ENCODER_78 endwhile740
  whilebody740:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_78 VLV_ENCODER_C_78
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_78 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_78
    ADDF VLV_ERRSUM_78 VLV_ERROR_78 VLV_ERRSUM_78
    MULF VLV_ERROR_78 VLV_KP_78 F.1
    SUBF VLV_ERROR_78 VLV_OLDERROR_78 F.3
    MULF F.3 VLV_KD_78 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_78 VLV_KI_78 F.1
    ADDF F.0 F.1 VLV_U_78
    CALL TEXT.APPEND VLV_I_78 VLV_D_78 S.0
    ADDF VLV_VELOCIDAD_78 VLV_U_78 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_78 VLV_U_78 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_78 VLV_OLDERROR_78
    MATH ABS VLV_ENCODER_C_78 F.0
    JR_LTF F.0 VLV_ENCODER_78 whilebody740
  endwhile740:
    CALL TEXT.APPEND VLV_I_78 VLV_D_78 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL31PIDENC_5:
    MULF VLV_VELOCIDAD_85 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_85
    STRINGS DUPLICATE 'B' VLV_I_85
    STRINGS DUPLICATE 'C' VLV_D_85
    MOVEF_F 0.0 VLV_ERROR_85
    MOVEF_F 0.0 VLV_OLDERROR_85
    MOVEF_F 0.0 VLV_ERRSUM_85
    MOVEF_F 0.0 VLV_U_85
    MATH ABS VLV_VELOCIDAD_85 F.0
    DATAF tmpf766
    DATA8 flag766
    DIVF VLV_VELOCIDAD_85 F.0 tmpf766
    CP_EQF 0.0 F.0 flag766
    SELECTF flag766 0.0 tmpf766 VLV_SENTIDO_85

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf769
    DATA8 flag769
    DIVF VLV_ENCODER_85 F.1 tmpf769
    CP_EQF 0.0 F.1 flag769
    SELECTF flag769 0.0 tmpf769 F.0

    MULF F.0 360.0 VLV_ENCODER_85
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_85
    MOVEF_F 0.0 VLV_ENCODER_C_85
  while772:
    MATH ABS VLV_ENCODER_C_85 F.0
    JR_GTEQF F.0 VLV_ENCODER_85 endwhile772
  whilebody772:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_85 VLV_ENCODER_C_85
    CALL SENSOR.READPERCENT 3.0 F.2
    CALL SENSOR.READPERCENT 1.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_85 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_85
    ADDF VLV_ERRSUM_85 VLV_ERROR_85 VLV_ERRSUM_85
    MULF VLV_ERROR_85 VLV_KP_85 F.1
    SUBF VLV_ERROR_85 VLV_OLDERROR_85 F.3
    MULF F.3 VLV_KD_85 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_85 VLV_KI_85 F.1
    ADDF F.0 F.1 VLV_U_85
    CALL TEXT.APPEND VLV_I_85 VLV_D_85 S.0
    ADDF VLV_VELOCIDAD_85 VLV_U_85 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_85 VLV_U_85 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_85 VLV_OLDERROR_85
    MATH ABS VLV_ENCODER_C_85 F.0
    JR_LTF F.0 VLV_ENCODER_85 whilebody772
  endwhile772:
    CALL TEXT.APPEND VLV_I_85 VLV_D_85 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL31PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL31PIDENC_5:
SUB_F_SL31PIDENCF_5:
    MULF VLV_VELOCIDAD_86 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_86
    STRINGS DUPLICATE 'B' VLV_I_86
    STRINGS DUPLICATE 'C' VLV_D_86
    MOVEF_F 0.0 VLV_ERROR_86
    MOVEF_F 0.0 VLV_OLDERROR_86
    MOVEF_F 0.0 VLV_ERRSUM_86
    MOVEF_F 0.0 VLV_U_86
    MATH ABS VLV_VELOCIDAD_86 F.0
    DATAF tmpf798
    DATA8 flag798
    DIVF VLV_VELOCIDAD_86 F.0 tmpf798
    CP_EQF 0.0 F.0 flag798
    SELECTF flag798 0.0 tmpf798 VLV_SENTIDO_86

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf801
    DATA8 flag801
    DIVF VLV_ENCODER_86 F.1 tmpf801
    CP_EQF 0.0 F.1 flag801
    SELECTF flag801 0.0 tmpf801 F.0

    MULF F.0 360.0 VLV_ENCODER_86
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_86
    MOVEF_F 0.0 VLV_ENCODER_C_86
  while804:
    MATH ABS VLV_ENCODER_C_86 F.0
    JR_GTEQF F.0 VLV_ENCODER_86 endwhile804
  whilebody804:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_86 VLV_ENCODER_C_86
    CALL SENSOR.READPERCENT 3.0 F.2
    CALL SENSOR.READPERCENT 1.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_86 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_86
    ADDF VLV_ERRSUM_86 VLV_ERROR_86 VLV_ERRSUM_86
    MULF VLV_ERROR_86 VLV_KP_86 F.1
    SUBF VLV_ERROR_86 VLV_OLDERROR_86 F.3
    MULF F.3 VLV_KD_86 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_86 VLV_KI_86 F.1
    ADDF F.0 F.1 VLV_U_86
    CALL TEXT.APPEND VLV_I_86 VLV_D_86 S.0
    ADDF VLV_VELOCIDAD_86 VLV_U_86 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_86 VLV_U_86 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_86 VLV_OLDERROR_86
    MATH ABS VLV_ENCODER_C_86 F.0
    JR_LTF F.0 VLV_ENCODER_86 whilebody804
  endwhile804:
    CALL TEXT.APPEND VLV_I_86 VLV_D_86 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL31PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL31PIDENCF_5:
SUB_F_SL1SPIDCROSS_5:
    MULF VLV_VELOCIDAD_91 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_91
    STRINGS DUPLICATE 'B' VLV_I_91
    STRINGS DUPLICATE 'C' VLV_D_91
    MOVEF_F 0.0 VLV_ERROR_91
    MOVEF_F 0.0 VLV_OLDERROR_91
    MOVEF_F 0.0 VLV_ERRSUM_91
    MOVEF_F 0.0 VLV_U_91
    MATH ABS VLV_VELOCIDAD_91 F.0
    DATAF tmpf830
    DATA8 flag830
    DIVF VLV_VELOCIDAD_91 F.0 tmpf830
    CP_EQF 0.0 F.0 flag830
    SELECTF flag830 0.0 tmpf830 VLV_SENTIDO_91

    JR_NEQF VLV_READER_91 3.0 else831_1
    MOVEF_F 1.0 VLV_READER1_91
    MOVEF_F 4.0 VLV_READER2_91
    JR endif831
  else831_1:
    MOVEF_F 3.0 VLV_READER1_91
    MOVEF_F 1.0 VLV_READER2_91
  else831_2:
  endif831:
  while832:
    CALL SENSOR.READPERCENT VLV_READER_91 F.0
    JR_LTEQF F.0 10.0 endwhile832
  whilebody832:
    CALL SENSOR.READPERCENT VLV_READER1_91 F.2
    CALL SENSOR.READPERCENT VLV_READER2_91 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_91 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_91
    ADDF VLV_ERRSUM_91 VLV_ERROR_91 VLV_ERRSUM_91
    MULF VLV_ERROR_91 VLV_KP_91 F.1
    SUBF VLV_ERROR_91 VLV_OLDERROR_91 F.3
    MULF F.3 VLV_KD_91 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_91 VLV_KI_91 F.1
    ADDF F.0 F.1 VLV_U_91
    CALL TEXT.APPEND VLV_I_91 VLV_D_91 S.0
    ADDF VLV_VELOCIDAD_91 VLV_U_91 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_91 VLV_U_91 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_91 VLV_OLDERROR_91
    CALL SENSOR.READPERCENT VLV_READER_91 F.0
    JR_GTF F.0 10.0 whilebody832
  endwhile832:
    CALL TEXT.APPEND VLV_I_91 VLV_D_91 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL1SPIDCROSS_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSS_5:
SUB_F_SL1SPIDCROSSF_5:
    MULF VLV_VELOCIDAD_92 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_92
    STRINGS DUPLICATE 'B' VLV_I_92
    STRINGS DUPLICATE 'C' VLV_D_92
    MOVEF_F 0.0 VLV_ERROR_92
    MOVEF_F 0.0 VLV_OLDERROR_92
    MOVEF_F 0.0 VLV_ERRSUM_92
    MOVEF_F 0.0 VLV_U_92
    MATH ABS VLV_VELOCIDAD_92 F.0
    DATAF tmpf856
    DATA8 flag856
    DIVF VLV_VELOCIDAD_92 F.0 tmpf856
    CP_EQF 0.0 F.0 flag856
    SELECTF flag856 0.0 tmpf856 VLV_SENTIDO_92

    JR_NEQF VLV_READER_92 3.0 else857_1
    MOVEF_F 1.0 VLV_READER1_92
    MOVEF_F 4.0 VLV_READER2_92
    JR endif857
  else857_1:
    MOVEF_F 3.0 VLV_READER1_92
    MOVEF_F 1.0 VLV_READER2_92
  else857_2:
  endif857:
  while858:
    CALL SENSOR.READPERCENT VLV_READER_92 F.0
    JR_LTEQF F.0 10.0 endwhile858
  whilebody858:
    CALL SENSOR.READPERCENT VLV_READER1_92 F.2
    CALL SENSOR.READPERCENT VLV_READER2_92 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_92 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_92
    ADDF VLV_ERRSUM_92 VLV_ERROR_92 VLV_ERRSUM_92
    MULF VLV_ERROR_92 VLV_KP_92 F.1
    SUBF VLV_ERROR_92 VLV_OLDERROR_92 F.3
    MULF F.3 VLV_KD_92 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_92 VLV_KI_92 F.1
    ADDF F.0 F.1 VLV_U_92
    CALL TEXT.APPEND VLV_I_92 VLV_D_92 S.0
    ADDF VLV_VELOCIDAD_92 VLV_U_92 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_92 VLV_U_92 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_92 VLV_OLDERROR_92
    CALL SENSOR.READPERCENT VLV_READER_92 F.0
    JR_GTF F.0 10.0 whilebody858
  endwhile858:
    CALL TEXT.APPEND VLV_I_92 VLV_D_92 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL1SPIDCROSSF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSSF_5:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_100 VGV_SENTIDO_MOTORES VLV_VMAX_100
    STRINGS DUPLICATE 'B' VLV_I_100
    STRINGS DUPLICATE 'C' VLV_D_100
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_100
    MOVEF_F 150.0 VLV_ACCELENCODER_100
    MOVEF_F 0.0 VLV_U_100
    MOVEF_F 0.0 VLV_ERRSUM_100
    MOVEF_F 0.0 VLV_OLDERROR_100
    CALL MOTOR.RESETCOUNT 'C'
  while883:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or884
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile883
  or884:
  whilebody883:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf888
    DATA8 flag888
    DIVF F.2 VLV_ACCELENCODER_100 tmpf888
    CP_EQF 0.0 VLV_ACCELENCODER_100 flag888
    SELECTF flag888 0.0 tmpf888 F.1

    ADDF VLV_VMAX_100 VLV_V0_100 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_100 VLV_VEL_100
    DATA8 flag892
	CP_LTF VLV_VEL_100 VLV_VMAX_100 flag892
	SELECTF flag892 VLV_VEL_100 VLV_VMAX_100 VLV_VEL_100
    MATH ABS VLV_VEL_100 F.0
    DATAF tmpf894
    DATA8 flag894
    DIVF VLV_VEL_100 F.0 tmpf894
    CP_EQF 0.0 F.0 flag894
    SELECTF flag894 0.0 tmpf894 VLV_SENTIDO_100

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_100 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_100
    MULF VLV_ERRSUM_100 0.9 F.0
    ADDF F.0 VLV_ERROR_100 VLV_ERRSUM_100
    MULF VLV_ERROR_100 VLV_KP_100 F.1
    SUBF VLV_ERROR_100 VLV_OLDERROR_100 F.3
    MULF F.3 VLV_KD_100 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_100 VLV_KI_100 F.1
    ADDF F.0 F.1 VLV_U_100
    CALL TEXT.APPEND VLV_I_100 VLV_D_100 S.0
    ADDF VLV_VEL_100 VLV_U_100 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_100 VLV_U_100 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_100 VLV_OLDERROR_100
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody883
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody883
  endwhile883:
    CALL TEXT.APPEND VLV_I_100 VLV_D_100 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_107 F.0 VLV_ENCDIFF_107
    MATH ABS VLV_ENCDIFF_107 F.0
    DATAF tmpf920
    DATA8 flag920
    DIVF VLV_ENCDIFF_107 F.0 tmpf920
    CP_EQF 0.0 F.0 flag920
    SELECTF flag920 0.0 tmpf920 VLV_SIGNO_107

    JR_EQF VLV_ENCDIFF_107 0.0 else921_1
  while922:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 15.0 endwhile922
  whilebody922:
    MULF VLV_SIGNO_107 VLV_V_107 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 15.0 whilebody922
  endwhile922:
    CALL MOTOR.STOP 'A' 'True'
  else921_1:
  endif921:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEASAFE_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_111 F.0 VLV_ENCDIFF_111
    MATH ABS VLV_ENCDIFF_111 F.0
    DATAF tmpf935
    DATA8 flag935
    DIVF VLV_ENCDIFF_111 F.0 tmpf935
    CP_EQF 0.0 F.0 flag935
    SELECTF flag935 0.0 tmpf935 VLV_SIGNO_111

    MATH ABS VLV_ENCDIFF_111 F.4
    DATAF tmpf937
    DATA8 flag937
    DIVF F.4 100.0 tmpf937
    CP_EQF 0.0 100.0 flag937
    SELECTF flag937 0.0 tmpf937 F.3

    DATAF tmpf938
    DATA8 flag938
    DIVF VLV_V_111 20.0 tmpf938
    CP_EQF 0.0 20.0 flag938
    SELECTF flag938 0.0 tmpf938 F.4

    DATAF tmpf939
    DATA8 flag939
    DIVF F.3 F.4 tmpf939
    CP_EQF 0.0 F.4 flag939
    SELECTF flag939 0.0 tmpf939 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag942
	CP_GTF F.0 400.0 flag942
	SELECTF flag942 F.0 400.0 VLV_SAFETYTIMER_111
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_111 0.0 else944_1
  while945:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile945
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 2000.0 endwhile945
  whilebody945:
    MULF VLV_SIGNO_111 VLV_V_111 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and952
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 2000.0 whilebody945
  and952:
  endwhile945:
    CALL MOTOR.STOP 'A' 'True'
  else944_1:
  endif944:
RETSUB_F_BMOVEASAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEASAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_117 F.0 VLV_ENCDIFF_117
    MATH ABS VLV_ENCDIFF_117 F.0
    DATAF tmpf961
    DATA8 flag961
    DIVF VLV_ENCDIFF_117 F.0 tmpf961
    CP_EQF 0.0 F.0 flag961
    SELECTF flag961 0.0 tmpf961 VLV_SIGNO_117

    JR_EQF VLV_ENCDIFF_117 0.0 else962_1
    MULF VLV_SIGNO_117 VLV_V_117 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while965:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_117 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile965
  whilebody965:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_117 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody965
  endwhile965:
    CALL MOTOR.STOP 'D' 'True'
  else962_1:
  endif962:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while974:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_120 endwhile974
  whilebody974:
    MOVEF_8 VLV_V_120 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_120 whilebody974
  endwhile974:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_121 F.0 VLV_ENCDIFF_121
    MATH ABS VLV_ENCDIFF_121 F.0
    DATAF tmpf982
    DATA8 flag982
    DIVF VLV_ENCDIFF_121 F.0 tmpf982
    CP_EQF 0.0 F.0 flag982
    SELECTF flag982 0.0 tmpf982 VLV_SIGNO_121

    MATH ABS VLV_ENCDIFF_121 F.4
    DATAF tmpf984
    DATA8 flag984
    DIVF F.4 100.0 tmpf984
    CP_EQF 0.0 100.0 flag984
    SELECTF flag984 0.0 tmpf984 F.3

    DATAF tmpf985
    DATA8 flag985
    DIVF VLV_V_121 20.0 tmpf985
    CP_EQF 0.0 20.0 flag985
    SELECTF flag985 0.0 tmpf985 F.4

    DATAF tmpf986
    DATA8 flag986
    DIVF F.3 F.4 tmpf986
    CP_EQF 0.0 F.4 flag986
    SELECTF flag986 0.0 tmpf986 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag989
	CP_GTF F.0 400.0 flag989
	SELECTF flag989 F.0 400.0 VLV_SAFETYTIMER_121
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_121 0.0 else991_1
  while992:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_121 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile992
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_121 endwhile992
  whilebody992:
    MULF VLV_SIGNO_121 VLV_V_121 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_121 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_121 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and1003
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_121 whilebody992
  and1003:
  endwhile992:
    CALL MOTOR.STOP 'D' 'True'
  else991_1:
  endif991:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer1009
	DATA8 no1009
	DATA8 mode81009
	
	MOVEF_8 1.0 no1009
	SUB8 no1009 1 no1009
	DIV8 no1009 4 layer1009
	MATH MOD8 no1009 4 no1009

	MOVEF_8 4.0 mode81009
	
	INPUT_DEVICE READY_RAW layer1009 no1009 0 mode81009 0
    MOVEF_F 15.0 VLV_RED_122
    MOVEF_F 60.0 VLV_YELLOW_122
    MOVEF_F 170.0 VLV_GREEN_122
    MOVEF_F 330.0 VLV_BLUE_122
    MOVEF_F 10.0 VLV_VALUENEGRO_122
    MOVEF_F 100.0 VLV_VALUEBLANCO_122
    MOVEF_F 147.0 VLV_RWHITE_122
    MOVEF_F 143.0 VLV_GWHITE_122
    MOVEF_F 160.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    MOVEF_F 0.0 VLV_COLOR_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_122
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_122
  for1015:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor1015
  forbody1015:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_122
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_122 VLV_RGB_122
    DATAF tmpf1020
    DATA8 flag1020
    DIVF VLV_RRAW_122 VLV_RWHITE_122 tmpf1020
    CP_EQF 0.0 VLV_RWHITE_122 flag1020
    SELECTF flag1020 0.0 tmpf1020 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    DATAF tmpf1024
    DATA8 flag1024
    DIVF VLV_GRAW_122 VLV_GWHITE_122 tmpf1024
    CP_EQF 0.0 VLV_GWHITE_122 flag1024
    SELECTF flag1024 0.0 tmpf1024 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    DATAF tmpf1028
    DATA8 flag1028
    DIVF VLV_BRAW_122 VLV_BWHITE_122 tmpf1028
    CP_EQF 0.0 VLV_BWHITE_122 flag1028
    SELECTF flag1028 0.0 tmpf1028 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_RNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.3 VLV_GNORMA_122
    DATA8 flag1034
	CP_GTF F.2 F.3 flag1034
	SELECTF flag1034 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_BNORMA_122
    DATA8 flag1036
	CP_GTF F.1 F.2 flag1036
	SELECTF flag1036 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    DATA32 milliseconds1038
	MOVEF_32 5.0 milliseconds1038
	DATA32 timer1038
	TIMER_WAIT milliseconds1038 timer1038
	TIMER_READY timer1038
    ADDF VLV_J_122 1.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody1015
  endfor1015:
    MOVEF_F 1.0 VLV_J_122
  for1040:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor1040
  forbody1040:
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_122
    ADDF F.0 F.1 VLV_RNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_122
    ADDF F.0 F.1 VLV_GNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_122
    ADDF F.0 F.1 VLV_BNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_122
    ADDF F.0 F.1 VLV_MAX_122
    ADDF VLV_J_122 2.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody1040
  endfor1040:
    DATAF tmpf1058
    DATA8 flag1058
    DIVF VLV_RNORM_122 VLV_REPS_122 tmpf1058
    CP_EQF 0.0 VLV_REPS_122 flag1058
    SELECTF flag1058 0.0 tmpf1058 VLV_RNORM_122

    DATAF tmpf1059
    DATA8 flag1059
    DIVF VLV_GNORM_122 VLV_REPS_122 tmpf1059
    CP_EQF 0.0 VLV_REPS_122 flag1059
    SELECTF flag1059 0.0 tmpf1059 VLV_GNORM_122

    DATAF tmpf1060
    DATA8 flag1060
    DIVF VLV_BNORM_122 VLV_REPS_122 tmpf1060
    CP_EQF 0.0 VLV_REPS_122 flag1060
    SELECTF flag1060 0.0 tmpf1060 VLV_BNORM_122

    DATAF tmpf1061
    DATA8 flag1061
    DIVF VLV_MAX_122 VLV_REPS_122 tmpf1061
    CP_EQF 0.0 VLV_REPS_122 flag1061
    SELECTF flag1061 0.0 tmpf1061 VLV_MAX_122

    DATA8 flag1062
	CP_LTF VLV_RNORM_122 VLV_GNORM_122 flag1062
	SELECTF flag1062 VLV_RNORM_122 VLV_GNORM_122 F.0
    DATA8 flag1063
	CP_LTF F.0 VLV_BNORM_122 flag1063
	SELECTF flag1063 F.0 VLV_BNORM_122 VLV_MIN_122
    JR_NEQF VLV_MAX_122 VLV_MIN_122 else1064_1
    MOVEF_F 0.0 VLV_HUE_122
    JR endif1064
  else1064_1:
    JR_NEQF VLV_MAX_122 VLV_RNORM_122 else1064_2
    JR_LTF VLV_GNORM_122 VLV_BNORM_122 else1065_1
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_122 VLV_MIN_122 F.1
    DATAF tmpf1069
    DATA8 flag1069
    DIVF F.0 F.1 tmpf1069
    CP_EQF 0.0 F.1 flag1069
    SELECTF flag1069 0.0 tmpf1069 VLV_HUE_122

    JR endif1065
  else1065_1:
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf1073
    DATA8 flag1073
    DIVF F.1 F.2 tmpf1073
    CP_EQF 0.0 F.2 flag1073
    SELECTF flag1073 0.0 tmpf1073 F.0

    ADDF F.0 360.0 VLV_HUE_122
  else1065_2:
  endif1065:
    JR endif1064
  else1064_2:
    JR_NEQF VLV_MAX_122 VLV_GNORM_122 else1064_3
    SUBF VLV_BNORM_122 VLV_RNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf1078
    DATA8 flag1078
    DIVF F.1 F.2 tmpf1078
    CP_EQF 0.0 F.2 flag1078
    SELECTF flag1078 0.0 tmpf1078 F.0

    ADDF F.0 120.0 VLV_HUE_122
    JR endif1064
  else1064_3:
    SUBF VLV_RNORM_122 VLV_GNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf1083
    DATA8 flag1083
    DIVF F.1 F.2 tmpf1083
    CP_EQF 0.0 F.2 flag1083
    SELECTF flag1083 0.0 tmpf1083 F.0

    ADDF F.0 240.0 VLV_HUE_122
  else1064_4:
  endif1064:
    JR_NEQF VLV_MAX_122 0.0 else1085_1
    MOVEF_F 0.0 VLV_SAT_122
    JR endif1085
  else1085_1:
    DATAF tmpf1086
    DATA8 flag1086
    DIVF VLV_MIN_122 VLV_MAX_122 tmpf1086
    CP_EQF 0.0 VLV_MAX_122 flag1086
    SELECTF flag1086 0.0 tmpf1086 F.0

    SUBF 1.0 F.0 VLV_SAT_122
  else1085_2:
  endif1085:
    MOVEF_F VLV_MAX_122 VLV_VALUE_122
    ADDF VLV_VALUEBLANCO_122 VLV_VALUENEGRO_122 F.0
    DATAF tmpf1089
    DATA8 flag1089
    DIVF F.0 2.0 tmpf1089
    CP_EQF 0.0 2.0 flag1089
    SELECTF flag1089 0.0 tmpf1089 VLV_RGBGREY_122

    ADDF VLV_RNORM_122 VLV_GNORM_122 F.1
    ADDF F.1 VLV_BNORM_122 F.0
    JR_GTF F.0 3.0 else1090_1
    MOVEF_F 0.0 VLV_COLOR_122
    JR endif1090
  else1090_1:
    JR_GTEQF VLV_SAT_122 0.4 else1093_1
    JR_LTEQF VLV_VALUE_122 VLV_RGBGREY_122 else1094_1
    MOVEF_F 6.0 VLV_COLOR_122
    JR endif1094
  else1094_1:
    MOVEF_F 1.0 VLV_COLOR_122
  else1094_2:
  endif1094:
    JR endif1093
  else1093_1:
    JR_LTF VLV_HUE_122 0.0 else1095_1
    JR_GTEQF VLV_HUE_122 VLV_RED_122 else1095_1
    MOVEF_F 5.0 VLV_COLOR_122
    JR endif1095
  else1095_1:
    JR_LTF VLV_HUE_122 VLV_RED_122 else1095_2
    JR_GTEQF VLV_HUE_122 VLV_YELLOW_122 else1095_2
    MOVEF_F 4.0 VLV_COLOR_122
    JR endif1095
  else1095_2:
    JR_LTF VLV_HUE_122 VLV_YELLOW_122 else1095_3
    JR_GTEQF VLV_HUE_122 VLV_GREEN_122 else1095_3
    MOVEF_F 3.0 VLV_COLOR_122
    JR endif1095
  else1095_3:
    JR_LTF VLV_HUE_122 VLV_GREEN_122 else1095_4
    JR_GTEQF VLV_HUE_122 VLV_BLUE_122 else1095_4
    MOVEF_F 2.0 VLV_COLOR_122
    JR endif1095
  else1095_4:
    MOVEF_F 5.0 VLV_COLOR_122
  else1095_5:
  endif1095:
  else1093_2:
  endif1093:
  else1090_2:
  endif1090:
    STRINGS VALUE_FORMATTED VLV_RRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_122 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1111:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer1112
	DATA8 no1112
	DATA8 mode81112
	
	MOVEF_8 2.0 no1112
	SUB8 no1112 1 no1112
	DIV8 no1112 4 layer1112
	MATH MOD8 no1112 4 no1112

	MOVEF_8 4.0 mode81112
	
	INPUT_DEVICE READY_RAW layer1112 no1112 0 mode81112 0
    MOVEF_F 15.0 VLV_RED_123
    MOVEF_F 60.0 VLV_YELLOW_123
    MOVEF_F 170.0 VLV_GREEN_123
    MOVEF_F 330.0 VLV_BLUE_123
    MOVEF_F 10.0 VLV_VALUENEGRO_123
    MOVEF_F 100.0 VLV_VALUEBLANCO_123
    MOVEF_F 147.0 VLV_RWHITE_123
    MOVEF_F 143.0 VLV_GWHITE_123
    MOVEF_F 160.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    MOVEF_F 0.0 VLV_COLOR_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_123
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_123
  for1118:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor1118
  forbody1118:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_123
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_123 VLV_RGB_123
    DATAF tmpf1123
    DATA8 flag1123
    DIVF VLV_RRAW_123 VLV_RWHITE_123 tmpf1123
    CP_EQF 0.0 VLV_RWHITE_123 flag1123
    SELECTF flag1123 0.0 tmpf1123 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    DATAF tmpf1127
    DATA8 flag1127
    DIVF VLV_GRAW_123 VLV_GWHITE_123 tmpf1127
    CP_EQF 0.0 VLV_GWHITE_123 flag1127
    SELECTF flag1127 0.0 tmpf1127 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    DATAF tmpf1131
    DATA8 flag1131
    DIVF VLV_BRAW_123 VLV_BWHITE_123 tmpf1131
    CP_EQF 0.0 VLV_BWHITE_123 flag1131
    SELECTF flag1131 0.0 tmpf1131 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_RNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.3 VLV_GNORMA_123
    DATA8 flag1137
	CP_GTF F.2 F.3 flag1137
	SELECTF flag1137 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_BNORMA_123
    DATA8 flag1139
	CP_GTF F.1 F.2 flag1139
	SELECTF flag1139 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    DATA32 milliseconds1141
	MOVEF_32 5.0 milliseconds1141
	DATA32 timer1141
	TIMER_WAIT milliseconds1141 timer1141
	TIMER_READY timer1141
    ADDF VLV_J_123 1.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody1118
  endfor1118:
    MOVEF_F 1.0 VLV_J_123
  for1143:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor1143
  forbody1143:
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_123
    ADDF F.0 F.1 VLV_RNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_123
    ADDF F.0 F.1 VLV_GNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_123
    ADDF F.0 F.1 VLV_BNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_123
    ADDF F.0 F.1 VLV_MAX_123
    ADDF VLV_J_123 2.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody1143
  endfor1143:
    DATAF tmpf1161
    DATA8 flag1161
    DIVF VLV_RNORM_123 VLV_REPS_123 tmpf1161
    CP_EQF 0.0 VLV_REPS_123 flag1161
    SELECTF flag1161 0.0 tmpf1161 VLV_RNORM_123

    DATAF tmpf1162
    DATA8 flag1162
    DIVF VLV_GNORM_123 VLV_REPS_123 tmpf1162
    CP_EQF 0.0 VLV_REPS_123 flag1162
    SELECTF flag1162 0.0 tmpf1162 VLV_GNORM_123

    DATAF tmpf1163
    DATA8 flag1163
    DIVF VLV_BNORM_123 VLV_REPS_123 tmpf1163
    CP_EQF 0.0 VLV_REPS_123 flag1163
    SELECTF flag1163 0.0 tmpf1163 VLV_BNORM_123

    DATAF tmpf1164
    DATA8 flag1164
    DIVF VLV_MAX_123 VLV_REPS_123 tmpf1164
    CP_EQF 0.0 VLV_REPS_123 flag1164
    SELECTF flag1164 0.0 tmpf1164 VLV_MAX_123

    DATA8 flag1165
	CP_LTF VLV_RNORM_123 VLV_GNORM_123 flag1165
	SELECTF flag1165 VLV_RNORM_123 VLV_GNORM_123 F.0
    DATA8 flag1166
	CP_LTF F.0 VLV_BNORM_123 flag1166
	SELECTF flag1166 F.0 VLV_BNORM_123 VLV_MIN_123
    JR_NEQF VLV_MAX_123 VLV_MIN_123 else1167_1
    MOVEF_F 0.0 VLV_HUE_123
    JR endif1167
  else1167_1:
    JR_NEQF VLV_MAX_123 VLV_RNORM_123 else1167_2
    JR_LTF VLV_GNORM_123 VLV_BNORM_123 else1168_1
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_123 VLV_MIN_123 F.1
    DATAF tmpf1172
    DATA8 flag1172
    DIVF F.0 F.1 tmpf1172
    CP_EQF 0.0 F.1 flag1172
    SELECTF flag1172 0.0 tmpf1172 VLV_HUE_123

    JR endif1168
  else1168_1:
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf1176
    DATA8 flag1176
    DIVF F.1 F.2 tmpf1176
    CP_EQF 0.0 F.2 flag1176
    SELECTF flag1176 0.0 tmpf1176 F.0

    ADDF F.0 360.0 VLV_HUE_123
  else1168_2:
  endif1168:
    JR endif1167
  else1167_2:
    JR_NEQF VLV_MAX_123 VLV_GNORM_123 else1167_3
    SUBF VLV_BNORM_123 VLV_RNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf1181
    DATA8 flag1181
    DIVF F.1 F.2 tmpf1181
    CP_EQF 0.0 F.2 flag1181
    SELECTF flag1181 0.0 tmpf1181 F.0

    ADDF F.0 120.0 VLV_HUE_123
    JR endif1167
  else1167_3:
    SUBF VLV_RNORM_123 VLV_GNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf1186
    DATA8 flag1186
    DIVF F.1 F.2 tmpf1186
    CP_EQF 0.0 F.2 flag1186
    SELECTF flag1186 0.0 tmpf1186 F.0

    ADDF F.0 240.0 VLV_HUE_123
  else1167_4:
  endif1167:
    JR_NEQF VLV_MAX_123 0.0 else1188_1
    MOVEF_F 0.0 VLV_SAT_123
    JR endif1188
  else1188_1:
    DATAF tmpf1189
    DATA8 flag1189
    DIVF VLV_MIN_123 VLV_MAX_123 tmpf1189
    CP_EQF 0.0 VLV_MAX_123 flag1189
    SELECTF flag1189 0.0 tmpf1189 F.0

    SUBF 1.0 F.0 VLV_SAT_123
  else1188_2:
  endif1188:
    MOVEF_F VLV_MAX_123 VLV_VALUE_123
    ADDF VLV_VALUEBLANCO_123 VLV_VALUENEGRO_123 F.0
    DATAF tmpf1192
    DATA8 flag1192
    DIVF F.0 2.0 tmpf1192
    CP_EQF 0.0 2.0 flag1192
    SELECTF flag1192 0.0 tmpf1192 VLV_RGBGREY_123

    ADDF VLV_RNORM_123 VLV_GNORM_123 F.1
    ADDF F.1 VLV_BNORM_123 F.0
    JR_GTF F.0 3.0 else1193_1
    MOVEF_F 0.0 VLV_COLOR_123
    JR endif1193
  else1193_1:
    JR_GTEQF VLV_SAT_123 0.4 else1196_1
    JR_LTEQF VLV_VALUE_123 VLV_RGBGREY_123 else1197_1
    MOVEF_F 6.0 VLV_COLOR_123
    JR endif1197
  else1197_1:
    MOVEF_F 1.0 VLV_COLOR_123
  else1197_2:
  endif1197:
    JR endif1196
  else1196_1:
    JR_LTF VLV_HUE_123 0.0 else1198_1
    JR_GTEQF VLV_HUE_123 VLV_RED_123 else1198_1
    MOVEF_F 5.0 VLV_COLOR_123
    JR endif1198
  else1198_1:
    JR_LTF VLV_HUE_123 VLV_RED_123 else1198_2
    JR_GTEQF VLV_HUE_123 VLV_YELLOW_123 else1198_2
    MOVEF_F 4.0 VLV_COLOR_123
    JR endif1198
  else1198_2:
    JR_LTF VLV_HUE_123 VLV_YELLOW_123 else1198_3
    JR_GTEQF VLV_HUE_123 VLV_GREEN_123 else1198_3
    MOVEF_F 3.0 VLV_COLOR_123
    JR endif1198
  else1198_3:
    JR_LTF VLV_HUE_123 VLV_GREEN_123 else1198_4
    JR_GTEQF VLV_HUE_123 VLV_BLUE_123 else1198_4
    MOVEF_F 2.0 VLV_COLOR_123
    JR endif1198
  else1198_4:
    MOVEF_F 5.0 VLV_COLOR_123
  else1198_5:
  endif1198:
  else1196_2:
  endif1196:
  else1193_2:
  endif1193:
    STRINGS VALUE_FORMATTED VLV_RRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_123 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1214:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer1215
	DATA8 no1215
	DATA8 mode81215
	
	MOVEF_8 3.0 no1215
	SUB8 no1215 1 no1215
	DIV8 no1215 4 layer1215
	MATH MOD8 no1215 4 no1215

	MOVEF_8 4.0 mode81215
	
	INPUT_DEVICE READY_RAW layer1215 no1215 0 mode81215 0
    MOVEF_F 15.0 VLV_RED_124
    MOVEF_F 60.0 VLV_YELLOW_124
    MOVEF_F 170.0 VLV_GREEN_124
    MOVEF_F 330.0 VLV_BLUE_124
    MOVEF_F 10.0 VLV_VALUENEGRO_124
    MOVEF_F 100.0 VLV_VALUEBLANCO_124
    MOVEF_F 147.0 VLV_RWHITE_124
    MOVEF_F 143.0 VLV_GWHITE_124
    MOVEF_F 160.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    MOVEF_F 0.0 VLV_COLOR_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_124
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_124
  for1221:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor1221
  forbody1221:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_124
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_124 VLV_RGB_124
    DATAF tmpf1226
    DATA8 flag1226
    DIVF VLV_RRAW_124 VLV_RWHITE_124 tmpf1226
    CP_EQF 0.0 VLV_RWHITE_124 flag1226
    SELECTF flag1226 0.0 tmpf1226 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    DATAF tmpf1230
    DATA8 flag1230
    DIVF VLV_GRAW_124 VLV_GWHITE_124 tmpf1230
    CP_EQF 0.0 VLV_GWHITE_124 flag1230
    SELECTF flag1230 0.0 tmpf1230 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    DATAF tmpf1234
    DATA8 flag1234
    DIVF VLV_BRAW_124 VLV_BWHITE_124 tmpf1234
    CP_EQF 0.0 VLV_BWHITE_124 flag1234
    SELECTF flag1234 0.0 tmpf1234 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_RNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.3 VLV_GNORMA_124
    DATA8 flag1240
	CP_GTF F.2 F.3 flag1240
	SELECTF flag1240 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_BNORMA_124
    DATA8 flag1242
	CP_GTF F.1 F.2 flag1242
	SELECTF flag1242 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    DATA32 milliseconds1244
	MOVEF_32 5.0 milliseconds1244
	DATA32 timer1244
	TIMER_WAIT milliseconds1244 timer1244
	TIMER_READY timer1244
    ADDF VLV_J_124 1.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody1221
  endfor1221:
    MOVEF_F 1.0 VLV_J_124
  for1246:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor1246
  forbody1246:
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_124
    ADDF F.0 F.1 VLV_RNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_124
    ADDF F.0 F.1 VLV_GNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_124
    ADDF F.0 F.1 VLV_BNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_124
    ADDF F.0 F.1 VLV_MAX_124
    ADDF VLV_J_124 2.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody1246
  endfor1246:
    DATAF tmpf1264
    DATA8 flag1264
    DIVF VLV_RNORM_124 VLV_REPS_124 tmpf1264
    CP_EQF 0.0 VLV_REPS_124 flag1264
    SELECTF flag1264 0.0 tmpf1264 VLV_RNORM_124

    DATAF tmpf1265
    DATA8 flag1265
    DIVF VLV_GNORM_124 VLV_REPS_124 tmpf1265
    CP_EQF 0.0 VLV_REPS_124 flag1265
    SELECTF flag1265 0.0 tmpf1265 VLV_GNORM_124

    DATAF tmpf1266
    DATA8 flag1266
    DIVF VLV_BNORM_124 VLV_REPS_124 tmpf1266
    CP_EQF 0.0 VLV_REPS_124 flag1266
    SELECTF flag1266 0.0 tmpf1266 VLV_BNORM_124

    DATAF tmpf1267
    DATA8 flag1267
    DIVF VLV_MAX_124 VLV_REPS_124 tmpf1267
    CP_EQF 0.0 VLV_REPS_124 flag1267
    SELECTF flag1267 0.0 tmpf1267 VLV_MAX_124

    DATA8 flag1268
	CP_LTF VLV_RNORM_124 VLV_GNORM_124 flag1268
	SELECTF flag1268 VLV_RNORM_124 VLV_GNORM_124 F.0
    DATA8 flag1269
	CP_LTF F.0 VLV_BNORM_124 flag1269
	SELECTF flag1269 F.0 VLV_BNORM_124 VLV_MIN_124
    JR_NEQF VLV_MAX_124 VLV_MIN_124 else1270_1
    MOVEF_F 0.0 VLV_HUE_124
    JR endif1270
  else1270_1:
    JR_NEQF VLV_MAX_124 VLV_RNORM_124 else1270_2
    JR_LTF VLV_GNORM_124 VLV_BNORM_124 else1271_1
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_124 VLV_MIN_124 F.1
    DATAF tmpf1275
    DATA8 flag1275
    DIVF F.0 F.1 tmpf1275
    CP_EQF 0.0 F.1 flag1275
    SELECTF flag1275 0.0 tmpf1275 VLV_HUE_124

    JR endif1271
  else1271_1:
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf1279
    DATA8 flag1279
    DIVF F.1 F.2 tmpf1279
    CP_EQF 0.0 F.2 flag1279
    SELECTF flag1279 0.0 tmpf1279 F.0

    ADDF F.0 360.0 VLV_HUE_124
  else1271_2:
  endif1271:
    JR endif1270
  else1270_2:
    JR_NEQF VLV_MAX_124 VLV_GNORM_124 else1270_3
    SUBF VLV_BNORM_124 VLV_RNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf1284
    DATA8 flag1284
    DIVF F.1 F.2 tmpf1284
    CP_EQF 0.0 F.2 flag1284
    SELECTF flag1284 0.0 tmpf1284 F.0

    ADDF F.0 120.0 VLV_HUE_124
    JR endif1270
  else1270_3:
    SUBF VLV_RNORM_124 VLV_GNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf1289
    DATA8 flag1289
    DIVF F.1 F.2 tmpf1289
    CP_EQF 0.0 F.2 flag1289
    SELECTF flag1289 0.0 tmpf1289 F.0

    ADDF F.0 240.0 VLV_HUE_124
  else1270_4:
  endif1270:
    JR_NEQF VLV_MAX_124 0.0 else1291_1
    MOVEF_F 0.0 VLV_SAT_124
    JR endif1291
  else1291_1:
    DATAF tmpf1292
    DATA8 flag1292
    DIVF VLV_MIN_124 VLV_MAX_124 tmpf1292
    CP_EQF 0.0 VLV_MAX_124 flag1292
    SELECTF flag1292 0.0 tmpf1292 F.0

    SUBF 1.0 F.0 VLV_SAT_124
  else1291_2:
  endif1291:
    MOVEF_F VLV_MAX_124 VLV_VALUE_124
    ADDF VLV_VALUEBLANCO_124 VLV_VALUENEGRO_124 F.0
    DATAF tmpf1295
    DATA8 flag1295
    DIVF F.0 2.0 tmpf1295
    CP_EQF 0.0 2.0 flag1295
    SELECTF flag1295 0.0 tmpf1295 VLV_RGBGREY_124

    ADDF VLV_RNORM_124 VLV_GNORM_124 F.1
    ADDF F.1 VLV_BNORM_124 F.0
    JR_GTF F.0 3.0 else1296_1
    MOVEF_F 0.0 VLV_COLOR_124
    JR endif1296
  else1296_1:
    JR_GTEQF VLV_SAT_124 0.4 else1299_1
    JR_LTEQF VLV_VALUE_124 VLV_RGBGREY_124 else1300_1
    MOVEF_F 6.0 VLV_COLOR_124
    JR endif1300
  else1300_1:
    MOVEF_F 1.0 VLV_COLOR_124
  else1300_2:
  endif1300:
    JR endif1299
  else1299_1:
    JR_LTF VLV_HUE_124 0.0 else1301_1
    JR_GTEQF VLV_HUE_124 VLV_RED_124 else1301_1
    MOVEF_F 5.0 VLV_COLOR_124
    JR endif1301
  else1301_1:
    JR_LTF VLV_HUE_124 VLV_RED_124 else1301_2
    JR_GTEQF VLV_HUE_124 VLV_YELLOW_124 else1301_2
    MOVEF_F 4.0 VLV_COLOR_124
    JR endif1301
  else1301_2:
    JR_LTF VLV_HUE_124 VLV_YELLOW_124 else1301_3
    JR_GTEQF VLV_HUE_124 VLV_GREEN_124 else1301_3
    MOVEF_F 3.0 VLV_COLOR_124
    JR endif1301
  else1301_3:
    JR_LTF VLV_HUE_124 VLV_GREEN_124 else1301_4
    JR_GTEQF VLV_HUE_124 VLV_BLUE_124 else1301_4
    MOVEF_F 2.0 VLV_COLOR_124
    JR endif1301
  else1301_4:
    MOVEF_F 5.0 VLV_COLOR_124
  else1301_5:
  endif1301:
  else1299_2:
  endif1299:
  else1296_2:
  endif1296:
    STRINGS VALUE_FORMATTED VLV_RRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_124 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1317:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer1318
	DATA8 no1318
	DATA8 mode81318
	
	MOVEF_8 4.0 no1318
	SUB8 no1318 1 no1318
	DIV8 no1318 4 layer1318
	MATH MOD8 no1318 4 no1318

	MOVEF_8 4.0 mode81318
	
	INPUT_DEVICE READY_RAW layer1318 no1318 0 mode81318 0
    MOVEF_F 15.0 VLV_RED_125
    MOVEF_F 60.0 VLV_YELLOW_125
    MOVEF_F 170.0 VLV_GREEN_125
    MOVEF_F 330.0 VLV_BLUE_125
    MOVEF_F 10.0 VLV_VALUENEGRO_125
    MOVEF_F 100.0 VLV_VALUEBLANCO_125
    MOVEF_F 147.0 VLV_RWHITE_125
    MOVEF_F 143.0 VLV_GWHITE_125
    MOVEF_F 160.0 VLV_BWHITE_125
    MOVEF_F 0.0 VLV_HUE_125
    MOVEF_F 0.0 VLV_SAT_125
    MOVEF_F 0.0 VLV_VALUE_125
    MOVEF_F 0.0 VLV_COLOR_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_125
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_125
  for1324:
    JR_GTF VLV_J_125 VLV_REPS_125 endfor1324
  forbody1324:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_125
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_125 VLV_RGB_125
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_125 VLV_RGB_125
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_125 VLV_RGB_125
    DATAF tmpf1329
    DATA8 flag1329
    DIVF VLV_RRAW_125 VLV_RWHITE_125 tmpf1329
    CP_EQF 0.0 VLV_RWHITE_125 flag1329
    SELECTF flag1329 0.0 tmpf1329 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_RNORMA_125
    DATAF tmpf1333
    DATA8 flag1333
    DIVF VLV_GRAW_125 VLV_GWHITE_125 tmpf1333
    CP_EQF 0.0 VLV_GWHITE_125 flag1333
    SELECTF flag1333 0.0 tmpf1333 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_GNORMA_125
    DATAF tmpf1337
    DATA8 flag1337
    DIVF VLV_BRAW_125 VLV_BWHITE_125 tmpf1337
    CP_EQF 0.0 VLV_BWHITE_125 flag1337
    SELECTF flag1337 0.0 tmpf1337 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_BNORMA_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.2 VLV_RNORMA_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.3 VLV_GNORMA_125
    DATA8 flag1343
	CP_GTF F.2 F.3 flag1343
	SELECTF flag1343 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_125 F.2 VLV_BNORMA_125
    DATA8 flag1345
	CP_GTF F.1 F.2 flag1345
	SELECTF flag1345 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_MAXA_125
    DATA32 milliseconds1347
	MOVEF_32 5.0 milliseconds1347
	DATA32 timer1347
	TIMER_WAIT milliseconds1347 timer1347
	TIMER_READY timer1347
    ADDF VLV_J_125 1.0 VLV_J_125
    JR_LTEQF VLV_J_125 VLV_REPS_125 forbody1324
  endfor1324:
    MOVEF_F 1.0 VLV_J_125
  for1349:
    JR_GTF VLV_J_125 VLV_REPS_125 endfor1349
  forbody1349:
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_RNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_125
    ADDF F.0 F.1 VLV_RNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_GNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_125
    ADDF F.0 F.1 VLV_GNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_BNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_125
    ADDF F.0 F.1 VLV_BNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_MAXA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_125
    ADDF F.0 F.1 VLV_MAX_125
    ADDF VLV_J_125 2.0 VLV_J_125
    JR_LTEQF VLV_J_125 VLV_REPS_125 forbody1349
  endfor1349:
    DATAF tmpf1367
    DATA8 flag1367
    DIVF VLV_RNORM_125 VLV_REPS_125 tmpf1367
    CP_EQF 0.0 VLV_REPS_125 flag1367
    SELECTF flag1367 0.0 tmpf1367 VLV_RNORM_125

    DATAF tmpf1368
    DATA8 flag1368
    DIVF VLV_GNORM_125 VLV_REPS_125 tmpf1368
    CP_EQF 0.0 VLV_REPS_125 flag1368
    SELECTF flag1368 0.0 tmpf1368 VLV_GNORM_125

    DATAF tmpf1369
    DATA8 flag1369
    DIVF VLV_BNORM_125 VLV_REPS_125 tmpf1369
    CP_EQF 0.0 VLV_REPS_125 flag1369
    SELECTF flag1369 0.0 tmpf1369 VLV_BNORM_125

    DATAF tmpf1370
    DATA8 flag1370
    DIVF VLV_MAX_125 VLV_REPS_125 tmpf1370
    CP_EQF 0.0 VLV_REPS_125 flag1370
    SELECTF flag1370 0.0 tmpf1370 VLV_MAX_125

    DATA8 flag1371
	CP_LTF VLV_RNORM_125 VLV_GNORM_125 flag1371
	SELECTF flag1371 VLV_RNORM_125 VLV_GNORM_125 F.0
    DATA8 flag1372
	CP_LTF F.0 VLV_BNORM_125 flag1372
	SELECTF flag1372 F.0 VLV_BNORM_125 VLV_MIN_125
    JR_NEQF VLV_MAX_125 VLV_MIN_125 else1373_1
    MOVEF_F 0.0 VLV_HUE_125
    JR endif1373
  else1373_1:
    JR_NEQF VLV_MAX_125 VLV_RNORM_125 else1373_2
    JR_LTF VLV_GNORM_125 VLV_BNORM_125 else1374_1
    SUBF VLV_GNORM_125 VLV_BNORM_125 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_125 VLV_MIN_125 F.1
    DATAF tmpf1378
    DATA8 flag1378
    DIVF F.0 F.1 tmpf1378
    CP_EQF 0.0 F.1 flag1378
    SELECTF flag1378 0.0 tmpf1378 VLV_HUE_125

    JR endif1374
  else1374_1:
    SUBF VLV_GNORM_125 VLV_BNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1382
    DATA8 flag1382
    DIVF F.1 F.2 tmpf1382
    CP_EQF 0.0 F.2 flag1382
    SELECTF flag1382 0.0 tmpf1382 F.0

    ADDF F.0 360.0 VLV_HUE_125
  else1374_2:
  endif1374:
    JR endif1373
  else1373_2:
    JR_NEQF VLV_MAX_125 VLV_GNORM_125 else1373_3
    SUBF VLV_BNORM_125 VLV_RNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1387
    DATA8 flag1387
    DIVF F.1 F.2 tmpf1387
    CP_EQF 0.0 F.2 flag1387
    SELECTF flag1387 0.0 tmpf1387 F.0

    ADDF F.0 120.0 VLV_HUE_125
    JR endif1373
  else1373_3:
    SUBF VLV_RNORM_125 VLV_GNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1392
    DATA8 flag1392
    DIVF F.1 F.2 tmpf1392
    CP_EQF 0.0 F.2 flag1392
    SELECTF flag1392 0.0 tmpf1392 F.0

    ADDF F.0 240.0 VLV_HUE_125
  else1373_4:
  endif1373:
    JR_NEQF VLV_MAX_125 0.0 else1394_1
    MOVEF_F 0.0 VLV_SAT_125
    JR endif1394
  else1394_1:
    DATAF tmpf1395
    DATA8 flag1395
    DIVF VLV_MIN_125 VLV_MAX_125 tmpf1395
    CP_EQF 0.0 VLV_MAX_125 flag1395
    SELECTF flag1395 0.0 tmpf1395 F.0

    SUBF 1.0 F.0 VLV_SAT_125
  else1394_2:
  endif1394:
    MOVEF_F VLV_MAX_125 VLV_VALUE_125
    ADDF VLV_VALUEBLANCO_125 VLV_VALUENEGRO_125 F.0
    DATAF tmpf1398
    DATA8 flag1398
    DIVF F.0 2.0 tmpf1398
    CP_EQF 0.0 2.0 flag1398
    SELECTF flag1398 0.0 tmpf1398 VLV_RGBGREY_125

    ADDF VLV_RNORM_125 VLV_GNORM_125 F.1
    ADDF F.1 VLV_BNORM_125 F.0
    JR_GTF F.0 3.0 else1399_1
    MOVEF_F 0.0 VLV_COLOR_125
    JR endif1399
  else1399_1:
    JR_GTEQF VLV_SAT_125 0.4 else1402_1
    JR_LTEQF VLV_VALUE_125 VLV_RGBGREY_125 else1403_1
    MOVEF_F 6.0 VLV_COLOR_125
    JR endif1403
  else1403_1:
    MOVEF_F 1.0 VLV_COLOR_125
  else1403_2:
  endif1403:
    JR endif1402
  else1402_1:
    JR_LTF VLV_HUE_125 0.0 else1404_1
    JR_GTEQF VLV_HUE_125 VLV_RED_125 else1404_1
    MOVEF_F 5.0 VLV_COLOR_125
    JR endif1404
  else1404_1:
    JR_LTF VLV_HUE_125 VLV_RED_125 else1404_2
    JR_GTEQF VLV_HUE_125 VLV_YELLOW_125 else1404_2
    MOVEF_F 4.0 VLV_COLOR_125
    JR endif1404
  else1404_2:
    JR_LTF VLV_HUE_125 VLV_YELLOW_125 else1404_3
    JR_GTEQF VLV_HUE_125 VLV_GREEN_125 else1404_3
    MOVEF_F 3.0 VLV_COLOR_125
    JR endif1404
  else1404_3:
    JR_LTF VLV_HUE_125 VLV_GREEN_125 else1404_4
    JR_GTEQF VLV_HUE_125 VLV_BLUE_125 else1404_4
    MOVEF_F 2.0 VLV_COLOR_125
    JR endif1404
  else1404_4:
    MOVEF_F 5.0 VLV_COLOR_125
  else1404_5:
  endif1404:
  else1402_2:
  endif1402:
  else1399_2:
  endif1399:
    STRINGS VALUE_FORMATTED VLV_RRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_125 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_125 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_125 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1420:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_134 0.0 else1421_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1421
  else1421_1:
    JR_NEQF VLV_COLOR_134 1.0 else1421_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1421
  else1421_2:
    JR_NEQF VLV_COLOR_134 2.0 else1421_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1421
  else1421_3:
    JR_NEQF VLV_COLOR_134 3.0 else1421_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1421
  else1421_4:
    JR_NEQF VLV_COLOR_134 4.0 else1421_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1421
  else1421_5:
    JR_NEQF VLV_COLOR_134 5.0 else1421_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1421
  else1421_6:
    JR_NEQF VLV_COLOR_134 6.0 else1421_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1421
  else1421_7:
    JR_NEQF VLV_COLOR_134 7.0 else1421_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1421_8:
  endif1421:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_0:
    DATA32 milliseconds1430
	MOVEF_32 150.0 milliseconds1430
	DATA32 timer1430
	TIMER_WAIT milliseconds1430 timer1430
	TIMER_READY timer1430
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 50.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1431:
    MOVEF_F 40.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1432:
    ADDF VGV_NUM_BLOQUES 1.0 VGV_NUM_BLOQUES
    MOVEF_F 80.0 VLV_V_107
    MOVEF_F 360.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1434:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    DATA32 milliseconds1436
	MOVEF_32 100.0 milliseconds1436
	DATA32 timer1436
	TIMER_WAIT milliseconds1436 timer1436
	TIMER_READY timer1436
    MOVEF_F -60.0 VLV_V_120
    MOVEF_F 500.0 VLV_T_120
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1437:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F -80.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1438:
RETSUB_F_COGER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_0:
SUB_F_SOLTAR_0:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 250.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1439:
    MOVEF_F 40.0 VLV_V_117
    MOVEF_F -70.0 VLV_AENC_117
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1440:
    SUBF VGV_NUM_BLOQUES 4.0 F.0
    DATA8 flag1442
	CP_GTF 0.0 F.0 flag1442
	SELECTF flag1442 0.0 F.0 VGV_NUM_BLOQUES
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F -660.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1443:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1444:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1445:
RETSUB_F_SOLTAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_0:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
