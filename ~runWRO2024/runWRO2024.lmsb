DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_111
DATAF VLV_AENC_111
DATAF VLV_V_121
DATAF VLV_AENC_121
DATAF VLV_V1_37
DATAF VLV_V2_37
DATAF VLV_ANGLE_37
DATAF VLV_VELOCIDAD_77
DATAF VLV_KP_77
DATAF VLV_KI_77
DATAF VLV_KD_77
DATAF VLV_ENCODER_77
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V_107
DATAF VLV_AENC_107
DATAF VLV_VELOCIDAD_78
DATAF VLV_KP_78
DATAF VLV_KI_78
DATAF VLV_KD_78
DATAF VLV_ENCODER_78
DATAF VLV_VELOCIDAD_91
DATAF VLV_KP_91
DATAF VLV_KI_91
DATAF VLV_KD_91
DATAF VLV_READER_91
DATAF VLV_VEL_B_137
DATAF VLV_VEL_C_137
DATAF VLV_VELOCIDAD_73
DATAF VLV_KP_73
DATAF VLV_KI_73
DATAF VLV_KD_73
DATAF VLV_VELOCIDAD_85
DATAF VLV_KP_85
DATAF VLV_KI_85
DATAF VLV_KD_85
DATAF VLV_ENCODER_85
DATAF VLV_VELOCIDAD_92
DATAF VLV_KP_92
DATAF VLV_KI_92
DATAF VLV_KD_92
DATAF VLV_READER_92
DATAF VLV_VELOCIDAD_86
DATAF VLV_KP_86
DATAF VLV_KI_86
DATAF VLV_KD_86
DATAF VLV_ENCODER_86
DATAF VLV_V1_38
DATAF VLV_V2_38
DATAF VLV_ANGLE_38
DATAF VLV_V0_58
DATAF VLV_VMAX_58
DATAF VLV_KP_58
DATAF VLV_KI_58
DATAF VLV_KD_58
DATAF VLV_ACCELENCODER_58
DATAF VLV_VELOCIDAD_74
DATAF VLV_KP_74
DATAF VLV_KI_74
DATAF VLV_KD_74
DATAF VLV_VMAX_100
DATAF VLV_KP_100
DATAF VLV_KI_100
DATAF VLV_KD_100
DATAF VLV_COLOR_134
DATAF VLV_REPS_122
DATAF VLV_COLOR_122
DATAF VLV_REPS_123
DATAF VLV_COLOR_123
DATAF VLV_REPS_124
DATAF VLV_COLOR_124
DATAF VLV_REPS_125
DATAF VLV_COLOR_125
DATAF VLV_V_117
DATAF VLV_AENC_117
DATAF VLV_V_120
DATAF VLV_T_120
DATAF VLV_COLOR_126
DATAF VLV_COLOR_127
DATAF VLV_COLOR_128
DATAF VLV_COLOR_129
DATAF VLV_READ_138
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DIAMETER
DATAF VGV_CENTRO
DATAF VGV_NUM_BLOQUES
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_CORRECCION
DATAF VGV_G1
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAS VLV_I_37 252
DATAS VLV_D_37 252
DATAF VLV_SIGNO_37
DATAF VLV_VMIN_37
DATAF VLV_VMAX_37
DATAF VLV_ENCODR_37
DATAS VLV_I_38 252
DATAS VLV_D_38 252
DATAF VLV_SIGNO_38
DATAF VLV_VMIN_38
DATAF VLV_VMAX_38
DATAF VLV_ENCODR_38
DATAS VLV_I_58 252
DATAS VLV_D_58 252
DATAF VLV_U_58
DATAF VLV_ERROR_58
DATAF VLV_OLDERROR_58
DATAF VLV_ERRSUM_58
DATAF VLV_VEL_58
DATAF VLV_SENTIDO_58
DATAS VLV_I_73 252
DATAS VLV_D_73 252
DATAF VLV_ERROR_73
DATAF VLV_OLDERROR_73
DATAF VLV_ERRSUM_73
DATAF VLV_U_73
DATAF VLV_SENTIDO_73
DATAS VLV_I_74 252
DATAS VLV_D_74 252
DATAF VLV_ERROR_74
DATAF VLV_OLDERROR_74
DATAF VLV_ERRSUM_74
DATAF VLV_U_74
DATAF VLV_SENTIDO_74
DATAS VLV_I_77 252
DATAS VLV_D_77 252
DATAF VLV_ERROR_77
DATAF VLV_OLDERROR_77
DATAF VLV_ERRSUM_77
DATAF VLV_U_77
DATAF VLV_SENTIDO_77
DATAF VLV_START_C_77
DATAF VLV_ENCODER_C_77
DATAS VLV_I_78 252
DATAS VLV_D_78 252
DATAF VLV_ERROR_78
DATAF VLV_OLDERROR_78
DATAF VLV_ERRSUM_78
DATAF VLV_U_78
DATAF VLV_SENTIDO_78
DATAF VLV_START_C_78
DATAF VLV_ENCODER_C_78
DATAS VLV_I_85 252
DATAS VLV_D_85 252
DATAF VLV_ERROR_85
DATAF VLV_OLDERROR_85
DATAF VLV_ERRSUM_85
DATAF VLV_U_85
DATAF VLV_SENTIDO_85
DATAF VLV_START_C_85
DATAF VLV_ENCODER_C_85
DATAS VLV_I_86 252
DATAS VLV_D_86 252
DATAF VLV_ERROR_86
DATAF VLV_OLDERROR_86
DATAF VLV_ERRSUM_86
DATAF VLV_U_86
DATAF VLV_SENTIDO_86
DATAF VLV_START_C_86
DATAF VLV_ENCODER_C_86
DATAS VLV_I_91 252
DATAS VLV_D_91 252
DATAF VLV_ERROR_91
DATAF VLV_OLDERROR_91
DATAF VLV_ERRSUM_91
DATAF VLV_U_91
DATAF VLV_SENTIDO_91
DATAF VLV_READER1_91
DATAF VLV_READER2_91
DATAS VLV_I_92 252
DATAS VLV_D_92 252
DATAF VLV_ERROR_92
DATAF VLV_OLDERROR_92
DATAF VLV_ERRSUM_92
DATAF VLV_U_92
DATAF VLV_SENTIDO_92
DATAF VLV_READER1_92
DATAF VLV_READER2_92
DATAS VLV_I_100 252
DATAS VLV_D_100 252
DATAF VLV_V0_100
DATAF VLV_ACCELENCODER_100
DATAF VLV_U_100
DATAF VLV_ERRSUM_100
DATAF VLV_OLDERROR_100
DATAF VLV_VEL_100
DATAF VLV_SENTIDO_100
DATAF VLV_ERROR_100
DATAF VLV_ENCDIFF_107
DATAF VLV_SIGNO_107
DATAF VLV_ENCDIFF_111
DATAF VLV_SIGNO_111
DATAF VLV_SAFETYTIMER_111
DATAF VLV_ENCDIFF_117
DATAF VLV_SIGNO_117
DATAF VLV_ENCDIFF_121
DATAF VLV_SIGNO_121
DATAF VLV_SAFETYTIMER_121
DATAF VLV_RED_122
DATAF VLV_YELLOW_122
DATAF VLV_GREEN_122
DATAF VLV_BLUE_122
DATAF VLV_VALUENEGRO_122
DATAF VLV_VALUEBLANCO_122
DATAF VLV_RWHITE_122
DATAF VLV_GWHITE_122
DATAF VLV_BWHITE_122
DATAF VLV_HUE_122
DATAF VLV_SAT_122
DATAF VLV_VALUE_122
ARRAY16 VLV_RNORMA_122 2
ARRAY16 VLV_GNORMA_122 2
ARRAY16 VLV_BNORMA_122 2
ARRAY16 VLV_MAXA_122 2
DATAF VLV_J_122
ARRAY16 VLV_RGB_122 2
DATAF VLV_RRAW_122
DATAF VLV_GRAW_122
DATAF VLV_BRAW_122
DATAF VLV_RNORM_122
DATAF VLV_GNORM_122
DATAF VLV_BNORM_122
DATAF VLV_MAX_122
DATAF VLV_MIN_122
DATAF VLV_RGBGREY_122
DATAF VLV_RED_123
DATAF VLV_YELLOW_123
DATAF VLV_GREEN_123
DATAF VLV_BLUE_123
DATAF VLV_VALUENEGRO_123
DATAF VLV_VALUEBLANCO_123
DATAF VLV_RWHITE_123
DATAF VLV_GWHITE_123
DATAF VLV_BWHITE_123
DATAF VLV_HUE_123
DATAF VLV_SAT_123
DATAF VLV_VALUE_123
ARRAY16 VLV_RNORMA_123 2
ARRAY16 VLV_GNORMA_123 2
ARRAY16 VLV_BNORMA_123 2
ARRAY16 VLV_MAXA_123 2
DATAF VLV_J_123
ARRAY16 VLV_RGB_123 2
DATAF VLV_RRAW_123
DATAF VLV_GRAW_123
DATAF VLV_BRAW_123
DATAF VLV_RNORM_123
DATAF VLV_GNORM_123
DATAF VLV_BNORM_123
DATAF VLV_MAX_123
DATAF VLV_MIN_123
DATAF VLV_RGBGREY_123
DATAF VLV_RED_124
DATAF VLV_YELLOW_124
DATAF VLV_GREEN_124
DATAF VLV_BLUE_124
DATAF VLV_VALUENEGRO_124
DATAF VLV_VALUEBLANCO_124
DATAF VLV_RWHITE_124
DATAF VLV_GWHITE_124
DATAF VLV_BWHITE_124
DATAF VLV_HUE_124
DATAF VLV_SAT_124
DATAF VLV_VALUE_124
ARRAY16 VLV_RNORMA_124 2
ARRAY16 VLV_GNORMA_124 2
ARRAY16 VLV_BNORMA_124 2
ARRAY16 VLV_MAXA_124 2
DATAF VLV_J_124
ARRAY16 VLV_RGB_124 2
DATAF VLV_RRAW_124
DATAF VLV_GRAW_124
DATAF VLV_BRAW_124
DATAF VLV_RNORM_124
DATAF VLV_GNORM_124
DATAF VLV_BNORM_124
DATAF VLV_MAX_124
DATAF VLV_MIN_124
DATAF VLV_RGBGREY_124
DATAF VLV_RED_125
DATAF VLV_YELLOW_125
DATAF VLV_GREEN_125
DATAF VLV_BLUE_125
DATAF VLV_VALUENEGRO_125
DATAF VLV_VALUEBLANCO_125
DATAF VLV_RWHITE_125
DATAF VLV_GWHITE_125
DATAF VLV_BWHITE_125
DATAF VLV_HUE_125
DATAF VLV_SAT_125
DATAF VLV_VALUE_125
ARRAY16 VLV_RNORMA_125 2
ARRAY16 VLV_GNORMA_125 2
ARRAY16 VLV_BNORMA_125 2
ARRAY16 VLV_MAXA_125 2
DATAF VLV_J_125
ARRAY16 VLV_RGB_125 2
DATAF VLV_RRAW_125
DATAF VLV_GRAW_125
DATAF VLV_BRAW_125
DATAF VLV_RNORM_125
DATAF VLV_GNORM_125
DATAF VLV_BNORM_125
DATAF VLV_MAX_125
DATAF VLV_MIN_125
DATAF VLV_RGBGREY_125
DATAF VLV_GRADOS_90_137
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_VELOCIDAD_78
    MOVEF_F 0.0 VLV_KP_78
    MOVEF_F 0.0 VLV_KI_78
    MOVEF_F 0.0 VLV_KD_78
    MOVEF_F 0.0 VLV_ENCODER_78
    MOVEF_F 0.0 VLV_VELOCIDAD_91
    MOVEF_F 0.0 VLV_KP_91
    MOVEF_F 0.0 VLV_KI_91
    MOVEF_F 0.0 VLV_KD_91
    MOVEF_F 0.0 VLV_READER_91
    MOVEF_F 0.0 VLV_VEL_B_137
    MOVEF_F 0.0 VLV_VEL_C_137
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VELOCIDAD_85
    MOVEF_F 0.0 VLV_KP_85
    MOVEF_F 0.0 VLV_KI_85
    MOVEF_F 0.0 VLV_KD_85
    MOVEF_F 0.0 VLV_ENCODER_85
    MOVEF_F 0.0 VLV_VELOCIDAD_92
    MOVEF_F 0.0 VLV_KP_92
    MOVEF_F 0.0 VLV_KI_92
    MOVEF_F 0.0 VLV_KD_92
    MOVEF_F 0.0 VLV_READER_92
    MOVEF_F 0.0 VLV_VELOCIDAD_86
    MOVEF_F 0.0 VLV_KP_86
    MOVEF_F 0.0 VLV_KI_86
    MOVEF_F 0.0 VLV_KD_86
    MOVEF_F 0.0 VLV_ENCODER_86
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
    MOVEF_F 0.0 VLV_V0_58
    MOVEF_F 0.0 VLV_VMAX_58
    MOVEF_F 0.0 VLV_KP_58
    MOVEF_F 0.0 VLV_KI_58
    MOVEF_F 0.0 VLV_KD_58
    MOVEF_F 0.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_VELOCIDAD_74
    MOVEF_F 0.0 VLV_KP_74
    MOVEF_F 0.0 VLV_KI_74
    MOVEF_F 0.0 VLV_KD_74
    MOVEF_F 0.0 VLV_VMAX_100
    MOVEF_F 0.0 VLV_KP_100
    MOVEF_F 0.0 VLV_KI_100
    MOVEF_F 0.0 VLV_KD_100
    MOVEF_F 0.0 VLV_COLOR_134
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_125
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_T_120
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_COLOR_129
    MOVEF_F 0.0 VLV_READ_138
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    STRINGS DUPLICATE '' VLV_I_37
    STRINGS DUPLICATE '' VLV_D_37
    MOVEF_F 0.0 VLV_SIGNO_37
    MOVEF_F 0.0 VLV_VMIN_37
    MOVEF_F 0.0 VLV_VMAX_37
    MOVEF_F 0.0 VLV_ENCODR_37
    STRINGS DUPLICATE '' VLV_I_38
    STRINGS DUPLICATE '' VLV_D_38
    MOVEF_F 0.0 VLV_SIGNO_38
    MOVEF_F 0.0 VLV_VMIN_38
    MOVEF_F 0.0 VLV_VMAX_38
    MOVEF_F 0.0 VLV_ENCODR_38
    STRINGS DUPLICATE '' VLV_I_58
    STRINGS DUPLICATE '' VLV_D_58
    MOVEF_F 0.0 VLV_U_58
    MOVEF_F 0.0 VLV_ERROR_58
    MOVEF_F 0.0 VLV_OLDERROR_58
    MOVEF_F 0.0 VLV_ERRSUM_58
    MOVEF_F 0.0 VLV_VEL_58
    MOVEF_F 0.0 VLV_SENTIDO_58
    STRINGS DUPLICATE '' VLV_I_73
    STRINGS DUPLICATE '' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MOVEF_F 0.0 VLV_SENTIDO_73
    STRINGS DUPLICATE '' VLV_I_74
    STRINGS DUPLICATE '' VLV_D_74
    MOVEF_F 0.0 VLV_ERROR_74
    MOVEF_F 0.0 VLV_OLDERROR_74
    MOVEF_F 0.0 VLV_ERRSUM_74
    MOVEF_F 0.0 VLV_U_74
    MOVEF_F 0.0 VLV_SENTIDO_74
    STRINGS DUPLICATE '' VLV_I_77
    STRINGS DUPLICATE '' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MOVEF_F 0.0 VLV_SENTIDO_77
    MOVEF_F 0.0 VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
    STRINGS DUPLICATE '' VLV_I_78
    STRINGS DUPLICATE '' VLV_D_78
    MOVEF_F 0.0 VLV_ERROR_78
    MOVEF_F 0.0 VLV_OLDERROR_78
    MOVEF_F 0.0 VLV_ERRSUM_78
    MOVEF_F 0.0 VLV_U_78
    MOVEF_F 0.0 VLV_SENTIDO_78
    MOVEF_F 0.0 VLV_START_C_78
    MOVEF_F 0.0 VLV_ENCODER_C_78
    STRINGS DUPLICATE '' VLV_I_85
    STRINGS DUPLICATE '' VLV_D_85
    MOVEF_F 0.0 VLV_ERROR_85
    MOVEF_F 0.0 VLV_OLDERROR_85
    MOVEF_F 0.0 VLV_ERRSUM_85
    MOVEF_F 0.0 VLV_U_85
    MOVEF_F 0.0 VLV_SENTIDO_85
    MOVEF_F 0.0 VLV_START_C_85
    MOVEF_F 0.0 VLV_ENCODER_C_85
    STRINGS DUPLICATE '' VLV_I_86
    STRINGS DUPLICATE '' VLV_D_86
    MOVEF_F 0.0 VLV_ERROR_86
    MOVEF_F 0.0 VLV_OLDERROR_86
    MOVEF_F 0.0 VLV_ERRSUM_86
    MOVEF_F 0.0 VLV_U_86
    MOVEF_F 0.0 VLV_SENTIDO_86
    MOVEF_F 0.0 VLV_START_C_86
    MOVEF_F 0.0 VLV_ENCODER_C_86
    STRINGS DUPLICATE '' VLV_I_91
    STRINGS DUPLICATE '' VLV_D_91
    MOVEF_F 0.0 VLV_ERROR_91
    MOVEF_F 0.0 VLV_OLDERROR_91
    MOVEF_F 0.0 VLV_ERRSUM_91
    MOVEF_F 0.0 VLV_U_91
    MOVEF_F 0.0 VLV_SENTIDO_91
    MOVEF_F 0.0 VLV_READER1_91
    MOVEF_F 0.0 VLV_READER2_91
    STRINGS DUPLICATE '' VLV_I_92
    STRINGS DUPLICATE '' VLV_D_92
    MOVEF_F 0.0 VLV_ERROR_92
    MOVEF_F 0.0 VLV_OLDERROR_92
    MOVEF_F 0.0 VLV_ERRSUM_92
    MOVEF_F 0.0 VLV_U_92
    MOVEF_F 0.0 VLV_SENTIDO_92
    MOVEF_F 0.0 VLV_READER1_92
    MOVEF_F 0.0 VLV_READER2_92
    STRINGS DUPLICATE '' VLV_I_100
    STRINGS DUPLICATE '' VLV_D_100
    MOVEF_F 0.0 VLV_V0_100
    MOVEF_F 0.0 VLV_ACCELENCODER_100
    MOVEF_F 0.0 VLV_U_100
    MOVEF_F 0.0 VLV_ERRSUM_100
    MOVEF_F 0.0 VLV_OLDERROR_100
    MOVEF_F 0.0 VLV_VEL_100
    MOVEF_F 0.0 VLV_SENTIDO_100
    MOVEF_F 0.0 VLV_ERROR_100
    MOVEF_F 0.0 VLV_ENCDIFF_107
    MOVEF_F 0.0 VLV_SIGNO_107
    MOVEF_F 0.0 VLV_ENCDIFF_111
    MOVEF_F 0.0 VLV_SIGNO_111
    MOVEF_F 0.0 VLV_SAFETYTIMER_111
    MOVEF_F 0.0 VLV_ENCDIFF_117
    MOVEF_F 0.0 VLV_SIGNO_117
    MOVEF_F 0.0 VLV_ENCDIFF_121
    MOVEF_F 0.0 VLV_SIGNO_121
    MOVEF_F 0.0 VLV_SAFETYTIMER_121
    MOVEF_F 0.0 VLV_RED_122
    MOVEF_F 0.0 VLV_YELLOW_122
    MOVEF_F 0.0 VLV_GREEN_122
    MOVEF_F 0.0 VLV_BLUE_122
    MOVEF_F 0.0 VLV_VALUENEGRO_122
    MOVEF_F 0.0 VLV_VALUEBLANCO_122
    MOVEF_F 0.0 VLV_RWHITE_122
    MOVEF_F 0.0 VLV_GWHITE_122
    MOVEF_F 0.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_MAXA_122
    MOVEF_F 0.0 VLV_J_122
    CALL ARRAYCREATE_FLOAT VLV_RGB_122
    MOVEF_F 0.0 VLV_RRAW_122
    MOVEF_F 0.0 VLV_GRAW_122
    MOVEF_F 0.0 VLV_BRAW_122
    MOVEF_F 0.0 VLV_RNORM_122
    MOVEF_F 0.0 VLV_GNORM_122
    MOVEF_F 0.0 VLV_BNORM_122
    MOVEF_F 0.0 VLV_MAX_122
    MOVEF_F 0.0 VLV_MIN_122
    MOVEF_F 0.0 VLV_RGBGREY_122
    MOVEF_F 0.0 VLV_RED_123
    MOVEF_F 0.0 VLV_YELLOW_123
    MOVEF_F 0.0 VLV_GREEN_123
    MOVEF_F 0.0 VLV_BLUE_123
    MOVEF_F 0.0 VLV_VALUENEGRO_123
    MOVEF_F 0.0 VLV_VALUEBLANCO_123
    MOVEF_F 0.0 VLV_RWHITE_123
    MOVEF_F 0.0 VLV_GWHITE_123
    MOVEF_F 0.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_MAXA_123
    MOVEF_F 0.0 VLV_J_123
    CALL ARRAYCREATE_FLOAT VLV_RGB_123
    MOVEF_F 0.0 VLV_RRAW_123
    MOVEF_F 0.0 VLV_GRAW_123
    MOVEF_F 0.0 VLV_BRAW_123
    MOVEF_F 0.0 VLV_RNORM_123
    MOVEF_F 0.0 VLV_GNORM_123
    MOVEF_F 0.0 VLV_BNORM_123
    MOVEF_F 0.0 VLV_MAX_123
    MOVEF_F 0.0 VLV_MIN_123
    MOVEF_F 0.0 VLV_RGBGREY_123
    MOVEF_F 0.0 VLV_RED_124
    MOVEF_F 0.0 VLV_YELLOW_124
    MOVEF_F 0.0 VLV_GREEN_124
    MOVEF_F 0.0 VLV_BLUE_124
    MOVEF_F 0.0 VLV_VALUENEGRO_124
    MOVEF_F 0.0 VLV_VALUEBLANCO_124
    MOVEF_F 0.0 VLV_RWHITE_124
    MOVEF_F 0.0 VLV_GWHITE_124
    MOVEF_F 0.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_MAXA_124
    MOVEF_F 0.0 VLV_J_124
    CALL ARRAYCREATE_FLOAT VLV_RGB_124
    MOVEF_F 0.0 VLV_RRAW_124
    MOVEF_F 0.0 VLV_GRAW_124
    MOVEF_F 0.0 VLV_BRAW_124
    MOVEF_F 0.0 VLV_RNORM_124
    MOVEF_F 0.0 VLV_GNORM_124
    MOVEF_F 0.0 VLV_BNORM_124
    MOVEF_F 0.0 VLV_MAX_124
    MOVEF_F 0.0 VLV_MIN_124
    MOVEF_F 0.0 VLV_RGBGREY_124
    MOVEF_F 0.0 VLV_RED_125
    MOVEF_F 0.0 VLV_YELLOW_125
    MOVEF_F 0.0 VLV_GREEN_125
    MOVEF_F 0.0 VLV_BLUE_125
    MOVEF_F 0.0 VLV_VALUENEGRO_125
    MOVEF_F 0.0 VLV_VALUEBLANCO_125
    MOVEF_F 0.0 VLV_RWHITE_125
    MOVEF_F 0.0 VLV_GWHITE_125
    MOVEF_F 0.0 VLV_BWHITE_125
    MOVEF_F 0.0 VLV_HUE_125
    MOVEF_F 0.0 VLV_SAT_125
    MOVEF_F 0.0 VLV_VALUE_125
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_MAXA_125
    MOVEF_F 0.0 VLV_J_125
    CALL ARRAYCREATE_FLOAT VLV_RGB_125
    MOVEF_F 0.0 VLV_RRAW_125
    MOVEF_F 0.0 VLV_GRAW_125
    MOVEF_F 0.0 VLV_BRAW_125
    MOVEF_F 0.0 VLV_RNORM_125
    MOVEF_F 0.0 VLV_GNORM_125
    MOVEF_F 0.0 VLV_BNORM_125
    MOVEF_F 0.0 VLV_MAX_125
    MOVEF_F 0.0 VLV_MIN_125
    MOVEF_F 0.0 VLV_RGBGREY_125
    MOVEF_F 0.0 VLV_GRADOS_90_137
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 1
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1114
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1114:
    JR_NEQ32 SUBPROGRAM 1 dispatch1115
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1115:
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_VELOCIDAD_78
    MOVEF_F 0.0 VLV_KP_78
    MOVEF_F 0.0 VLV_KI_78
    MOVEF_F 0.0 VLV_KD_78
    MOVEF_F 0.0 VLV_ENCODER_78
    MOVEF_F 0.0 VLV_VELOCIDAD_91
    MOVEF_F 0.0 VLV_KP_91
    MOVEF_F 0.0 VLV_KI_91
    MOVEF_F 0.0 VLV_KD_91
    MOVEF_F 0.0 VLV_READER_91
    MOVEF_F 0.0 VLV_VEL_B_137
    MOVEF_F 0.0 VLV_VEL_C_137
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VELOCIDAD_85
    MOVEF_F 0.0 VLV_KP_85
    MOVEF_F 0.0 VLV_KI_85
    MOVEF_F 0.0 VLV_KD_85
    MOVEF_F 0.0 VLV_ENCODER_85
    MOVEF_F 0.0 VLV_VELOCIDAD_92
    MOVEF_F 0.0 VLV_KP_92
    MOVEF_F 0.0 VLV_KI_92
    MOVEF_F 0.0 VLV_KD_92
    MOVEF_F 0.0 VLV_READER_92
    MOVEF_F 0.0 VLV_VELOCIDAD_86
    MOVEF_F 0.0 VLV_KP_86
    MOVEF_F 0.0 VLV_KI_86
    MOVEF_F 0.0 VLV_KD_86
    MOVEF_F 0.0 VLV_ENCODER_86
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
    MOVEF_F 0.0 VLV_V0_58
    MOVEF_F 0.0 VLV_VMAX_58
    MOVEF_F 0.0 VLV_KP_58
    MOVEF_F 0.0 VLV_KI_58
    MOVEF_F 0.0 VLV_KD_58
    MOVEF_F 0.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_VELOCIDAD_74
    MOVEF_F 0.0 VLV_KP_74
    MOVEF_F 0.0 VLV_KI_74
    MOVEF_F 0.0 VLV_KD_74
    MOVEF_F 0.0 VLV_VMAX_100
    MOVEF_F 0.0 VLV_KP_100
    MOVEF_F 0.0 VLV_KI_100
    MOVEF_F 0.0 VLV_KD_100
    MOVEF_F 0.0 VLV_COLOR_134
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_125
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_T_120
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_COLOR_129
    MOVEF_F 0.0 VLV_READ_138
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0003 VGV_KI
    MOVEF_F 7.0 VGV_KD
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.44444444444444 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB0 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB0:
    DATA32 tmp1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp1
    JR_NEQ32 0 tmp1 alreadylaunched1
    OBJECT_START TF_DISPLAY_0
  alreadylaunched1:
    DATA32 tmp2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp2
    JR_NEQ32 0 tmp2 alreadylaunched2
    OBJECT_START TF_STOP_0
  alreadylaunched2:
    WRITE32 ENDSUB_F_MAINPRUEBA_0:CALLSUB3 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAINPRUEBA_0
CALLSUB3:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 1.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 4.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    DATA8 layer7
	DATA8 no7
	DATA8 mode87
	
	MOVEF_8 4.0 no7
	SUB8 no7 1 no7
	DIV8 no7 4 layer7
	MATH MOD8 no7 4 no7

	MOVEF_8 0.0 mode87
	
	INPUT_DEVICE READY_RAW layer7 no7 0 mode87 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while9:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 700.0 endwhile9
  whilebody9:
    MOVEF_8 40.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 700.0 whilebody9
  endwhile9:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    DATA32 milliseconds14
	MOVEF_32 100.0 milliseconds14
	DATA32 timer14
	TIMER_WAIT milliseconds14 timer14
	TIMER_READY timer14
    CALL MOTOR.SCHEDULE 'A' -50.0 0.0 350.0 0.0 'True' 

	DATA8 layer15
	DATA8 nos15
	DATA8 busy15
	CALL MOTORDECODEPORTSDESCRIPTOR 'A' layer15 nos15
	JR_EQ8 0 nos15 motornotbusy15
  motorwaiting15:
	OUTPUT_TEST layer15 nos15 busy15
	JR_EQ8 busy15 0 motornotbusy15
	SLEEP
	JR motorwaiting15
  motornotbusy15:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds18
	MOVEF_32 100.0 milliseconds18
	DATA32 timer18
	TIMER_WAIT milliseconds18 timer18
	TIMER_READY timer18
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while19:
  whilebody19:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf37
    DATA8 flag37
    DIVF F.2 0.05 tmpf37
    CP_EQF 0.0 0.05 flag37
    SELECTF flag37 0.0 tmpf37 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf45
    DATA8 flag45
    DIVF F.1 0.05 tmpf45
    CP_EQF 0.0 0.05 flag45
    SELECTF flag45 0.0 tmpf45 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds59
	MOVEF_32 50.0 milliseconds59
	DATA32 timer59
	TIMER_WAIT milliseconds59 timer59
	TIMER_READY timer59
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody19
  endwhile19:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_STOP_0:
  while62:
  whilebody62:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else63_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEASAFE_2:CALLSUB68 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEASAFE_2
CALLSUB68:
    MOVEF_F 20.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB69 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB69:
    PROGRAM_STOP -1
  else63_1:
  endif63:
    JR whilebody62
  endwhile62:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_MAINPRUEBA_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB71:
  while72:
    CALL BUTTONS.CURRENT S.1
    CALL NE_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 endwhile72
  whilebody72:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'U' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else75_1
    WRITE32 ENDSUB_F_COGER_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB78:
    JR endif75
  else75_1:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'D' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else75_2
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB81:
    JR endif75
  else75_2:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'L' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else75_3
    DATA32 milliseconds84
	MOVEF_32 1000.0 milliseconds84
	DATA32 timer84
	TIMER_WAIT milliseconds84 timer84
	TIMER_READY timer84
    MOVEF_F -20.0 VLV_VEL_B_137
    MOVEF_F 20.0 VLV_VEL_C_137
    WRITE32 ENDSUB_F_GIRO90BLOQUES_2:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GIRO90BLOQUES_2
CALLSUB85:
    JR endif75
  else75_3:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'R' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else75_4
    DATA32 milliseconds88
	MOVEF_32 1000.0 milliseconds88
	DATA32 timer88
	TIMER_WAIT milliseconds88 timer88
	TIMER_READY timer88
    MOVEF_F 20.0 VLV_VEL_B_137
    MOVEF_F -20.0 VLV_VEL_C_137
    WRITE32 ENDSUB_F_GIRO90BLOQUES_2:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GIRO90BLOQUES_2
CALLSUB89:
    JR endif75
  else75_4:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
  else75_5:
  endif75:
    CALL BUTTONS.CURRENT S.1
    CALL NE_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 whilebody72
  endwhile72:
    WRITE32 ENDSUB_F_FINPRUEBA_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINPRUEBA_0
CALLSUB94:
RETSUB_F_MAINPRUEBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAINPRUEBA_0:
SUB_F_CASOPSOE_0:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB95:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB96:
    MOVEF_F 40.0 VLV_VELOCIDAD_73
    MOVEF_F VGV_KP VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB97:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB98:
    MOVEF_F 30.0 VLV_VELOCIDAD_85
    MOVEF_F VGV_KP VLV_KP_85
    MOVEF_F VGV_KI VLV_KI_85
    MULF VGV_KD 1.5 VLV_KD_85
    MOVEF_F 27.0 VLV_ENCODER_85
    WRITE32 ENDSUB_F_SL31PIDENC_5:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENC_5
CALLSUB100:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 90.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB101:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB102:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB103:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB104:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB105:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 7.5 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB106:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB107:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB108:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB109:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB110:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB111:
    MOVEF_F 30.0 VLV_VELOCIDAD_78
    MOVEF_F VGV_KP VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 5.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB112:
    MOVEF_F 30.0 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB113:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 25.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB114:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_37
    MULF VGV_VELOCIDAD 0.2 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB117:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 13.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB119:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB120:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB122:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB125:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_86
    MULF VGV_KP 1.5 VLV_KP_86
    MOVEF_F VGV_KI VLV_KI_86
    MOVEF_F VGV_KD VLV_KD_86
    MOVEF_F 5.0 VLV_ENCODER_86
    WRITE32 ENDSUB_F_SL31PIDENCF_5:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENCF_5
CALLSUB128:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 4.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB130:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 1.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB132:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB135:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB137:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB138:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 8.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB139:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB140:
    MOVEF_F 15.0 VLV_VELOCIDAD_85
    MOVEF_F VGV_KP VLV_KP_85
    MOVEF_F VGV_KI VLV_KI_85
    MOVEF_F VGV_KD VLV_KD_85
    MOVEF_F 8.5 VLV_ENCODER_85
    WRITE32 ENDSUB_F_SL31PIDENC_5:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENC_5
CALLSUB141:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB142:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB143:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB144:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB145:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB148:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_78
    MULF VGV_KP 1.5 VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 3.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB151:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB153:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB155:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB158:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MULF VGV_KP 1.5 VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 20.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB161:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB163:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_73
    MULF VGV_KP 1.5 VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB166:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB168:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB171:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 8.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB173:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB174:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 4.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB175:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB176:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB177:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB178:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 9.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB179:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 91.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB180:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB181:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB182:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB183:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_37
    MULF VGV_VELOCIDAD -0.2 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB186:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_91
    MOVEF_F VGV_KP VLV_KP_91
    MOVEF_F VGV_KI VLV_KI_91
    MOVEF_F VGV_KD VLV_KD_91
    MOVEF_F 4.0 VLV_READER_91
    WRITE32 ENDSUB_F_SL1SPIDCROSS_5:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_5
CALLSUB188:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB190:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB193:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 10.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB195:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB196:
RETSUB_F_CASOPSOE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOPSOE_0:
SUB_F_CASOVOX_0:
RETSUB_F_CASOVOX_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOVOX_0:
SUB_F_FINPRUEBA_0:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEASAFE_2:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEASAFE_2
CALLSUB199:
    MOVEF_F 20.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB200:
    PROGRAM_STOP -1
RETSUB_F_FINPRUEBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINPRUEBA_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf205
    DATA8 flag205
    DIVF F.1 F.2 tmpf205
    CP_EQF 0.0 F.2 flag205
    SELECTF flag205 0.0 tmpf205 F.0

    DATAF tmpf206
    DATA8 flag206
    DIVF F.0 VLV_DIAMETRO_1 tmpf206
    CP_EQF 0.0 VLV_DIAMETRO_1 flag206
    SELECTF flag206 0.0 tmpf206 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    DATAF tmpf209
    DATA8 flag209
    DIVF VGV_CORRECCION 30.0 tmpf209
    CP_EQF 0.0 30.0 flag209
    SELECTF flag209 0.0 tmpf209 F.2

    MULF F.2 VLV_VELOCIDAD_1 F.1
    ADDF F.0 F.1 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while215:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile215
  whilebody215:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 1.2 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody215
  endwhile215:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_37
    STRINGS DUPLICATE 'C' VLV_D_37
    DATAF tmpf231
    DATA8 flag231
    DIVF VLV_V1_37 VLV_V2_37 tmpf231
    CP_EQF 0.0 VLV_V2_37 flag231
    SELECTF flag231 0.0 tmpf231 F.0

    DATAF tmpf232
    DATA8 flag232
    DIVF VLV_V1_37 VLV_V2_37 tmpf232
    CP_EQF 0.0 VLV_V2_37 flag232
    SELECTF flag232 0.0 tmpf232 F.2

    MATH ABS F.2 F.1
    DATAF tmpf234
    DATA8 flag234
    DIVF F.0 F.1 tmpf234
    CP_EQF 0.0 F.1 flag234
    SELECTF flag234 0.0 tmpf234 VLV_SIGNO_37

    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag237
	CP_LTF F.0 F.1 flag237
	SELECTF flag237 F.0 F.1 VLV_VMIN_37
    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag240
	CP_GTF F.0 F.1 flag240
	SELECTF flag240 F.0 F.1 VLV_VMAX_37
    MULF VLV_ANGLE_37 VGV_G1 F.0
    MULF VLV_SIGNO_37 VLV_VMIN_37 F.4
    DATAF tmpf243
    DATA8 flag243
    DIVF F.4 VLV_VMAX_37 tmpf243
    CP_EQF 0.0 VLV_VMAX_37 flag243
    SELECTF flag243 0.0 tmpf243 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf245
    DATA8 flag245
    DIVF -2.0 F.2 tmpf245
    CP_EQF 0.0 F.2 flag245
    SELECTF flag245 0.0 tmpf245 F.1

    MULF F.0 F.1 VLV_ENCODR_37
    CALL TEXT.APPEND VLV_I_37 VLV_D_37 S.0
    MATH NEGATE VLV_V1_37 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_37 VLV_ENCODR_37 'True'

	DATA8 layer249
	DATA8 nos249
	DATA8 busy249
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer249 nos249
	JR_EQ8 0 nos249 motornotbusy249
  motorwaiting249:
	OUTPUT_TEST layer249 nos249 busy249
	JR_EQ8 busy249 0 motornotbusy249
	SLEEP
	JR motorwaiting249
  motornotbusy249:
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    DATA32 milliseconds250
	MOVEF_32 200.0 milliseconds250
	DATA32 timer250
	TIMER_WAIT milliseconds250 timer250
	TIMER_READY timer250
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_GUNIVENCMMF_3:
    STRINGS DUPLICATE 'B' VLV_I_38
    STRINGS DUPLICATE 'C' VLV_D_38
    DATAF tmpf251
    DATA8 flag251
    DIVF VLV_V1_38 VLV_V2_38 tmpf251
    CP_EQF 0.0 VLV_V2_38 flag251
    SELECTF flag251 0.0 tmpf251 F.0

    DATAF tmpf252
    DATA8 flag252
    DIVF VLV_V1_38 VLV_V2_38 tmpf252
    CP_EQF 0.0 VLV_V2_38 flag252
    SELECTF flag252 0.0 tmpf252 F.2

    MATH ABS F.2 F.1
    DATAF tmpf254
    DATA8 flag254
    DIVF F.0 F.1 tmpf254
    CP_EQF 0.0 F.1 flag254
    SELECTF flag254 0.0 tmpf254 VLV_SIGNO_38

    MATH ABS VLV_V1_38 F.0
    MATH ABS VLV_V2_38 F.1
    DATA8 flag257
	CP_LTF F.0 F.1 flag257
	SELECTF flag257 F.0 F.1 VLV_VMIN_38
    MATH ABS VLV_V1_38 F.0
    MATH ABS VLV_V2_38 F.1
    DATA8 flag260
	CP_GTF F.0 F.1 flag260
	SELECTF flag260 F.0 F.1 VLV_VMAX_38
    MULF VLV_ANGLE_38 VGV_G1 F.0
    MULF VLV_SIGNO_38 VLV_VMIN_38 F.4
    DATAF tmpf263
    DATA8 flag263
    DIVF F.4 VLV_VMAX_38 tmpf263
    CP_EQF 0.0 VLV_VMAX_38 flag263
    SELECTF flag263 0.0 tmpf263 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf265
    DATA8 flag265
    DIVF -2.0 F.2 tmpf265
    CP_EQF 0.0 F.2 flag265
    SELECTF flag265 0.0 tmpf265 F.1

    MULF F.0 F.1 VLV_ENCODR_38
    CALL TEXT.APPEND VLV_I_38 VLV_D_38 S.0
    MATH NEGATE VLV_V1_38 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_38 VLV_ENCODR_38 'False'

	DATA8 layer269
	DATA8 nos269
	DATA8 busy269
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer269 nos269
	JR_EQ8 0 nos269 motornotbusy269
  motorwaiting269:
	OUTPUT_TEST layer269 nos269 busy269
	JR_EQ8 busy269 0 motornotbusy269
	SLEEP
	JR motorwaiting269
  motornotbusy269:
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
RETSUB_F_GUNIVENCMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMMF_3:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_58
    STRINGS DUPLICATE 'C' VLV_D_58
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf272
    DATA8 flag272
    DIVF VLV_ACCELENCODER_58 F.1 tmpf272
    CP_EQF 0.0 F.1 flag272
    SELECTF flag272 0.0 tmpf272 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_U_58
    MOVEF_F 0.0 VLV_ERROR_58
    MOVEF_F 0.0 VLV_OLDERROR_58
    MOVEF_F 0.0 VLV_ERRSUM_58
    CALL MOTOR.RESETCOUNT 'C'
  while275:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or276
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile275
  or276:
  whilebody275:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf280
    DATA8 flag280
    DIVF F.3 VLV_ACCELENCODER_58 tmpf280
    CP_EQF 0.0 VLV_ACCELENCODER_58 flag280
    SELECTF flag280 0.0 tmpf280 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_58 VLV_V0_58 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_58 VLV_VEL_58
    DATA8 flag285
	CP_LTF VLV_VEL_58 VLV_VMAX_58 flag285
	SELECTF flag285 VLV_VEL_58 VLV_VMAX_58 VLV_VEL_58
    MATH ABS VLV_VEL_58 F.0
    DATAF tmpf287
    DATA8 flag287
    DIVF VLV_VEL_58 F.0 tmpf287
    CP_EQF 0.0 F.0 flag287
    SELECTF flag287 0.0 tmpf287 VLV_SENTIDO_58

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_58 VLV_ERROR_58
    ADDF VLV_ERRSUM_58 VLV_ERROR_58 VLV_ERRSUM_58
    MULF VLV_ERROR_58 VLV_KP_58 F.1
    SUBF VLV_ERROR_58 VLV_OLDERROR_58 F.3
    MULF F.3 VLV_KD_58 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_58 VLV_KI_58 F.1
    ADDF F.0 F.1 VLV_U_58
    CALL TEXT.APPEND VLV_I_58 VLV_D_58 S.0
    ADDF VLV_VEL_58 VLV_U_58 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_58 VLV_U_58 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_58 VLV_OLDERROR_58
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody275
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody275
  endwhile275:
    CALL TEXT.APPEND VLV_I_58 VLV_D_58 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PID_4:
    MULF VLV_VELOCIDAD_73 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_73
    STRINGS DUPLICATE 'B' VLV_I_73
    STRINGS DUPLICATE 'C' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MATH ABS VLV_VELOCIDAD_73 F.0
    DATAF tmpf312
    DATA8 flag312
    DIVF VLV_VELOCIDAD_73 F.0 tmpf312
    CP_EQF 0.0 F.0 flag312
    SELECTF flag312 0.0 tmpf312 VLV_SENTIDO_73

  while313:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or314
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile313
  or314:
  whilebody313:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_73 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_73
    ADDF VLV_ERRSUM_73 VLV_ERROR_73 VLV_ERRSUM_73
    MULF VLV_ERROR_73 VLV_KP_73 F.1
    SUBF VLV_ERROR_73 VLV_OLDERROR_73 F.3
    MULF F.3 VLV_KD_73 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_73 VLV_KI_73 F.1
    ADDF F.0 F.1 VLV_U_73
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    ADDF VLV_VELOCIDAD_73 VLV_U_73 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_73 VLV_U_73 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_73 VLV_OLDERROR_73
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody313
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody313
  endwhile313:
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PID_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PID_4:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_74 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_74
    STRINGS DUPLICATE 'B' VLV_I_74
    STRINGS DUPLICATE 'C' VLV_D_74
    MOVEF_F 0.0 VLV_ERROR_74
    MOVEF_F 0.0 VLV_OLDERROR_74
    MOVEF_F 0.0 VLV_ERRSUM_74
    MOVEF_F 0.0 VLV_U_74
    MATH ABS VLV_VELOCIDAD_74 F.0
    DATAF tmpf340
    DATA8 flag340
    DIVF VLV_VELOCIDAD_74 F.0 tmpf340
    CP_EQF 0.0 F.0 flag340
    SELECTF flag340 0.0 tmpf340 VLV_SENTIDO_74

  while341:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or342
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile341
  or342:
  whilebody341:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_74 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_74
    ADDF VLV_ERRSUM_74 VLV_ERROR_74 VLV_ERRSUM_74
    MULF VLV_ERROR_74 VLV_KP_74 F.1
    SUBF VLV_ERROR_74 VLV_OLDERROR_74 F.3
    MULF F.3 VLV_KD_74 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_74 VLV_KI_74 F.1
    ADDF F.0 F.1 VLV_U_74
    CALL TEXT.APPEND VLV_I_74 VLV_D_74 S.0
    ADDF VLV_VELOCIDAD_74 VLV_U_74 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_74 VLV_U_74 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_74 VLV_OLDERROR_74
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody341
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody341
  endwhile341:
    CALL TEXT.APPEND VLV_I_74 VLV_D_74 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_77 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_77
    STRINGS DUPLICATE 'B' VLV_I_77
    STRINGS DUPLICATE 'C' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MATH ABS VLV_VELOCIDAD_77 F.0
    DATAF tmpf368
    DATA8 flag368
    DIVF VLV_VELOCIDAD_77 F.0 tmpf368
    CP_EQF 0.0 F.0 flag368
    SELECTF flag368 0.0 tmpf368 VLV_SENTIDO_77

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf371
    DATA8 flag371
    DIVF VLV_ENCODER_77 F.1 tmpf371
    CP_EQF 0.0 F.1 flag371
    SELECTF flag371 0.0 tmpf371 F.0

    MULF F.0 360.0 VLV_ENCODER_77
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
  while374:
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_GTEQF F.0 VLV_ENCODER_77 endwhile374
  whilebody374:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_77 VLV_ENCODER_C_77
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_77 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_77
    ADDF VLV_ERRSUM_77 VLV_ERROR_77 VLV_ERRSUM_77
    MULF VLV_ERROR_77 VLV_KP_77 F.1
    SUBF VLV_ERROR_77 VLV_OLDERROR_77 F.3
    MULF F.3 VLV_KD_77 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_77 VLV_KI_77 F.1
    ADDF F.0 F.1 VLV_U_77
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    ADDF VLV_VELOCIDAD_77 VLV_U_77 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_77 VLV_U_77 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_77 VLV_OLDERROR_77
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_LTF F.0 VLV_ENCODER_77 whilebody374
  endwhile374:
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_78 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_78
    STRINGS DUPLICATE 'B' VLV_I_78
    STRINGS DUPLICATE 'C' VLV_D_78
    MOVEF_F 0.0 VLV_ERROR_78
    MOVEF_F 0.0 VLV_OLDERROR_78
    MOVEF_F 0.0 VLV_ERRSUM_78
    MOVEF_F 0.0 VLV_U_78
    MATH ABS VLV_VELOCIDAD_78 F.0
    DATAF tmpf400
    DATA8 flag400
    DIVF VLV_VELOCIDAD_78 F.0 tmpf400
    CP_EQF 0.0 F.0 flag400
    SELECTF flag400 0.0 tmpf400 VLV_SENTIDO_78

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf403
    DATA8 flag403
    DIVF VLV_ENCODER_78 F.1 tmpf403
    CP_EQF 0.0 F.1 flag403
    SELECTF flag403 0.0 tmpf403 F.0

    MULF F.0 360.0 VLV_ENCODER_78
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_78
    MOVEF_F 0.0 VLV_ENCODER_C_78
  while406:
    MATH ABS VLV_ENCODER_C_78 F.0
    JR_GTEQF F.0 VLV_ENCODER_78 endwhile406
  whilebody406:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_78 VLV_ENCODER_C_78
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_78 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_78
    ADDF VLV_ERRSUM_78 VLV_ERROR_78 VLV_ERRSUM_78
    MULF VLV_ERROR_78 VLV_KP_78 F.1
    SUBF VLV_ERROR_78 VLV_OLDERROR_78 F.3
    MULF F.3 VLV_KD_78 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_78 VLV_KI_78 F.1
    ADDF F.0 F.1 VLV_U_78
    CALL TEXT.APPEND VLV_I_78 VLV_D_78 S.0
    ADDF VLV_VELOCIDAD_78 VLV_U_78 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_78 VLV_U_78 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_78 VLV_OLDERROR_78
    MATH ABS VLV_ENCODER_C_78 F.0
    JR_LTF F.0 VLV_ENCODER_78 whilebody406
  endwhile406:
    CALL TEXT.APPEND VLV_I_78 VLV_D_78 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL31PIDENC_5:
    MULF VLV_VELOCIDAD_85 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_85
    STRINGS DUPLICATE 'B' VLV_I_85
    STRINGS DUPLICATE 'C' VLV_D_85
    MOVEF_F 0.0 VLV_ERROR_85
    MOVEF_F 0.0 VLV_OLDERROR_85
    MOVEF_F 0.0 VLV_ERRSUM_85
    MOVEF_F 0.0 VLV_U_85
    MATH ABS VLV_VELOCIDAD_85 F.0
    DATAF tmpf432
    DATA8 flag432
    DIVF VLV_VELOCIDAD_85 F.0 tmpf432
    CP_EQF 0.0 F.0 flag432
    SELECTF flag432 0.0 tmpf432 VLV_SENTIDO_85

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf435
    DATA8 flag435
    DIVF VLV_ENCODER_85 F.1 tmpf435
    CP_EQF 0.0 F.1 flag435
    SELECTF flag435 0.0 tmpf435 F.0

    MULF F.0 360.0 VLV_ENCODER_85
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_85
    MOVEF_F 0.0 VLV_ENCODER_C_85
  while438:
    MATH ABS VLV_ENCODER_C_85 F.0
    JR_GTEQF F.0 VLV_ENCODER_85 endwhile438
  whilebody438:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_85 VLV_ENCODER_C_85
    CALL SENSOR.READPERCENT 3.0 F.2
    CALL SENSOR.READPERCENT 1.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_85 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_85
    ADDF VLV_ERRSUM_85 VLV_ERROR_85 VLV_ERRSUM_85
    MULF VLV_ERROR_85 VLV_KP_85 F.1
    SUBF VLV_ERROR_85 VLV_OLDERROR_85 F.3
    MULF F.3 VLV_KD_85 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_85 VLV_KI_85 F.1
    ADDF F.0 F.1 VLV_U_85
    CALL TEXT.APPEND VLV_I_85 VLV_D_85 S.0
    ADDF VLV_VELOCIDAD_85 VLV_U_85 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_85 VLV_U_85 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_85 VLV_OLDERROR_85
    MATH ABS VLV_ENCODER_C_85 F.0
    JR_LTF F.0 VLV_ENCODER_85 whilebody438
  endwhile438:
    CALL TEXT.APPEND VLV_I_85 VLV_D_85 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL31PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL31PIDENC_5:
SUB_F_SL31PIDENCF_5:
    MULF VLV_VELOCIDAD_86 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_86
    STRINGS DUPLICATE 'B' VLV_I_86
    STRINGS DUPLICATE 'C' VLV_D_86
    MOVEF_F 0.0 VLV_ERROR_86
    MOVEF_F 0.0 VLV_OLDERROR_86
    MOVEF_F 0.0 VLV_ERRSUM_86
    MOVEF_F 0.0 VLV_U_86
    MATH ABS VLV_VELOCIDAD_86 F.0
    DATAF tmpf464
    DATA8 flag464
    DIVF VLV_VELOCIDAD_86 F.0 tmpf464
    CP_EQF 0.0 F.0 flag464
    SELECTF flag464 0.0 tmpf464 VLV_SENTIDO_86

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf467
    DATA8 flag467
    DIVF VLV_ENCODER_86 F.1 tmpf467
    CP_EQF 0.0 F.1 flag467
    SELECTF flag467 0.0 tmpf467 F.0

    MULF F.0 360.0 VLV_ENCODER_86
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_86
    MOVEF_F 0.0 VLV_ENCODER_C_86
  while470:
    MATH ABS VLV_ENCODER_C_86 F.0
    JR_GTEQF F.0 VLV_ENCODER_86 endwhile470
  whilebody470:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_86 VLV_ENCODER_C_86
    CALL SENSOR.READPERCENT 3.0 F.2
    CALL SENSOR.READPERCENT 1.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_86 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_86
    ADDF VLV_ERRSUM_86 VLV_ERROR_86 VLV_ERRSUM_86
    MULF VLV_ERROR_86 VLV_KP_86 F.1
    SUBF VLV_ERROR_86 VLV_OLDERROR_86 F.3
    MULF F.3 VLV_KD_86 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_86 VLV_KI_86 F.1
    ADDF F.0 F.1 VLV_U_86
    CALL TEXT.APPEND VLV_I_86 VLV_D_86 S.0
    ADDF VLV_VELOCIDAD_86 VLV_U_86 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_86 VLV_U_86 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_86 VLV_OLDERROR_86
    MATH ABS VLV_ENCODER_C_86 F.0
    JR_LTF F.0 VLV_ENCODER_86 whilebody470
  endwhile470:
    CALL TEXT.APPEND VLV_I_86 VLV_D_86 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL31PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL31PIDENCF_5:
SUB_F_SL1SPIDCROSS_5:
    MULF VLV_VELOCIDAD_91 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_91
    STRINGS DUPLICATE 'B' VLV_I_91
    STRINGS DUPLICATE 'C' VLV_D_91
    MOVEF_F 0.0 VLV_ERROR_91
    MOVEF_F 0.0 VLV_OLDERROR_91
    MOVEF_F 0.0 VLV_ERRSUM_91
    MOVEF_F 0.0 VLV_U_91
    MATH ABS VLV_VELOCIDAD_91 F.0
    DATAF tmpf496
    DATA8 flag496
    DIVF VLV_VELOCIDAD_91 F.0 tmpf496
    CP_EQF 0.0 F.0 flag496
    SELECTF flag496 0.0 tmpf496 VLV_SENTIDO_91

    JR_NEQF VLV_READER_91 3.0 else497_1
    MOVEF_F 1.0 VLV_READER1_91
    MOVEF_F 4.0 VLV_READER2_91
    JR endif497
  else497_1:
    MOVEF_F 3.0 VLV_READER1_91
    MOVEF_F 1.0 VLV_READER2_91
  else497_2:
  endif497:
  while498:
    CALL SENSOR.READPERCENT VLV_READER_91 F.0
    JR_LTEQF F.0 10.0 endwhile498
  whilebody498:
    CALL SENSOR.READPERCENT VLV_READER1_91 F.2
    CALL SENSOR.READPERCENT VLV_READER2_91 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_91 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_91
    ADDF VLV_ERRSUM_91 VLV_ERROR_91 VLV_ERRSUM_91
    MULF VLV_ERROR_91 VLV_KP_91 F.1
    SUBF VLV_ERROR_91 VLV_OLDERROR_91 F.3
    MULF F.3 VLV_KD_91 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_91 VLV_KI_91 F.1
    ADDF F.0 F.1 VLV_U_91
    CALL TEXT.APPEND VLV_I_91 VLV_D_91 S.0
    ADDF VLV_VELOCIDAD_91 VLV_U_91 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_91 VLV_U_91 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_91 VLV_OLDERROR_91
    CALL SENSOR.READPERCENT VLV_READER_91 F.0
    JR_GTF F.0 10.0 whilebody498
  endwhile498:
    CALL TEXT.APPEND VLV_I_91 VLV_D_91 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL1SPIDCROSS_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSS_5:
SUB_F_SL1SPIDCROSSF_5:
    MULF VLV_VELOCIDAD_92 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_92
    STRINGS DUPLICATE 'B' VLV_I_92
    STRINGS DUPLICATE 'C' VLV_D_92
    MOVEF_F 0.0 VLV_ERROR_92
    MOVEF_F 0.0 VLV_OLDERROR_92
    MOVEF_F 0.0 VLV_ERRSUM_92
    MOVEF_F 0.0 VLV_U_92
    MATH ABS VLV_VELOCIDAD_92 F.0
    DATAF tmpf522
    DATA8 flag522
    DIVF VLV_VELOCIDAD_92 F.0 tmpf522
    CP_EQF 0.0 F.0 flag522
    SELECTF flag522 0.0 tmpf522 VLV_SENTIDO_92

    JR_NEQF VLV_READER_92 3.0 else523_1
    MOVEF_F 1.0 VLV_READER1_92
    MOVEF_F 4.0 VLV_READER2_92
    JR endif523
  else523_1:
    MOVEF_F 3.0 VLV_READER1_92
    MOVEF_F 1.0 VLV_READER2_92
  else523_2:
  endif523:
  while524:
    CALL SENSOR.READPERCENT VLV_READER_92 F.0
    JR_LTEQF F.0 10.0 endwhile524
  whilebody524:
    CALL SENSOR.READPERCENT VLV_READER1_92 F.2
    CALL SENSOR.READPERCENT VLV_READER2_92 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_92 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_92
    ADDF VLV_ERRSUM_92 VLV_ERROR_92 VLV_ERRSUM_92
    MULF VLV_ERROR_92 VLV_KP_92 F.1
    SUBF VLV_ERROR_92 VLV_OLDERROR_92 F.3
    MULF F.3 VLV_KD_92 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_92 VLV_KI_92 F.1
    ADDF F.0 F.1 VLV_U_92
    CALL TEXT.APPEND VLV_I_92 VLV_D_92 S.0
    ADDF VLV_VELOCIDAD_92 VLV_U_92 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_92 VLV_U_92 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_92 VLV_OLDERROR_92
    CALL SENSOR.READPERCENT VLV_READER_92 F.0
    JR_GTF F.0 10.0 whilebody524
  endwhile524:
    CALL TEXT.APPEND VLV_I_92 VLV_D_92 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL1SPIDCROSSF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSSF_5:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_100 VGV_SENTIDO_MOTORES VLV_VMAX_100
    STRINGS DUPLICATE 'B' VLV_I_100
    STRINGS DUPLICATE 'C' VLV_D_100
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_100
    MOVEF_F 150.0 VLV_ACCELENCODER_100
    MOVEF_F 0.0 VLV_U_100
    MOVEF_F 0.0 VLV_ERRSUM_100
    MOVEF_F 0.0 VLV_OLDERROR_100
    CALL MOTOR.RESETCOUNT 'C'
  while549:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or550
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile549
  or550:
  whilebody549:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf554
    DATA8 flag554
    DIVF F.2 VLV_ACCELENCODER_100 tmpf554
    CP_EQF 0.0 VLV_ACCELENCODER_100 flag554
    SELECTF flag554 0.0 tmpf554 F.1

    ADDF VLV_VMAX_100 VLV_V0_100 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_100 VLV_VEL_100
    DATA8 flag558
	CP_LTF VLV_VEL_100 VLV_VMAX_100 flag558
	SELECTF flag558 VLV_VEL_100 VLV_VMAX_100 VLV_VEL_100
    MATH ABS VLV_VEL_100 F.0
    DATAF tmpf560
    DATA8 flag560
    DIVF VLV_VEL_100 F.0 tmpf560
    CP_EQF 0.0 F.0 flag560
    SELECTF flag560 0.0 tmpf560 VLV_SENTIDO_100

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_100 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_100
    MULF VLV_ERRSUM_100 0.9 F.0
    ADDF F.0 VLV_ERROR_100 VLV_ERRSUM_100
    MULF VLV_ERROR_100 VLV_KP_100 F.1
    SUBF VLV_ERROR_100 VLV_OLDERROR_100 F.3
    MULF F.3 VLV_KD_100 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_100 VLV_KI_100 F.1
    ADDF F.0 F.1 VLV_U_100
    CALL TEXT.APPEND VLV_I_100 VLV_D_100 S.0
    ADDF VLV_VEL_100 VLV_U_100 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_100 VLV_U_100 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_100 VLV_OLDERROR_100
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody549
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody549
  endwhile549:
    CALL TEXT.APPEND VLV_I_100 VLV_D_100 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_107 F.0 VLV_ENCDIFF_107
    MATH ABS VLV_ENCDIFF_107 F.0
    DATAF tmpf586
    DATA8 flag586
    DIVF VLV_ENCDIFF_107 F.0 tmpf586
    CP_EQF 0.0 F.0 flag586
    SELECTF flag586 0.0 tmpf586 VLV_SIGNO_107

    JR_EQF VLV_ENCDIFF_107 0.0 else587_1
  while588:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 15.0 endwhile588
  whilebody588:
    MULF VLV_SIGNO_107 VLV_V_107 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 15.0 whilebody588
  endwhile588:
    CALL MOTOR.STOP 'A' 'True'
  else587_1:
  endif587:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEASAFE_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_111 F.0 VLV_ENCDIFF_111
    MATH ABS VLV_ENCDIFF_111 F.0
    DATAF tmpf601
    DATA8 flag601
    DIVF VLV_ENCDIFF_111 F.0 tmpf601
    CP_EQF 0.0 F.0 flag601
    SELECTF flag601 0.0 tmpf601 VLV_SIGNO_111

    MATH ABS VLV_ENCDIFF_111 F.4
    DATAF tmpf603
    DATA8 flag603
    DIVF F.4 100.0 tmpf603
    CP_EQF 0.0 100.0 flag603
    SELECTF flag603 0.0 tmpf603 F.3

    DATAF tmpf604
    DATA8 flag604
    DIVF VLV_V_111 20.0 tmpf604
    CP_EQF 0.0 20.0 flag604
    SELECTF flag604 0.0 tmpf604 F.4

    DATAF tmpf605
    DATA8 flag605
    DIVF F.3 F.4 tmpf605
    CP_EQF 0.0 F.4 flag605
    SELECTF flag605 0.0 tmpf605 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag608
	CP_GTF F.0 400.0 flag608
	SELECTF flag608 F.0 400.0 VLV_SAFETYTIMER_111
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_111 0.0 else610_1
  while611:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile611
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 2000.0 endwhile611
  whilebody611:
    MULF VLV_SIGNO_111 VLV_V_111 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and618
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 2000.0 whilebody611
  and618:
  endwhile611:
    CALL MOTOR.STOP 'A' 'True'
  else610_1:
  endif610:
RETSUB_F_BMOVEASAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEASAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_117 F.0 VLV_ENCDIFF_117
    MATH ABS VLV_ENCDIFF_117 F.0
    DATAF tmpf627
    DATA8 flag627
    DIVF VLV_ENCDIFF_117 F.0 tmpf627
    CP_EQF 0.0 F.0 flag627
    SELECTF flag627 0.0 tmpf627 VLV_SIGNO_117

    JR_EQF VLV_ENCDIFF_117 0.0 else628_1
    MULF VLV_SIGNO_117 VLV_V_117 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while631:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_117 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile631
  whilebody631:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_117 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody631
  endwhile631:
    CALL MOTOR.STOP 'D' 'True'
  else628_1:
  endif628:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while640:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_120 endwhile640
  whilebody640:
    MOVEF_8 VLV_V_120 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_120 whilebody640
  endwhile640:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_121 F.0 VLV_ENCDIFF_121
    MATH ABS VLV_ENCDIFF_121 F.0
    DATAF tmpf648
    DATA8 flag648
    DIVF VLV_ENCDIFF_121 F.0 tmpf648
    CP_EQF 0.0 F.0 flag648
    SELECTF flag648 0.0 tmpf648 VLV_SIGNO_121

    MATH ABS VLV_ENCDIFF_121 F.4
    DATAF tmpf650
    DATA8 flag650
    DIVF F.4 100.0 tmpf650
    CP_EQF 0.0 100.0 flag650
    SELECTF flag650 0.0 tmpf650 F.3

    DATAF tmpf651
    DATA8 flag651
    DIVF VLV_V_121 20.0 tmpf651
    CP_EQF 0.0 20.0 flag651
    SELECTF flag651 0.0 tmpf651 F.4

    DATAF tmpf652
    DATA8 flag652
    DIVF F.3 F.4 tmpf652
    CP_EQF 0.0 F.4 flag652
    SELECTF flag652 0.0 tmpf652 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag655
	CP_GTF F.0 400.0 flag655
	SELECTF flag655 F.0 400.0 VLV_SAFETYTIMER_121
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_121 0.0 else657_1
  while658:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_121 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile658
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_121 endwhile658
  whilebody658:
    MULF VLV_SIGNO_121 VLV_V_121 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_121 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_121 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and669
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_121 whilebody658
  and669:
  endwhile658:
    CALL MOTOR.STOP 'D' 'True'
  else657_1:
  endif657:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer675
	DATA8 no675
	DATA8 mode8675
	
	MOVEF_8 1.0 no675
	SUB8 no675 1 no675
	DIV8 no675 4 layer675
	MATH MOD8 no675 4 no675

	MOVEF_8 4.0 mode8675
	
	INPUT_DEVICE READY_RAW layer675 no675 0 mode8675 0
    MOVEF_F 15.0 VLV_RED_122
    MOVEF_F 60.0 VLV_YELLOW_122
    MOVEF_F 170.0 VLV_GREEN_122
    MOVEF_F 330.0 VLV_BLUE_122
    MOVEF_F 10.0 VLV_VALUENEGRO_122
    MOVEF_F 100.0 VLV_VALUEBLANCO_122
    MOVEF_F 147.0 VLV_RWHITE_122
    MOVEF_F 143.0 VLV_GWHITE_122
    MOVEF_F 160.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    MOVEF_F 0.0 VLV_COLOR_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_122
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_122
  for681:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor681
  forbody681:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_122
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_122 VLV_RGB_122
    DATAF tmpf686
    DATA8 flag686
    DIVF VLV_RRAW_122 VLV_RWHITE_122 tmpf686
    CP_EQF 0.0 VLV_RWHITE_122 flag686
    SELECTF flag686 0.0 tmpf686 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    DATAF tmpf690
    DATA8 flag690
    DIVF VLV_GRAW_122 VLV_GWHITE_122 tmpf690
    CP_EQF 0.0 VLV_GWHITE_122 flag690
    SELECTF flag690 0.0 tmpf690 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    DATAF tmpf694
    DATA8 flag694
    DIVF VLV_BRAW_122 VLV_BWHITE_122 tmpf694
    CP_EQF 0.0 VLV_BWHITE_122 flag694
    SELECTF flag694 0.0 tmpf694 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_RNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.3 VLV_GNORMA_122
    DATA8 flag700
	CP_GTF F.2 F.3 flag700
	SELECTF flag700 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_BNORMA_122
    DATA8 flag702
	CP_GTF F.1 F.2 flag702
	SELECTF flag702 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    DATA32 milliseconds704
	MOVEF_32 5.0 milliseconds704
	DATA32 timer704
	TIMER_WAIT milliseconds704 timer704
	TIMER_READY timer704
    ADDF VLV_J_122 1.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody681
  endfor681:
    MOVEF_F 1.0 VLV_J_122
  for706:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor706
  forbody706:
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_122
    ADDF F.0 F.1 VLV_RNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_122
    ADDF F.0 F.1 VLV_GNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_122
    ADDF F.0 F.1 VLV_BNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_122
    ADDF F.0 F.1 VLV_MAX_122
    ADDF VLV_J_122 2.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody706
  endfor706:
    DATAF tmpf724
    DATA8 flag724
    DIVF VLV_RNORM_122 VLV_REPS_122 tmpf724
    CP_EQF 0.0 VLV_REPS_122 flag724
    SELECTF flag724 0.0 tmpf724 VLV_RNORM_122

    DATAF tmpf725
    DATA8 flag725
    DIVF VLV_GNORM_122 VLV_REPS_122 tmpf725
    CP_EQF 0.0 VLV_REPS_122 flag725
    SELECTF flag725 0.0 tmpf725 VLV_GNORM_122

    DATAF tmpf726
    DATA8 flag726
    DIVF VLV_BNORM_122 VLV_REPS_122 tmpf726
    CP_EQF 0.0 VLV_REPS_122 flag726
    SELECTF flag726 0.0 tmpf726 VLV_BNORM_122

    DATAF tmpf727
    DATA8 flag727
    DIVF VLV_MAX_122 VLV_REPS_122 tmpf727
    CP_EQF 0.0 VLV_REPS_122 flag727
    SELECTF flag727 0.0 tmpf727 VLV_MAX_122

    DATA8 flag728
	CP_LTF VLV_RNORM_122 VLV_GNORM_122 flag728
	SELECTF flag728 VLV_RNORM_122 VLV_GNORM_122 F.0
    DATA8 flag729
	CP_LTF F.0 VLV_BNORM_122 flag729
	SELECTF flag729 F.0 VLV_BNORM_122 VLV_MIN_122
    JR_NEQF VLV_MAX_122 VLV_MIN_122 else730_1
    MOVEF_F 0.0 VLV_HUE_122
    JR endif730
  else730_1:
    JR_NEQF VLV_MAX_122 VLV_RNORM_122 else730_2
    JR_LTF VLV_GNORM_122 VLV_BNORM_122 else731_1
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_122 VLV_MIN_122 F.1
    DATAF tmpf735
    DATA8 flag735
    DIVF F.0 F.1 tmpf735
    CP_EQF 0.0 F.1 flag735
    SELECTF flag735 0.0 tmpf735 VLV_HUE_122

    JR endif731
  else731_1:
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf739
    DATA8 flag739
    DIVF F.1 F.2 tmpf739
    CP_EQF 0.0 F.2 flag739
    SELECTF flag739 0.0 tmpf739 F.0

    ADDF F.0 360.0 VLV_HUE_122
  else731_2:
  endif731:
    JR endif730
  else730_2:
    JR_NEQF VLV_MAX_122 VLV_GNORM_122 else730_3
    SUBF VLV_BNORM_122 VLV_RNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf744
    DATA8 flag744
    DIVF F.1 F.2 tmpf744
    CP_EQF 0.0 F.2 flag744
    SELECTF flag744 0.0 tmpf744 F.0

    ADDF F.0 120.0 VLV_HUE_122
    JR endif730
  else730_3:
    SUBF VLV_RNORM_122 VLV_GNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf749
    DATA8 flag749
    DIVF F.1 F.2 tmpf749
    CP_EQF 0.0 F.2 flag749
    SELECTF flag749 0.0 tmpf749 F.0

    ADDF F.0 240.0 VLV_HUE_122
  else730_4:
  endif730:
    JR_NEQF VLV_MAX_122 0.0 else751_1
    MOVEF_F 0.0 VLV_SAT_122
    JR endif751
  else751_1:
    DATAF tmpf752
    DATA8 flag752
    DIVF VLV_MIN_122 VLV_MAX_122 tmpf752
    CP_EQF 0.0 VLV_MAX_122 flag752
    SELECTF flag752 0.0 tmpf752 F.0

    SUBF 1.0 F.0 VLV_SAT_122
  else751_2:
  endif751:
    MOVEF_F VLV_MAX_122 VLV_VALUE_122
    ADDF VLV_VALUEBLANCO_122 VLV_VALUENEGRO_122 F.0
    DATAF tmpf755
    DATA8 flag755
    DIVF F.0 2.0 tmpf755
    CP_EQF 0.0 2.0 flag755
    SELECTF flag755 0.0 tmpf755 VLV_RGBGREY_122

    ADDF VLV_RNORM_122 VLV_GNORM_122 F.1
    ADDF F.1 VLV_BNORM_122 F.0
    JR_GTF F.0 3.0 else756_1
    MOVEF_F 0.0 VLV_COLOR_122
    JR endif756
  else756_1:
    JR_GTEQF VLV_SAT_122 0.4 else759_1
    JR_LTEQF VLV_VALUE_122 VLV_RGBGREY_122 else760_1
    MOVEF_F 6.0 VLV_COLOR_122
    JR endif760
  else760_1:
    MOVEF_F 1.0 VLV_COLOR_122
  else760_2:
  endif760:
    JR endif759
  else759_1:
    JR_LTF VLV_HUE_122 0.0 else761_1
    JR_GTEQF VLV_HUE_122 VLV_RED_122 else761_1
    MOVEF_F 5.0 VLV_COLOR_122
    JR endif761
  else761_1:
    JR_LTF VLV_HUE_122 VLV_RED_122 else761_2
    JR_GTEQF VLV_HUE_122 VLV_YELLOW_122 else761_2
    MOVEF_F 4.0 VLV_COLOR_122
    JR endif761
  else761_2:
    JR_LTF VLV_HUE_122 VLV_YELLOW_122 else761_3
    JR_GTEQF VLV_HUE_122 VLV_GREEN_122 else761_3
    MOVEF_F 3.0 VLV_COLOR_122
    JR endif761
  else761_3:
    JR_LTF VLV_HUE_122 VLV_GREEN_122 else761_4
    JR_GTEQF VLV_HUE_122 VLV_BLUE_122 else761_4
    MOVEF_F 2.0 VLV_COLOR_122
    JR endif761
  else761_4:
    MOVEF_F 5.0 VLV_COLOR_122
  else761_5:
  endif761:
  else759_2:
  endif759:
  else756_2:
  endif756:
    STRINGS VALUE_FORMATTED VLV_RRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_122 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB777:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer778
	DATA8 no778
	DATA8 mode8778
	
	MOVEF_8 2.0 no778
	SUB8 no778 1 no778
	DIV8 no778 4 layer778
	MATH MOD8 no778 4 no778

	MOVEF_8 4.0 mode8778
	
	INPUT_DEVICE READY_RAW layer778 no778 0 mode8778 0
    MOVEF_F 15.0 VLV_RED_123
    MOVEF_F 60.0 VLV_YELLOW_123
    MOVEF_F 170.0 VLV_GREEN_123
    MOVEF_F 330.0 VLV_BLUE_123
    MOVEF_F 10.0 VLV_VALUENEGRO_123
    MOVEF_F 100.0 VLV_VALUEBLANCO_123
    MOVEF_F 147.0 VLV_RWHITE_123
    MOVEF_F 143.0 VLV_GWHITE_123
    MOVEF_F 160.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    MOVEF_F 0.0 VLV_COLOR_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_123
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_123
  for784:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor784
  forbody784:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_123
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_123 VLV_RGB_123
    DATAF tmpf789
    DATA8 flag789
    DIVF VLV_RRAW_123 VLV_RWHITE_123 tmpf789
    CP_EQF 0.0 VLV_RWHITE_123 flag789
    SELECTF flag789 0.0 tmpf789 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    DATAF tmpf793
    DATA8 flag793
    DIVF VLV_GRAW_123 VLV_GWHITE_123 tmpf793
    CP_EQF 0.0 VLV_GWHITE_123 flag793
    SELECTF flag793 0.0 tmpf793 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    DATAF tmpf797
    DATA8 flag797
    DIVF VLV_BRAW_123 VLV_BWHITE_123 tmpf797
    CP_EQF 0.0 VLV_BWHITE_123 flag797
    SELECTF flag797 0.0 tmpf797 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_RNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.3 VLV_GNORMA_123
    DATA8 flag803
	CP_GTF F.2 F.3 flag803
	SELECTF flag803 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_BNORMA_123
    DATA8 flag805
	CP_GTF F.1 F.2 flag805
	SELECTF flag805 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    DATA32 milliseconds807
	MOVEF_32 5.0 milliseconds807
	DATA32 timer807
	TIMER_WAIT milliseconds807 timer807
	TIMER_READY timer807
    ADDF VLV_J_123 1.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody784
  endfor784:
    MOVEF_F 1.0 VLV_J_123
  for809:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor809
  forbody809:
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_123
    ADDF F.0 F.1 VLV_RNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_123
    ADDF F.0 F.1 VLV_GNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_123
    ADDF F.0 F.1 VLV_BNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_123
    ADDF F.0 F.1 VLV_MAX_123
    ADDF VLV_J_123 2.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody809
  endfor809:
    DATAF tmpf827
    DATA8 flag827
    DIVF VLV_RNORM_123 VLV_REPS_123 tmpf827
    CP_EQF 0.0 VLV_REPS_123 flag827
    SELECTF flag827 0.0 tmpf827 VLV_RNORM_123

    DATAF tmpf828
    DATA8 flag828
    DIVF VLV_GNORM_123 VLV_REPS_123 tmpf828
    CP_EQF 0.0 VLV_REPS_123 flag828
    SELECTF flag828 0.0 tmpf828 VLV_GNORM_123

    DATAF tmpf829
    DATA8 flag829
    DIVF VLV_BNORM_123 VLV_REPS_123 tmpf829
    CP_EQF 0.0 VLV_REPS_123 flag829
    SELECTF flag829 0.0 tmpf829 VLV_BNORM_123

    DATAF tmpf830
    DATA8 flag830
    DIVF VLV_MAX_123 VLV_REPS_123 tmpf830
    CP_EQF 0.0 VLV_REPS_123 flag830
    SELECTF flag830 0.0 tmpf830 VLV_MAX_123

    DATA8 flag831
	CP_LTF VLV_RNORM_123 VLV_GNORM_123 flag831
	SELECTF flag831 VLV_RNORM_123 VLV_GNORM_123 F.0
    DATA8 flag832
	CP_LTF F.0 VLV_BNORM_123 flag832
	SELECTF flag832 F.0 VLV_BNORM_123 VLV_MIN_123
    JR_NEQF VLV_MAX_123 VLV_MIN_123 else833_1
    MOVEF_F 0.0 VLV_HUE_123
    JR endif833
  else833_1:
    JR_NEQF VLV_MAX_123 VLV_RNORM_123 else833_2
    JR_LTF VLV_GNORM_123 VLV_BNORM_123 else834_1
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_123 VLV_MIN_123 F.1
    DATAF tmpf838
    DATA8 flag838
    DIVF F.0 F.1 tmpf838
    CP_EQF 0.0 F.1 flag838
    SELECTF flag838 0.0 tmpf838 VLV_HUE_123

    JR endif834
  else834_1:
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf842
    DATA8 flag842
    DIVF F.1 F.2 tmpf842
    CP_EQF 0.0 F.2 flag842
    SELECTF flag842 0.0 tmpf842 F.0

    ADDF F.0 360.0 VLV_HUE_123
  else834_2:
  endif834:
    JR endif833
  else833_2:
    JR_NEQF VLV_MAX_123 VLV_GNORM_123 else833_3
    SUBF VLV_BNORM_123 VLV_RNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf847
    DATA8 flag847
    DIVF F.1 F.2 tmpf847
    CP_EQF 0.0 F.2 flag847
    SELECTF flag847 0.0 tmpf847 F.0

    ADDF F.0 120.0 VLV_HUE_123
    JR endif833
  else833_3:
    SUBF VLV_RNORM_123 VLV_GNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf852
    DATA8 flag852
    DIVF F.1 F.2 tmpf852
    CP_EQF 0.0 F.2 flag852
    SELECTF flag852 0.0 tmpf852 F.0

    ADDF F.0 240.0 VLV_HUE_123
  else833_4:
  endif833:
    JR_NEQF VLV_MAX_123 0.0 else854_1
    MOVEF_F 0.0 VLV_SAT_123
    JR endif854
  else854_1:
    DATAF tmpf855
    DATA8 flag855
    DIVF VLV_MIN_123 VLV_MAX_123 tmpf855
    CP_EQF 0.0 VLV_MAX_123 flag855
    SELECTF flag855 0.0 tmpf855 F.0

    SUBF 1.0 F.0 VLV_SAT_123
  else854_2:
  endif854:
    MOVEF_F VLV_MAX_123 VLV_VALUE_123
    ADDF VLV_VALUEBLANCO_123 VLV_VALUENEGRO_123 F.0
    DATAF tmpf858
    DATA8 flag858
    DIVF F.0 2.0 tmpf858
    CP_EQF 0.0 2.0 flag858
    SELECTF flag858 0.0 tmpf858 VLV_RGBGREY_123

    ADDF VLV_RNORM_123 VLV_GNORM_123 F.1
    ADDF F.1 VLV_BNORM_123 F.0
    JR_GTF F.0 3.0 else859_1
    MOVEF_F 0.0 VLV_COLOR_123
    JR endif859
  else859_1:
    JR_GTEQF VLV_SAT_123 0.4 else862_1
    JR_LTEQF VLV_VALUE_123 VLV_RGBGREY_123 else863_1
    MOVEF_F 6.0 VLV_COLOR_123
    JR endif863
  else863_1:
    MOVEF_F 1.0 VLV_COLOR_123
  else863_2:
  endif863:
    JR endif862
  else862_1:
    JR_LTF VLV_HUE_123 0.0 else864_1
    JR_GTEQF VLV_HUE_123 VLV_RED_123 else864_1
    MOVEF_F 5.0 VLV_COLOR_123
    JR endif864
  else864_1:
    JR_LTF VLV_HUE_123 VLV_RED_123 else864_2
    JR_GTEQF VLV_HUE_123 VLV_YELLOW_123 else864_2
    MOVEF_F 4.0 VLV_COLOR_123
    JR endif864
  else864_2:
    JR_LTF VLV_HUE_123 VLV_YELLOW_123 else864_3
    JR_GTEQF VLV_HUE_123 VLV_GREEN_123 else864_3
    MOVEF_F 3.0 VLV_COLOR_123
    JR endif864
  else864_3:
    JR_LTF VLV_HUE_123 VLV_GREEN_123 else864_4
    JR_GTEQF VLV_HUE_123 VLV_BLUE_123 else864_4
    MOVEF_F 2.0 VLV_COLOR_123
    JR endif864
  else864_4:
    MOVEF_F 5.0 VLV_COLOR_123
  else864_5:
  endif864:
  else862_2:
  endif862:
  else859_2:
  endif859:
    STRINGS VALUE_FORMATTED VLV_RRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_123 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB880:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer881
	DATA8 no881
	DATA8 mode8881
	
	MOVEF_8 3.0 no881
	SUB8 no881 1 no881
	DIV8 no881 4 layer881
	MATH MOD8 no881 4 no881

	MOVEF_8 4.0 mode8881
	
	INPUT_DEVICE READY_RAW layer881 no881 0 mode8881 0
    MOVEF_F 15.0 VLV_RED_124
    MOVEF_F 60.0 VLV_YELLOW_124
    MOVEF_F 170.0 VLV_GREEN_124
    MOVEF_F 330.0 VLV_BLUE_124
    MOVEF_F 10.0 VLV_VALUENEGRO_124
    MOVEF_F 100.0 VLV_VALUEBLANCO_124
    MOVEF_F 147.0 VLV_RWHITE_124
    MOVEF_F 143.0 VLV_GWHITE_124
    MOVEF_F 160.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    MOVEF_F 0.0 VLV_COLOR_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_124
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_124
  for887:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor887
  forbody887:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_124
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_124 VLV_RGB_124
    DATAF tmpf892
    DATA8 flag892
    DIVF VLV_RRAW_124 VLV_RWHITE_124 tmpf892
    CP_EQF 0.0 VLV_RWHITE_124 flag892
    SELECTF flag892 0.0 tmpf892 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    DATAF tmpf896
    DATA8 flag896
    DIVF VLV_GRAW_124 VLV_GWHITE_124 tmpf896
    CP_EQF 0.0 VLV_GWHITE_124 flag896
    SELECTF flag896 0.0 tmpf896 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    DATAF tmpf900
    DATA8 flag900
    DIVF VLV_BRAW_124 VLV_BWHITE_124 tmpf900
    CP_EQF 0.0 VLV_BWHITE_124 flag900
    SELECTF flag900 0.0 tmpf900 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_RNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.3 VLV_GNORMA_124
    DATA8 flag906
	CP_GTF F.2 F.3 flag906
	SELECTF flag906 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_BNORMA_124
    DATA8 flag908
	CP_GTF F.1 F.2 flag908
	SELECTF flag908 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    DATA32 milliseconds910
	MOVEF_32 5.0 milliseconds910
	DATA32 timer910
	TIMER_WAIT milliseconds910 timer910
	TIMER_READY timer910
    ADDF VLV_J_124 1.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody887
  endfor887:
    MOVEF_F 1.0 VLV_J_124
  for912:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor912
  forbody912:
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_124
    ADDF F.0 F.1 VLV_RNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_124
    ADDF F.0 F.1 VLV_GNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_124
    ADDF F.0 F.1 VLV_BNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_124
    ADDF F.0 F.1 VLV_MAX_124
    ADDF VLV_J_124 2.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody912
  endfor912:
    DATAF tmpf930
    DATA8 flag930
    DIVF VLV_RNORM_124 VLV_REPS_124 tmpf930
    CP_EQF 0.0 VLV_REPS_124 flag930
    SELECTF flag930 0.0 tmpf930 VLV_RNORM_124

    DATAF tmpf931
    DATA8 flag931
    DIVF VLV_GNORM_124 VLV_REPS_124 tmpf931
    CP_EQF 0.0 VLV_REPS_124 flag931
    SELECTF flag931 0.0 tmpf931 VLV_GNORM_124

    DATAF tmpf932
    DATA8 flag932
    DIVF VLV_BNORM_124 VLV_REPS_124 tmpf932
    CP_EQF 0.0 VLV_REPS_124 flag932
    SELECTF flag932 0.0 tmpf932 VLV_BNORM_124

    DATAF tmpf933
    DATA8 flag933
    DIVF VLV_MAX_124 VLV_REPS_124 tmpf933
    CP_EQF 0.0 VLV_REPS_124 flag933
    SELECTF flag933 0.0 tmpf933 VLV_MAX_124

    DATA8 flag934
	CP_LTF VLV_RNORM_124 VLV_GNORM_124 flag934
	SELECTF flag934 VLV_RNORM_124 VLV_GNORM_124 F.0
    DATA8 flag935
	CP_LTF F.0 VLV_BNORM_124 flag935
	SELECTF flag935 F.0 VLV_BNORM_124 VLV_MIN_124
    JR_NEQF VLV_MAX_124 VLV_MIN_124 else936_1
    MOVEF_F 0.0 VLV_HUE_124
    JR endif936
  else936_1:
    JR_NEQF VLV_MAX_124 VLV_RNORM_124 else936_2
    JR_LTF VLV_GNORM_124 VLV_BNORM_124 else937_1
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_124 VLV_MIN_124 F.1
    DATAF tmpf941
    DATA8 flag941
    DIVF F.0 F.1 tmpf941
    CP_EQF 0.0 F.1 flag941
    SELECTF flag941 0.0 tmpf941 VLV_HUE_124

    JR endif937
  else937_1:
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf945
    DATA8 flag945
    DIVF F.1 F.2 tmpf945
    CP_EQF 0.0 F.2 flag945
    SELECTF flag945 0.0 tmpf945 F.0

    ADDF F.0 360.0 VLV_HUE_124
  else937_2:
  endif937:
    JR endif936
  else936_2:
    JR_NEQF VLV_MAX_124 VLV_GNORM_124 else936_3
    SUBF VLV_BNORM_124 VLV_RNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf950
    DATA8 flag950
    DIVF F.1 F.2 tmpf950
    CP_EQF 0.0 F.2 flag950
    SELECTF flag950 0.0 tmpf950 F.0

    ADDF F.0 120.0 VLV_HUE_124
    JR endif936
  else936_3:
    SUBF VLV_RNORM_124 VLV_GNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf955
    DATA8 flag955
    DIVF F.1 F.2 tmpf955
    CP_EQF 0.0 F.2 flag955
    SELECTF flag955 0.0 tmpf955 F.0

    ADDF F.0 240.0 VLV_HUE_124
  else936_4:
  endif936:
    JR_NEQF VLV_MAX_124 0.0 else957_1
    MOVEF_F 0.0 VLV_SAT_124
    JR endif957
  else957_1:
    DATAF tmpf958
    DATA8 flag958
    DIVF VLV_MIN_124 VLV_MAX_124 tmpf958
    CP_EQF 0.0 VLV_MAX_124 flag958
    SELECTF flag958 0.0 tmpf958 F.0

    SUBF 1.0 F.0 VLV_SAT_124
  else957_2:
  endif957:
    MOVEF_F VLV_MAX_124 VLV_VALUE_124
    ADDF VLV_VALUEBLANCO_124 VLV_VALUENEGRO_124 F.0
    DATAF tmpf961
    DATA8 flag961
    DIVF F.0 2.0 tmpf961
    CP_EQF 0.0 2.0 flag961
    SELECTF flag961 0.0 tmpf961 VLV_RGBGREY_124

    ADDF VLV_RNORM_124 VLV_GNORM_124 F.1
    ADDF F.1 VLV_BNORM_124 F.0
    JR_GTF F.0 3.0 else962_1
    MOVEF_F 0.0 VLV_COLOR_124
    JR endif962
  else962_1:
    JR_GTEQF VLV_SAT_124 0.4 else965_1
    JR_LTEQF VLV_VALUE_124 VLV_RGBGREY_124 else966_1
    MOVEF_F 6.0 VLV_COLOR_124
    JR endif966
  else966_1:
    MOVEF_F 1.0 VLV_COLOR_124
  else966_2:
  endif966:
    JR endif965
  else965_1:
    JR_LTF VLV_HUE_124 0.0 else967_1
    JR_GTEQF VLV_HUE_124 VLV_RED_124 else967_1
    MOVEF_F 5.0 VLV_COLOR_124
    JR endif967
  else967_1:
    JR_LTF VLV_HUE_124 VLV_RED_124 else967_2
    JR_GTEQF VLV_HUE_124 VLV_YELLOW_124 else967_2
    MOVEF_F 4.0 VLV_COLOR_124
    JR endif967
  else967_2:
    JR_LTF VLV_HUE_124 VLV_YELLOW_124 else967_3
    JR_GTEQF VLV_HUE_124 VLV_GREEN_124 else967_3
    MOVEF_F 3.0 VLV_COLOR_124
    JR endif967
  else967_3:
    JR_LTF VLV_HUE_124 VLV_GREEN_124 else967_4
    JR_GTEQF VLV_HUE_124 VLV_BLUE_124 else967_4
    MOVEF_F 2.0 VLV_COLOR_124
    JR endif967
  else967_4:
    MOVEF_F 5.0 VLV_COLOR_124
  else967_5:
  endif967:
  else965_2:
  endif965:
  else962_2:
  endif962:
    STRINGS VALUE_FORMATTED VLV_RRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_124 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB983 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB983:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer984
	DATA8 no984
	DATA8 mode8984
	
	MOVEF_8 4.0 no984
	SUB8 no984 1 no984
	DIV8 no984 4 layer984
	MATH MOD8 no984 4 no984

	MOVEF_8 4.0 mode8984
	
	INPUT_DEVICE READY_RAW layer984 no984 0 mode8984 0
    MOVEF_F 15.0 VLV_RED_125
    MOVEF_F 60.0 VLV_YELLOW_125
    MOVEF_F 170.0 VLV_GREEN_125
    MOVEF_F 330.0 VLV_BLUE_125
    MOVEF_F 10.0 VLV_VALUENEGRO_125
    MOVEF_F 100.0 VLV_VALUEBLANCO_125
    MOVEF_F 147.0 VLV_RWHITE_125
    MOVEF_F 143.0 VLV_GWHITE_125
    MOVEF_F 160.0 VLV_BWHITE_125
    MOVEF_F 0.0 VLV_HUE_125
    MOVEF_F 0.0 VLV_SAT_125
    MOVEF_F 0.0 VLV_VALUE_125
    MOVEF_F 0.0 VLV_COLOR_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_125
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_125
  for990:
    JR_GTF VLV_J_125 VLV_REPS_125 endfor990
  forbody990:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_125
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_125 VLV_RGB_125
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_125 VLV_RGB_125
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_125 VLV_RGB_125
    DATAF tmpf995
    DATA8 flag995
    DIVF VLV_RRAW_125 VLV_RWHITE_125 tmpf995
    CP_EQF 0.0 VLV_RWHITE_125 flag995
    SELECTF flag995 0.0 tmpf995 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_RNORMA_125
    DATAF tmpf999
    DATA8 flag999
    DIVF VLV_GRAW_125 VLV_GWHITE_125 tmpf999
    CP_EQF 0.0 VLV_GWHITE_125 flag999
    SELECTF flag999 0.0 tmpf999 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_GNORMA_125
    DATAF tmpf1003
    DATA8 flag1003
    DIVF VLV_BRAW_125 VLV_BWHITE_125 tmpf1003
    CP_EQF 0.0 VLV_BWHITE_125 flag1003
    SELECTF flag1003 0.0 tmpf1003 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_BNORMA_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.2 VLV_RNORMA_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.3 VLV_GNORMA_125
    DATA8 flag1009
	CP_GTF F.2 F.3 flag1009
	SELECTF flag1009 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_125 F.2 VLV_BNORMA_125
    DATA8 flag1011
	CP_GTF F.1 F.2 flag1011
	SELECTF flag1011 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_MAXA_125
    DATA32 milliseconds1013
	MOVEF_32 5.0 milliseconds1013
	DATA32 timer1013
	TIMER_WAIT milliseconds1013 timer1013
	TIMER_READY timer1013
    ADDF VLV_J_125 1.0 VLV_J_125
    JR_LTEQF VLV_J_125 VLV_REPS_125 forbody990
  endfor990:
    MOVEF_F 1.0 VLV_J_125
  for1015:
    JR_GTF VLV_J_125 VLV_REPS_125 endfor1015
  forbody1015:
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_RNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_125
    ADDF F.0 F.1 VLV_RNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_GNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_125
    ADDF F.0 F.1 VLV_GNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_BNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_125
    ADDF F.0 F.1 VLV_BNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_MAXA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_125
    ADDF F.0 F.1 VLV_MAX_125
    ADDF VLV_J_125 2.0 VLV_J_125
    JR_LTEQF VLV_J_125 VLV_REPS_125 forbody1015
  endfor1015:
    DATAF tmpf1033
    DATA8 flag1033
    DIVF VLV_RNORM_125 VLV_REPS_125 tmpf1033
    CP_EQF 0.0 VLV_REPS_125 flag1033
    SELECTF flag1033 0.0 tmpf1033 VLV_RNORM_125

    DATAF tmpf1034
    DATA8 flag1034
    DIVF VLV_GNORM_125 VLV_REPS_125 tmpf1034
    CP_EQF 0.0 VLV_REPS_125 flag1034
    SELECTF flag1034 0.0 tmpf1034 VLV_GNORM_125

    DATAF tmpf1035
    DATA8 flag1035
    DIVF VLV_BNORM_125 VLV_REPS_125 tmpf1035
    CP_EQF 0.0 VLV_REPS_125 flag1035
    SELECTF flag1035 0.0 tmpf1035 VLV_BNORM_125

    DATAF tmpf1036
    DATA8 flag1036
    DIVF VLV_MAX_125 VLV_REPS_125 tmpf1036
    CP_EQF 0.0 VLV_REPS_125 flag1036
    SELECTF flag1036 0.0 tmpf1036 VLV_MAX_125

    DATA8 flag1037
	CP_LTF VLV_RNORM_125 VLV_GNORM_125 flag1037
	SELECTF flag1037 VLV_RNORM_125 VLV_GNORM_125 F.0
    DATA8 flag1038
	CP_LTF F.0 VLV_BNORM_125 flag1038
	SELECTF flag1038 F.0 VLV_BNORM_125 VLV_MIN_125
    JR_NEQF VLV_MAX_125 VLV_MIN_125 else1039_1
    MOVEF_F 0.0 VLV_HUE_125
    JR endif1039
  else1039_1:
    JR_NEQF VLV_MAX_125 VLV_RNORM_125 else1039_2
    JR_LTF VLV_GNORM_125 VLV_BNORM_125 else1040_1
    SUBF VLV_GNORM_125 VLV_BNORM_125 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_125 VLV_MIN_125 F.1
    DATAF tmpf1044
    DATA8 flag1044
    DIVF F.0 F.1 tmpf1044
    CP_EQF 0.0 F.1 flag1044
    SELECTF flag1044 0.0 tmpf1044 VLV_HUE_125

    JR endif1040
  else1040_1:
    SUBF VLV_GNORM_125 VLV_BNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1048
    DATA8 flag1048
    DIVF F.1 F.2 tmpf1048
    CP_EQF 0.0 F.2 flag1048
    SELECTF flag1048 0.0 tmpf1048 F.0

    ADDF F.0 360.0 VLV_HUE_125
  else1040_2:
  endif1040:
    JR endif1039
  else1039_2:
    JR_NEQF VLV_MAX_125 VLV_GNORM_125 else1039_3
    SUBF VLV_BNORM_125 VLV_RNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1053
    DATA8 flag1053
    DIVF F.1 F.2 tmpf1053
    CP_EQF 0.0 F.2 flag1053
    SELECTF flag1053 0.0 tmpf1053 F.0

    ADDF F.0 120.0 VLV_HUE_125
    JR endif1039
  else1039_3:
    SUBF VLV_RNORM_125 VLV_GNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1058
    DATA8 flag1058
    DIVF F.1 F.2 tmpf1058
    CP_EQF 0.0 F.2 flag1058
    SELECTF flag1058 0.0 tmpf1058 F.0

    ADDF F.0 240.0 VLV_HUE_125
  else1039_4:
  endif1039:
    JR_NEQF VLV_MAX_125 0.0 else1060_1
    MOVEF_F 0.0 VLV_SAT_125
    JR endif1060
  else1060_1:
    DATAF tmpf1061
    DATA8 flag1061
    DIVF VLV_MIN_125 VLV_MAX_125 tmpf1061
    CP_EQF 0.0 VLV_MAX_125 flag1061
    SELECTF flag1061 0.0 tmpf1061 F.0

    SUBF 1.0 F.0 VLV_SAT_125
  else1060_2:
  endif1060:
    MOVEF_F VLV_MAX_125 VLV_VALUE_125
    ADDF VLV_VALUEBLANCO_125 VLV_VALUENEGRO_125 F.0
    DATAF tmpf1064
    DATA8 flag1064
    DIVF F.0 2.0 tmpf1064
    CP_EQF 0.0 2.0 flag1064
    SELECTF flag1064 0.0 tmpf1064 VLV_RGBGREY_125

    ADDF VLV_RNORM_125 VLV_GNORM_125 F.1
    ADDF F.1 VLV_BNORM_125 F.0
    JR_GTF F.0 3.0 else1065_1
    MOVEF_F 0.0 VLV_COLOR_125
    JR endif1065
  else1065_1:
    JR_GTEQF VLV_SAT_125 0.4 else1068_1
    JR_LTEQF VLV_VALUE_125 VLV_RGBGREY_125 else1069_1
    MOVEF_F 6.0 VLV_COLOR_125
    JR endif1069
  else1069_1:
    MOVEF_F 1.0 VLV_COLOR_125
  else1069_2:
  endif1069:
    JR endif1068
  else1068_1:
    JR_LTF VLV_HUE_125 0.0 else1070_1
    JR_GTEQF VLV_HUE_125 VLV_RED_125 else1070_1
    MOVEF_F 5.0 VLV_COLOR_125
    JR endif1070
  else1070_1:
    JR_LTF VLV_HUE_125 VLV_RED_125 else1070_2
    JR_GTEQF VLV_HUE_125 VLV_YELLOW_125 else1070_2
    MOVEF_F 4.0 VLV_COLOR_125
    JR endif1070
  else1070_2:
    JR_LTF VLV_HUE_125 VLV_YELLOW_125 else1070_3
    JR_GTEQF VLV_HUE_125 VLV_GREEN_125 else1070_3
    MOVEF_F 3.0 VLV_COLOR_125
    JR endif1070
  else1070_3:
    JR_LTF VLV_HUE_125 VLV_GREEN_125 else1070_4
    JR_GTEQF VLV_HUE_125 VLV_BLUE_125 else1070_4
    MOVEF_F 2.0 VLV_COLOR_125
    JR endif1070
  else1070_4:
    MOVEF_F 5.0 VLV_COLOR_125
  else1070_5:
  endif1070:
  else1068_2:
  endif1068:
  else1065_2:
  endif1065:
    STRINGS VALUE_FORMATTED VLV_RRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_125 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_125 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_125 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1086:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_134 0.0 else1087_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1087
  else1087_1:
    JR_NEQF VLV_COLOR_134 1.0 else1087_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1087
  else1087_2:
    JR_NEQF VLV_COLOR_134 2.0 else1087_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1087
  else1087_3:
    JR_NEQF VLV_COLOR_134 3.0 else1087_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1087
  else1087_4:
    JR_NEQF VLV_COLOR_134 4.0 else1087_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1087
  else1087_5:
    JR_NEQF VLV_COLOR_134 5.0 else1087_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1087
  else1087_6:
    JR_NEQF VLV_COLOR_134 6.0 else1087_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1087
  else1087_7:
    JR_NEQF VLV_COLOR_134 7.0 else1087_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1087_8:
  endif1087:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_0:
    DATA32 milliseconds1096
	MOVEF_32 150.0 milliseconds1096
	DATA32 timer1096
	TIMER_WAIT milliseconds1096 timer1096
	TIMER_READY timer1096
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 20.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1097 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1097:
    MOVEF_F 40.0 VLV_V_117
    MOVEF_F 70.0 VLV_AENC_117
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1098 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1098:
    ADDF VGV_NUM_BLOQUES 1.0 VGV_NUM_BLOQUES
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 270.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1100:
    MOVEF_F 40.0 VLV_V_120
    MOVEF_F 500.0 VLV_T_120
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1101:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F -80.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1102:
RETSUB_F_COGER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_0:
SUB_F_SOLTAR_0:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 250.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1103:
    MOVEF_F 40.0 VLV_V_117
    MOVEF_F 70.0 VLV_AENC_117
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1104:
    SUBF VGV_NUM_BLOQUES 4.0 F.0
    DATA8 flag1106
	CP_GTF 0.0 F.0 flag1106
	SELECTF flag1106 0.0 F.0 VGV_NUM_BLOQUES
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F -660.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1107:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 9.25 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1108:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1109:
RETSUB_F_SOLTAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_0:
SUB_F_GIRO90BLOQUES_2:
    MOVEF_F 84.0 VLV_GRADOS_90_137
    JR_GTEQF VGV_NUM_BLOQUES 3.0 else1110_1
    MOVEF_F VLV_VEL_B_137 VLV_V1_37
    MOVEF_F VLV_VEL_C_137 VLV_V2_37
    MOVEF_F VLV_GRADOS_90_137 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB1111:
    JR endif1110
  else1110_1:
    MOVEF_F VLV_VEL_B_137 VLV_V1_37
    MOVEF_F VLV_VEL_C_137 VLV_V2_37
    ADDF VLV_GRADOS_90_137 2.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB1113:
  else1110_2:
  endif1110:
RETSUB_F_GIRO90BLOQUES_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GIRO90BLOQUES_2:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall NE_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 flag 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
isequal:
	STRINGS DUPLICATE 'False' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'True' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
