DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V1_37
DATAF VLV_V2_37
DATAF VLV_ANGLE_37
DATAF VLV_VELOCIDAD_77
DATAF VLV_KP_77
DATAF VLV_KI_77
DATAF VLV_KD_77
DATAF VLV_ENCODER_77
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V_107
DATAF VLV_AENC_107
DATAF VLV_VELOCIDAD_78
DATAF VLV_KP_78
DATAF VLV_KI_78
DATAF VLV_KD_78
DATAF VLV_ENCODER_78
DATAF VLV_VELOCIDAD_91
DATAF VLV_KP_91
DATAF VLV_KI_91
DATAF VLV_KD_91
DATAF VLV_READER_91
DATAF VLV_VELOCIDAD_73
DATAF VLV_KP_73
DATAF VLV_KI_73
DATAF VLV_KD_73
DATAF VLV_VELOCIDAD_85
DATAF VLV_KP_85
DATAF VLV_KI_85
DATAF VLV_KD_85
DATAF VLV_ENCODER_85
DATAF VLV_VELOCIDAD_92
DATAF VLV_KP_92
DATAF VLV_KI_92
DATAF VLV_KD_92
DATAF VLV_READER_92
DATAF VLV_VELOCIDAD_86
DATAF VLV_KP_86
DATAF VLV_KI_86
DATAF VLV_KD_86
DATAF VLV_ENCODER_86
DATAF VLV_V_116
DATAF VLV_GRADOS_116
DATAF VLV_V_111
DATAF VLV_AENC_111
DATAF VLV_V_121
DATAF VLV_AENC_121
DATAF VLV_V1_38
DATAF VLV_V2_38
DATAF VLV_ANGLE_38
DATAF VLV_V0_58
DATAF VLV_VMAX_58
DATAF VLV_KP_58
DATAF VLV_KI_58
DATAF VLV_KD_58
DATAF VLV_ACCELENCODER_58
DATAF VLV_VELOCIDAD_74
DATAF VLV_KP_74
DATAF VLV_KI_74
DATAF VLV_KD_74
DATAF VLV_VMAX_100
DATAF VLV_KP_100
DATAF VLV_KI_100
DATAF VLV_KD_100
DATAF VLV_COLOR_134
DATAF VLV_REPS_122
DATAF VLV_COLOR_122
DATAF VLV_REPS_123
DATAF VLV_COLOR_123
DATAF VLV_REPS_124
DATAF VLV_COLOR_124
DATAF VLV_REPS_125
DATAF VLV_COLOR_125
DATAF VLV_V_117
DATAF VLV_AENC_117
DATAF VLV_V_120
DATAF VLV_T_120
DATAF VLV_COLOR_126
DATAF VLV_COLOR_127
DATAF VLV_COLOR_128
DATAF VLV_COLOR_129
DATAF VLV_READ_137
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DIAMETER
DATAF VGV_CENTRO
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_CORRECCION
DATAF VGV_G1
DATAF VGV_ROJOS
DATAF VGV_AMARILLOS
DATAF VGV_VERDES
DATAF VGV_AZULES
DATAF VGV_TIEMPOHASTALINEA
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAS VLV_I_37 252
DATAS VLV_D_37 252
DATAF VLV_SIGNO_37
DATAF VLV_VMIN_37
DATAF VLV_VMAX_37
DATAF VLV_ENCODR_37
DATAS VLV_I_38 252
DATAS VLV_D_38 252
DATAF VLV_SIGNO_38
DATAF VLV_VMIN_38
DATAF VLV_VMAX_38
DATAF VLV_ENCODR_38
DATAS VLV_I_58 252
DATAS VLV_D_58 252
DATAF VLV_U_58
DATAF VLV_ERROR_58
DATAF VLV_OLDERROR_58
DATAF VLV_ERRSUM_58
DATAF VLV_VEL_58
DATAF VLV_SENTIDO_58
DATAS VLV_I_73 252
DATAS VLV_D_73 252
DATAF VLV_ERROR_73
DATAF VLV_OLDERROR_73
DATAF VLV_ERRSUM_73
DATAF VLV_U_73
DATAF VLV_SENTIDO_73
DATAS VLV_I_74 252
DATAS VLV_D_74 252
DATAF VLV_ERROR_74
DATAF VLV_OLDERROR_74
DATAF VLV_ERRSUM_74
DATAF VLV_U_74
DATAF VLV_SENTIDO_74
DATAS VLV_I_77 252
DATAS VLV_D_77 252
DATAF VLV_ERROR_77
DATAF VLV_OLDERROR_77
DATAF VLV_ERRSUM_77
DATAF VLV_U_77
DATAF VLV_SENTIDO_77
DATAF VLV_START_C_77
DATAF VLV_ENCODER_C_77
DATAS VLV_I_78 252
DATAS VLV_D_78 252
DATAF VLV_ERROR_78
DATAF VLV_OLDERROR_78
DATAF VLV_ERRSUM_78
DATAF VLV_U_78
DATAF VLV_SENTIDO_78
DATAF VLV_START_C_78
DATAF VLV_ENCODER_C_78
DATAS VLV_I_85 252
DATAS VLV_D_85 252
DATAF VLV_ERROR_85
DATAF VLV_OLDERROR_85
DATAF VLV_ERRSUM_85
DATAF VLV_U_85
DATAF VLV_SENTIDO_85
DATAF VLV_START_C_85
DATAF VLV_ENCODER_C_85
DATAS VLV_I_86 252
DATAS VLV_D_86 252
DATAF VLV_ERROR_86
DATAF VLV_OLDERROR_86
DATAF VLV_ERRSUM_86
DATAF VLV_U_86
DATAF VLV_SENTIDO_86
DATAF VLV_START_C_86
DATAF VLV_ENCODER_C_86
DATAS VLV_I_91 252
DATAS VLV_D_91 252
DATAF VLV_ERROR_91
DATAF VLV_OLDERROR_91
DATAF VLV_ERRSUM_91
DATAF VLV_U_91
DATAF VLV_SENTIDO_91
DATAF VLV_READER1_91
DATAF VLV_READER2_91
DATAS VLV_I_92 252
DATAS VLV_D_92 252
DATAF VLV_ERROR_92
DATAF VLV_OLDERROR_92
DATAF VLV_ERRSUM_92
DATAF VLV_U_92
DATAF VLV_SENTIDO_92
DATAF VLV_READER1_92
DATAF VLV_READER2_92
DATAS VLV_I_100 252
DATAS VLV_D_100 252
DATAF VLV_V0_100
DATAF VLV_ACCELENCODER_100
DATAF VLV_U_100
DATAF VLV_ERRSUM_100
DATAF VLV_OLDERROR_100
DATAF VLV_VEL_100
DATAF VLV_SENTIDO_100
DATAF VLV_ERROR_100
DATAF VLV_ENCDIFF_107
DATAF VLV_SIGNO_107
DATAF VLV_ENCDIFF_111
DATAF VLV_SIGNO_111
DATAF VLV_SAFETYTIMER_111
DATAF VLV_DIFFA_116
DATAF VLV_DIFFD_116
DATAF VLV_SAFETYTIMER_116
DATAF VLV_SIGNOA_116
DATAF VLV_SIGNOD_116
DATAF VLV_VELA_116
DATAF VLV_VELD_116
DATAF VLV_ENCDIFF_117
DATAF VLV_SIGNO_117
DATAF VLV_ENCDIFF_121
DATAF VLV_SIGNO_121
DATAF VLV_SAFETYTIMER_121
DATAF VLV_RED_122
DATAF VLV_YELLOW_122
DATAF VLV_GREEN_122
DATAF VLV_BLUE_122
DATAF VLV_VALUENEGRO_122
DATAF VLV_VALUEBLANCO_122
DATAF VLV_RWHITE_122
DATAF VLV_GWHITE_122
DATAF VLV_BWHITE_122
DATAF VLV_HUE_122
DATAF VLV_SAT_122
DATAF VLV_VALUE_122
ARRAY16 VLV_RNORMA_122 2
ARRAY16 VLV_GNORMA_122 2
ARRAY16 VLV_BNORMA_122 2
ARRAY16 VLV_MAXA_122 2
DATAF VLV_J_122
ARRAY16 VLV_RGB_122 2
DATAF VLV_RRAW_122
DATAF VLV_GRAW_122
DATAF VLV_BRAW_122
DATAF VLV_RNORM_122
DATAF VLV_GNORM_122
DATAF VLV_BNORM_122
DATAF VLV_MAX_122
DATAF VLV_MIN_122
DATAF VLV_RGBGREY_122
DATAF VLV_RED_123
DATAF VLV_YELLOW_123
DATAF VLV_GREEN_123
DATAF VLV_BLUE_123
DATAF VLV_VALUENEGRO_123
DATAF VLV_VALUEBLANCO_123
DATAF VLV_RWHITE_123
DATAF VLV_GWHITE_123
DATAF VLV_BWHITE_123
DATAF VLV_HUE_123
DATAF VLV_SAT_123
DATAF VLV_VALUE_123
ARRAY16 VLV_RNORMA_123 2
ARRAY16 VLV_GNORMA_123 2
ARRAY16 VLV_BNORMA_123 2
ARRAY16 VLV_MAXA_123 2
DATAF VLV_J_123
ARRAY16 VLV_RGB_123 2
DATAF VLV_RRAW_123
DATAF VLV_GRAW_123
DATAF VLV_BRAW_123
DATAF VLV_RNORM_123
DATAF VLV_GNORM_123
DATAF VLV_BNORM_123
DATAF VLV_MAX_123
DATAF VLV_MIN_123
DATAF VLV_RGBGREY_123
DATAF VLV_RED_124
DATAF VLV_YELLOW_124
DATAF VLV_GREEN_124
DATAF VLV_BLUE_124
DATAF VLV_VALUENEGRO_124
DATAF VLV_VALUEBLANCO_124
DATAF VLV_RWHITE_124
DATAF VLV_GWHITE_124
DATAF VLV_BWHITE_124
DATAF VLV_HUE_124
DATAF VLV_SAT_124
DATAF VLV_VALUE_124
ARRAY16 VLV_RNORMA_124 2
ARRAY16 VLV_GNORMA_124 2
ARRAY16 VLV_BNORMA_124 2
ARRAY16 VLV_MAXA_124 2
DATAF VLV_J_124
ARRAY16 VLV_RGB_124 2
DATAF VLV_RRAW_124
DATAF VLV_GRAW_124
DATAF VLV_BRAW_124
DATAF VLV_RNORM_124
DATAF VLV_GNORM_124
DATAF VLV_BNORM_124
DATAF VLV_MAX_124
DATAF VLV_MIN_124
DATAF VLV_RGBGREY_124
DATAF VLV_RED_125
DATAF VLV_YELLOW_125
DATAF VLV_GREEN_125
DATAF VLV_BLUE_125
DATAF VLV_VALUENEGRO_125
DATAF VLV_VALUEBLANCO_125
DATAF VLV_RWHITE_125
DATAF VLV_GWHITE_125
DATAF VLV_BWHITE_125
DATAF VLV_HUE_125
DATAF VLV_SAT_125
DATAF VLV_VALUE_125
ARRAY16 VLV_RNORMA_125 2
ARRAY16 VLV_GNORMA_125 2
ARRAY16 VLV_BNORMA_125 2
ARRAY16 VLV_MAXA_125 2
DATAF VLV_J_125
ARRAY16 VLV_RGB_125 2
DATAF VLV_RRAW_125
DATAF VLV_GRAW_125
DATAF VLV_BRAW_125
DATAF VLV_RNORM_125
DATAF VLV_GNORM_125
DATAF VLV_BNORM_125
DATAF VLV_MAX_125
DATAF VLV_MIN_125
DATAF VLV_RGBGREY_125
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_VELOCIDAD_78
    MOVEF_F 0.0 VLV_KP_78
    MOVEF_F 0.0 VLV_KI_78
    MOVEF_F 0.0 VLV_KD_78
    MOVEF_F 0.0 VLV_ENCODER_78
    MOVEF_F 0.0 VLV_VELOCIDAD_91
    MOVEF_F 0.0 VLV_KP_91
    MOVEF_F 0.0 VLV_KI_91
    MOVEF_F 0.0 VLV_KD_91
    MOVEF_F 0.0 VLV_READER_91
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VELOCIDAD_85
    MOVEF_F 0.0 VLV_KP_85
    MOVEF_F 0.0 VLV_KI_85
    MOVEF_F 0.0 VLV_KD_85
    MOVEF_F 0.0 VLV_ENCODER_85
    MOVEF_F 0.0 VLV_VELOCIDAD_92
    MOVEF_F 0.0 VLV_KP_92
    MOVEF_F 0.0 VLV_KI_92
    MOVEF_F 0.0 VLV_KD_92
    MOVEF_F 0.0 VLV_READER_92
    MOVEF_F 0.0 VLV_VELOCIDAD_86
    MOVEF_F 0.0 VLV_KP_86
    MOVEF_F 0.0 VLV_KI_86
    MOVEF_F 0.0 VLV_KD_86
    MOVEF_F 0.0 VLV_ENCODER_86
    MOVEF_F 0.0 VLV_V_116
    MOVEF_F 0.0 VLV_GRADOS_116
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
    MOVEF_F 0.0 VLV_V0_58
    MOVEF_F 0.0 VLV_VMAX_58
    MOVEF_F 0.0 VLV_KP_58
    MOVEF_F 0.0 VLV_KI_58
    MOVEF_F 0.0 VLV_KD_58
    MOVEF_F 0.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_VELOCIDAD_74
    MOVEF_F 0.0 VLV_KP_74
    MOVEF_F 0.0 VLV_KI_74
    MOVEF_F 0.0 VLV_KD_74
    MOVEF_F 0.0 VLV_VMAX_100
    MOVEF_F 0.0 VLV_KP_100
    MOVEF_F 0.0 VLV_KI_100
    MOVEF_F 0.0 VLV_KD_100
    MOVEF_F 0.0 VLV_COLOR_134
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_125
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_T_120
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_COLOR_129
    MOVEF_F 0.0 VLV_READ_137
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 0.0 VGV_TIEMPOHASTALINEA
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    STRINGS DUPLICATE '' VLV_I_37
    STRINGS DUPLICATE '' VLV_D_37
    MOVEF_F 0.0 VLV_SIGNO_37
    MOVEF_F 0.0 VLV_VMIN_37
    MOVEF_F 0.0 VLV_VMAX_37
    MOVEF_F 0.0 VLV_ENCODR_37
    STRINGS DUPLICATE '' VLV_I_38
    STRINGS DUPLICATE '' VLV_D_38
    MOVEF_F 0.0 VLV_SIGNO_38
    MOVEF_F 0.0 VLV_VMIN_38
    MOVEF_F 0.0 VLV_VMAX_38
    MOVEF_F 0.0 VLV_ENCODR_38
    STRINGS DUPLICATE '' VLV_I_58
    STRINGS DUPLICATE '' VLV_D_58
    MOVEF_F 0.0 VLV_U_58
    MOVEF_F 0.0 VLV_ERROR_58
    MOVEF_F 0.0 VLV_OLDERROR_58
    MOVEF_F 0.0 VLV_ERRSUM_58
    MOVEF_F 0.0 VLV_VEL_58
    MOVEF_F 0.0 VLV_SENTIDO_58
    STRINGS DUPLICATE '' VLV_I_73
    STRINGS DUPLICATE '' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MOVEF_F 0.0 VLV_SENTIDO_73
    STRINGS DUPLICATE '' VLV_I_74
    STRINGS DUPLICATE '' VLV_D_74
    MOVEF_F 0.0 VLV_ERROR_74
    MOVEF_F 0.0 VLV_OLDERROR_74
    MOVEF_F 0.0 VLV_ERRSUM_74
    MOVEF_F 0.0 VLV_U_74
    MOVEF_F 0.0 VLV_SENTIDO_74
    STRINGS DUPLICATE '' VLV_I_77
    STRINGS DUPLICATE '' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MOVEF_F 0.0 VLV_SENTIDO_77
    MOVEF_F 0.0 VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
    STRINGS DUPLICATE '' VLV_I_78
    STRINGS DUPLICATE '' VLV_D_78
    MOVEF_F 0.0 VLV_ERROR_78
    MOVEF_F 0.0 VLV_OLDERROR_78
    MOVEF_F 0.0 VLV_ERRSUM_78
    MOVEF_F 0.0 VLV_U_78
    MOVEF_F 0.0 VLV_SENTIDO_78
    MOVEF_F 0.0 VLV_START_C_78
    MOVEF_F 0.0 VLV_ENCODER_C_78
    STRINGS DUPLICATE '' VLV_I_85
    STRINGS DUPLICATE '' VLV_D_85
    MOVEF_F 0.0 VLV_ERROR_85
    MOVEF_F 0.0 VLV_OLDERROR_85
    MOVEF_F 0.0 VLV_ERRSUM_85
    MOVEF_F 0.0 VLV_U_85
    MOVEF_F 0.0 VLV_SENTIDO_85
    MOVEF_F 0.0 VLV_START_C_85
    MOVEF_F 0.0 VLV_ENCODER_C_85
    STRINGS DUPLICATE '' VLV_I_86
    STRINGS DUPLICATE '' VLV_D_86
    MOVEF_F 0.0 VLV_ERROR_86
    MOVEF_F 0.0 VLV_OLDERROR_86
    MOVEF_F 0.0 VLV_ERRSUM_86
    MOVEF_F 0.0 VLV_U_86
    MOVEF_F 0.0 VLV_SENTIDO_86
    MOVEF_F 0.0 VLV_START_C_86
    MOVEF_F 0.0 VLV_ENCODER_C_86
    STRINGS DUPLICATE '' VLV_I_91
    STRINGS DUPLICATE '' VLV_D_91
    MOVEF_F 0.0 VLV_ERROR_91
    MOVEF_F 0.0 VLV_OLDERROR_91
    MOVEF_F 0.0 VLV_ERRSUM_91
    MOVEF_F 0.0 VLV_U_91
    MOVEF_F 0.0 VLV_SENTIDO_91
    MOVEF_F 0.0 VLV_READER1_91
    MOVEF_F 0.0 VLV_READER2_91
    STRINGS DUPLICATE '' VLV_I_92
    STRINGS DUPLICATE '' VLV_D_92
    MOVEF_F 0.0 VLV_ERROR_92
    MOVEF_F 0.0 VLV_OLDERROR_92
    MOVEF_F 0.0 VLV_ERRSUM_92
    MOVEF_F 0.0 VLV_U_92
    MOVEF_F 0.0 VLV_SENTIDO_92
    MOVEF_F 0.0 VLV_READER1_92
    MOVEF_F 0.0 VLV_READER2_92
    STRINGS DUPLICATE '' VLV_I_100
    STRINGS DUPLICATE '' VLV_D_100
    MOVEF_F 0.0 VLV_V0_100
    MOVEF_F 0.0 VLV_ACCELENCODER_100
    MOVEF_F 0.0 VLV_U_100
    MOVEF_F 0.0 VLV_ERRSUM_100
    MOVEF_F 0.0 VLV_OLDERROR_100
    MOVEF_F 0.0 VLV_VEL_100
    MOVEF_F 0.0 VLV_SENTIDO_100
    MOVEF_F 0.0 VLV_ERROR_100
    MOVEF_F 0.0 VLV_ENCDIFF_107
    MOVEF_F 0.0 VLV_SIGNO_107
    MOVEF_F 0.0 VLV_ENCDIFF_111
    MOVEF_F 0.0 VLV_SIGNO_111
    MOVEF_F 0.0 VLV_SAFETYTIMER_111
    MOVEF_F 0.0 VLV_DIFFA_116
    MOVEF_F 0.0 VLV_DIFFD_116
    MOVEF_F 0.0 VLV_SAFETYTIMER_116
    MOVEF_F 0.0 VLV_SIGNOA_116
    MOVEF_F 0.0 VLV_SIGNOD_116
    MOVEF_F 0.0 VLV_VELA_116
    MOVEF_F 0.0 VLV_VELD_116
    MOVEF_F 0.0 VLV_ENCDIFF_117
    MOVEF_F 0.0 VLV_SIGNO_117
    MOVEF_F 0.0 VLV_ENCDIFF_121
    MOVEF_F 0.0 VLV_SIGNO_121
    MOVEF_F 0.0 VLV_SAFETYTIMER_121
    MOVEF_F 0.0 VLV_RED_122
    MOVEF_F 0.0 VLV_YELLOW_122
    MOVEF_F 0.0 VLV_GREEN_122
    MOVEF_F 0.0 VLV_BLUE_122
    MOVEF_F 0.0 VLV_VALUENEGRO_122
    MOVEF_F 0.0 VLV_VALUEBLANCO_122
    MOVEF_F 0.0 VLV_RWHITE_122
    MOVEF_F 0.0 VLV_GWHITE_122
    MOVEF_F 0.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_MAXA_122
    MOVEF_F 0.0 VLV_J_122
    CALL ARRAYCREATE_FLOAT VLV_RGB_122
    MOVEF_F 0.0 VLV_RRAW_122
    MOVEF_F 0.0 VLV_GRAW_122
    MOVEF_F 0.0 VLV_BRAW_122
    MOVEF_F 0.0 VLV_RNORM_122
    MOVEF_F 0.0 VLV_GNORM_122
    MOVEF_F 0.0 VLV_BNORM_122
    MOVEF_F 0.0 VLV_MAX_122
    MOVEF_F 0.0 VLV_MIN_122
    MOVEF_F 0.0 VLV_RGBGREY_122
    MOVEF_F 0.0 VLV_RED_123
    MOVEF_F 0.0 VLV_YELLOW_123
    MOVEF_F 0.0 VLV_GREEN_123
    MOVEF_F 0.0 VLV_BLUE_123
    MOVEF_F 0.0 VLV_VALUENEGRO_123
    MOVEF_F 0.0 VLV_VALUEBLANCO_123
    MOVEF_F 0.0 VLV_RWHITE_123
    MOVEF_F 0.0 VLV_GWHITE_123
    MOVEF_F 0.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_MAXA_123
    MOVEF_F 0.0 VLV_J_123
    CALL ARRAYCREATE_FLOAT VLV_RGB_123
    MOVEF_F 0.0 VLV_RRAW_123
    MOVEF_F 0.0 VLV_GRAW_123
    MOVEF_F 0.0 VLV_BRAW_123
    MOVEF_F 0.0 VLV_RNORM_123
    MOVEF_F 0.0 VLV_GNORM_123
    MOVEF_F 0.0 VLV_BNORM_123
    MOVEF_F 0.0 VLV_MAX_123
    MOVEF_F 0.0 VLV_MIN_123
    MOVEF_F 0.0 VLV_RGBGREY_123
    MOVEF_F 0.0 VLV_RED_124
    MOVEF_F 0.0 VLV_YELLOW_124
    MOVEF_F 0.0 VLV_GREEN_124
    MOVEF_F 0.0 VLV_BLUE_124
    MOVEF_F 0.0 VLV_VALUENEGRO_124
    MOVEF_F 0.0 VLV_VALUEBLANCO_124
    MOVEF_F 0.0 VLV_RWHITE_124
    MOVEF_F 0.0 VLV_GWHITE_124
    MOVEF_F 0.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_MAXA_124
    MOVEF_F 0.0 VLV_J_124
    CALL ARRAYCREATE_FLOAT VLV_RGB_124
    MOVEF_F 0.0 VLV_RRAW_124
    MOVEF_F 0.0 VLV_GRAW_124
    MOVEF_F 0.0 VLV_BRAW_124
    MOVEF_F 0.0 VLV_RNORM_124
    MOVEF_F 0.0 VLV_GNORM_124
    MOVEF_F 0.0 VLV_BNORM_124
    MOVEF_F 0.0 VLV_MAX_124
    MOVEF_F 0.0 VLV_MIN_124
    MOVEF_F 0.0 VLV_RGBGREY_124
    MOVEF_F 0.0 VLV_RED_125
    MOVEF_F 0.0 VLV_YELLOW_125
    MOVEF_F 0.0 VLV_GREEN_125
    MOVEF_F 0.0 VLV_BLUE_125
    MOVEF_F 0.0 VLV_VALUENEGRO_125
    MOVEF_F 0.0 VLV_VALUEBLANCO_125
    MOVEF_F 0.0 VLV_RWHITE_125
    MOVEF_F 0.0 VLV_GWHITE_125
    MOVEF_F 0.0 VLV_BWHITE_125
    MOVEF_F 0.0 VLV_HUE_125
    MOVEF_F 0.0 VLV_SAT_125
    MOVEF_F 0.0 VLV_VALUE_125
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_MAXA_125
    MOVEF_F 0.0 VLV_J_125
    CALL ARRAYCREATE_FLOAT VLV_RGB_125
    MOVEF_F 0.0 VLV_RRAW_125
    MOVEF_F 0.0 VLV_GRAW_125
    MOVEF_F 0.0 VLV_BRAW_125
    MOVEF_F 0.0 VLV_RNORM_125
    MOVEF_F 0.0 VLV_GNORM_125
    MOVEF_F 0.0 VLV_BNORM_125
    MOVEF_F 0.0 VLV_MAX_125
    MOVEF_F 0.0 VLV_MIN_125
    MOVEF_F 0.0 VLV_RGBGREY_125
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 0
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1119
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1119:
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_VELOCIDAD_78
    MOVEF_F 0.0 VLV_KP_78
    MOVEF_F 0.0 VLV_KI_78
    MOVEF_F 0.0 VLV_KD_78
    MOVEF_F 0.0 VLV_ENCODER_78
    MOVEF_F 0.0 VLV_VELOCIDAD_91
    MOVEF_F 0.0 VLV_KP_91
    MOVEF_F 0.0 VLV_KI_91
    MOVEF_F 0.0 VLV_KD_91
    MOVEF_F 0.0 VLV_READER_91
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VELOCIDAD_85
    MOVEF_F 0.0 VLV_KP_85
    MOVEF_F 0.0 VLV_KI_85
    MOVEF_F 0.0 VLV_KD_85
    MOVEF_F 0.0 VLV_ENCODER_85
    MOVEF_F 0.0 VLV_VELOCIDAD_92
    MOVEF_F 0.0 VLV_KP_92
    MOVEF_F 0.0 VLV_KI_92
    MOVEF_F 0.0 VLV_KD_92
    MOVEF_F 0.0 VLV_READER_92
    MOVEF_F 0.0 VLV_VELOCIDAD_86
    MOVEF_F 0.0 VLV_KP_86
    MOVEF_F 0.0 VLV_KI_86
    MOVEF_F 0.0 VLV_KD_86
    MOVEF_F 0.0 VLV_ENCODER_86
    MOVEF_F 0.0 VLV_V_116
    MOVEF_F 0.0 VLV_GRADOS_116
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
    MOVEF_F 0.0 VLV_V0_58
    MOVEF_F 0.0 VLV_VMAX_58
    MOVEF_F 0.0 VLV_KP_58
    MOVEF_F 0.0 VLV_KI_58
    MOVEF_F 0.0 VLV_KD_58
    MOVEF_F 0.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_VELOCIDAD_74
    MOVEF_F 0.0 VLV_KP_74
    MOVEF_F 0.0 VLV_KI_74
    MOVEF_F 0.0 VLV_KD_74
    MOVEF_F 0.0 VLV_VMAX_100
    MOVEF_F 0.0 VLV_KP_100
    MOVEF_F 0.0 VLV_KI_100
    MOVEF_F 0.0 VLV_KD_100
    MOVEF_F 0.0 VLV_COLOR_134
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_125
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_T_120
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_COLOR_129
    MOVEF_F 0.0 VLV_READ_137
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 0.0 VGV_TIEMPOHASTALINEA
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0003 VGV_KI
    MOVEF_F 7.0 VGV_KD
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.44444444444444 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB0 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB0:
    DATA32 tmp1
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp1
    JR_NEQ32 0 tmp1 alreadylaunched1
    OBJECT_START TF_STOP_0
  alreadylaunched1:
    WRITE32 ENDSUB_F_MAINPRUEBA_0:CALLSUB2 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAINPRUEBA_0
CALLSUB2:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 0.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 4.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 4.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while8:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 700.0 endwhile8
  whilebody8:
    MOVEF_8 40.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 700.0 whilebody8
  endwhile8:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    DATA32 milliseconds13
	MOVEF_32 100.0 milliseconds13
	DATA32 timer13
	TIMER_WAIT milliseconds13 timer13
	TIMER_READY timer13
    CALL MOTOR.SCHEDULE 'A' -50.0 0.0 350.0 0.0 'True' 

	DATA8 layer14
	DATA8 nos14
	DATA8 busy14
	CALL MOTORDECODEPORTSDESCRIPTOR 'A' layer14 nos14
	JR_EQ8 0 nos14 motornotbusy14
  motorwaiting14:
	OUTPUT_TEST layer14 nos14 busy14
	JR_EQ8 busy14 0 motornotbusy14
	SLEEP
	JR motorwaiting14
  motornotbusy14:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds17
	MOVEF_32 100.0 milliseconds17
	DATA32 timer17
	TIMER_WAIT milliseconds17 timer17
	TIMER_READY timer17
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_MAINPRUEBA_0:
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB18 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB18:
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 62.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB19:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 62.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB20:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 16.5 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB21 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB21:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB22 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB22:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 4.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB23:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB24 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB24:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB25 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB25:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 89.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB26 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB26:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MULF VGV_KP 0.5 VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MULF VGV_KD 0.5 VLV_KD_77
    MOVEF_F 8.5 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB29:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB30 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB30:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB31 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB31:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB32:
    MULF VGV_VELOCIDAD 0.4 VLV_V_107
    MOVEF_F -110.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB34 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB34:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB35 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB35:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB36:
    MOVEF_F -40.0 VLV_VELOCIDAD_1
    MOVEF_F 22.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB37 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB37:
    MOVEF_F 30.0 VLV_VELOCIDAD_78
    MULF VGV_KP 1.5 VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 5.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB39:
    TIMER_READ timeMC4
    MOVEF_F 30.0 VLV_VELOCIDAD_91
    MOVEF_F VGV_KP VLV_KP_91
    MOVEF_F VGV_KI VLV_KI_91
    MOVEF_F VGV_KD VLV_KD_91
    MOVEF_F 3.0 VLV_READER_91
    WRITE32 ENDSUB_F_SL1SPIDCROSS_5:CALLSUB41 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_5
CALLSUB41:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp VGV_TIEMPOHASTALINEA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_TIEMPOHASTALINEA '%g' 99 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    JR_GTEQF VGV_TIEMPOHASTALINEA 1400.0 else46_1
    WRITE32 ENDSUB_F_CASOPSOE_0:CALLSUB47 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASOPSOE_0
CALLSUB47:
    WRITE32 ENDSUB_F_FINPRUEBA_0:CALLSUB48 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINPRUEBA_0
CALLSUB48:
    JR endif46
  else46_1:
    WRITE32 ENDSUB_F_CASOVOX_0:CALLSUB49 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASOVOX_0
CALLSUB49:
    WRITE32 ENDSUB_F_FINPRUEBA_0:CALLSUB50 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINPRUEBA_0
CALLSUB50:
  else46_2:
  endif46:
RETSUB_F_MAINPRUEBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAINPRUEBA_0:
SUB_F_CASOPSOE_0:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB51:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB52:
    MOVEF_F 40.0 VLV_VELOCIDAD_73
    MOVEF_F VGV_KP VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB53 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB53:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB54:
    MOVEF_F 30.0 VLV_VELOCIDAD_85
    MOVEF_F VGV_KP VLV_KP_85
    MOVEF_F VGV_KI VLV_KI_85
    MULF VGV_KD 1.5 VLV_KD_85
    MOVEF_F 27.0 VLV_ENCODER_85
    WRITE32 ENDSUB_F_SL31PIDENC_5:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENC_5
CALLSUB56:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 90.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB57 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB57:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB58:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB59 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB59:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB60:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB61:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 7.5 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB62:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB63:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB64 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB64:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB65:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB66:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB67:
    MOVEF_F 30.0 VLV_VELOCIDAD_78
    MOVEF_F VGV_KP VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 5.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB68 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB68:
    MOVEF_F 30.0 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB69 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB69:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 25.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB70 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB70:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_37
    MULF VGV_VELOCIDAD 0.2 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB73 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB73:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 13.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB75:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB76:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB78:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB81:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_86
    MULF VGV_KP 1.5 VLV_KP_86
    MOVEF_F VGV_KI VLV_KI_86
    MOVEF_F VGV_KD VLV_KD_86
    MOVEF_F 5.0 VLV_ENCODER_86
    WRITE32 ENDSUB_F_SL31PIDENCF_5:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENCF_5
CALLSUB84:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 4.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB86:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 1.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB88:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB91:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB93:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB94:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 8.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB95:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB96:
    MOVEF_F 15.0 VLV_VELOCIDAD_85
    MOVEF_F VGV_KP VLV_KP_85
    MOVEF_F VGV_KI VLV_KI_85
    MOVEF_F VGV_KD VLV_KD_85
    MOVEF_F 8.5 VLV_ENCODER_85
    WRITE32 ENDSUB_F_SL31PIDENC_5:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENC_5
CALLSUB97:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB98:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB99:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB100:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB101:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB104:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_78
    MULF VGV_KP 1.5 VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 3.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB107:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB109:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB111:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB114:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MULF VGV_KP 1.5 VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 20.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB117:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB119:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_73
    MULF VGV_KP 1.5 VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB122:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB124:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB127:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 8.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB129:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB130:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 4.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB131:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB132:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB133:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB134:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 9.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB135:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 91.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB136:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB137:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB138:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB139:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_37
    MULF VGV_VELOCIDAD -0.2 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB142:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_91
    MOVEF_F VGV_KP VLV_KP_91
    MOVEF_F VGV_KI VLV_KI_91
    MOVEF_F VGV_KD VLV_KD_91
    MOVEF_F 4.0 VLV_READER_91
    WRITE32 ENDSUB_F_SL1SPIDCROSS_5:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_5
CALLSUB144:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB146:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB149:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 10.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB151:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB152:
RETSUB_F_CASOPSOE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOPSOE_0:
SUB_F_CASOVOX_0:
RETSUB_F_CASOVOX_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOVOX_0:
SUB_F_STOP_0:
  while153:
  whilebody153:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else154_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_116
    MOVEF_F 0.0 VLV_GRADOS_116
    WRITE32 ENDSUB_F_BMOVEADSAFE_2:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEADSAFE_2
CALLSUB159:
    PROGRAM_STOP -1
  else154_1:
  endif154:
    JR whilebody153
  endwhile153:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_FINPRUEBA_0:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEASAFE_2:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEASAFE_2
CALLSUB163:
    MOVEF_F 20.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB164:
    PROGRAM_STOP -1
RETSUB_F_FINPRUEBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINPRUEBA_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf169
    DATA8 flag169
    DIVF F.1 F.2 tmpf169
    CP_EQF 0.0 F.2 flag169
    SELECTF flag169 0.0 tmpf169 F.0

    DATAF tmpf170
    DATA8 flag170
    DIVF F.0 VLV_DIAMETRO_1 tmpf170
    CP_EQF 0.0 VLV_DIAMETRO_1 flag170
    SELECTF flag170 0.0 tmpf170 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    DATAF tmpf173
    DATA8 flag173
    DIVF VGV_CORRECCION 30.0 tmpf173
    CP_EQF 0.0 30.0 flag173
    SELECTF flag173 0.0 tmpf173 F.2

    MULF F.2 VLV_VELOCIDAD_1 F.1
    ADDF F.0 F.1 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while179:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile179
  whilebody179:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 1.2 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody179
  endwhile179:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_37
    STRINGS DUPLICATE 'C' VLV_D_37
    DATAF tmpf195
    DATA8 flag195
    DIVF VLV_V1_37 VLV_V2_37 tmpf195
    CP_EQF 0.0 VLV_V2_37 flag195
    SELECTF flag195 0.0 tmpf195 F.0

    DATAF tmpf196
    DATA8 flag196
    DIVF VLV_V1_37 VLV_V2_37 tmpf196
    CP_EQF 0.0 VLV_V2_37 flag196
    SELECTF flag196 0.0 tmpf196 F.2

    MATH ABS F.2 F.1
    DATAF tmpf198
    DATA8 flag198
    DIVF F.0 F.1 tmpf198
    CP_EQF 0.0 F.1 flag198
    SELECTF flag198 0.0 tmpf198 VLV_SIGNO_37

    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag201
	CP_LTF F.0 F.1 flag201
	SELECTF flag201 F.0 F.1 VLV_VMIN_37
    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag204
	CP_GTF F.0 F.1 flag204
	SELECTF flag204 F.0 F.1 VLV_VMAX_37
    MULF VLV_ANGLE_37 VGV_G1 F.0
    MULF VLV_SIGNO_37 VLV_VMIN_37 F.4
    DATAF tmpf207
    DATA8 flag207
    DIVF F.4 VLV_VMAX_37 tmpf207
    CP_EQF 0.0 VLV_VMAX_37 flag207
    SELECTF flag207 0.0 tmpf207 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf209
    DATA8 flag209
    DIVF -2.0 F.2 tmpf209
    CP_EQF 0.0 F.2 flag209
    SELECTF flag209 0.0 tmpf209 F.1

    MULF F.0 F.1 VLV_ENCODR_37
    CALL TEXT.APPEND VLV_I_37 VLV_D_37 S.0
    MATH NEGATE VLV_V1_37 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_37 VLV_ENCODR_37 'True'

	DATA8 layer213
	DATA8 nos213
	DATA8 busy213
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer213 nos213
	JR_EQ8 0 nos213 motornotbusy213
  motorwaiting213:
	OUTPUT_TEST layer213 nos213 busy213
	JR_EQ8 busy213 0 motornotbusy213
	SLEEP
	JR motorwaiting213
  motornotbusy213:
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    DATA32 milliseconds214
	MOVEF_32 200.0 milliseconds214
	DATA32 timer214
	TIMER_WAIT milliseconds214 timer214
	TIMER_READY timer214
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_GUNIVENCMMF_3:
    STRINGS DUPLICATE 'B' VLV_I_38
    STRINGS DUPLICATE 'C' VLV_D_38
    DATAF tmpf215
    DATA8 flag215
    DIVF VLV_V1_38 VLV_V2_38 tmpf215
    CP_EQF 0.0 VLV_V2_38 flag215
    SELECTF flag215 0.0 tmpf215 F.0

    DATAF tmpf216
    DATA8 flag216
    DIVF VLV_V1_38 VLV_V2_38 tmpf216
    CP_EQF 0.0 VLV_V2_38 flag216
    SELECTF flag216 0.0 tmpf216 F.2

    MATH ABS F.2 F.1
    DATAF tmpf218
    DATA8 flag218
    DIVF F.0 F.1 tmpf218
    CP_EQF 0.0 F.1 flag218
    SELECTF flag218 0.0 tmpf218 VLV_SIGNO_38

    MATH ABS VLV_V1_38 F.0
    MATH ABS VLV_V2_38 F.1
    DATA8 flag221
	CP_LTF F.0 F.1 flag221
	SELECTF flag221 F.0 F.1 VLV_VMIN_38
    MATH ABS VLV_V1_38 F.0
    MATH ABS VLV_V2_38 F.1
    DATA8 flag224
	CP_GTF F.0 F.1 flag224
	SELECTF flag224 F.0 F.1 VLV_VMAX_38
    MULF VLV_ANGLE_38 VGV_G1 F.0
    MULF VLV_SIGNO_38 VLV_VMIN_38 F.4
    DATAF tmpf227
    DATA8 flag227
    DIVF F.4 VLV_VMAX_38 tmpf227
    CP_EQF 0.0 VLV_VMAX_38 flag227
    SELECTF flag227 0.0 tmpf227 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf229
    DATA8 flag229
    DIVF -2.0 F.2 tmpf229
    CP_EQF 0.0 F.2 flag229
    SELECTF flag229 0.0 tmpf229 F.1

    MULF F.0 F.1 VLV_ENCODR_38
    CALL TEXT.APPEND VLV_I_38 VLV_D_38 S.0
    MATH NEGATE VLV_V1_38 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_38 VLV_ENCODR_38 'False'

	DATA8 layer233
	DATA8 nos233
	DATA8 busy233
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer233 nos233
	JR_EQ8 0 nos233 motornotbusy233
  motorwaiting233:
	OUTPUT_TEST layer233 nos233 busy233
	JR_EQ8 busy233 0 motornotbusy233
	SLEEP
	JR motorwaiting233
  motornotbusy233:
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
RETSUB_F_GUNIVENCMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMMF_3:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_58
    STRINGS DUPLICATE 'C' VLV_D_58
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf236
    DATA8 flag236
    DIVF VLV_ACCELENCODER_58 F.1 tmpf236
    CP_EQF 0.0 F.1 flag236
    SELECTF flag236 0.0 tmpf236 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_U_58
    MOVEF_F 0.0 VLV_ERROR_58
    MOVEF_F 0.0 VLV_OLDERROR_58
    MOVEF_F 0.0 VLV_ERRSUM_58
    CALL MOTOR.RESETCOUNT 'C'
  while239:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or240
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile239
  or240:
  whilebody239:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf244
    DATA8 flag244
    DIVF F.3 VLV_ACCELENCODER_58 tmpf244
    CP_EQF 0.0 VLV_ACCELENCODER_58 flag244
    SELECTF flag244 0.0 tmpf244 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_58 VLV_V0_58 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_58 VLV_VEL_58
    DATA8 flag249
	CP_LTF VLV_VEL_58 VLV_VMAX_58 flag249
	SELECTF flag249 VLV_VEL_58 VLV_VMAX_58 VLV_VEL_58
    MATH ABS VLV_VEL_58 F.0
    DATAF tmpf251
    DATA8 flag251
    DIVF VLV_VEL_58 F.0 tmpf251
    CP_EQF 0.0 F.0 flag251
    SELECTF flag251 0.0 tmpf251 VLV_SENTIDO_58

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_58 VLV_ERROR_58
    ADDF VLV_ERRSUM_58 VLV_ERROR_58 VLV_ERRSUM_58
    MULF VLV_ERROR_58 VLV_KP_58 F.1
    SUBF VLV_ERROR_58 VLV_OLDERROR_58 F.3
    MULF F.3 VLV_KD_58 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_58 VLV_KI_58 F.1
    ADDF F.0 F.1 VLV_U_58
    CALL TEXT.APPEND VLV_I_58 VLV_D_58 S.0
    ADDF VLV_VEL_58 VLV_U_58 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_58 VLV_U_58 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_58 VLV_OLDERROR_58
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody239
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody239
  endwhile239:
    CALL TEXT.APPEND VLV_I_58 VLV_D_58 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PID_4:
    MULF VLV_VELOCIDAD_73 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_73
    STRINGS DUPLICATE 'B' VLV_I_73
    STRINGS DUPLICATE 'C' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MATH ABS VLV_VELOCIDAD_73 F.0
    DATAF tmpf276
    DATA8 flag276
    DIVF VLV_VELOCIDAD_73 F.0 tmpf276
    CP_EQF 0.0 F.0 flag276
    SELECTF flag276 0.0 tmpf276 VLV_SENTIDO_73

  while277:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or278
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile277
  or278:
  whilebody277:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_73 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_73
    ADDF VLV_ERRSUM_73 VLV_ERROR_73 VLV_ERRSUM_73
    MULF VLV_ERROR_73 VLV_KP_73 F.1
    SUBF VLV_ERROR_73 VLV_OLDERROR_73 F.3
    MULF F.3 VLV_KD_73 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_73 VLV_KI_73 F.1
    ADDF F.0 F.1 VLV_U_73
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    ADDF VLV_VELOCIDAD_73 VLV_U_73 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_73 VLV_U_73 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_73 VLV_OLDERROR_73
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody277
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody277
  endwhile277:
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PID_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PID_4:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_74 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_74
    STRINGS DUPLICATE 'B' VLV_I_74
    STRINGS DUPLICATE 'C' VLV_D_74
    MOVEF_F 0.0 VLV_ERROR_74
    MOVEF_F 0.0 VLV_OLDERROR_74
    MOVEF_F 0.0 VLV_ERRSUM_74
    MOVEF_F 0.0 VLV_U_74
    MATH ABS VLV_VELOCIDAD_74 F.0
    DATAF tmpf304
    DATA8 flag304
    DIVF VLV_VELOCIDAD_74 F.0 tmpf304
    CP_EQF 0.0 F.0 flag304
    SELECTF flag304 0.0 tmpf304 VLV_SENTIDO_74

  while305:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or306
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile305
  or306:
  whilebody305:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_74 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_74
    ADDF VLV_ERRSUM_74 VLV_ERROR_74 VLV_ERRSUM_74
    MULF VLV_ERROR_74 VLV_KP_74 F.1
    SUBF VLV_ERROR_74 VLV_OLDERROR_74 F.3
    MULF F.3 VLV_KD_74 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_74 VLV_KI_74 F.1
    ADDF F.0 F.1 VLV_U_74
    CALL TEXT.APPEND VLV_I_74 VLV_D_74 S.0
    ADDF VLV_VELOCIDAD_74 VLV_U_74 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_74 VLV_U_74 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_74 VLV_OLDERROR_74
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody305
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody305
  endwhile305:
    CALL TEXT.APPEND VLV_I_74 VLV_D_74 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_77 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_77
    STRINGS DUPLICATE 'B' VLV_I_77
    STRINGS DUPLICATE 'C' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MATH ABS VLV_VELOCIDAD_77 F.0
    DATAF tmpf332
    DATA8 flag332
    DIVF VLV_VELOCIDAD_77 F.0 tmpf332
    CP_EQF 0.0 F.0 flag332
    SELECTF flag332 0.0 tmpf332 VLV_SENTIDO_77

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf335
    DATA8 flag335
    DIVF VLV_ENCODER_77 F.1 tmpf335
    CP_EQF 0.0 F.1 flag335
    SELECTF flag335 0.0 tmpf335 F.0

    MULF F.0 360.0 VLV_ENCODER_77
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
  while338:
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_GTEQF F.0 VLV_ENCODER_77 endwhile338
  whilebody338:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_77 VLV_ENCODER_C_77
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_77 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_77
    ADDF VLV_ERRSUM_77 VLV_ERROR_77 VLV_ERRSUM_77
    MULF VLV_ERROR_77 VLV_KP_77 F.1
    SUBF VLV_ERROR_77 VLV_OLDERROR_77 F.3
    MULF F.3 VLV_KD_77 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_77 VLV_KI_77 F.1
    ADDF F.0 F.1 VLV_U_77
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    ADDF VLV_VELOCIDAD_77 VLV_U_77 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_77 VLV_U_77 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_77 VLV_OLDERROR_77
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_LTF F.0 VLV_ENCODER_77 whilebody338
  endwhile338:
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_78 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_78
    STRINGS DUPLICATE 'B' VLV_I_78
    STRINGS DUPLICATE 'C' VLV_D_78
    MOVEF_F 0.0 VLV_ERROR_78
    MOVEF_F 0.0 VLV_OLDERROR_78
    MOVEF_F 0.0 VLV_ERRSUM_78
    MOVEF_F 0.0 VLV_U_78
    MATH ABS VLV_VELOCIDAD_78 F.0
    DATAF tmpf364
    DATA8 flag364
    DIVF VLV_VELOCIDAD_78 F.0 tmpf364
    CP_EQF 0.0 F.0 flag364
    SELECTF flag364 0.0 tmpf364 VLV_SENTIDO_78

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf367
    DATA8 flag367
    DIVF VLV_ENCODER_78 F.1 tmpf367
    CP_EQF 0.0 F.1 flag367
    SELECTF flag367 0.0 tmpf367 F.0

    MULF F.0 360.0 VLV_ENCODER_78
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_78
    MOVEF_F 0.0 VLV_ENCODER_C_78
  while370:
    MATH ABS VLV_ENCODER_C_78 F.0
    JR_GTEQF F.0 VLV_ENCODER_78 endwhile370
  whilebody370:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_78 VLV_ENCODER_C_78
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_78 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_78
    ADDF VLV_ERRSUM_78 VLV_ERROR_78 VLV_ERRSUM_78
    MULF VLV_ERROR_78 VLV_KP_78 F.1
    SUBF VLV_ERROR_78 VLV_OLDERROR_78 F.3
    MULF F.3 VLV_KD_78 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_78 VLV_KI_78 F.1
    ADDF F.0 F.1 VLV_U_78
    CALL TEXT.APPEND VLV_I_78 VLV_D_78 S.0
    ADDF VLV_VELOCIDAD_78 VLV_U_78 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_78 VLV_U_78 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_78 VLV_OLDERROR_78
    MATH ABS VLV_ENCODER_C_78 F.0
    JR_LTF F.0 VLV_ENCODER_78 whilebody370
  endwhile370:
    CALL TEXT.APPEND VLV_I_78 VLV_D_78 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL31PIDENC_5:
    MULF VLV_VELOCIDAD_85 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_85
    STRINGS DUPLICATE 'B' VLV_I_85
    STRINGS DUPLICATE 'C' VLV_D_85
    MOVEF_F 0.0 VLV_ERROR_85
    MOVEF_F 0.0 VLV_OLDERROR_85
    MOVEF_F 0.0 VLV_ERRSUM_85
    MOVEF_F 0.0 VLV_U_85
    MATH ABS VLV_VELOCIDAD_85 F.0
    DATAF tmpf396
    DATA8 flag396
    DIVF VLV_VELOCIDAD_85 F.0 tmpf396
    CP_EQF 0.0 F.0 flag396
    SELECTF flag396 0.0 tmpf396 VLV_SENTIDO_85

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf399
    DATA8 flag399
    DIVF VLV_ENCODER_85 F.1 tmpf399
    CP_EQF 0.0 F.1 flag399
    SELECTF flag399 0.0 tmpf399 F.0

    MULF F.0 360.0 VLV_ENCODER_85
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_85
    MOVEF_F 0.0 VLV_ENCODER_C_85
  while402:
    MATH ABS VLV_ENCODER_C_85 F.0
    JR_GTEQF F.0 VLV_ENCODER_85 endwhile402
  whilebody402:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_85 VLV_ENCODER_C_85
    CALL SENSOR.READPERCENT 3.0 F.2
    CALL SENSOR.READPERCENT 1.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_85 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_85
    ADDF VLV_ERRSUM_85 VLV_ERROR_85 VLV_ERRSUM_85
    MULF VLV_ERROR_85 VLV_KP_85 F.1
    SUBF VLV_ERROR_85 VLV_OLDERROR_85 F.3
    MULF F.3 VLV_KD_85 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_85 VLV_KI_85 F.1
    ADDF F.0 F.1 VLV_U_85
    CALL TEXT.APPEND VLV_I_85 VLV_D_85 S.0
    ADDF VLV_VELOCIDAD_85 VLV_U_85 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_85 VLV_U_85 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_85 VLV_OLDERROR_85
    MATH ABS VLV_ENCODER_C_85 F.0
    JR_LTF F.0 VLV_ENCODER_85 whilebody402
  endwhile402:
    CALL TEXT.APPEND VLV_I_85 VLV_D_85 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL31PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL31PIDENC_5:
SUB_F_SL31PIDENCF_5:
    MULF VLV_VELOCIDAD_86 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_86
    STRINGS DUPLICATE 'B' VLV_I_86
    STRINGS DUPLICATE 'C' VLV_D_86
    MOVEF_F 0.0 VLV_ERROR_86
    MOVEF_F 0.0 VLV_OLDERROR_86
    MOVEF_F 0.0 VLV_ERRSUM_86
    MOVEF_F 0.0 VLV_U_86
    MATH ABS VLV_VELOCIDAD_86 F.0
    DATAF tmpf428
    DATA8 flag428
    DIVF VLV_VELOCIDAD_86 F.0 tmpf428
    CP_EQF 0.0 F.0 flag428
    SELECTF flag428 0.0 tmpf428 VLV_SENTIDO_86

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf431
    DATA8 flag431
    DIVF VLV_ENCODER_86 F.1 tmpf431
    CP_EQF 0.0 F.1 flag431
    SELECTF flag431 0.0 tmpf431 F.0

    MULF F.0 360.0 VLV_ENCODER_86
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_86
    MOVEF_F 0.0 VLV_ENCODER_C_86
  while434:
    MATH ABS VLV_ENCODER_C_86 F.0
    JR_GTEQF F.0 VLV_ENCODER_86 endwhile434
  whilebody434:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_86 VLV_ENCODER_C_86
    CALL SENSOR.READPERCENT 3.0 F.2
    CALL SENSOR.READPERCENT 1.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_86 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_86
    ADDF VLV_ERRSUM_86 VLV_ERROR_86 VLV_ERRSUM_86
    MULF VLV_ERROR_86 VLV_KP_86 F.1
    SUBF VLV_ERROR_86 VLV_OLDERROR_86 F.3
    MULF F.3 VLV_KD_86 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_86 VLV_KI_86 F.1
    ADDF F.0 F.1 VLV_U_86
    CALL TEXT.APPEND VLV_I_86 VLV_D_86 S.0
    ADDF VLV_VELOCIDAD_86 VLV_U_86 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_86 VLV_U_86 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_86 VLV_OLDERROR_86
    MATH ABS VLV_ENCODER_C_86 F.0
    JR_LTF F.0 VLV_ENCODER_86 whilebody434
  endwhile434:
    CALL TEXT.APPEND VLV_I_86 VLV_D_86 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL31PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL31PIDENCF_5:
SUB_F_SL1SPIDCROSS_5:
    MULF VLV_VELOCIDAD_91 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_91
    STRINGS DUPLICATE 'B' VLV_I_91
    STRINGS DUPLICATE 'C' VLV_D_91
    MOVEF_F 0.0 VLV_ERROR_91
    MOVEF_F 0.0 VLV_OLDERROR_91
    MOVEF_F 0.0 VLV_ERRSUM_91
    MOVEF_F 0.0 VLV_U_91
    MATH ABS VLV_VELOCIDAD_91 F.0
    DATAF tmpf460
    DATA8 flag460
    DIVF VLV_VELOCIDAD_91 F.0 tmpf460
    CP_EQF 0.0 F.0 flag460
    SELECTF flag460 0.0 tmpf460 VLV_SENTIDO_91

    JR_NEQF VLV_READER_91 3.0 else461_1
    MOVEF_F 1.0 VLV_READER1_91
    MOVEF_F 4.0 VLV_READER2_91
    JR endif461
  else461_1:
    MOVEF_F 3.0 VLV_READER1_91
    MOVEF_F 1.0 VLV_READER2_91
  else461_2:
  endif461:
  while462:
    CALL SENSOR.READPERCENT VLV_READER_91 F.0
    JR_LTEQF F.0 10.0 endwhile462
  whilebody462:
    CALL SENSOR.READPERCENT VLV_READER1_91 F.2
    CALL SENSOR.READPERCENT VLV_READER2_91 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_91 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_91
    ADDF VLV_ERRSUM_91 VLV_ERROR_91 VLV_ERRSUM_91
    MULF VLV_ERROR_91 VLV_KP_91 F.1
    SUBF VLV_ERROR_91 VLV_OLDERROR_91 F.3
    MULF F.3 VLV_KD_91 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_91 VLV_KI_91 F.1
    ADDF F.0 F.1 VLV_U_91
    CALL TEXT.APPEND VLV_I_91 VLV_D_91 S.0
    ADDF VLV_VELOCIDAD_91 VLV_U_91 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_91 VLV_U_91 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_91 VLV_OLDERROR_91
    CALL SENSOR.READPERCENT VLV_READER_91 F.0
    JR_GTF F.0 10.0 whilebody462
  endwhile462:
    CALL TEXT.APPEND VLV_I_91 VLV_D_91 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL1SPIDCROSS_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSS_5:
SUB_F_SL1SPIDCROSSF_5:
    MULF VLV_VELOCIDAD_92 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_92
    STRINGS DUPLICATE 'B' VLV_I_92
    STRINGS DUPLICATE 'C' VLV_D_92
    MOVEF_F 0.0 VLV_ERROR_92
    MOVEF_F 0.0 VLV_OLDERROR_92
    MOVEF_F 0.0 VLV_ERRSUM_92
    MOVEF_F 0.0 VLV_U_92
    MATH ABS VLV_VELOCIDAD_92 F.0
    DATAF tmpf486
    DATA8 flag486
    DIVF VLV_VELOCIDAD_92 F.0 tmpf486
    CP_EQF 0.0 F.0 flag486
    SELECTF flag486 0.0 tmpf486 VLV_SENTIDO_92

    JR_NEQF VLV_READER_92 3.0 else487_1
    MOVEF_F 1.0 VLV_READER1_92
    MOVEF_F 4.0 VLV_READER2_92
    JR endif487
  else487_1:
    MOVEF_F 3.0 VLV_READER1_92
    MOVEF_F 1.0 VLV_READER2_92
  else487_2:
  endif487:
  while488:
    CALL SENSOR.READPERCENT VLV_READER_92 F.0
    JR_LTEQF F.0 10.0 endwhile488
  whilebody488:
    CALL SENSOR.READPERCENT VLV_READER1_92 F.2
    CALL SENSOR.READPERCENT VLV_READER2_92 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_92 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_92
    ADDF VLV_ERRSUM_92 VLV_ERROR_92 VLV_ERRSUM_92
    MULF VLV_ERROR_92 VLV_KP_92 F.1
    SUBF VLV_ERROR_92 VLV_OLDERROR_92 F.3
    MULF F.3 VLV_KD_92 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_92 VLV_KI_92 F.1
    ADDF F.0 F.1 VLV_U_92
    CALL TEXT.APPEND VLV_I_92 VLV_D_92 S.0
    ADDF VLV_VELOCIDAD_92 VLV_U_92 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_92 VLV_U_92 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_92 VLV_OLDERROR_92
    CALL SENSOR.READPERCENT VLV_READER_92 F.0
    JR_GTF F.0 10.0 whilebody488
  endwhile488:
    CALL TEXT.APPEND VLV_I_92 VLV_D_92 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL1SPIDCROSSF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSSF_5:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_100 VGV_SENTIDO_MOTORES VLV_VMAX_100
    STRINGS DUPLICATE 'B' VLV_I_100
    STRINGS DUPLICATE 'C' VLV_D_100
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_100
    MOVEF_F 150.0 VLV_ACCELENCODER_100
    MOVEF_F 0.0 VLV_U_100
    MOVEF_F 0.0 VLV_ERRSUM_100
    MOVEF_F 0.0 VLV_OLDERROR_100
    CALL MOTOR.RESETCOUNT 'C'
  while513:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or514
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile513
  or514:
  whilebody513:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf518
    DATA8 flag518
    DIVF F.2 VLV_ACCELENCODER_100 tmpf518
    CP_EQF 0.0 VLV_ACCELENCODER_100 flag518
    SELECTF flag518 0.0 tmpf518 F.1

    ADDF VLV_VMAX_100 VLV_V0_100 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_100 VLV_VEL_100
    DATA8 flag522
	CP_LTF VLV_VEL_100 VLV_VMAX_100 flag522
	SELECTF flag522 VLV_VEL_100 VLV_VMAX_100 VLV_VEL_100
    MATH ABS VLV_VEL_100 F.0
    DATAF tmpf524
    DATA8 flag524
    DIVF VLV_VEL_100 F.0 tmpf524
    CP_EQF 0.0 F.0 flag524
    SELECTF flag524 0.0 tmpf524 VLV_SENTIDO_100

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_100 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_100
    MULF VLV_ERRSUM_100 0.9 F.0
    ADDF F.0 VLV_ERROR_100 VLV_ERRSUM_100
    MULF VLV_ERROR_100 VLV_KP_100 F.1
    SUBF VLV_ERROR_100 VLV_OLDERROR_100 F.3
    MULF F.3 VLV_KD_100 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_100 VLV_KI_100 F.1
    ADDF F.0 F.1 VLV_U_100
    CALL TEXT.APPEND VLV_I_100 VLV_D_100 S.0
    ADDF VLV_VEL_100 VLV_U_100 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_100 VLV_U_100 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_100 VLV_OLDERROR_100
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody513
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody513
  endwhile513:
    CALL TEXT.APPEND VLV_I_100 VLV_D_100 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_107 F.0 VLV_ENCDIFF_107
    MATH ABS VLV_ENCDIFF_107 F.0
    DATAF tmpf550
    DATA8 flag550
    DIVF VLV_ENCDIFF_107 F.0 tmpf550
    CP_EQF 0.0 F.0 flag550
    SELECTF flag550 0.0 tmpf550 VLV_SIGNO_107

    JR_EQF VLV_ENCDIFF_107 0.0 else551_1
  while552:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 15.0 endwhile552
  whilebody552:
    MULF VLV_SIGNO_107 VLV_V_107 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 15.0 whilebody552
  endwhile552:
    CALL MOTOR.STOP 'A' 'True'
  else551_1:
  endif551:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEASAFE_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_111 F.0 VLV_ENCDIFF_111
    MATH ABS VLV_ENCDIFF_111 F.0
    DATAF tmpf565
    DATA8 flag565
    DIVF VLV_ENCDIFF_111 F.0 tmpf565
    CP_EQF 0.0 F.0 flag565
    SELECTF flag565 0.0 tmpf565 VLV_SIGNO_111

    MATH ABS VLV_ENCDIFF_111 F.4
    DATAF tmpf567
    DATA8 flag567
    DIVF F.4 100.0 tmpf567
    CP_EQF 0.0 100.0 flag567
    SELECTF flag567 0.0 tmpf567 F.3

    DATAF tmpf568
    DATA8 flag568
    DIVF VLV_V_111 20.0 tmpf568
    CP_EQF 0.0 20.0 flag568
    SELECTF flag568 0.0 tmpf568 F.4

    DATAF tmpf569
    DATA8 flag569
    DIVF F.3 F.4 tmpf569
    CP_EQF 0.0 F.4 flag569
    SELECTF flag569 0.0 tmpf569 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag572
	CP_GTF F.0 400.0 flag572
	SELECTF flag572 F.0 400.0 VLV_SAFETYTIMER_111
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_111 0.0 else574_1
  while575:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile575
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 2000.0 endwhile575
  whilebody575:
    MULF VLV_SIGNO_111 VLV_V_111 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and582
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 2000.0 whilebody575
  and582:
  endwhile575:
    CALL MOTOR.STOP 'A' 'True'
  else574_1:
  endif574:
RETSUB_F_BMOVEASAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEASAFE_2:
SUB_F_BMOVEADSAFE_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_116 F.0 VLV_DIFFA_116
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_116 F.0 VLV_DIFFD_116
    MATH ABS VLV_DIFFA_116 F.5
    MATH ABS VLV_DIFFD_116 F.6
    DATA8 flag594
	CP_GTF F.5 F.6 flag594
	SELECTF flag594 F.5 F.6 F.4
    DATAF tmpf595
    DATA8 flag595
    DIVF F.4 100.0 tmpf595
    CP_EQF 0.0 100.0 flag595
    SELECTF flag595 0.0 tmpf595 F.3

    DATAF tmpf596
    DATA8 flag596
    DIVF VLV_V_116 20.0 tmpf596
    CP_EQF 0.0 20.0 flag596
    SELECTF flag596 0.0 tmpf596 F.4

    DATAF tmpf597
    DATA8 flag597
    DIVF F.3 F.4 tmpf597
    CP_EQF 0.0 F.4 flag597
    SELECTF flag597 0.0 tmpf597 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag600
	CP_GTF F.0 400.0 flag600
	SELECTF flag600 F.0 400.0 VLV_SAFETYTIMER_116
    MATH ABS VLV_DIFFA_116 F.0
    DATAF tmpf602
    DATA8 flag602
    DIVF VLV_DIFFA_116 F.0 tmpf602
    CP_EQF 0.0 F.0 flag602
    SELECTF flag602 0.0 tmpf602 VLV_SIGNOA_116

    MATH ABS VLV_DIFFD_116 F.0
    DATAF tmpf604
    DATA8 flag604
    DIVF VLV_DIFFD_116 F.0 tmpf604
    CP_EQF 0.0 F.0 flag604
    SELECTF flag604 0.0 tmpf604 VLV_SIGNOD_116

    MULF VLV_V_116 VLV_SIGNOA_116 VLV_VELA_116
    MULF VLV_V_116 VLV_SIGNOD_116 VLV_VELD_116
    CALL MOTOR.SCHEDULESYNC 'AD' VLV_VELA_116 VLV_VELD_116 5.0 'False'

	DATA8 layer607
	DATA8 nos607
	DATA8 busy607
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer607 nos607
	JR_EQ8 0 nos607 motornotbusy607
  motorwaiting607:
	OUTPUT_TEST layer607 nos607 busy607
	JR_EQ8 busy607 0 motornotbusy607
	SLEEP
	JR motorwaiting607
  motornotbusy607:
    CALL LCD.CLEAR
    TIMER_READ timeMC3
  while610:
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 or611
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_EQF F.0 0.0 endwhile610
  or611:
  whilebody610:
    MULF VLV_DIFFA_116 VLV_SIGNOA_116 F.0
    JR_LTEQF F.0 0.0 else614_1
    MOVEF_8 VLV_VELA_116 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif614
  else614_1:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else614_2:
  endif614:
    MULF VLV_DIFFD_116 VLV_SIGNOD_116 F.0
    JR_LTEQF F.0 0.0 else618_1
    MOVEF_8 VLV_VELD_116 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif618
  else618_1:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else618_2:
  endif618:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTEQF F.0 VLV_SAFETYTIMER_116 else622_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
  else622_1:
  endif622:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_116 F.0 VLV_DIFFA_116
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_116 F.0 VLV_DIFFD_116
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_116 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 whilebody610
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_NEQF F.0 0.0 whilebody610
  endwhile610:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEADSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEADSAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_117 F.0 VLV_ENCDIFF_117
    MATH ABS VLV_ENCDIFF_117 F.0
    DATAF tmpf639
    DATA8 flag639
    DIVF VLV_ENCDIFF_117 F.0 tmpf639
    CP_EQF 0.0 F.0 flag639
    SELECTF flag639 0.0 tmpf639 VLV_SIGNO_117

    JR_EQF VLV_ENCDIFF_117 0.0 else640_1
    MULF VLV_SIGNO_117 VLV_V_117 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while643:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_117 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile643
  whilebody643:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_117 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody643
  endwhile643:
    CALL MOTOR.STOP 'D' 'True'
  else640_1:
  endif640:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while652:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_120 endwhile652
  whilebody652:
    MOVEF_8 VLV_V_120 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_120 whilebody652
  endwhile652:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_121 F.0 VLV_ENCDIFF_121
    MATH ABS VLV_ENCDIFF_121 F.0
    DATAF tmpf660
    DATA8 flag660
    DIVF VLV_ENCDIFF_121 F.0 tmpf660
    CP_EQF 0.0 F.0 flag660
    SELECTF flag660 0.0 tmpf660 VLV_SIGNO_121

    MATH ABS VLV_ENCDIFF_121 F.4
    DATAF tmpf662
    DATA8 flag662
    DIVF F.4 100.0 tmpf662
    CP_EQF 0.0 100.0 flag662
    SELECTF flag662 0.0 tmpf662 F.3

    DATAF tmpf663
    DATA8 flag663
    DIVF VLV_V_121 20.0 tmpf663
    CP_EQF 0.0 20.0 flag663
    SELECTF flag663 0.0 tmpf663 F.4

    DATAF tmpf664
    DATA8 flag664
    DIVF F.3 F.4 tmpf664
    CP_EQF 0.0 F.4 flag664
    SELECTF flag664 0.0 tmpf664 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag667
	CP_GTF F.0 400.0 flag667
	SELECTF flag667 F.0 400.0 VLV_SAFETYTIMER_121
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_121 0.0 else669_1
  while670:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_121 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile670
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_121 endwhile670
  whilebody670:
    MULF VLV_SIGNO_121 VLV_V_121 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_121 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_121 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and681
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_121 whilebody670
  and681:
  endwhile670:
    CALL MOTOR.STOP 'D' 'True'
  else669_1:
  endif669:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer687
	DATA8 no687
	DATA8 mode8687
	
	MOVEF_8 1.0 no687
	SUB8 no687 1 no687
	DIV8 no687 4 layer687
	MATH MOD8 no687 4 no687

	MOVEF_8 4.0 mode8687
	
	INPUT_DEVICE READY_RAW layer687 no687 0 mode8687 0
    MOVEF_F 15.0 VLV_RED_122
    MOVEF_F 60.0 VLV_YELLOW_122
    MOVEF_F 170.0 VLV_GREEN_122
    MOVEF_F 330.0 VLV_BLUE_122
    MOVEF_F 10.0 VLV_VALUENEGRO_122
    MOVEF_F 100.0 VLV_VALUEBLANCO_122
    MOVEF_F 147.0 VLV_RWHITE_122
    MOVEF_F 143.0 VLV_GWHITE_122
    MOVEF_F 160.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    MOVEF_F 0.0 VLV_COLOR_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_122
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_122
  for693:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor693
  forbody693:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_122
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_122 VLV_RGB_122
    DATAF tmpf698
    DATA8 flag698
    DIVF VLV_RRAW_122 VLV_RWHITE_122 tmpf698
    CP_EQF 0.0 VLV_RWHITE_122 flag698
    SELECTF flag698 0.0 tmpf698 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    DATAF tmpf702
    DATA8 flag702
    DIVF VLV_GRAW_122 VLV_GWHITE_122 tmpf702
    CP_EQF 0.0 VLV_GWHITE_122 flag702
    SELECTF flag702 0.0 tmpf702 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    DATAF tmpf706
    DATA8 flag706
    DIVF VLV_BRAW_122 VLV_BWHITE_122 tmpf706
    CP_EQF 0.0 VLV_BWHITE_122 flag706
    SELECTF flag706 0.0 tmpf706 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_RNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.3 VLV_GNORMA_122
    DATA8 flag712
	CP_GTF F.2 F.3 flag712
	SELECTF flag712 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_BNORMA_122
    DATA8 flag714
	CP_GTF F.1 F.2 flag714
	SELECTF flag714 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    DATA32 milliseconds716
	MOVEF_32 5.0 milliseconds716
	DATA32 timer716
	TIMER_WAIT milliseconds716 timer716
	TIMER_READY timer716
    ADDF VLV_J_122 1.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody693
  endfor693:
    MOVEF_F 1.0 VLV_J_122
  for718:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor718
  forbody718:
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_122
    ADDF F.0 F.1 VLV_RNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_122
    ADDF F.0 F.1 VLV_GNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_122
    ADDF F.0 F.1 VLV_BNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_122
    ADDF F.0 F.1 VLV_MAX_122
    ADDF VLV_J_122 2.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody718
  endfor718:
    DATAF tmpf736
    DATA8 flag736
    DIVF VLV_RNORM_122 VLV_REPS_122 tmpf736
    CP_EQF 0.0 VLV_REPS_122 flag736
    SELECTF flag736 0.0 tmpf736 VLV_RNORM_122

    DATAF tmpf737
    DATA8 flag737
    DIVF VLV_GNORM_122 VLV_REPS_122 tmpf737
    CP_EQF 0.0 VLV_REPS_122 flag737
    SELECTF flag737 0.0 tmpf737 VLV_GNORM_122

    DATAF tmpf738
    DATA8 flag738
    DIVF VLV_BNORM_122 VLV_REPS_122 tmpf738
    CP_EQF 0.0 VLV_REPS_122 flag738
    SELECTF flag738 0.0 tmpf738 VLV_BNORM_122

    DATAF tmpf739
    DATA8 flag739
    DIVF VLV_MAX_122 VLV_REPS_122 tmpf739
    CP_EQF 0.0 VLV_REPS_122 flag739
    SELECTF flag739 0.0 tmpf739 VLV_MAX_122

    DATA8 flag740
	CP_LTF VLV_RNORM_122 VLV_GNORM_122 flag740
	SELECTF flag740 VLV_RNORM_122 VLV_GNORM_122 F.0
    DATA8 flag741
	CP_LTF F.0 VLV_BNORM_122 flag741
	SELECTF flag741 F.0 VLV_BNORM_122 VLV_MIN_122
    JR_NEQF VLV_MAX_122 VLV_MIN_122 else742_1
    MOVEF_F 0.0 VLV_HUE_122
    JR endif742
  else742_1:
    JR_NEQF VLV_MAX_122 VLV_RNORM_122 else742_2
    JR_LTF VLV_GNORM_122 VLV_BNORM_122 else743_1
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_122 VLV_MIN_122 F.1
    DATAF tmpf747
    DATA8 flag747
    DIVF F.0 F.1 tmpf747
    CP_EQF 0.0 F.1 flag747
    SELECTF flag747 0.0 tmpf747 VLV_HUE_122

    JR endif743
  else743_1:
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf751
    DATA8 flag751
    DIVF F.1 F.2 tmpf751
    CP_EQF 0.0 F.2 flag751
    SELECTF flag751 0.0 tmpf751 F.0

    ADDF F.0 360.0 VLV_HUE_122
  else743_2:
  endif743:
    JR endif742
  else742_2:
    JR_NEQF VLV_MAX_122 VLV_GNORM_122 else742_3
    SUBF VLV_BNORM_122 VLV_RNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf756
    DATA8 flag756
    DIVF F.1 F.2 tmpf756
    CP_EQF 0.0 F.2 flag756
    SELECTF flag756 0.0 tmpf756 F.0

    ADDF F.0 120.0 VLV_HUE_122
    JR endif742
  else742_3:
    SUBF VLV_RNORM_122 VLV_GNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf761
    DATA8 flag761
    DIVF F.1 F.2 tmpf761
    CP_EQF 0.0 F.2 flag761
    SELECTF flag761 0.0 tmpf761 F.0

    ADDF F.0 240.0 VLV_HUE_122
  else742_4:
  endif742:
    JR_NEQF VLV_MAX_122 0.0 else763_1
    MOVEF_F 0.0 VLV_SAT_122
    JR endif763
  else763_1:
    DATAF tmpf764
    DATA8 flag764
    DIVF VLV_MIN_122 VLV_MAX_122 tmpf764
    CP_EQF 0.0 VLV_MAX_122 flag764
    SELECTF flag764 0.0 tmpf764 F.0

    SUBF 1.0 F.0 VLV_SAT_122
  else763_2:
  endif763:
    MOVEF_F VLV_MAX_122 VLV_VALUE_122
    ADDF VLV_VALUEBLANCO_122 VLV_VALUENEGRO_122 F.0
    DATAF tmpf767
    DATA8 flag767
    DIVF F.0 2.0 tmpf767
    CP_EQF 0.0 2.0 flag767
    SELECTF flag767 0.0 tmpf767 VLV_RGBGREY_122

    ADDF VLV_RNORM_122 VLV_GNORM_122 F.1
    ADDF F.1 VLV_BNORM_122 F.0
    JR_GTF F.0 3.0 else768_1
    MOVEF_F 0.0 VLV_COLOR_122
    JR endif768
  else768_1:
    JR_GTEQF VLV_SAT_122 0.4 else771_1
    JR_LTEQF VLV_VALUE_122 VLV_RGBGREY_122 else772_1
    MOVEF_F 6.0 VLV_COLOR_122
    JR endif772
  else772_1:
    MOVEF_F 1.0 VLV_COLOR_122
  else772_2:
  endif772:
    JR endif771
  else771_1:
    JR_LTF VLV_HUE_122 0.0 else773_1
    JR_GTEQF VLV_HUE_122 VLV_RED_122 else773_1
    MOVEF_F 5.0 VLV_COLOR_122
    JR endif773
  else773_1:
    JR_LTF VLV_HUE_122 VLV_RED_122 else773_2
    JR_GTEQF VLV_HUE_122 VLV_YELLOW_122 else773_2
    MOVEF_F 4.0 VLV_COLOR_122
    JR endif773
  else773_2:
    JR_LTF VLV_HUE_122 VLV_YELLOW_122 else773_3
    JR_GTEQF VLV_HUE_122 VLV_GREEN_122 else773_3
    MOVEF_F 3.0 VLV_COLOR_122
    JR endif773
  else773_3:
    JR_LTF VLV_HUE_122 VLV_GREEN_122 else773_4
    JR_GTEQF VLV_HUE_122 VLV_BLUE_122 else773_4
    MOVEF_F 2.0 VLV_COLOR_122
    JR endif773
  else773_4:
    MOVEF_F 5.0 VLV_COLOR_122
  else773_5:
  endif773:
  else771_2:
  endif771:
  else768_2:
  endif768:
    STRINGS VALUE_FORMATTED VLV_RRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_122 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB789:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer790
	DATA8 no790
	DATA8 mode8790
	
	MOVEF_8 2.0 no790
	SUB8 no790 1 no790
	DIV8 no790 4 layer790
	MATH MOD8 no790 4 no790

	MOVEF_8 4.0 mode8790
	
	INPUT_DEVICE READY_RAW layer790 no790 0 mode8790 0
    MOVEF_F 15.0 VLV_RED_123
    MOVEF_F 60.0 VLV_YELLOW_123
    MOVEF_F 170.0 VLV_GREEN_123
    MOVEF_F 330.0 VLV_BLUE_123
    MOVEF_F 10.0 VLV_VALUENEGRO_123
    MOVEF_F 100.0 VLV_VALUEBLANCO_123
    MOVEF_F 147.0 VLV_RWHITE_123
    MOVEF_F 143.0 VLV_GWHITE_123
    MOVEF_F 160.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    MOVEF_F 0.0 VLV_COLOR_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_123
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_123
  for796:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor796
  forbody796:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_123
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_123 VLV_RGB_123
    DATAF tmpf801
    DATA8 flag801
    DIVF VLV_RRAW_123 VLV_RWHITE_123 tmpf801
    CP_EQF 0.0 VLV_RWHITE_123 flag801
    SELECTF flag801 0.0 tmpf801 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    DATAF tmpf805
    DATA8 flag805
    DIVF VLV_GRAW_123 VLV_GWHITE_123 tmpf805
    CP_EQF 0.0 VLV_GWHITE_123 flag805
    SELECTF flag805 0.0 tmpf805 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    DATAF tmpf809
    DATA8 flag809
    DIVF VLV_BRAW_123 VLV_BWHITE_123 tmpf809
    CP_EQF 0.0 VLV_BWHITE_123 flag809
    SELECTF flag809 0.0 tmpf809 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_RNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.3 VLV_GNORMA_123
    DATA8 flag815
	CP_GTF F.2 F.3 flag815
	SELECTF flag815 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_BNORMA_123
    DATA8 flag817
	CP_GTF F.1 F.2 flag817
	SELECTF flag817 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    DATA32 milliseconds819
	MOVEF_32 5.0 milliseconds819
	DATA32 timer819
	TIMER_WAIT milliseconds819 timer819
	TIMER_READY timer819
    ADDF VLV_J_123 1.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody796
  endfor796:
    MOVEF_F 1.0 VLV_J_123
  for821:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor821
  forbody821:
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_123
    ADDF F.0 F.1 VLV_RNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_123
    ADDF F.0 F.1 VLV_GNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_123
    ADDF F.0 F.1 VLV_BNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_123
    ADDF F.0 F.1 VLV_MAX_123
    ADDF VLV_J_123 2.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody821
  endfor821:
    DATAF tmpf839
    DATA8 flag839
    DIVF VLV_RNORM_123 VLV_REPS_123 tmpf839
    CP_EQF 0.0 VLV_REPS_123 flag839
    SELECTF flag839 0.0 tmpf839 VLV_RNORM_123

    DATAF tmpf840
    DATA8 flag840
    DIVF VLV_GNORM_123 VLV_REPS_123 tmpf840
    CP_EQF 0.0 VLV_REPS_123 flag840
    SELECTF flag840 0.0 tmpf840 VLV_GNORM_123

    DATAF tmpf841
    DATA8 flag841
    DIVF VLV_BNORM_123 VLV_REPS_123 tmpf841
    CP_EQF 0.0 VLV_REPS_123 flag841
    SELECTF flag841 0.0 tmpf841 VLV_BNORM_123

    DATAF tmpf842
    DATA8 flag842
    DIVF VLV_MAX_123 VLV_REPS_123 tmpf842
    CP_EQF 0.0 VLV_REPS_123 flag842
    SELECTF flag842 0.0 tmpf842 VLV_MAX_123

    DATA8 flag843
	CP_LTF VLV_RNORM_123 VLV_GNORM_123 flag843
	SELECTF flag843 VLV_RNORM_123 VLV_GNORM_123 F.0
    DATA8 flag844
	CP_LTF F.0 VLV_BNORM_123 flag844
	SELECTF flag844 F.0 VLV_BNORM_123 VLV_MIN_123
    JR_NEQF VLV_MAX_123 VLV_MIN_123 else845_1
    MOVEF_F 0.0 VLV_HUE_123
    JR endif845
  else845_1:
    JR_NEQF VLV_MAX_123 VLV_RNORM_123 else845_2
    JR_LTF VLV_GNORM_123 VLV_BNORM_123 else846_1
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_123 VLV_MIN_123 F.1
    DATAF tmpf850
    DATA8 flag850
    DIVF F.0 F.1 tmpf850
    CP_EQF 0.0 F.1 flag850
    SELECTF flag850 0.0 tmpf850 VLV_HUE_123

    JR endif846
  else846_1:
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf854
    DATA8 flag854
    DIVF F.1 F.2 tmpf854
    CP_EQF 0.0 F.2 flag854
    SELECTF flag854 0.0 tmpf854 F.0

    ADDF F.0 360.0 VLV_HUE_123
  else846_2:
  endif846:
    JR endif845
  else845_2:
    JR_NEQF VLV_MAX_123 VLV_GNORM_123 else845_3
    SUBF VLV_BNORM_123 VLV_RNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf859
    DATA8 flag859
    DIVF F.1 F.2 tmpf859
    CP_EQF 0.0 F.2 flag859
    SELECTF flag859 0.0 tmpf859 F.0

    ADDF F.0 120.0 VLV_HUE_123
    JR endif845
  else845_3:
    SUBF VLV_RNORM_123 VLV_GNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf864
    DATA8 flag864
    DIVF F.1 F.2 tmpf864
    CP_EQF 0.0 F.2 flag864
    SELECTF flag864 0.0 tmpf864 F.0

    ADDF F.0 240.0 VLV_HUE_123
  else845_4:
  endif845:
    JR_NEQF VLV_MAX_123 0.0 else866_1
    MOVEF_F 0.0 VLV_SAT_123
    JR endif866
  else866_1:
    DATAF tmpf867
    DATA8 flag867
    DIVF VLV_MIN_123 VLV_MAX_123 tmpf867
    CP_EQF 0.0 VLV_MAX_123 flag867
    SELECTF flag867 0.0 tmpf867 F.0

    SUBF 1.0 F.0 VLV_SAT_123
  else866_2:
  endif866:
    MOVEF_F VLV_MAX_123 VLV_VALUE_123
    ADDF VLV_VALUEBLANCO_123 VLV_VALUENEGRO_123 F.0
    DATAF tmpf870
    DATA8 flag870
    DIVF F.0 2.0 tmpf870
    CP_EQF 0.0 2.0 flag870
    SELECTF flag870 0.0 tmpf870 VLV_RGBGREY_123

    ADDF VLV_RNORM_123 VLV_GNORM_123 F.1
    ADDF F.1 VLV_BNORM_123 F.0
    JR_GTF F.0 3.0 else871_1
    MOVEF_F 0.0 VLV_COLOR_123
    JR endif871
  else871_1:
    JR_GTEQF VLV_SAT_123 0.4 else874_1
    JR_LTEQF VLV_VALUE_123 VLV_RGBGREY_123 else875_1
    MOVEF_F 6.0 VLV_COLOR_123
    JR endif875
  else875_1:
    MOVEF_F 1.0 VLV_COLOR_123
  else875_2:
  endif875:
    JR endif874
  else874_1:
    JR_LTF VLV_HUE_123 0.0 else876_1
    JR_GTEQF VLV_HUE_123 VLV_RED_123 else876_1
    MOVEF_F 5.0 VLV_COLOR_123
    JR endif876
  else876_1:
    JR_LTF VLV_HUE_123 VLV_RED_123 else876_2
    JR_GTEQF VLV_HUE_123 VLV_YELLOW_123 else876_2
    MOVEF_F 4.0 VLV_COLOR_123
    JR endif876
  else876_2:
    JR_LTF VLV_HUE_123 VLV_YELLOW_123 else876_3
    JR_GTEQF VLV_HUE_123 VLV_GREEN_123 else876_3
    MOVEF_F 3.0 VLV_COLOR_123
    JR endif876
  else876_3:
    JR_LTF VLV_HUE_123 VLV_GREEN_123 else876_4
    JR_GTEQF VLV_HUE_123 VLV_BLUE_123 else876_4
    MOVEF_F 2.0 VLV_COLOR_123
    JR endif876
  else876_4:
    MOVEF_F 5.0 VLV_COLOR_123
  else876_5:
  endif876:
  else874_2:
  endif874:
  else871_2:
  endif871:
    STRINGS VALUE_FORMATTED VLV_RRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_123 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB892:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer893
	DATA8 no893
	DATA8 mode8893
	
	MOVEF_8 3.0 no893
	SUB8 no893 1 no893
	DIV8 no893 4 layer893
	MATH MOD8 no893 4 no893

	MOVEF_8 4.0 mode8893
	
	INPUT_DEVICE READY_RAW layer893 no893 0 mode8893 0
    MOVEF_F 15.0 VLV_RED_124
    MOVEF_F 60.0 VLV_YELLOW_124
    MOVEF_F 170.0 VLV_GREEN_124
    MOVEF_F 330.0 VLV_BLUE_124
    MOVEF_F 10.0 VLV_VALUENEGRO_124
    MOVEF_F 100.0 VLV_VALUEBLANCO_124
    MOVEF_F 147.0 VLV_RWHITE_124
    MOVEF_F 143.0 VLV_GWHITE_124
    MOVEF_F 160.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    MOVEF_F 0.0 VLV_COLOR_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_124
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_124
  for899:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor899
  forbody899:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_124
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_124 VLV_RGB_124
    DATAF tmpf904
    DATA8 flag904
    DIVF VLV_RRAW_124 VLV_RWHITE_124 tmpf904
    CP_EQF 0.0 VLV_RWHITE_124 flag904
    SELECTF flag904 0.0 tmpf904 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    DATAF tmpf908
    DATA8 flag908
    DIVF VLV_GRAW_124 VLV_GWHITE_124 tmpf908
    CP_EQF 0.0 VLV_GWHITE_124 flag908
    SELECTF flag908 0.0 tmpf908 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    DATAF tmpf912
    DATA8 flag912
    DIVF VLV_BRAW_124 VLV_BWHITE_124 tmpf912
    CP_EQF 0.0 VLV_BWHITE_124 flag912
    SELECTF flag912 0.0 tmpf912 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_RNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.3 VLV_GNORMA_124
    DATA8 flag918
	CP_GTF F.2 F.3 flag918
	SELECTF flag918 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_BNORMA_124
    DATA8 flag920
	CP_GTF F.1 F.2 flag920
	SELECTF flag920 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    DATA32 milliseconds922
	MOVEF_32 5.0 milliseconds922
	DATA32 timer922
	TIMER_WAIT milliseconds922 timer922
	TIMER_READY timer922
    ADDF VLV_J_124 1.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody899
  endfor899:
    MOVEF_F 1.0 VLV_J_124
  for924:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor924
  forbody924:
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_124
    ADDF F.0 F.1 VLV_RNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_124
    ADDF F.0 F.1 VLV_GNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_124
    ADDF F.0 F.1 VLV_BNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_124
    ADDF F.0 F.1 VLV_MAX_124
    ADDF VLV_J_124 2.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody924
  endfor924:
    DATAF tmpf942
    DATA8 flag942
    DIVF VLV_RNORM_124 VLV_REPS_124 tmpf942
    CP_EQF 0.0 VLV_REPS_124 flag942
    SELECTF flag942 0.0 tmpf942 VLV_RNORM_124

    DATAF tmpf943
    DATA8 flag943
    DIVF VLV_GNORM_124 VLV_REPS_124 tmpf943
    CP_EQF 0.0 VLV_REPS_124 flag943
    SELECTF flag943 0.0 tmpf943 VLV_GNORM_124

    DATAF tmpf944
    DATA8 flag944
    DIVF VLV_BNORM_124 VLV_REPS_124 tmpf944
    CP_EQF 0.0 VLV_REPS_124 flag944
    SELECTF flag944 0.0 tmpf944 VLV_BNORM_124

    DATAF tmpf945
    DATA8 flag945
    DIVF VLV_MAX_124 VLV_REPS_124 tmpf945
    CP_EQF 0.0 VLV_REPS_124 flag945
    SELECTF flag945 0.0 tmpf945 VLV_MAX_124

    DATA8 flag946
	CP_LTF VLV_RNORM_124 VLV_GNORM_124 flag946
	SELECTF flag946 VLV_RNORM_124 VLV_GNORM_124 F.0
    DATA8 flag947
	CP_LTF F.0 VLV_BNORM_124 flag947
	SELECTF flag947 F.0 VLV_BNORM_124 VLV_MIN_124
    JR_NEQF VLV_MAX_124 VLV_MIN_124 else948_1
    MOVEF_F 0.0 VLV_HUE_124
    JR endif948
  else948_1:
    JR_NEQF VLV_MAX_124 VLV_RNORM_124 else948_2
    JR_LTF VLV_GNORM_124 VLV_BNORM_124 else949_1
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_124 VLV_MIN_124 F.1
    DATAF tmpf953
    DATA8 flag953
    DIVF F.0 F.1 tmpf953
    CP_EQF 0.0 F.1 flag953
    SELECTF flag953 0.0 tmpf953 VLV_HUE_124

    JR endif949
  else949_1:
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf957
    DATA8 flag957
    DIVF F.1 F.2 tmpf957
    CP_EQF 0.0 F.2 flag957
    SELECTF flag957 0.0 tmpf957 F.0

    ADDF F.0 360.0 VLV_HUE_124
  else949_2:
  endif949:
    JR endif948
  else948_2:
    JR_NEQF VLV_MAX_124 VLV_GNORM_124 else948_3
    SUBF VLV_BNORM_124 VLV_RNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf962
    DATA8 flag962
    DIVF F.1 F.2 tmpf962
    CP_EQF 0.0 F.2 flag962
    SELECTF flag962 0.0 tmpf962 F.0

    ADDF F.0 120.0 VLV_HUE_124
    JR endif948
  else948_3:
    SUBF VLV_RNORM_124 VLV_GNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf967
    DATA8 flag967
    DIVF F.1 F.2 tmpf967
    CP_EQF 0.0 F.2 flag967
    SELECTF flag967 0.0 tmpf967 F.0

    ADDF F.0 240.0 VLV_HUE_124
  else948_4:
  endif948:
    JR_NEQF VLV_MAX_124 0.0 else969_1
    MOVEF_F 0.0 VLV_SAT_124
    JR endif969
  else969_1:
    DATAF tmpf970
    DATA8 flag970
    DIVF VLV_MIN_124 VLV_MAX_124 tmpf970
    CP_EQF 0.0 VLV_MAX_124 flag970
    SELECTF flag970 0.0 tmpf970 F.0

    SUBF 1.0 F.0 VLV_SAT_124
  else969_2:
  endif969:
    MOVEF_F VLV_MAX_124 VLV_VALUE_124
    ADDF VLV_VALUEBLANCO_124 VLV_VALUENEGRO_124 F.0
    DATAF tmpf973
    DATA8 flag973
    DIVF F.0 2.0 tmpf973
    CP_EQF 0.0 2.0 flag973
    SELECTF flag973 0.0 tmpf973 VLV_RGBGREY_124

    ADDF VLV_RNORM_124 VLV_GNORM_124 F.1
    ADDF F.1 VLV_BNORM_124 F.0
    JR_GTF F.0 3.0 else974_1
    MOVEF_F 0.0 VLV_COLOR_124
    JR endif974
  else974_1:
    JR_GTEQF VLV_SAT_124 0.4 else977_1
    JR_LTEQF VLV_VALUE_124 VLV_RGBGREY_124 else978_1
    MOVEF_F 6.0 VLV_COLOR_124
    JR endif978
  else978_1:
    MOVEF_F 1.0 VLV_COLOR_124
  else978_2:
  endif978:
    JR endif977
  else977_1:
    JR_LTF VLV_HUE_124 0.0 else979_1
    JR_GTEQF VLV_HUE_124 VLV_RED_124 else979_1
    MOVEF_F 5.0 VLV_COLOR_124
    JR endif979
  else979_1:
    JR_LTF VLV_HUE_124 VLV_RED_124 else979_2
    JR_GTEQF VLV_HUE_124 VLV_YELLOW_124 else979_2
    MOVEF_F 4.0 VLV_COLOR_124
    JR endif979
  else979_2:
    JR_LTF VLV_HUE_124 VLV_YELLOW_124 else979_3
    JR_GTEQF VLV_HUE_124 VLV_GREEN_124 else979_3
    MOVEF_F 3.0 VLV_COLOR_124
    JR endif979
  else979_3:
    JR_LTF VLV_HUE_124 VLV_GREEN_124 else979_4
    JR_GTEQF VLV_HUE_124 VLV_BLUE_124 else979_4
    MOVEF_F 2.0 VLV_COLOR_124
    JR endif979
  else979_4:
    MOVEF_F 5.0 VLV_COLOR_124
  else979_5:
  endif979:
  else977_2:
  endif977:
  else974_2:
  endif974:
    STRINGS VALUE_FORMATTED VLV_RRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_124 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB995:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer996
	DATA8 no996
	DATA8 mode8996
	
	MOVEF_8 4.0 no996
	SUB8 no996 1 no996
	DIV8 no996 4 layer996
	MATH MOD8 no996 4 no996

	MOVEF_8 4.0 mode8996
	
	INPUT_DEVICE READY_RAW layer996 no996 0 mode8996 0
    MOVEF_F 15.0 VLV_RED_125
    MOVEF_F 60.0 VLV_YELLOW_125
    MOVEF_F 170.0 VLV_GREEN_125
    MOVEF_F 330.0 VLV_BLUE_125
    MOVEF_F 10.0 VLV_VALUENEGRO_125
    MOVEF_F 100.0 VLV_VALUEBLANCO_125
    MOVEF_F 147.0 VLV_RWHITE_125
    MOVEF_F 143.0 VLV_GWHITE_125
    MOVEF_F 160.0 VLV_BWHITE_125
    MOVEF_F 0.0 VLV_HUE_125
    MOVEF_F 0.0 VLV_SAT_125
    MOVEF_F 0.0 VLV_VALUE_125
    MOVEF_F 0.0 VLV_COLOR_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_125
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_125
  for1002:
    JR_GTF VLV_J_125 VLV_REPS_125 endfor1002
  forbody1002:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_125
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_125 VLV_RGB_125
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_125 VLV_RGB_125
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_125 VLV_RGB_125
    DATAF tmpf1007
    DATA8 flag1007
    DIVF VLV_RRAW_125 VLV_RWHITE_125 tmpf1007
    CP_EQF 0.0 VLV_RWHITE_125 flag1007
    SELECTF flag1007 0.0 tmpf1007 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_RNORMA_125
    DATAF tmpf1011
    DATA8 flag1011
    DIVF VLV_GRAW_125 VLV_GWHITE_125 tmpf1011
    CP_EQF 0.0 VLV_GWHITE_125 flag1011
    SELECTF flag1011 0.0 tmpf1011 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_GNORMA_125
    DATAF tmpf1015
    DATA8 flag1015
    DIVF VLV_BRAW_125 VLV_BWHITE_125 tmpf1015
    CP_EQF 0.0 VLV_BWHITE_125 flag1015
    SELECTF flag1015 0.0 tmpf1015 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_BNORMA_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.2 VLV_RNORMA_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.3 VLV_GNORMA_125
    DATA8 flag1021
	CP_GTF F.2 F.3 flag1021
	SELECTF flag1021 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_125 F.2 VLV_BNORMA_125
    DATA8 flag1023
	CP_GTF F.1 F.2 flag1023
	SELECTF flag1023 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_MAXA_125
    DATA32 milliseconds1025
	MOVEF_32 5.0 milliseconds1025
	DATA32 timer1025
	TIMER_WAIT milliseconds1025 timer1025
	TIMER_READY timer1025
    ADDF VLV_J_125 1.0 VLV_J_125
    JR_LTEQF VLV_J_125 VLV_REPS_125 forbody1002
  endfor1002:
    MOVEF_F 1.0 VLV_J_125
  for1027:
    JR_GTF VLV_J_125 VLV_REPS_125 endfor1027
  forbody1027:
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_RNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_125
    ADDF F.0 F.1 VLV_RNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_GNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_125
    ADDF F.0 F.1 VLV_GNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_BNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_125
    ADDF F.0 F.1 VLV_BNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_MAXA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_125
    ADDF F.0 F.1 VLV_MAX_125
    ADDF VLV_J_125 2.0 VLV_J_125
    JR_LTEQF VLV_J_125 VLV_REPS_125 forbody1027
  endfor1027:
    DATAF tmpf1045
    DATA8 flag1045
    DIVF VLV_RNORM_125 VLV_REPS_125 tmpf1045
    CP_EQF 0.0 VLV_REPS_125 flag1045
    SELECTF flag1045 0.0 tmpf1045 VLV_RNORM_125

    DATAF tmpf1046
    DATA8 flag1046
    DIVF VLV_GNORM_125 VLV_REPS_125 tmpf1046
    CP_EQF 0.0 VLV_REPS_125 flag1046
    SELECTF flag1046 0.0 tmpf1046 VLV_GNORM_125

    DATAF tmpf1047
    DATA8 flag1047
    DIVF VLV_BNORM_125 VLV_REPS_125 tmpf1047
    CP_EQF 0.0 VLV_REPS_125 flag1047
    SELECTF flag1047 0.0 tmpf1047 VLV_BNORM_125

    DATAF tmpf1048
    DATA8 flag1048
    DIVF VLV_MAX_125 VLV_REPS_125 tmpf1048
    CP_EQF 0.0 VLV_REPS_125 flag1048
    SELECTF flag1048 0.0 tmpf1048 VLV_MAX_125

    DATA8 flag1049
	CP_LTF VLV_RNORM_125 VLV_GNORM_125 flag1049
	SELECTF flag1049 VLV_RNORM_125 VLV_GNORM_125 F.0
    DATA8 flag1050
	CP_LTF F.0 VLV_BNORM_125 flag1050
	SELECTF flag1050 F.0 VLV_BNORM_125 VLV_MIN_125
    JR_NEQF VLV_MAX_125 VLV_MIN_125 else1051_1
    MOVEF_F 0.0 VLV_HUE_125
    JR endif1051
  else1051_1:
    JR_NEQF VLV_MAX_125 VLV_RNORM_125 else1051_2
    JR_LTF VLV_GNORM_125 VLV_BNORM_125 else1052_1
    SUBF VLV_GNORM_125 VLV_BNORM_125 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_125 VLV_MIN_125 F.1
    DATAF tmpf1056
    DATA8 flag1056
    DIVF F.0 F.1 tmpf1056
    CP_EQF 0.0 F.1 flag1056
    SELECTF flag1056 0.0 tmpf1056 VLV_HUE_125

    JR endif1052
  else1052_1:
    SUBF VLV_GNORM_125 VLV_BNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1060
    DATA8 flag1060
    DIVF F.1 F.2 tmpf1060
    CP_EQF 0.0 F.2 flag1060
    SELECTF flag1060 0.0 tmpf1060 F.0

    ADDF F.0 360.0 VLV_HUE_125
  else1052_2:
  endif1052:
    JR endif1051
  else1051_2:
    JR_NEQF VLV_MAX_125 VLV_GNORM_125 else1051_3
    SUBF VLV_BNORM_125 VLV_RNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1065
    DATA8 flag1065
    DIVF F.1 F.2 tmpf1065
    CP_EQF 0.0 F.2 flag1065
    SELECTF flag1065 0.0 tmpf1065 F.0

    ADDF F.0 120.0 VLV_HUE_125
    JR endif1051
  else1051_3:
    SUBF VLV_RNORM_125 VLV_GNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1070
    DATA8 flag1070
    DIVF F.1 F.2 tmpf1070
    CP_EQF 0.0 F.2 flag1070
    SELECTF flag1070 0.0 tmpf1070 F.0

    ADDF F.0 240.0 VLV_HUE_125
  else1051_4:
  endif1051:
    JR_NEQF VLV_MAX_125 0.0 else1072_1
    MOVEF_F 0.0 VLV_SAT_125
    JR endif1072
  else1072_1:
    DATAF tmpf1073
    DATA8 flag1073
    DIVF VLV_MIN_125 VLV_MAX_125 tmpf1073
    CP_EQF 0.0 VLV_MAX_125 flag1073
    SELECTF flag1073 0.0 tmpf1073 F.0

    SUBF 1.0 F.0 VLV_SAT_125
  else1072_2:
  endif1072:
    MOVEF_F VLV_MAX_125 VLV_VALUE_125
    ADDF VLV_VALUEBLANCO_125 VLV_VALUENEGRO_125 F.0
    DATAF tmpf1076
    DATA8 flag1076
    DIVF F.0 2.0 tmpf1076
    CP_EQF 0.0 2.0 flag1076
    SELECTF flag1076 0.0 tmpf1076 VLV_RGBGREY_125

    ADDF VLV_RNORM_125 VLV_GNORM_125 F.1
    ADDF F.1 VLV_BNORM_125 F.0
    JR_GTF F.0 3.0 else1077_1
    MOVEF_F 0.0 VLV_COLOR_125
    JR endif1077
  else1077_1:
    JR_GTEQF VLV_SAT_125 0.4 else1080_1
    JR_LTEQF VLV_VALUE_125 VLV_RGBGREY_125 else1081_1
    MOVEF_F 6.0 VLV_COLOR_125
    JR endif1081
  else1081_1:
    MOVEF_F 1.0 VLV_COLOR_125
  else1081_2:
  endif1081:
    JR endif1080
  else1080_1:
    JR_LTF VLV_HUE_125 0.0 else1082_1
    JR_GTEQF VLV_HUE_125 VLV_RED_125 else1082_1
    MOVEF_F 5.0 VLV_COLOR_125
    JR endif1082
  else1082_1:
    JR_LTF VLV_HUE_125 VLV_RED_125 else1082_2
    JR_GTEQF VLV_HUE_125 VLV_YELLOW_125 else1082_2
    MOVEF_F 4.0 VLV_COLOR_125
    JR endif1082
  else1082_2:
    JR_LTF VLV_HUE_125 VLV_YELLOW_125 else1082_3
    JR_GTEQF VLV_HUE_125 VLV_GREEN_125 else1082_3
    MOVEF_F 3.0 VLV_COLOR_125
    JR endif1082
  else1082_3:
    JR_LTF VLV_HUE_125 VLV_GREEN_125 else1082_4
    JR_GTEQF VLV_HUE_125 VLV_BLUE_125 else1082_4
    MOVEF_F 2.0 VLV_COLOR_125
    JR endif1082
  else1082_4:
    MOVEF_F 5.0 VLV_COLOR_125
  else1082_5:
  endif1082:
  else1080_2:
  endif1080:
  else1077_2:
  endif1077:
    STRINGS VALUE_FORMATTED VLV_RRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_125 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_125 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_125 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1098 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1098:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_134 0.0 else1099_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1099
  else1099_1:
    JR_NEQF VLV_COLOR_134 1.0 else1099_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1099
  else1099_2:
    JR_NEQF VLV_COLOR_134 2.0 else1099_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1099
  else1099_3:
    JR_NEQF VLV_COLOR_134 3.0 else1099_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1099
  else1099_4:
    JR_NEQF VLV_COLOR_134 4.0 else1099_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1099
  else1099_5:
    JR_NEQF VLV_COLOR_134 5.0 else1099_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1099
  else1099_6:
    JR_NEQF VLV_COLOR_134 6.0 else1099_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1099
  else1099_7:
    JR_NEQF VLV_COLOR_134 7.0 else1099_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1099_8:
  endif1099:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_0:
    DATA32 milliseconds1108
	MOVEF_32 150.0 milliseconds1108
	DATA32 timer1108
	TIMER_WAIT milliseconds1108 timer1108
	TIMER_READY timer1108
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 20.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1109:
    MOVEF_F 40.0 VLV_V_117
    MOVEF_F 70.0 VLV_AENC_117
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1110:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 270.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1111:
    MOVEF_F 40.0 VLV_V_120
    MOVEF_F 500.0 VLV_T_120
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1112:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F -80.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1113:
RETSUB_F_COGER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_0:
SUB_F_SOLTAR_0:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 250.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1114:
    MOVEF_F 40.0 VLV_V_117
    MOVEF_F 70.0 VLV_AENC_117
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1115:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F -660.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1116:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1117:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1118:
RETSUB_F_SOLTAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_0:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
