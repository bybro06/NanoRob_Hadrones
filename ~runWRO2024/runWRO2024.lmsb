DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_111
DATAF VLV_AENC_111
DATAF VLV_V_121
DATAF VLV_AENC_121
DATAF VLV_V1_38
DATAF VLV_V2_38
DATAF VLV_ANGLE_38
DATAF VLV_V1_37
DATAF VLV_V2_37
DATAF VLV_ANGLE_37
DATAF VLV_VELOCIDAD_77
DATAF VLV_KP_77
DATAF VLV_KI_77
DATAF VLV_KD_77
DATAF VLV_ENCODER_77
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V_107
DATAF VLV_AENC_107
DATAF VLV_VELOCIDAD_78
DATAF VLV_KP_78
DATAF VLV_KI_78
DATAF VLV_KD_78
DATAF VLV_ENCODER_78
DATAF VLV_VELOCIDAD_92
DATAF VLV_KP_92
DATAF VLV_KI_92
DATAF VLV_KD_92
DATAF VLV_READER_92
DATAF VLV_VELOCIDAD_73
DATAF VLV_KP_73
DATAF VLV_KI_73
DATAF VLV_KD_73
DATAF VLV_VEL_B_137
DATAF VLV_VEL_C_137
DATAF VLV_VELOCIDAD_85
DATAF VLV_KP_85
DATAF VLV_KI_85
DATAF VLV_KD_85
DATAF VLV_ENCODER_85
DATAF VLV_VELOCIDAD_86
DATAF VLV_KP_86
DATAF VLV_KI_86
DATAF VLV_KD_86
DATAF VLV_ENCODER_86
DATAF VLV_VELOCIDAD_91
DATAF VLV_KP_91
DATAF VLV_KI_91
DATAF VLV_KD_91
DATAF VLV_READER_91
DATAF VLV_VELOCIDAD_98
DATAF VLV_V0_58
DATAF VLV_VMAX_58
DATAF VLV_KP_58
DATAF VLV_KI_58
DATAF VLV_KD_58
DATAF VLV_ACCELENCODER_58
DATAF VLV_VELOCIDAD_74
DATAF VLV_KP_74
DATAF VLV_KI_74
DATAF VLV_KD_74
DATAF VLV_VMAX_100
DATAF VLV_KP_100
DATAF VLV_KI_100
DATAF VLV_KD_100
DATAF VLV_COLOR_134
DATAF VLV_REPS_122
DATAF VLV_COLOR_122
DATAF VLV_REPS_123
DATAF VLV_COLOR_123
DATAF VLV_REPS_124
DATAF VLV_COLOR_124
DATAF VLV_REPS_125
DATAF VLV_COLOR_125
DATAF VLV_V_117
DATAF VLV_AENC_117
DATAF VLV_V_120
DATAF VLV_T_120
DATAF VLV_COLOR_126
DATAF VLV_COLOR_127
DATAF VLV_COLOR_128
DATAF VLV_COLOR_129
DATAF VLV_READ_138
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DIAMETER
DATAF VGV_CENTRO
DATAF VGV_NUM_BLOQUES
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_CORRECCION
DATAF VGV_G1
DATAF VGV_TIEMPOHASTALINEA
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAS VLV_I_37 252
DATAS VLV_D_37 252
DATAF VLV_SIGNO_37
DATAF VLV_VMIN_37
DATAF VLV_VMAX_37
DATAF VLV_ENCODR_37
DATAS VLV_I_38 252
DATAS VLV_D_38 252
DATAF VLV_SIGNO_38
DATAF VLV_VMIN_38
DATAF VLV_VMAX_38
DATAF VLV_ENCODR_38
DATAS VLV_I_58 252
DATAS VLV_D_58 252
DATAF VLV_U_58
DATAF VLV_ERROR_58
DATAF VLV_OLDERROR_58
DATAF VLV_ERRSUM_58
DATAF VLV_VEL_58
DATAF VLV_SENTIDO_58
DATAS VLV_I_73 252
DATAS VLV_D_73 252
DATAF VLV_ERROR_73
DATAF VLV_OLDERROR_73
DATAF VLV_ERRSUM_73
DATAF VLV_U_73
DATAF VLV_SENTIDO_73
DATAS VLV_I_74 252
DATAS VLV_D_74 252
DATAF VLV_ERROR_74
DATAF VLV_OLDERROR_74
DATAF VLV_ERRSUM_74
DATAF VLV_U_74
DATAF VLV_SENTIDO_74
DATAS VLV_I_77 252
DATAS VLV_D_77 252
DATAF VLV_ERROR_77
DATAF VLV_OLDERROR_77
DATAF VLV_ERRSUM_77
DATAF VLV_U_77
DATAF VLV_SENTIDO_77
DATAF VLV_START_C_77
DATAF VLV_ENCODER_C_77
DATAS VLV_I_78 252
DATAS VLV_D_78 252
DATAF VLV_ERROR_78
DATAF VLV_OLDERROR_78
DATAF VLV_ERRSUM_78
DATAF VLV_U_78
DATAF VLV_SENTIDO_78
DATAF VLV_START_C_78
DATAF VLV_ENCODER_C_78
DATAS VLV_I_85 252
DATAS VLV_D_85 252
DATAF VLV_ERROR_85
DATAF VLV_OLDERROR_85
DATAF VLV_ERRSUM_85
DATAF VLV_U_85
DATAF VLV_SENTIDO_85
DATAF VLV_START_C_85
DATAF VLV_ENCODER_C_85
DATAS VLV_I_86 252
DATAS VLV_D_86 252
DATAF VLV_ERROR_86
DATAF VLV_OLDERROR_86
DATAF VLV_ERRSUM_86
DATAF VLV_U_86
DATAF VLV_SENTIDO_86
DATAF VLV_START_C_86
DATAF VLV_ENCODER_C_86
DATAS VLV_I_91 252
DATAS VLV_D_91 252
DATAF VLV_ERROR_91
DATAF VLV_OLDERROR_91
DATAF VLV_ERRSUM_91
DATAF VLV_U_91
DATAF VLV_SENTIDO_91
DATAF VLV_READER1_91
DATAF VLV_READER2_91
DATAS VLV_I_92 252
DATAS VLV_D_92 252
DATAF VLV_ERROR_92
DATAF VLV_OLDERROR_92
DATAF VLV_ERRSUM_92
DATAF VLV_U_92
DATAF VLV_SENTIDO_92
DATAF VLV_READER1_92
DATAF VLV_READER2_92
DATAS VLV_I_100 252
DATAS VLV_D_100 252
DATAF VLV_V0_100
DATAF VLV_ACCELENCODER_100
DATAF VLV_U_100
DATAF VLV_ERRSUM_100
DATAF VLV_OLDERROR_100
DATAF VLV_VEL_100
DATAF VLV_SENTIDO_100
DATAF VLV_ERROR_100
DATAF VLV_ENCDIFF_107
DATAF VLV_SIGNO_107
DATAF VLV_ENCDIFF_111
DATAF VLV_SIGNO_111
DATAF VLV_SAFETYTIMER_111
DATAF VLV_ENCDIFF_117
DATAF VLV_SIGNO_117
DATAF VLV_ENCDIFF_121
DATAF VLV_SIGNO_121
DATAF VLV_SAFETYTIMER_121
DATAF VLV_RED_122
DATAF VLV_YELLOW_122
DATAF VLV_GREEN_122
DATAF VLV_BLUE_122
DATAF VLV_VALUENEGRO_122
DATAF VLV_VALUEBLANCO_122
DATAF VLV_RWHITE_122
DATAF VLV_GWHITE_122
DATAF VLV_BWHITE_122
DATAF VLV_HUE_122
DATAF VLV_SAT_122
DATAF VLV_VALUE_122
ARRAY16 VLV_RNORMA_122 2
ARRAY16 VLV_GNORMA_122 2
ARRAY16 VLV_BNORMA_122 2
ARRAY16 VLV_MAXA_122 2
DATAF VLV_J_122
ARRAY16 VLV_RGB_122 2
DATAF VLV_RRAW_122
DATAF VLV_GRAW_122
DATAF VLV_BRAW_122
DATAF VLV_RNORM_122
DATAF VLV_GNORM_122
DATAF VLV_BNORM_122
DATAF VLV_MAX_122
DATAF VLV_MIN_122
DATAF VLV_RGBGREY_122
DATAF VLV_RED_123
DATAF VLV_YELLOW_123
DATAF VLV_GREEN_123
DATAF VLV_BLUE_123
DATAF VLV_VALUENEGRO_123
DATAF VLV_VALUEBLANCO_123
DATAF VLV_RWHITE_123
DATAF VLV_GWHITE_123
DATAF VLV_BWHITE_123
DATAF VLV_HUE_123
DATAF VLV_SAT_123
DATAF VLV_VALUE_123
ARRAY16 VLV_RNORMA_123 2
ARRAY16 VLV_GNORMA_123 2
ARRAY16 VLV_BNORMA_123 2
ARRAY16 VLV_MAXA_123 2
DATAF VLV_J_123
ARRAY16 VLV_RGB_123 2
DATAF VLV_RRAW_123
DATAF VLV_GRAW_123
DATAF VLV_BRAW_123
DATAF VLV_RNORM_123
DATAF VLV_GNORM_123
DATAF VLV_BNORM_123
DATAF VLV_MAX_123
DATAF VLV_MIN_123
DATAF VLV_RGBGREY_123
DATAF VLV_RED_124
DATAF VLV_YELLOW_124
DATAF VLV_GREEN_124
DATAF VLV_BLUE_124
DATAF VLV_VALUENEGRO_124
DATAF VLV_VALUEBLANCO_124
DATAF VLV_RWHITE_124
DATAF VLV_GWHITE_124
DATAF VLV_BWHITE_124
DATAF VLV_HUE_124
DATAF VLV_SAT_124
DATAF VLV_VALUE_124
ARRAY16 VLV_RNORMA_124 2
ARRAY16 VLV_GNORMA_124 2
ARRAY16 VLV_BNORMA_124 2
ARRAY16 VLV_MAXA_124 2
DATAF VLV_J_124
ARRAY16 VLV_RGB_124 2
DATAF VLV_RRAW_124
DATAF VLV_GRAW_124
DATAF VLV_BRAW_124
DATAF VLV_RNORM_124
DATAF VLV_GNORM_124
DATAF VLV_BNORM_124
DATAF VLV_MAX_124
DATAF VLV_MIN_124
DATAF VLV_RGBGREY_124
DATAF VLV_RED_125
DATAF VLV_YELLOW_125
DATAF VLV_GREEN_125
DATAF VLV_BLUE_125
DATAF VLV_VALUENEGRO_125
DATAF VLV_VALUEBLANCO_125
DATAF VLV_RWHITE_125
DATAF VLV_GWHITE_125
DATAF VLV_BWHITE_125
DATAF VLV_HUE_125
DATAF VLV_SAT_125
DATAF VLV_VALUE_125
ARRAY16 VLV_RNORMA_125 2
ARRAY16 VLV_GNORMA_125 2
ARRAY16 VLV_BNORMA_125 2
ARRAY16 VLV_MAXA_125 2
DATAF VLV_J_125
ARRAY16 VLV_RGB_125 2
DATAF VLV_RRAW_125
DATAF VLV_GRAW_125
DATAF VLV_BRAW_125
DATAF VLV_RNORM_125
DATAF VLV_GNORM_125
DATAF VLV_BNORM_125
DATAF VLV_MAX_125
DATAF VLV_MIN_125
DATAF VLV_RGBGREY_125
DATAF VLV_GRADOS_90_137
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_VELOCIDAD_78
    MOVEF_F 0.0 VLV_KP_78
    MOVEF_F 0.0 VLV_KI_78
    MOVEF_F 0.0 VLV_KD_78
    MOVEF_F 0.0 VLV_ENCODER_78
    MOVEF_F 0.0 VLV_VELOCIDAD_92
    MOVEF_F 0.0 VLV_KP_92
    MOVEF_F 0.0 VLV_KI_92
    MOVEF_F 0.0 VLV_KD_92
    MOVEF_F 0.0 VLV_READER_92
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VEL_B_137
    MOVEF_F 0.0 VLV_VEL_C_137
    MOVEF_F 0.0 VLV_VELOCIDAD_85
    MOVEF_F 0.0 VLV_KP_85
    MOVEF_F 0.0 VLV_KI_85
    MOVEF_F 0.0 VLV_KD_85
    MOVEF_F 0.0 VLV_ENCODER_85
    MOVEF_F 0.0 VLV_VELOCIDAD_86
    MOVEF_F 0.0 VLV_KP_86
    MOVEF_F 0.0 VLV_KI_86
    MOVEF_F 0.0 VLV_KD_86
    MOVEF_F 0.0 VLV_ENCODER_86
    MOVEF_F 0.0 VLV_VELOCIDAD_91
    MOVEF_F 0.0 VLV_KP_91
    MOVEF_F 0.0 VLV_KI_91
    MOVEF_F 0.0 VLV_KD_91
    MOVEF_F 0.0 VLV_READER_91
    MOVEF_F 0.0 VLV_VELOCIDAD_98
    MOVEF_F 0.0 VLV_V0_58
    MOVEF_F 0.0 VLV_VMAX_58
    MOVEF_F 0.0 VLV_KP_58
    MOVEF_F 0.0 VLV_KI_58
    MOVEF_F 0.0 VLV_KD_58
    MOVEF_F 0.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_VELOCIDAD_74
    MOVEF_F 0.0 VLV_KP_74
    MOVEF_F 0.0 VLV_KI_74
    MOVEF_F 0.0 VLV_KD_74
    MOVEF_F 0.0 VLV_VMAX_100
    MOVEF_F 0.0 VLV_KP_100
    MOVEF_F 0.0 VLV_KI_100
    MOVEF_F 0.0 VLV_KD_100
    MOVEF_F 0.0 VLV_COLOR_134
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_125
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_T_120
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_COLOR_129
    MOVEF_F 0.0 VLV_READ_138
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_TIEMPOHASTALINEA
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    STRINGS DUPLICATE '' VLV_I_37
    STRINGS DUPLICATE '' VLV_D_37
    MOVEF_F 0.0 VLV_SIGNO_37
    MOVEF_F 0.0 VLV_VMIN_37
    MOVEF_F 0.0 VLV_VMAX_37
    MOVEF_F 0.0 VLV_ENCODR_37
    STRINGS DUPLICATE '' VLV_I_38
    STRINGS DUPLICATE '' VLV_D_38
    MOVEF_F 0.0 VLV_SIGNO_38
    MOVEF_F 0.0 VLV_VMIN_38
    MOVEF_F 0.0 VLV_VMAX_38
    MOVEF_F 0.0 VLV_ENCODR_38
    STRINGS DUPLICATE '' VLV_I_58
    STRINGS DUPLICATE '' VLV_D_58
    MOVEF_F 0.0 VLV_U_58
    MOVEF_F 0.0 VLV_ERROR_58
    MOVEF_F 0.0 VLV_OLDERROR_58
    MOVEF_F 0.0 VLV_ERRSUM_58
    MOVEF_F 0.0 VLV_VEL_58
    MOVEF_F 0.0 VLV_SENTIDO_58
    STRINGS DUPLICATE '' VLV_I_73
    STRINGS DUPLICATE '' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MOVEF_F 0.0 VLV_SENTIDO_73
    STRINGS DUPLICATE '' VLV_I_74
    STRINGS DUPLICATE '' VLV_D_74
    MOVEF_F 0.0 VLV_ERROR_74
    MOVEF_F 0.0 VLV_OLDERROR_74
    MOVEF_F 0.0 VLV_ERRSUM_74
    MOVEF_F 0.0 VLV_U_74
    MOVEF_F 0.0 VLV_SENTIDO_74
    STRINGS DUPLICATE '' VLV_I_77
    STRINGS DUPLICATE '' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MOVEF_F 0.0 VLV_SENTIDO_77
    MOVEF_F 0.0 VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
    STRINGS DUPLICATE '' VLV_I_78
    STRINGS DUPLICATE '' VLV_D_78
    MOVEF_F 0.0 VLV_ERROR_78
    MOVEF_F 0.0 VLV_OLDERROR_78
    MOVEF_F 0.0 VLV_ERRSUM_78
    MOVEF_F 0.0 VLV_U_78
    MOVEF_F 0.0 VLV_SENTIDO_78
    MOVEF_F 0.0 VLV_START_C_78
    MOVEF_F 0.0 VLV_ENCODER_C_78
    STRINGS DUPLICATE '' VLV_I_85
    STRINGS DUPLICATE '' VLV_D_85
    MOVEF_F 0.0 VLV_ERROR_85
    MOVEF_F 0.0 VLV_OLDERROR_85
    MOVEF_F 0.0 VLV_ERRSUM_85
    MOVEF_F 0.0 VLV_U_85
    MOVEF_F 0.0 VLV_SENTIDO_85
    MOVEF_F 0.0 VLV_START_C_85
    MOVEF_F 0.0 VLV_ENCODER_C_85
    STRINGS DUPLICATE '' VLV_I_86
    STRINGS DUPLICATE '' VLV_D_86
    MOVEF_F 0.0 VLV_ERROR_86
    MOVEF_F 0.0 VLV_OLDERROR_86
    MOVEF_F 0.0 VLV_ERRSUM_86
    MOVEF_F 0.0 VLV_U_86
    MOVEF_F 0.0 VLV_SENTIDO_86
    MOVEF_F 0.0 VLV_START_C_86
    MOVEF_F 0.0 VLV_ENCODER_C_86
    STRINGS DUPLICATE '' VLV_I_91
    STRINGS DUPLICATE '' VLV_D_91
    MOVEF_F 0.0 VLV_ERROR_91
    MOVEF_F 0.0 VLV_OLDERROR_91
    MOVEF_F 0.0 VLV_ERRSUM_91
    MOVEF_F 0.0 VLV_U_91
    MOVEF_F 0.0 VLV_SENTIDO_91
    MOVEF_F 0.0 VLV_READER1_91
    MOVEF_F 0.0 VLV_READER2_91
    STRINGS DUPLICATE '' VLV_I_92
    STRINGS DUPLICATE '' VLV_D_92
    MOVEF_F 0.0 VLV_ERROR_92
    MOVEF_F 0.0 VLV_OLDERROR_92
    MOVEF_F 0.0 VLV_ERRSUM_92
    MOVEF_F 0.0 VLV_U_92
    MOVEF_F 0.0 VLV_SENTIDO_92
    MOVEF_F 0.0 VLV_READER1_92
    MOVEF_F 0.0 VLV_READER2_92
    STRINGS DUPLICATE '' VLV_I_100
    STRINGS DUPLICATE '' VLV_D_100
    MOVEF_F 0.0 VLV_V0_100
    MOVEF_F 0.0 VLV_ACCELENCODER_100
    MOVEF_F 0.0 VLV_U_100
    MOVEF_F 0.0 VLV_ERRSUM_100
    MOVEF_F 0.0 VLV_OLDERROR_100
    MOVEF_F 0.0 VLV_VEL_100
    MOVEF_F 0.0 VLV_SENTIDO_100
    MOVEF_F 0.0 VLV_ERROR_100
    MOVEF_F 0.0 VLV_ENCDIFF_107
    MOVEF_F 0.0 VLV_SIGNO_107
    MOVEF_F 0.0 VLV_ENCDIFF_111
    MOVEF_F 0.0 VLV_SIGNO_111
    MOVEF_F 0.0 VLV_SAFETYTIMER_111
    MOVEF_F 0.0 VLV_ENCDIFF_117
    MOVEF_F 0.0 VLV_SIGNO_117
    MOVEF_F 0.0 VLV_ENCDIFF_121
    MOVEF_F 0.0 VLV_SIGNO_121
    MOVEF_F 0.0 VLV_SAFETYTIMER_121
    MOVEF_F 0.0 VLV_RED_122
    MOVEF_F 0.0 VLV_YELLOW_122
    MOVEF_F 0.0 VLV_GREEN_122
    MOVEF_F 0.0 VLV_BLUE_122
    MOVEF_F 0.0 VLV_VALUENEGRO_122
    MOVEF_F 0.0 VLV_VALUEBLANCO_122
    MOVEF_F 0.0 VLV_RWHITE_122
    MOVEF_F 0.0 VLV_GWHITE_122
    MOVEF_F 0.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_MAXA_122
    MOVEF_F 0.0 VLV_J_122
    CALL ARRAYCREATE_FLOAT VLV_RGB_122
    MOVEF_F 0.0 VLV_RRAW_122
    MOVEF_F 0.0 VLV_GRAW_122
    MOVEF_F 0.0 VLV_BRAW_122
    MOVEF_F 0.0 VLV_RNORM_122
    MOVEF_F 0.0 VLV_GNORM_122
    MOVEF_F 0.0 VLV_BNORM_122
    MOVEF_F 0.0 VLV_MAX_122
    MOVEF_F 0.0 VLV_MIN_122
    MOVEF_F 0.0 VLV_RGBGREY_122
    MOVEF_F 0.0 VLV_RED_123
    MOVEF_F 0.0 VLV_YELLOW_123
    MOVEF_F 0.0 VLV_GREEN_123
    MOVEF_F 0.0 VLV_BLUE_123
    MOVEF_F 0.0 VLV_VALUENEGRO_123
    MOVEF_F 0.0 VLV_VALUEBLANCO_123
    MOVEF_F 0.0 VLV_RWHITE_123
    MOVEF_F 0.0 VLV_GWHITE_123
    MOVEF_F 0.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_MAXA_123
    MOVEF_F 0.0 VLV_J_123
    CALL ARRAYCREATE_FLOAT VLV_RGB_123
    MOVEF_F 0.0 VLV_RRAW_123
    MOVEF_F 0.0 VLV_GRAW_123
    MOVEF_F 0.0 VLV_BRAW_123
    MOVEF_F 0.0 VLV_RNORM_123
    MOVEF_F 0.0 VLV_GNORM_123
    MOVEF_F 0.0 VLV_BNORM_123
    MOVEF_F 0.0 VLV_MAX_123
    MOVEF_F 0.0 VLV_MIN_123
    MOVEF_F 0.0 VLV_RGBGREY_123
    MOVEF_F 0.0 VLV_RED_124
    MOVEF_F 0.0 VLV_YELLOW_124
    MOVEF_F 0.0 VLV_GREEN_124
    MOVEF_F 0.0 VLV_BLUE_124
    MOVEF_F 0.0 VLV_VALUENEGRO_124
    MOVEF_F 0.0 VLV_VALUEBLANCO_124
    MOVEF_F 0.0 VLV_RWHITE_124
    MOVEF_F 0.0 VLV_GWHITE_124
    MOVEF_F 0.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_MAXA_124
    MOVEF_F 0.0 VLV_J_124
    CALL ARRAYCREATE_FLOAT VLV_RGB_124
    MOVEF_F 0.0 VLV_RRAW_124
    MOVEF_F 0.0 VLV_GRAW_124
    MOVEF_F 0.0 VLV_BRAW_124
    MOVEF_F 0.0 VLV_RNORM_124
    MOVEF_F 0.0 VLV_GNORM_124
    MOVEF_F 0.0 VLV_BNORM_124
    MOVEF_F 0.0 VLV_MAX_124
    MOVEF_F 0.0 VLV_MIN_124
    MOVEF_F 0.0 VLV_RGBGREY_124
    MOVEF_F 0.0 VLV_RED_125
    MOVEF_F 0.0 VLV_YELLOW_125
    MOVEF_F 0.0 VLV_GREEN_125
    MOVEF_F 0.0 VLV_BLUE_125
    MOVEF_F 0.0 VLV_VALUENEGRO_125
    MOVEF_F 0.0 VLV_VALUEBLANCO_125
    MOVEF_F 0.0 VLV_RWHITE_125
    MOVEF_F 0.0 VLV_GWHITE_125
    MOVEF_F 0.0 VLV_BWHITE_125
    MOVEF_F 0.0 VLV_HUE_125
    MOVEF_F 0.0 VLV_SAT_125
    MOVEF_F 0.0 VLV_VALUE_125
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_MAXA_125
    MOVEF_F 0.0 VLV_J_125
    CALL ARRAYCREATE_FLOAT VLV_RGB_125
    MOVEF_F 0.0 VLV_RRAW_125
    MOVEF_F 0.0 VLV_GRAW_125
    MOVEF_F 0.0 VLV_BRAW_125
    MOVEF_F 0.0 VLV_RNORM_125
    MOVEF_F 0.0 VLV_GNORM_125
    MOVEF_F 0.0 VLV_BNORM_125
    MOVEF_F 0.0 VLV_MAX_125
    MOVEF_F 0.0 VLV_MIN_125
    MOVEF_F 0.0 VLV_RGBGREY_125
    MOVEF_F 0.0 VLV_GRADOS_90_137
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 1
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1162
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1162:
    JR_NEQ32 SUBPROGRAM 1 dispatch1163
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1163:
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_VELOCIDAD_78
    MOVEF_F 0.0 VLV_KP_78
    MOVEF_F 0.0 VLV_KI_78
    MOVEF_F 0.0 VLV_KD_78
    MOVEF_F 0.0 VLV_ENCODER_78
    MOVEF_F 0.0 VLV_VELOCIDAD_92
    MOVEF_F 0.0 VLV_KP_92
    MOVEF_F 0.0 VLV_KI_92
    MOVEF_F 0.0 VLV_KD_92
    MOVEF_F 0.0 VLV_READER_92
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VEL_B_137
    MOVEF_F 0.0 VLV_VEL_C_137
    MOVEF_F 0.0 VLV_VELOCIDAD_85
    MOVEF_F 0.0 VLV_KP_85
    MOVEF_F 0.0 VLV_KI_85
    MOVEF_F 0.0 VLV_KD_85
    MOVEF_F 0.0 VLV_ENCODER_85
    MOVEF_F 0.0 VLV_VELOCIDAD_86
    MOVEF_F 0.0 VLV_KP_86
    MOVEF_F 0.0 VLV_KI_86
    MOVEF_F 0.0 VLV_KD_86
    MOVEF_F 0.0 VLV_ENCODER_86
    MOVEF_F 0.0 VLV_VELOCIDAD_91
    MOVEF_F 0.0 VLV_KP_91
    MOVEF_F 0.0 VLV_KI_91
    MOVEF_F 0.0 VLV_KD_91
    MOVEF_F 0.0 VLV_READER_91
    MOVEF_F 0.0 VLV_VELOCIDAD_98
    MOVEF_F 0.0 VLV_V0_58
    MOVEF_F 0.0 VLV_VMAX_58
    MOVEF_F 0.0 VLV_KP_58
    MOVEF_F 0.0 VLV_KI_58
    MOVEF_F 0.0 VLV_KD_58
    MOVEF_F 0.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_VELOCIDAD_74
    MOVEF_F 0.0 VLV_KP_74
    MOVEF_F 0.0 VLV_KI_74
    MOVEF_F 0.0 VLV_KD_74
    MOVEF_F 0.0 VLV_VMAX_100
    MOVEF_F 0.0 VLV_KP_100
    MOVEF_F 0.0 VLV_KI_100
    MOVEF_F 0.0 VLV_KD_100
    MOVEF_F 0.0 VLV_COLOR_134
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_125
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_T_120
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_COLOR_129
    MOVEF_F 0.0 VLV_READ_138
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_TIEMPOHASTALINEA
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0002 VGV_KI
    MOVEF_F 6.0 VGV_KD
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.44444444444444 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB0 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB0:
    DATA32 tmp1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp1
    JR_NEQ32 0 tmp1 alreadylaunched1
    OBJECT_START TF_DISPLAY_0
  alreadylaunched1:
    DATA32 tmp2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp2
    JR_NEQ32 0 tmp2 alreadylaunched2
    OBJECT_START TF_STOP_0
  alreadylaunched2:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB3 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB3:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 1.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 4.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    DATA8 layer7
	DATA8 no7
	DATA8 mode87
	
	MOVEF_8 4.0 no7
	SUB8 no7 1 no7
	DIV8 no7 4 layer7
	MATH MOD8 no7 4 no7

	MOVEF_8 0.0 mode87
	
	INPUT_DEVICE READY_RAW layer7 no7 0 mode87 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while9:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 700.0 endwhile9
  whilebody9:
    MOVEF_8 40.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 700.0 whilebody9
  endwhile9:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    DATA32 milliseconds14
	MOVEF_32 100.0 milliseconds14
	DATA32 timer14
	TIMER_WAIT milliseconds14 timer14
	TIMER_READY timer14
    CALL MOTOR.SCHEDULE 'A' -50.0 0.0 350.0 0.0 'True' 

	DATA8 layer15
	DATA8 nos15
	DATA8 busy15
	CALL MOTORDECODEPORTSDESCRIPTOR 'A' layer15 nos15
	JR_EQ8 0 nos15 motornotbusy15
  motorwaiting15:
	OUTPUT_TEST layer15 nos15 busy15
	JR_EQ8 busy15 0 motornotbusy15
	SLEEP
	JR motorwaiting15
  motornotbusy15:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds18
	MOVEF_32 100.0 milliseconds18
	DATA32 timer18
	TIMER_WAIT milliseconds18 timer18
	TIMER_READY timer18
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while19:
  whilebody19:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_NUM_BLOQUES '%g' 99 S.1
    CALL TEXT.APPEND 'Bloques: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf40
    DATA8 flag40
    DIVF F.2 0.05 tmpf40
    CP_EQF 0.0 0.05 flag40
    SELECTF flag40 0.0 tmpf40 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf48
    DATA8 flag48
    DIVF F.1 0.05 tmpf48
    CP_EQF 0.0 0.05 flag48
    SELECTF flag48 0.0 tmpf48 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds62
	MOVEF_32 50.0 milliseconds62
	DATA32 timer62
	TIMER_WAIT milliseconds62 timer62
	TIMER_READY timer62
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody19
  endwhile19:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_STOP_0:
  while65:
  whilebody65:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else66_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEASAFE_2:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEASAFE_2
CALLSUB71:
    MOVEF_F 20.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB72:
    PROGRAM_STOP -1
  else66_1:
  endif66:
    JR whilebody65
  endwhile65:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB74 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB74:
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 30.0 VLV_V2_38
    MOVEF_F 60.0 VLV_ANGLE_38
    WRITE32 ENDSUB_F_GUNIVENCMMF_3:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMMF_3
CALLSUB75:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 60.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB76:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MULF VGV_KP 0.75 VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 16.5 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB78:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB79:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 4.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB80:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB81:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB82:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 89.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB83:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MULF VGV_KP 0.5 VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MULF VGV_KD 0.5 VLV_KD_77
    MOVEF_F 8.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB86:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB87:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB88:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB89:
    MULF VGV_VELOCIDAD 0.4 VLV_V_107
    MOVEF_F -110.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB91:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB92:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 90.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB93:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 22.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB94:
    MOVEF_F 30.0 VLV_VELOCIDAD_78
    MULF VGV_KP 1.5 VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 5.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB96:
    TIMER_READ timeMC4
    MOVEF_F 50.0 VLV_VELOCIDAD_92
    MULF VGV_KP 0.75 VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB99:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp VGV_TIEMPOHASTALINEA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_TIEMPOHASTALINEA '%g' 99 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB104:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB105:
    MOVEF_F 40.0 VLV_VELOCIDAD_73
    MULF VGV_KP 0.5 VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB107:
    JR_GTEQF VGV_TIEMPOHASTALINEA 1200.0 else108_1
    WRITE32 ENDSUB_F_CASOPSOE_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASOPSOE_0
CALLSUB109:
    WRITE32 ENDSUB_F_FINPRUEBA_0:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINPRUEBA_0
CALLSUB110:
    JR endif108
  else108_1:
    WRITE32 ENDSUB_F_CASOVOX_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASOVOX_0
CALLSUB111:
    WRITE32 ENDSUB_F_FINPRUEBA_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINPRUEBA_0
CALLSUB112:
  else108_2:
  endif108:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_CASOPSOE_0:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB113:
    MOVEF_F 30.0 VLV_VELOCIDAD_85
    MOVEF_F VGV_KP VLV_KP_85
    MOVEF_F VGV_KI VLV_KI_85
    MULF VGV_KD 1.5 VLV_KD_85
    MOVEF_F 27.0 VLV_ENCODER_85
    WRITE32 ENDSUB_F_SL31PIDENC_5:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENC_5
CALLSUB115:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 90.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB116:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB117:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB118:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB119:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB120:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 7.5 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB121:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB122:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB123:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB124:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB125:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB126:
    MOVEF_F 30.0 VLV_VELOCIDAD_78
    MOVEF_F VGV_KP VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 5.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB127:
    MOVEF_F 30.0 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB128:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 25.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB129:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_37
    MULF VGV_VELOCIDAD 0.2 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB132:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 13.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB134:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB135:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB137:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB140:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_86
    MULF VGV_KP 1.5 VLV_KP_86
    MOVEF_F VGV_KI VLV_KI_86
    MOVEF_F VGV_KD VLV_KD_86
    MOVEF_F 5.0 VLV_ENCODER_86
    WRITE32 ENDSUB_F_SL31PIDENCF_5:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENCF_5
CALLSUB143:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 4.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB145:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 1.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB147:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB150:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB152:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB153:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 8.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB154:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB155:
    MOVEF_F 15.0 VLV_VELOCIDAD_85
    MOVEF_F VGV_KP VLV_KP_85
    MOVEF_F VGV_KI VLV_KI_85
    MOVEF_F VGV_KD VLV_KD_85
    MOVEF_F 8.5 VLV_ENCODER_85
    WRITE32 ENDSUB_F_SL31PIDENC_5:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENC_5
CALLSUB156:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB157:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB158:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB159:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB160:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB163:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_78
    MULF VGV_KP 1.5 VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 3.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB166:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB168:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB170:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB173:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MULF VGV_KP 1.5 VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 20.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB176:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB178:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_73
    MULF VGV_KP 1.5 VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB181:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB183:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB186:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 8.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB188:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB189:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 4.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB190:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB191:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB192:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB193:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 9.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB194:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 91.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB195:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB196:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB197:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB198:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_37
    MULF VGV_VELOCIDAD -0.2 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB201:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_91
    MOVEF_F VGV_KP VLV_KP_91
    MOVEF_F VGV_KI VLV_KI_91
    MOVEF_F VGV_KD VLV_KD_91
    MOVEF_F 4.0 VLV_READER_91
    WRITE32 ENDSUB_F_SL1SPIDCROSS_5:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_5
CALLSUB203:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB205:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB208:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 10.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB210:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB211:
RETSUB_F_CASOPSOE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOPSOE_0:
SUB_F_CASOVOX_0:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB213:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB214:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB215:
    MOVEF_F 20.0 VLV_VEL_B_137
    MOVEF_F -20.0 VLV_VEL_C_137
    WRITE32 ENDSUB_F_GIRO90BLOQUES_2:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GIRO90BLOQUES_2
CALLSUB216:
    MOVEF_F 15.0 VLV_VELOCIDAD_77
    MULF VGV_KP 1.5 VLV_KP_77
    MULF VGV_KI 1.5 VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 8.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB219:
    MOVEF_F -20.0 VLV_VEL_B_137
    MOVEF_F 20.0 VLV_VEL_C_137
    WRITE32 ENDSUB_F_GIRO90BLOQUES_2:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GIRO90BLOQUES_2
CALLSUB220:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB221:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB222:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB223:
    MOVEF_F -20.0 VLV_VEL_B_137
    MOVEF_F 20.0 VLV_VEL_C_137
    WRITE32 ENDSUB_F_GIRO90BLOQUES_2:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GIRO90BLOQUES_2
CALLSUB224:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB225:
    MOVEF_F -20.0 VLV_VEL_B_137
    MOVEF_F 20.0 VLV_VEL_C_137
    WRITE32 ENDSUB_F_GIRO90BLOQUES_2:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GIRO90BLOQUES_2
CALLSUB226:
    MOVEF_F 25.0 VLV_VELOCIDAD_86
    MULF VGV_KP 0.5 VLV_KP_86
    MOVEF_F VGV_KI VLV_KI_86
    MOVEF_F VGV_KD VLV_KD_86
    MOVEF_F 25.0 VLV_ENCODER_86
    WRITE32 ENDSUB_F_SL31PIDENCF_5:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENCF_5
CALLSUB228:
    MOVEF_F 25.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB229:
    MOVEF_F -20.0 VLV_VEL_B_137
    MOVEF_F 20.0 VLV_VEL_C_137
    WRITE32 ENDSUB_F_GIRO90BLOQUES_2:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GIRO90BLOQUES_2
CALLSUB230:
    MOVEF_F 25.0 VLV_VELOCIDAD_1
    MOVEF_F 8.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB231:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB232:
    MOVEF_F 20.0 VLV_VEL_B_137
    MOVEF_F -20.0 VLV_VEL_C_137
    WRITE32 ENDSUB_F_GIRO90BLOQUES_2:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GIRO90BLOQUES_2
CALLSUB233:
    MOVEF_F 25.0 VLV_VELOCIDAD_86
    MULF VGV_KP 0.5 VLV_KP_86
    MOVEF_F VGV_KI VLV_KI_86
    MOVEF_F VGV_KD VLV_KD_86
    MOVEF_F 5.0 VLV_ENCODER_86
    WRITE32 ENDSUB_F_SL31PIDENCF_5:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENCF_5
CALLSUB235:
    MOVEF_F 25.0 VLV_VELOCIDAD_98
    WRITE32 ENDSUB_F_SHIFT31_14_1:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SHIFT31_14_1
CALLSUB236:
    MOVEF_F 25.0 VLV_VELOCIDAD_73
    MULF VGV_KP 0.5 VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB238:
RETSUB_F_CASOVOX_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOVOX_0:
SUB_F_FINPRUEBA_0:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEASAFE_2:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEASAFE_2
CALLSUB241:
    MOVEF_F 20.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB242:
    PROGRAM_STOP -1
RETSUB_F_FINPRUEBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINPRUEBA_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf247
    DATA8 flag247
    DIVF F.1 F.2 tmpf247
    CP_EQF 0.0 F.2 flag247
    SELECTF flag247 0.0 tmpf247 F.0

    DATAF tmpf248
    DATA8 flag248
    DIVF F.0 VLV_DIAMETRO_1 tmpf248
    CP_EQF 0.0 VLV_DIAMETRO_1 flag248
    SELECTF flag248 0.0 tmpf248 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    DATAF tmpf251
    DATA8 flag251
    DIVF VGV_CORRECCION 30.0 tmpf251
    CP_EQF 0.0 30.0 flag251
    SELECTF flag251 0.0 tmpf251 F.2

    MULF F.2 VLV_VELOCIDAD_1 F.1
    ADDF F.0 F.1 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while257:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile257
  whilebody257:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 1.2 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody257
  endwhile257:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_37
    STRINGS DUPLICATE 'C' VLV_D_37
    DATAF tmpf273
    DATA8 flag273
    DIVF VLV_V1_37 VLV_V2_37 tmpf273
    CP_EQF 0.0 VLV_V2_37 flag273
    SELECTF flag273 0.0 tmpf273 F.0

    DATAF tmpf274
    DATA8 flag274
    DIVF VLV_V1_37 VLV_V2_37 tmpf274
    CP_EQF 0.0 VLV_V2_37 flag274
    SELECTF flag274 0.0 tmpf274 F.2

    MATH ABS F.2 F.1
    DATAF tmpf276
    DATA8 flag276
    DIVF F.0 F.1 tmpf276
    CP_EQF 0.0 F.1 flag276
    SELECTF flag276 0.0 tmpf276 VLV_SIGNO_37

    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag279
	CP_LTF F.0 F.1 flag279
	SELECTF flag279 F.0 F.1 VLV_VMIN_37
    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag282
	CP_GTF F.0 F.1 flag282
	SELECTF flag282 F.0 F.1 VLV_VMAX_37
    MULF VLV_ANGLE_37 VGV_G1 F.0
    MULF VLV_SIGNO_37 VLV_VMIN_37 F.4
    DATAF tmpf285
    DATA8 flag285
    DIVF F.4 VLV_VMAX_37 tmpf285
    CP_EQF 0.0 VLV_VMAX_37 flag285
    SELECTF flag285 0.0 tmpf285 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf287
    DATA8 flag287
    DIVF -2.0 F.2 tmpf287
    CP_EQF 0.0 F.2 flag287
    SELECTF flag287 0.0 tmpf287 F.1

    MULF F.0 F.1 VLV_ENCODR_37
    CALL TEXT.APPEND VLV_I_37 VLV_D_37 S.0
    MATH NEGATE VLV_V1_37 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_37 VLV_ENCODR_37 'True'

	DATA8 layer291
	DATA8 nos291
	DATA8 busy291
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer291 nos291
	JR_EQ8 0 nos291 motornotbusy291
  motorwaiting291:
	OUTPUT_TEST layer291 nos291 busy291
	JR_EQ8 busy291 0 motornotbusy291
	SLEEP
	JR motorwaiting291
  motornotbusy291:
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    DATA32 milliseconds292
	MOVEF_32 200.0 milliseconds292
	DATA32 timer292
	TIMER_WAIT milliseconds292 timer292
	TIMER_READY timer292
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_GUNIVENCMMF_3:
    STRINGS DUPLICATE 'B' VLV_I_38
    STRINGS DUPLICATE 'C' VLV_D_38
    DATAF tmpf293
    DATA8 flag293
    DIVF VLV_V1_38 VLV_V2_38 tmpf293
    CP_EQF 0.0 VLV_V2_38 flag293
    SELECTF flag293 0.0 tmpf293 F.0

    DATAF tmpf294
    DATA8 flag294
    DIVF VLV_V1_38 VLV_V2_38 tmpf294
    CP_EQF 0.0 VLV_V2_38 flag294
    SELECTF flag294 0.0 tmpf294 F.2

    MATH ABS F.2 F.1
    DATAF tmpf296
    DATA8 flag296
    DIVF F.0 F.1 tmpf296
    CP_EQF 0.0 F.1 flag296
    SELECTF flag296 0.0 tmpf296 VLV_SIGNO_38

    MATH ABS VLV_V1_38 F.0
    MATH ABS VLV_V2_38 F.1
    DATA8 flag299
	CP_LTF F.0 F.1 flag299
	SELECTF flag299 F.0 F.1 VLV_VMIN_38
    MATH ABS VLV_V1_38 F.0
    MATH ABS VLV_V2_38 F.1
    DATA8 flag302
	CP_GTF F.0 F.1 flag302
	SELECTF flag302 F.0 F.1 VLV_VMAX_38
    MULF VLV_ANGLE_38 VGV_G1 F.0
    MULF VLV_SIGNO_38 VLV_VMIN_38 F.4
    DATAF tmpf305
    DATA8 flag305
    DIVF F.4 VLV_VMAX_38 tmpf305
    CP_EQF 0.0 VLV_VMAX_38 flag305
    SELECTF flag305 0.0 tmpf305 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf307
    DATA8 flag307
    DIVF -2.0 F.2 tmpf307
    CP_EQF 0.0 F.2 flag307
    SELECTF flag307 0.0 tmpf307 F.1

    MULF F.0 F.1 VLV_ENCODR_38
    CALL TEXT.APPEND VLV_I_38 VLV_D_38 S.0
    MATH NEGATE VLV_V1_38 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_38 VLV_ENCODR_38 'False'

	DATA8 layer311
	DATA8 nos311
	DATA8 busy311
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer311 nos311
	JR_EQ8 0 nos311 motornotbusy311
  motorwaiting311:
	OUTPUT_TEST layer311 nos311 busy311
	JR_EQ8 busy311 0 motornotbusy311
	SLEEP
	JR motorwaiting311
  motornotbusy311:
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
RETSUB_F_GUNIVENCMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMMF_3:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_58
    STRINGS DUPLICATE 'C' VLV_D_58
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf314
    DATA8 flag314
    DIVF VLV_ACCELENCODER_58 F.1 tmpf314
    CP_EQF 0.0 F.1 flag314
    SELECTF flag314 0.0 tmpf314 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_U_58
    MOVEF_F 0.0 VLV_ERROR_58
    MOVEF_F 0.0 VLV_OLDERROR_58
    MOVEF_F 0.0 VLV_ERRSUM_58
    CALL MOTOR.RESETCOUNT 'C'
  while317:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or318
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile317
  or318:
  whilebody317:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf322
    DATA8 flag322
    DIVF F.3 VLV_ACCELENCODER_58 tmpf322
    CP_EQF 0.0 VLV_ACCELENCODER_58 flag322
    SELECTF flag322 0.0 tmpf322 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_58 VLV_V0_58 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_58 VLV_VEL_58
    DATA8 flag327
	CP_LTF VLV_VEL_58 VLV_VMAX_58 flag327
	SELECTF flag327 VLV_VEL_58 VLV_VMAX_58 VLV_VEL_58
    MATH ABS VLV_VEL_58 F.0
    DATAF tmpf329
    DATA8 flag329
    DIVF VLV_VEL_58 F.0 tmpf329
    CP_EQF 0.0 F.0 flag329
    SELECTF flag329 0.0 tmpf329 VLV_SENTIDO_58

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_58 VLV_ERROR_58
    ADDF VLV_ERRSUM_58 VLV_ERROR_58 VLV_ERRSUM_58
    MULF VLV_ERROR_58 VLV_KP_58 F.1
    SUBF VLV_ERROR_58 VLV_OLDERROR_58 F.3
    MULF F.3 VLV_KD_58 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_58 VLV_KI_58 F.1
    ADDF F.0 F.1 VLV_U_58
    CALL TEXT.APPEND VLV_I_58 VLV_D_58 S.0
    ADDF VLV_VEL_58 VLV_U_58 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_58 VLV_U_58 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_58 VLV_OLDERROR_58
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody317
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody317
  endwhile317:
    CALL TEXT.APPEND VLV_I_58 VLV_D_58 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PID_4:
    MULF VLV_VELOCIDAD_73 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_73
    STRINGS DUPLICATE 'B' VLV_I_73
    STRINGS DUPLICATE 'C' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MATH ABS VLV_VELOCIDAD_73 F.0
    DATAF tmpf354
    DATA8 flag354
    DIVF VLV_VELOCIDAD_73 F.0 tmpf354
    CP_EQF 0.0 F.0 flag354
    SELECTF flag354 0.0 tmpf354 VLV_SENTIDO_73

  while355:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or356
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile355
  or356:
  whilebody355:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_73 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_73
    ADDF VLV_ERRSUM_73 VLV_ERROR_73 VLV_ERRSUM_73
    MULF VLV_ERROR_73 VLV_KP_73 F.1
    SUBF VLV_ERROR_73 VLV_OLDERROR_73 F.3
    MULF F.3 VLV_KD_73 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_73 VLV_KI_73 F.1
    ADDF F.0 F.1 VLV_U_73
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    ADDF VLV_VELOCIDAD_73 VLV_U_73 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_73 VLV_U_73 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_73 VLV_OLDERROR_73
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody355
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody355
  endwhile355:
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PID_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PID_4:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_74 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_74
    STRINGS DUPLICATE 'B' VLV_I_74
    STRINGS DUPLICATE 'C' VLV_D_74
    MOVEF_F 0.0 VLV_ERROR_74
    MOVEF_F 0.0 VLV_OLDERROR_74
    MOVEF_F 0.0 VLV_ERRSUM_74
    MOVEF_F 0.0 VLV_U_74
    MATH ABS VLV_VELOCIDAD_74 F.0
    DATAF tmpf382
    DATA8 flag382
    DIVF VLV_VELOCIDAD_74 F.0 tmpf382
    CP_EQF 0.0 F.0 flag382
    SELECTF flag382 0.0 tmpf382 VLV_SENTIDO_74

  while383:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or384
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile383
  or384:
  whilebody383:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_74 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_74
    ADDF VLV_ERRSUM_74 VLV_ERROR_74 VLV_ERRSUM_74
    MULF VLV_ERROR_74 VLV_KP_74 F.1
    SUBF VLV_ERROR_74 VLV_OLDERROR_74 F.3
    MULF F.3 VLV_KD_74 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_74 VLV_KI_74 F.1
    ADDF F.0 F.1 VLV_U_74
    CALL TEXT.APPEND VLV_I_74 VLV_D_74 S.0
    ADDF VLV_VELOCIDAD_74 VLV_U_74 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_74 VLV_U_74 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_74 VLV_OLDERROR_74
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody383
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody383
  endwhile383:
    CALL TEXT.APPEND VLV_I_74 VLV_D_74 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_77 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_77
    STRINGS DUPLICATE 'B' VLV_I_77
    STRINGS DUPLICATE 'C' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MATH ABS VLV_VELOCIDAD_77 F.0
    DATAF tmpf410
    DATA8 flag410
    DIVF VLV_VELOCIDAD_77 F.0 tmpf410
    CP_EQF 0.0 F.0 flag410
    SELECTF flag410 0.0 tmpf410 VLV_SENTIDO_77

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf413
    DATA8 flag413
    DIVF VLV_ENCODER_77 F.1 tmpf413
    CP_EQF 0.0 F.1 flag413
    SELECTF flag413 0.0 tmpf413 F.0

    MULF F.0 360.0 VLV_ENCODER_77
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
  while416:
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_GTEQF F.0 VLV_ENCODER_77 endwhile416
  whilebody416:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_77 VLV_ENCODER_C_77
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_77 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_77
    ADDF VLV_ERRSUM_77 VLV_ERROR_77 VLV_ERRSUM_77
    MULF VLV_ERROR_77 VLV_KP_77 F.1
    SUBF VLV_ERROR_77 VLV_OLDERROR_77 F.3
    MULF F.3 VLV_KD_77 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_77 VLV_KI_77 F.1
    ADDF F.0 F.1 VLV_U_77
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    ADDF VLV_VELOCIDAD_77 VLV_U_77 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_77 VLV_U_77 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_77 VLV_OLDERROR_77
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_LTF F.0 VLV_ENCODER_77 whilebody416
  endwhile416:
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_78 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_78
    STRINGS DUPLICATE 'B' VLV_I_78
    STRINGS DUPLICATE 'C' VLV_D_78
    MOVEF_F 0.0 VLV_ERROR_78
    MOVEF_F 0.0 VLV_OLDERROR_78
    MOVEF_F 0.0 VLV_ERRSUM_78
    MOVEF_F 0.0 VLV_U_78
    MATH ABS VLV_VELOCIDAD_78 F.0
    DATAF tmpf442
    DATA8 flag442
    DIVF VLV_VELOCIDAD_78 F.0 tmpf442
    CP_EQF 0.0 F.0 flag442
    SELECTF flag442 0.0 tmpf442 VLV_SENTIDO_78

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf445
    DATA8 flag445
    DIVF VLV_ENCODER_78 F.1 tmpf445
    CP_EQF 0.0 F.1 flag445
    SELECTF flag445 0.0 tmpf445 F.0

    MULF F.0 360.0 VLV_ENCODER_78
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_78
    MOVEF_F 0.0 VLV_ENCODER_C_78
  while448:
    MATH ABS VLV_ENCODER_C_78 F.0
    JR_GTEQF F.0 VLV_ENCODER_78 endwhile448
  whilebody448:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_78 VLV_ENCODER_C_78
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_78 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_78
    ADDF VLV_ERRSUM_78 VLV_ERROR_78 VLV_ERRSUM_78
    MULF VLV_ERROR_78 VLV_KP_78 F.1
    SUBF VLV_ERROR_78 VLV_OLDERROR_78 F.3
    MULF F.3 VLV_KD_78 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_78 VLV_KI_78 F.1
    ADDF F.0 F.1 VLV_U_78
    CALL TEXT.APPEND VLV_I_78 VLV_D_78 S.0
    ADDF VLV_VELOCIDAD_78 VLV_U_78 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_78 VLV_U_78 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_78 VLV_OLDERROR_78
    MATH ABS VLV_ENCODER_C_78 F.0
    JR_LTF F.0 VLV_ENCODER_78 whilebody448
  endwhile448:
    CALL TEXT.APPEND VLV_I_78 VLV_D_78 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL31PIDENC_5:
    MULF VLV_VELOCIDAD_85 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_85
    STRINGS DUPLICATE 'B' VLV_I_85
    STRINGS DUPLICATE 'C' VLV_D_85
    MOVEF_F 0.0 VLV_ERROR_85
    MOVEF_F 0.0 VLV_OLDERROR_85
    MOVEF_F 0.0 VLV_ERRSUM_85
    MOVEF_F 0.0 VLV_U_85
    MATH ABS VLV_VELOCIDAD_85 F.0
    DATAF tmpf474
    DATA8 flag474
    DIVF VLV_VELOCIDAD_85 F.0 tmpf474
    CP_EQF 0.0 F.0 flag474
    SELECTF flag474 0.0 tmpf474 VLV_SENTIDO_85

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf477
    DATA8 flag477
    DIVF VLV_ENCODER_85 F.1 tmpf477
    CP_EQF 0.0 F.1 flag477
    SELECTF flag477 0.0 tmpf477 F.0

    MULF F.0 360.0 VLV_ENCODER_85
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_85
    MOVEF_F 0.0 VLV_ENCODER_C_85
  while480:
    MATH ABS VLV_ENCODER_C_85 F.0
    JR_GTEQF F.0 VLV_ENCODER_85 endwhile480
  whilebody480:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_85 VLV_ENCODER_C_85
    CALL SENSOR.READPERCENT 3.0 F.2
    CALL SENSOR.READPERCENT 1.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_85 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_85
    ADDF VLV_ERRSUM_85 VLV_ERROR_85 VLV_ERRSUM_85
    MULF VLV_ERROR_85 VLV_KP_85 F.1
    SUBF VLV_ERROR_85 VLV_OLDERROR_85 F.3
    MULF F.3 VLV_KD_85 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_85 VLV_KI_85 F.1
    ADDF F.0 F.1 VLV_U_85
    CALL TEXT.APPEND VLV_I_85 VLV_D_85 S.0
    ADDF VLV_VELOCIDAD_85 VLV_U_85 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_85 VLV_U_85 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_85 VLV_OLDERROR_85
    MATH ABS VLV_ENCODER_C_85 F.0
    JR_LTF F.0 VLV_ENCODER_85 whilebody480
  endwhile480:
    CALL TEXT.APPEND VLV_I_85 VLV_D_85 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL31PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL31PIDENC_5:
SUB_F_SL31PIDENCF_5:
    MULF VLV_VELOCIDAD_86 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_86
    STRINGS DUPLICATE 'B' VLV_I_86
    STRINGS DUPLICATE 'C' VLV_D_86
    MOVEF_F 0.0 VLV_ERROR_86
    MOVEF_F 0.0 VLV_OLDERROR_86
    MOVEF_F 0.0 VLV_ERRSUM_86
    MOVEF_F 0.0 VLV_U_86
    MATH ABS VLV_VELOCIDAD_86 F.0
    DATAF tmpf506
    DATA8 flag506
    DIVF VLV_VELOCIDAD_86 F.0 tmpf506
    CP_EQF 0.0 F.0 flag506
    SELECTF flag506 0.0 tmpf506 VLV_SENTIDO_86

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf509
    DATA8 flag509
    DIVF VLV_ENCODER_86 F.1 tmpf509
    CP_EQF 0.0 F.1 flag509
    SELECTF flag509 0.0 tmpf509 F.0

    MULF F.0 360.0 VLV_ENCODER_86
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_86
    MOVEF_F 0.0 VLV_ENCODER_C_86
  while512:
    MATH ABS VLV_ENCODER_C_86 F.0
    JR_GTEQF F.0 VLV_ENCODER_86 endwhile512
  whilebody512:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_86 VLV_ENCODER_C_86
    CALL SENSOR.READPERCENT 3.0 F.2
    CALL SENSOR.READPERCENT 1.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_86 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_86
    ADDF VLV_ERRSUM_86 VLV_ERROR_86 VLV_ERRSUM_86
    MULF VLV_ERROR_86 VLV_KP_86 F.1
    SUBF VLV_ERROR_86 VLV_OLDERROR_86 F.3
    MULF F.3 VLV_KD_86 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_86 VLV_KI_86 F.1
    ADDF F.0 F.1 VLV_U_86
    CALL TEXT.APPEND VLV_I_86 VLV_D_86 S.0
    ADDF VLV_VELOCIDAD_86 VLV_U_86 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_86 VLV_U_86 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_86 VLV_OLDERROR_86
    MATH ABS VLV_ENCODER_C_86 F.0
    JR_LTF F.0 VLV_ENCODER_86 whilebody512
  endwhile512:
    CALL TEXT.APPEND VLV_I_86 VLV_D_86 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL31PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL31PIDENCF_5:
SUB_F_SL1SPIDCROSS_5:
    MULF VLV_VELOCIDAD_91 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_91
    STRINGS DUPLICATE 'B' VLV_I_91
    STRINGS DUPLICATE 'C' VLV_D_91
    MOVEF_F 0.0 VLV_ERROR_91
    MOVEF_F 0.0 VLV_OLDERROR_91
    MOVEF_F 0.0 VLV_ERRSUM_91
    MOVEF_F 0.0 VLV_U_91
    MATH ABS VLV_VELOCIDAD_91 F.0
    DATAF tmpf538
    DATA8 flag538
    DIVF VLV_VELOCIDAD_91 F.0 tmpf538
    CP_EQF 0.0 F.0 flag538
    SELECTF flag538 0.0 tmpf538 VLV_SENTIDO_91

    JR_NEQF VLV_READER_91 3.0 else539_1
    MOVEF_F 1.0 VLV_READER1_91
    MOVEF_F 4.0 VLV_READER2_91
    JR endif539
  else539_1:
    MOVEF_F 3.0 VLV_READER1_91
    MOVEF_F 1.0 VLV_READER2_91
  else539_2:
  endif539:
  while540:
    CALL SENSOR.READPERCENT VLV_READER_91 F.0
    JR_LTEQF F.0 10.0 endwhile540
  whilebody540:
    CALL SENSOR.READPERCENT VLV_READER1_91 F.2
    CALL SENSOR.READPERCENT VLV_READER2_91 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_91 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_91
    ADDF VLV_ERRSUM_91 VLV_ERROR_91 VLV_ERRSUM_91
    MULF VLV_ERROR_91 VLV_KP_91 F.1
    SUBF VLV_ERROR_91 VLV_OLDERROR_91 F.3
    MULF F.3 VLV_KD_91 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_91 VLV_KI_91 F.1
    ADDF F.0 F.1 VLV_U_91
    CALL TEXT.APPEND VLV_I_91 VLV_D_91 S.0
    ADDF VLV_VELOCIDAD_91 VLV_U_91 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_91 VLV_U_91 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_91 VLV_OLDERROR_91
    CALL SENSOR.READPERCENT VLV_READER_91 F.0
    JR_GTF F.0 10.0 whilebody540
  endwhile540:
    CALL TEXT.APPEND VLV_I_91 VLV_D_91 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL1SPIDCROSS_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSS_5:
SUB_F_SL1SPIDCROSSF_5:
    MULF VLV_VELOCIDAD_92 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_92
    STRINGS DUPLICATE 'B' VLV_I_92
    STRINGS DUPLICATE 'C' VLV_D_92
    MOVEF_F 0.0 VLV_ERROR_92
    MOVEF_F 0.0 VLV_OLDERROR_92
    MOVEF_F 0.0 VLV_ERRSUM_92
    MOVEF_F 0.0 VLV_U_92
    MATH ABS VLV_VELOCIDAD_92 F.0
    DATAF tmpf564
    DATA8 flag564
    DIVF VLV_VELOCIDAD_92 F.0 tmpf564
    CP_EQF 0.0 F.0 flag564
    SELECTF flag564 0.0 tmpf564 VLV_SENTIDO_92

    JR_NEQF VLV_READER_92 3.0 else565_1
    MOVEF_F 1.0 VLV_READER1_92
    MOVEF_F 4.0 VLV_READER2_92
    JR endif565
  else565_1:
    MOVEF_F 3.0 VLV_READER1_92
    MOVEF_F 1.0 VLV_READER2_92
  else565_2:
  endif565:
  while566:
    CALL SENSOR.READPERCENT VLV_READER_92 F.0
    JR_LTEQF F.0 10.0 endwhile566
  whilebody566:
    CALL SENSOR.READPERCENT VLV_READER1_92 F.2
    CALL SENSOR.READPERCENT VLV_READER2_92 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_92 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_92
    ADDF VLV_ERRSUM_92 VLV_ERROR_92 VLV_ERRSUM_92
    MULF VLV_ERROR_92 VLV_KP_92 F.1
    SUBF VLV_ERROR_92 VLV_OLDERROR_92 F.3
    MULF F.3 VLV_KD_92 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_92 VLV_KI_92 F.1
    ADDF F.0 F.1 VLV_U_92
    CALL TEXT.APPEND VLV_I_92 VLV_D_92 S.0
    ADDF VLV_VELOCIDAD_92 VLV_U_92 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_92 VLV_U_92 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_92 VLV_OLDERROR_92
    CALL SENSOR.READPERCENT VLV_READER_92 F.0
    JR_GTF F.0 10.0 whilebody566
  endwhile566:
    CALL TEXT.APPEND VLV_I_92 VLV_D_92 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL1SPIDCROSSF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSSF_5:
SUB_F_SHIFT31_14_1:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MULF VLV_VELOCIDAD_98 -0.2 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD_98 230.0 'False'

	DATA8 layer590
	DATA8 nos590
	DATA8 busy590
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer590 nos590
	JR_EQ8 0 nos590 motornotbusy590
  motorwaiting590:
	OUTPUT_TEST layer590 nos590 busy590
	JR_EQ8 busy590 0 motornotbusy590
	SLEEP
	JR motorwaiting590
  motornotbusy590:
    MULF VLV_VELOCIDAD_98 -1.0 F.0
    MULF VLV_VELOCIDAD_98 0.2 F.1
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 F.1 230.0 'False'

	DATA8 layer593
	DATA8 nos593
	DATA8 busy593
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer593 nos593
	JR_EQ8 0 nos593 motornotbusy593
  motorwaiting593:
	OUTPUT_TEST layer593 nos593 busy593
	JR_EQ8 busy593 0 motornotbusy593
	SLEEP
	JR motorwaiting593
  motornotbusy593:
RETSUB_F_SHIFT31_14_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SHIFT31_14_1:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_100 VGV_SENTIDO_MOTORES VLV_VMAX_100
    STRINGS DUPLICATE 'B' VLV_I_100
    STRINGS DUPLICATE 'C' VLV_D_100
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_100
    MOVEF_F 150.0 VLV_ACCELENCODER_100
    MOVEF_F 0.0 VLV_U_100
    MOVEF_F 0.0 VLV_ERRSUM_100
    MOVEF_F 0.0 VLV_OLDERROR_100
    CALL MOTOR.RESETCOUNT 'C'
  while597:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or598
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile597
  or598:
  whilebody597:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf602
    DATA8 flag602
    DIVF F.2 VLV_ACCELENCODER_100 tmpf602
    CP_EQF 0.0 VLV_ACCELENCODER_100 flag602
    SELECTF flag602 0.0 tmpf602 F.1

    ADDF VLV_VMAX_100 VLV_V0_100 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_100 VLV_VEL_100
    DATA8 flag606
	CP_LTF VLV_VEL_100 VLV_VMAX_100 flag606
	SELECTF flag606 VLV_VEL_100 VLV_VMAX_100 VLV_VEL_100
    MATH ABS VLV_VEL_100 F.0
    DATAF tmpf608
    DATA8 flag608
    DIVF VLV_VEL_100 F.0 tmpf608
    CP_EQF 0.0 F.0 flag608
    SELECTF flag608 0.0 tmpf608 VLV_SENTIDO_100

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_100 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_100
    MULF VLV_ERRSUM_100 0.9 F.0
    ADDF F.0 VLV_ERROR_100 VLV_ERRSUM_100
    MULF VLV_ERROR_100 VLV_KP_100 F.1
    SUBF VLV_ERROR_100 VLV_OLDERROR_100 F.3
    MULF F.3 VLV_KD_100 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_100 VLV_KI_100 F.1
    ADDF F.0 F.1 VLV_U_100
    CALL TEXT.APPEND VLV_I_100 VLV_D_100 S.0
    ADDF VLV_VEL_100 VLV_U_100 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_100 VLV_U_100 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_100 VLV_OLDERROR_100
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody597
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody597
  endwhile597:
    CALL TEXT.APPEND VLV_I_100 VLV_D_100 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_107 F.0 VLV_ENCDIFF_107
    MATH ABS VLV_ENCDIFF_107 F.0
    DATAF tmpf634
    DATA8 flag634
    DIVF VLV_ENCDIFF_107 F.0 tmpf634
    CP_EQF 0.0 F.0 flag634
    SELECTF flag634 0.0 tmpf634 VLV_SIGNO_107

    JR_EQF VLV_ENCDIFF_107 0.0 else635_1
  while636:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 15.0 endwhile636
  whilebody636:
    MULF VLV_SIGNO_107 VLV_V_107 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 15.0 whilebody636
  endwhile636:
    CALL MOTOR.STOP 'A' 'True'
  else635_1:
  endif635:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEASAFE_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_111 F.0 VLV_ENCDIFF_111
    MATH ABS VLV_ENCDIFF_111 F.0
    DATAF tmpf649
    DATA8 flag649
    DIVF VLV_ENCDIFF_111 F.0 tmpf649
    CP_EQF 0.0 F.0 flag649
    SELECTF flag649 0.0 tmpf649 VLV_SIGNO_111

    MATH ABS VLV_ENCDIFF_111 F.4
    DATAF tmpf651
    DATA8 flag651
    DIVF F.4 100.0 tmpf651
    CP_EQF 0.0 100.0 flag651
    SELECTF flag651 0.0 tmpf651 F.3

    DATAF tmpf652
    DATA8 flag652
    DIVF VLV_V_111 20.0 tmpf652
    CP_EQF 0.0 20.0 flag652
    SELECTF flag652 0.0 tmpf652 F.4

    DATAF tmpf653
    DATA8 flag653
    DIVF F.3 F.4 tmpf653
    CP_EQF 0.0 F.4 flag653
    SELECTF flag653 0.0 tmpf653 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag656
	CP_GTF F.0 400.0 flag656
	SELECTF flag656 F.0 400.0 VLV_SAFETYTIMER_111
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_111 0.0 else658_1
  while659:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile659
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 2000.0 endwhile659
  whilebody659:
    MULF VLV_SIGNO_111 VLV_V_111 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and666
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 2000.0 whilebody659
  and666:
  endwhile659:
    CALL MOTOR.STOP 'A' 'True'
  else658_1:
  endif658:
RETSUB_F_BMOVEASAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEASAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_117 F.0 VLV_ENCDIFF_117
    MATH ABS VLV_ENCDIFF_117 F.0
    DATAF tmpf675
    DATA8 flag675
    DIVF VLV_ENCDIFF_117 F.0 tmpf675
    CP_EQF 0.0 F.0 flag675
    SELECTF flag675 0.0 tmpf675 VLV_SIGNO_117

    JR_EQF VLV_ENCDIFF_117 0.0 else676_1
    MULF VLV_SIGNO_117 VLV_V_117 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while679:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_117 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile679
  whilebody679:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_117 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody679
  endwhile679:
    CALL MOTOR.STOP 'D' 'True'
  else676_1:
  endif676:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while688:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_120 endwhile688
  whilebody688:
    MOVEF_8 VLV_V_120 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_120 whilebody688
  endwhile688:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_121 F.0 VLV_ENCDIFF_121
    MATH ABS VLV_ENCDIFF_121 F.0
    DATAF tmpf696
    DATA8 flag696
    DIVF VLV_ENCDIFF_121 F.0 tmpf696
    CP_EQF 0.0 F.0 flag696
    SELECTF flag696 0.0 tmpf696 VLV_SIGNO_121

    MATH ABS VLV_ENCDIFF_121 F.4
    DATAF tmpf698
    DATA8 flag698
    DIVF F.4 100.0 tmpf698
    CP_EQF 0.0 100.0 flag698
    SELECTF flag698 0.0 tmpf698 F.3

    DATAF tmpf699
    DATA8 flag699
    DIVF VLV_V_121 20.0 tmpf699
    CP_EQF 0.0 20.0 flag699
    SELECTF flag699 0.0 tmpf699 F.4

    DATAF tmpf700
    DATA8 flag700
    DIVF F.3 F.4 tmpf700
    CP_EQF 0.0 F.4 flag700
    SELECTF flag700 0.0 tmpf700 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag703
	CP_GTF F.0 400.0 flag703
	SELECTF flag703 F.0 400.0 VLV_SAFETYTIMER_121
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_121 0.0 else705_1
  while706:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_121 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile706
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_121 endwhile706
  whilebody706:
    MULF VLV_SIGNO_121 VLV_V_121 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_121 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_121 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and717
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_121 whilebody706
  and717:
  endwhile706:
    CALL MOTOR.STOP 'D' 'True'
  else705_1:
  endif705:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer723
	DATA8 no723
	DATA8 mode8723
	
	MOVEF_8 1.0 no723
	SUB8 no723 1 no723
	DIV8 no723 4 layer723
	MATH MOD8 no723 4 no723

	MOVEF_8 4.0 mode8723
	
	INPUT_DEVICE READY_RAW layer723 no723 0 mode8723 0
    MOVEF_F 15.0 VLV_RED_122
    MOVEF_F 60.0 VLV_YELLOW_122
    MOVEF_F 170.0 VLV_GREEN_122
    MOVEF_F 330.0 VLV_BLUE_122
    MOVEF_F 10.0 VLV_VALUENEGRO_122
    MOVEF_F 100.0 VLV_VALUEBLANCO_122
    MOVEF_F 147.0 VLV_RWHITE_122
    MOVEF_F 143.0 VLV_GWHITE_122
    MOVEF_F 160.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    MOVEF_F 0.0 VLV_COLOR_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_122
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_122
  for729:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor729
  forbody729:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_122
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_122 VLV_RGB_122
    DATAF tmpf734
    DATA8 flag734
    DIVF VLV_RRAW_122 VLV_RWHITE_122 tmpf734
    CP_EQF 0.0 VLV_RWHITE_122 flag734
    SELECTF flag734 0.0 tmpf734 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    DATAF tmpf738
    DATA8 flag738
    DIVF VLV_GRAW_122 VLV_GWHITE_122 tmpf738
    CP_EQF 0.0 VLV_GWHITE_122 flag738
    SELECTF flag738 0.0 tmpf738 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    DATAF tmpf742
    DATA8 flag742
    DIVF VLV_BRAW_122 VLV_BWHITE_122 tmpf742
    CP_EQF 0.0 VLV_BWHITE_122 flag742
    SELECTF flag742 0.0 tmpf742 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_RNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.3 VLV_GNORMA_122
    DATA8 flag748
	CP_GTF F.2 F.3 flag748
	SELECTF flag748 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_BNORMA_122
    DATA8 flag750
	CP_GTF F.1 F.2 flag750
	SELECTF flag750 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    DATA32 milliseconds752
	MOVEF_32 5.0 milliseconds752
	DATA32 timer752
	TIMER_WAIT milliseconds752 timer752
	TIMER_READY timer752
    ADDF VLV_J_122 1.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody729
  endfor729:
    MOVEF_F 1.0 VLV_J_122
  for754:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor754
  forbody754:
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_122
    ADDF F.0 F.1 VLV_RNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_122
    ADDF F.0 F.1 VLV_GNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_122
    ADDF F.0 F.1 VLV_BNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_122
    ADDF F.0 F.1 VLV_MAX_122
    ADDF VLV_J_122 2.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody754
  endfor754:
    DATAF tmpf772
    DATA8 flag772
    DIVF VLV_RNORM_122 VLV_REPS_122 tmpf772
    CP_EQF 0.0 VLV_REPS_122 flag772
    SELECTF flag772 0.0 tmpf772 VLV_RNORM_122

    DATAF tmpf773
    DATA8 flag773
    DIVF VLV_GNORM_122 VLV_REPS_122 tmpf773
    CP_EQF 0.0 VLV_REPS_122 flag773
    SELECTF flag773 0.0 tmpf773 VLV_GNORM_122

    DATAF tmpf774
    DATA8 flag774
    DIVF VLV_BNORM_122 VLV_REPS_122 tmpf774
    CP_EQF 0.0 VLV_REPS_122 flag774
    SELECTF flag774 0.0 tmpf774 VLV_BNORM_122

    DATAF tmpf775
    DATA8 flag775
    DIVF VLV_MAX_122 VLV_REPS_122 tmpf775
    CP_EQF 0.0 VLV_REPS_122 flag775
    SELECTF flag775 0.0 tmpf775 VLV_MAX_122

    DATA8 flag776
	CP_LTF VLV_RNORM_122 VLV_GNORM_122 flag776
	SELECTF flag776 VLV_RNORM_122 VLV_GNORM_122 F.0
    DATA8 flag777
	CP_LTF F.0 VLV_BNORM_122 flag777
	SELECTF flag777 F.0 VLV_BNORM_122 VLV_MIN_122
    JR_NEQF VLV_MAX_122 VLV_MIN_122 else778_1
    MOVEF_F 0.0 VLV_HUE_122
    JR endif778
  else778_1:
    JR_NEQF VLV_MAX_122 VLV_RNORM_122 else778_2
    JR_LTF VLV_GNORM_122 VLV_BNORM_122 else779_1
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_122 VLV_MIN_122 F.1
    DATAF tmpf783
    DATA8 flag783
    DIVF F.0 F.1 tmpf783
    CP_EQF 0.0 F.1 flag783
    SELECTF flag783 0.0 tmpf783 VLV_HUE_122

    JR endif779
  else779_1:
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf787
    DATA8 flag787
    DIVF F.1 F.2 tmpf787
    CP_EQF 0.0 F.2 flag787
    SELECTF flag787 0.0 tmpf787 F.0

    ADDF F.0 360.0 VLV_HUE_122
  else779_2:
  endif779:
    JR endif778
  else778_2:
    JR_NEQF VLV_MAX_122 VLV_GNORM_122 else778_3
    SUBF VLV_BNORM_122 VLV_RNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf792
    DATA8 flag792
    DIVF F.1 F.2 tmpf792
    CP_EQF 0.0 F.2 flag792
    SELECTF flag792 0.0 tmpf792 F.0

    ADDF F.0 120.0 VLV_HUE_122
    JR endif778
  else778_3:
    SUBF VLV_RNORM_122 VLV_GNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf797
    DATA8 flag797
    DIVF F.1 F.2 tmpf797
    CP_EQF 0.0 F.2 flag797
    SELECTF flag797 0.0 tmpf797 F.0

    ADDF F.0 240.0 VLV_HUE_122
  else778_4:
  endif778:
    JR_NEQF VLV_MAX_122 0.0 else799_1
    MOVEF_F 0.0 VLV_SAT_122
    JR endif799
  else799_1:
    DATAF tmpf800
    DATA8 flag800
    DIVF VLV_MIN_122 VLV_MAX_122 tmpf800
    CP_EQF 0.0 VLV_MAX_122 flag800
    SELECTF flag800 0.0 tmpf800 F.0

    SUBF 1.0 F.0 VLV_SAT_122
  else799_2:
  endif799:
    MOVEF_F VLV_MAX_122 VLV_VALUE_122
    ADDF VLV_VALUEBLANCO_122 VLV_VALUENEGRO_122 F.0
    DATAF tmpf803
    DATA8 flag803
    DIVF F.0 2.0 tmpf803
    CP_EQF 0.0 2.0 flag803
    SELECTF flag803 0.0 tmpf803 VLV_RGBGREY_122

    ADDF VLV_RNORM_122 VLV_GNORM_122 F.1
    ADDF F.1 VLV_BNORM_122 F.0
    JR_GTF F.0 3.0 else804_1
    MOVEF_F 0.0 VLV_COLOR_122
    JR endif804
  else804_1:
    JR_GTEQF VLV_SAT_122 0.4 else807_1
    JR_LTEQF VLV_VALUE_122 VLV_RGBGREY_122 else808_1
    MOVEF_F 6.0 VLV_COLOR_122
    JR endif808
  else808_1:
    MOVEF_F 1.0 VLV_COLOR_122
  else808_2:
  endif808:
    JR endif807
  else807_1:
    JR_LTF VLV_HUE_122 0.0 else809_1
    JR_GTEQF VLV_HUE_122 VLV_RED_122 else809_1
    MOVEF_F 5.0 VLV_COLOR_122
    JR endif809
  else809_1:
    JR_LTF VLV_HUE_122 VLV_RED_122 else809_2
    JR_GTEQF VLV_HUE_122 VLV_YELLOW_122 else809_2
    MOVEF_F 4.0 VLV_COLOR_122
    JR endif809
  else809_2:
    JR_LTF VLV_HUE_122 VLV_YELLOW_122 else809_3
    JR_GTEQF VLV_HUE_122 VLV_GREEN_122 else809_3
    MOVEF_F 3.0 VLV_COLOR_122
    JR endif809
  else809_3:
    JR_LTF VLV_HUE_122 VLV_GREEN_122 else809_4
    JR_GTEQF VLV_HUE_122 VLV_BLUE_122 else809_4
    MOVEF_F 2.0 VLV_COLOR_122
    JR endif809
  else809_4:
    MOVEF_F 5.0 VLV_COLOR_122
  else809_5:
  endif809:
  else807_2:
  endif807:
  else804_2:
  endif804:
    STRINGS VALUE_FORMATTED VLV_RRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_122 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB825 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB825:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer826
	DATA8 no826
	DATA8 mode8826
	
	MOVEF_8 2.0 no826
	SUB8 no826 1 no826
	DIV8 no826 4 layer826
	MATH MOD8 no826 4 no826

	MOVEF_8 4.0 mode8826
	
	INPUT_DEVICE READY_RAW layer826 no826 0 mode8826 0
    MOVEF_F 15.0 VLV_RED_123
    MOVEF_F 60.0 VLV_YELLOW_123
    MOVEF_F 170.0 VLV_GREEN_123
    MOVEF_F 330.0 VLV_BLUE_123
    MOVEF_F 10.0 VLV_VALUENEGRO_123
    MOVEF_F 100.0 VLV_VALUEBLANCO_123
    MOVEF_F 147.0 VLV_RWHITE_123
    MOVEF_F 143.0 VLV_GWHITE_123
    MOVEF_F 160.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    MOVEF_F 0.0 VLV_COLOR_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_123
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_123
  for832:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor832
  forbody832:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_123
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_123 VLV_RGB_123
    DATAF tmpf837
    DATA8 flag837
    DIVF VLV_RRAW_123 VLV_RWHITE_123 tmpf837
    CP_EQF 0.0 VLV_RWHITE_123 flag837
    SELECTF flag837 0.0 tmpf837 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    DATAF tmpf841
    DATA8 flag841
    DIVF VLV_GRAW_123 VLV_GWHITE_123 tmpf841
    CP_EQF 0.0 VLV_GWHITE_123 flag841
    SELECTF flag841 0.0 tmpf841 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    DATAF tmpf845
    DATA8 flag845
    DIVF VLV_BRAW_123 VLV_BWHITE_123 tmpf845
    CP_EQF 0.0 VLV_BWHITE_123 flag845
    SELECTF flag845 0.0 tmpf845 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_RNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.3 VLV_GNORMA_123
    DATA8 flag851
	CP_GTF F.2 F.3 flag851
	SELECTF flag851 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_BNORMA_123
    DATA8 flag853
	CP_GTF F.1 F.2 flag853
	SELECTF flag853 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    DATA32 milliseconds855
	MOVEF_32 5.0 milliseconds855
	DATA32 timer855
	TIMER_WAIT milliseconds855 timer855
	TIMER_READY timer855
    ADDF VLV_J_123 1.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody832
  endfor832:
    MOVEF_F 1.0 VLV_J_123
  for857:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor857
  forbody857:
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_123
    ADDF F.0 F.1 VLV_RNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_123
    ADDF F.0 F.1 VLV_GNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_123
    ADDF F.0 F.1 VLV_BNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_123
    ADDF F.0 F.1 VLV_MAX_123
    ADDF VLV_J_123 2.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody857
  endfor857:
    DATAF tmpf875
    DATA8 flag875
    DIVF VLV_RNORM_123 VLV_REPS_123 tmpf875
    CP_EQF 0.0 VLV_REPS_123 flag875
    SELECTF flag875 0.0 tmpf875 VLV_RNORM_123

    DATAF tmpf876
    DATA8 flag876
    DIVF VLV_GNORM_123 VLV_REPS_123 tmpf876
    CP_EQF 0.0 VLV_REPS_123 flag876
    SELECTF flag876 0.0 tmpf876 VLV_GNORM_123

    DATAF tmpf877
    DATA8 flag877
    DIVF VLV_BNORM_123 VLV_REPS_123 tmpf877
    CP_EQF 0.0 VLV_REPS_123 flag877
    SELECTF flag877 0.0 tmpf877 VLV_BNORM_123

    DATAF tmpf878
    DATA8 flag878
    DIVF VLV_MAX_123 VLV_REPS_123 tmpf878
    CP_EQF 0.0 VLV_REPS_123 flag878
    SELECTF flag878 0.0 tmpf878 VLV_MAX_123

    DATA8 flag879
	CP_LTF VLV_RNORM_123 VLV_GNORM_123 flag879
	SELECTF flag879 VLV_RNORM_123 VLV_GNORM_123 F.0
    DATA8 flag880
	CP_LTF F.0 VLV_BNORM_123 flag880
	SELECTF flag880 F.0 VLV_BNORM_123 VLV_MIN_123
    JR_NEQF VLV_MAX_123 VLV_MIN_123 else881_1
    MOVEF_F 0.0 VLV_HUE_123
    JR endif881
  else881_1:
    JR_NEQF VLV_MAX_123 VLV_RNORM_123 else881_2
    JR_LTF VLV_GNORM_123 VLV_BNORM_123 else882_1
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_123 VLV_MIN_123 F.1
    DATAF tmpf886
    DATA8 flag886
    DIVF F.0 F.1 tmpf886
    CP_EQF 0.0 F.1 flag886
    SELECTF flag886 0.0 tmpf886 VLV_HUE_123

    JR endif882
  else882_1:
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf890
    DATA8 flag890
    DIVF F.1 F.2 tmpf890
    CP_EQF 0.0 F.2 flag890
    SELECTF flag890 0.0 tmpf890 F.0

    ADDF F.0 360.0 VLV_HUE_123
  else882_2:
  endif882:
    JR endif881
  else881_2:
    JR_NEQF VLV_MAX_123 VLV_GNORM_123 else881_3
    SUBF VLV_BNORM_123 VLV_RNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf895
    DATA8 flag895
    DIVF F.1 F.2 tmpf895
    CP_EQF 0.0 F.2 flag895
    SELECTF flag895 0.0 tmpf895 F.0

    ADDF F.0 120.0 VLV_HUE_123
    JR endif881
  else881_3:
    SUBF VLV_RNORM_123 VLV_GNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf900
    DATA8 flag900
    DIVF F.1 F.2 tmpf900
    CP_EQF 0.0 F.2 flag900
    SELECTF flag900 0.0 tmpf900 F.0

    ADDF F.0 240.0 VLV_HUE_123
  else881_4:
  endif881:
    JR_NEQF VLV_MAX_123 0.0 else902_1
    MOVEF_F 0.0 VLV_SAT_123
    JR endif902
  else902_1:
    DATAF tmpf903
    DATA8 flag903
    DIVF VLV_MIN_123 VLV_MAX_123 tmpf903
    CP_EQF 0.0 VLV_MAX_123 flag903
    SELECTF flag903 0.0 tmpf903 F.0

    SUBF 1.0 F.0 VLV_SAT_123
  else902_2:
  endif902:
    MOVEF_F VLV_MAX_123 VLV_VALUE_123
    ADDF VLV_VALUEBLANCO_123 VLV_VALUENEGRO_123 F.0
    DATAF tmpf906
    DATA8 flag906
    DIVF F.0 2.0 tmpf906
    CP_EQF 0.0 2.0 flag906
    SELECTF flag906 0.0 tmpf906 VLV_RGBGREY_123

    ADDF VLV_RNORM_123 VLV_GNORM_123 F.1
    ADDF F.1 VLV_BNORM_123 F.0
    JR_GTF F.0 3.0 else907_1
    MOVEF_F 0.0 VLV_COLOR_123
    JR endif907
  else907_1:
    JR_GTEQF VLV_SAT_123 0.4 else910_1
    JR_LTEQF VLV_VALUE_123 VLV_RGBGREY_123 else911_1
    MOVEF_F 6.0 VLV_COLOR_123
    JR endif911
  else911_1:
    MOVEF_F 1.0 VLV_COLOR_123
  else911_2:
  endif911:
    JR endif910
  else910_1:
    JR_LTF VLV_HUE_123 0.0 else912_1
    JR_GTEQF VLV_HUE_123 VLV_RED_123 else912_1
    MOVEF_F 5.0 VLV_COLOR_123
    JR endif912
  else912_1:
    JR_LTF VLV_HUE_123 VLV_RED_123 else912_2
    JR_GTEQF VLV_HUE_123 VLV_YELLOW_123 else912_2
    MOVEF_F 4.0 VLV_COLOR_123
    JR endif912
  else912_2:
    JR_LTF VLV_HUE_123 VLV_YELLOW_123 else912_3
    JR_GTEQF VLV_HUE_123 VLV_GREEN_123 else912_3
    MOVEF_F 3.0 VLV_COLOR_123
    JR endif912
  else912_3:
    JR_LTF VLV_HUE_123 VLV_GREEN_123 else912_4
    JR_GTEQF VLV_HUE_123 VLV_BLUE_123 else912_4
    MOVEF_F 2.0 VLV_COLOR_123
    JR endif912
  else912_4:
    MOVEF_F 5.0 VLV_COLOR_123
  else912_5:
  endif912:
  else910_2:
  endif910:
  else907_2:
  endif907:
    STRINGS VALUE_FORMATTED VLV_RRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_123 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB928 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB928:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer929
	DATA8 no929
	DATA8 mode8929
	
	MOVEF_8 3.0 no929
	SUB8 no929 1 no929
	DIV8 no929 4 layer929
	MATH MOD8 no929 4 no929

	MOVEF_8 4.0 mode8929
	
	INPUT_DEVICE READY_RAW layer929 no929 0 mode8929 0
    MOVEF_F 15.0 VLV_RED_124
    MOVEF_F 60.0 VLV_YELLOW_124
    MOVEF_F 170.0 VLV_GREEN_124
    MOVEF_F 330.0 VLV_BLUE_124
    MOVEF_F 10.0 VLV_VALUENEGRO_124
    MOVEF_F 100.0 VLV_VALUEBLANCO_124
    MOVEF_F 147.0 VLV_RWHITE_124
    MOVEF_F 143.0 VLV_GWHITE_124
    MOVEF_F 160.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    MOVEF_F 0.0 VLV_COLOR_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_124
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_124
  for935:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor935
  forbody935:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_124
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_124 VLV_RGB_124
    DATAF tmpf940
    DATA8 flag940
    DIVF VLV_RRAW_124 VLV_RWHITE_124 tmpf940
    CP_EQF 0.0 VLV_RWHITE_124 flag940
    SELECTF flag940 0.0 tmpf940 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    DATAF tmpf944
    DATA8 flag944
    DIVF VLV_GRAW_124 VLV_GWHITE_124 tmpf944
    CP_EQF 0.0 VLV_GWHITE_124 flag944
    SELECTF flag944 0.0 tmpf944 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    DATAF tmpf948
    DATA8 flag948
    DIVF VLV_BRAW_124 VLV_BWHITE_124 tmpf948
    CP_EQF 0.0 VLV_BWHITE_124 flag948
    SELECTF flag948 0.0 tmpf948 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_RNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.3 VLV_GNORMA_124
    DATA8 flag954
	CP_GTF F.2 F.3 flag954
	SELECTF flag954 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_BNORMA_124
    DATA8 flag956
	CP_GTF F.1 F.2 flag956
	SELECTF flag956 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    DATA32 milliseconds958
	MOVEF_32 5.0 milliseconds958
	DATA32 timer958
	TIMER_WAIT milliseconds958 timer958
	TIMER_READY timer958
    ADDF VLV_J_124 1.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody935
  endfor935:
    MOVEF_F 1.0 VLV_J_124
  for960:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor960
  forbody960:
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_124
    ADDF F.0 F.1 VLV_RNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_124
    ADDF F.0 F.1 VLV_GNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_124
    ADDF F.0 F.1 VLV_BNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_124
    ADDF F.0 F.1 VLV_MAX_124
    ADDF VLV_J_124 2.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody960
  endfor960:
    DATAF tmpf978
    DATA8 flag978
    DIVF VLV_RNORM_124 VLV_REPS_124 tmpf978
    CP_EQF 0.0 VLV_REPS_124 flag978
    SELECTF flag978 0.0 tmpf978 VLV_RNORM_124

    DATAF tmpf979
    DATA8 flag979
    DIVF VLV_GNORM_124 VLV_REPS_124 tmpf979
    CP_EQF 0.0 VLV_REPS_124 flag979
    SELECTF flag979 0.0 tmpf979 VLV_GNORM_124

    DATAF tmpf980
    DATA8 flag980
    DIVF VLV_BNORM_124 VLV_REPS_124 tmpf980
    CP_EQF 0.0 VLV_REPS_124 flag980
    SELECTF flag980 0.0 tmpf980 VLV_BNORM_124

    DATAF tmpf981
    DATA8 flag981
    DIVF VLV_MAX_124 VLV_REPS_124 tmpf981
    CP_EQF 0.0 VLV_REPS_124 flag981
    SELECTF flag981 0.0 tmpf981 VLV_MAX_124

    DATA8 flag982
	CP_LTF VLV_RNORM_124 VLV_GNORM_124 flag982
	SELECTF flag982 VLV_RNORM_124 VLV_GNORM_124 F.0
    DATA8 flag983
	CP_LTF F.0 VLV_BNORM_124 flag983
	SELECTF flag983 F.0 VLV_BNORM_124 VLV_MIN_124
    JR_NEQF VLV_MAX_124 VLV_MIN_124 else984_1
    MOVEF_F 0.0 VLV_HUE_124
    JR endif984
  else984_1:
    JR_NEQF VLV_MAX_124 VLV_RNORM_124 else984_2
    JR_LTF VLV_GNORM_124 VLV_BNORM_124 else985_1
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_124 VLV_MIN_124 F.1
    DATAF tmpf989
    DATA8 flag989
    DIVF F.0 F.1 tmpf989
    CP_EQF 0.0 F.1 flag989
    SELECTF flag989 0.0 tmpf989 VLV_HUE_124

    JR endif985
  else985_1:
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf993
    DATA8 flag993
    DIVF F.1 F.2 tmpf993
    CP_EQF 0.0 F.2 flag993
    SELECTF flag993 0.0 tmpf993 F.0

    ADDF F.0 360.0 VLV_HUE_124
  else985_2:
  endif985:
    JR endif984
  else984_2:
    JR_NEQF VLV_MAX_124 VLV_GNORM_124 else984_3
    SUBF VLV_BNORM_124 VLV_RNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf998
    DATA8 flag998
    DIVF F.1 F.2 tmpf998
    CP_EQF 0.0 F.2 flag998
    SELECTF flag998 0.0 tmpf998 F.0

    ADDF F.0 120.0 VLV_HUE_124
    JR endif984
  else984_3:
    SUBF VLV_RNORM_124 VLV_GNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf1003
    DATA8 flag1003
    DIVF F.1 F.2 tmpf1003
    CP_EQF 0.0 F.2 flag1003
    SELECTF flag1003 0.0 tmpf1003 F.0

    ADDF F.0 240.0 VLV_HUE_124
  else984_4:
  endif984:
    JR_NEQF VLV_MAX_124 0.0 else1005_1
    MOVEF_F 0.0 VLV_SAT_124
    JR endif1005
  else1005_1:
    DATAF tmpf1006
    DATA8 flag1006
    DIVF VLV_MIN_124 VLV_MAX_124 tmpf1006
    CP_EQF 0.0 VLV_MAX_124 flag1006
    SELECTF flag1006 0.0 tmpf1006 F.0

    SUBF 1.0 F.0 VLV_SAT_124
  else1005_2:
  endif1005:
    MOVEF_F VLV_MAX_124 VLV_VALUE_124
    ADDF VLV_VALUEBLANCO_124 VLV_VALUENEGRO_124 F.0
    DATAF tmpf1009
    DATA8 flag1009
    DIVF F.0 2.0 tmpf1009
    CP_EQF 0.0 2.0 flag1009
    SELECTF flag1009 0.0 tmpf1009 VLV_RGBGREY_124

    ADDF VLV_RNORM_124 VLV_GNORM_124 F.1
    ADDF F.1 VLV_BNORM_124 F.0
    JR_GTF F.0 3.0 else1010_1
    MOVEF_F 0.0 VLV_COLOR_124
    JR endif1010
  else1010_1:
    JR_GTEQF VLV_SAT_124 0.4 else1013_1
    JR_LTEQF VLV_VALUE_124 VLV_RGBGREY_124 else1014_1
    MOVEF_F 6.0 VLV_COLOR_124
    JR endif1014
  else1014_1:
    MOVEF_F 1.0 VLV_COLOR_124
  else1014_2:
  endif1014:
    JR endif1013
  else1013_1:
    JR_LTF VLV_HUE_124 0.0 else1015_1
    JR_GTEQF VLV_HUE_124 VLV_RED_124 else1015_1
    MOVEF_F 5.0 VLV_COLOR_124
    JR endif1015
  else1015_1:
    JR_LTF VLV_HUE_124 VLV_RED_124 else1015_2
    JR_GTEQF VLV_HUE_124 VLV_YELLOW_124 else1015_2
    MOVEF_F 4.0 VLV_COLOR_124
    JR endif1015
  else1015_2:
    JR_LTF VLV_HUE_124 VLV_YELLOW_124 else1015_3
    JR_GTEQF VLV_HUE_124 VLV_GREEN_124 else1015_3
    MOVEF_F 3.0 VLV_COLOR_124
    JR endif1015
  else1015_3:
    JR_LTF VLV_HUE_124 VLV_GREEN_124 else1015_4
    JR_GTEQF VLV_HUE_124 VLV_BLUE_124 else1015_4
    MOVEF_F 2.0 VLV_COLOR_124
    JR endif1015
  else1015_4:
    MOVEF_F 5.0 VLV_COLOR_124
  else1015_5:
  endif1015:
  else1013_2:
  endif1013:
  else1010_2:
  endif1010:
    STRINGS VALUE_FORMATTED VLV_RRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_124 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1031 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1031:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer1032
	DATA8 no1032
	DATA8 mode81032
	
	MOVEF_8 4.0 no1032
	SUB8 no1032 1 no1032
	DIV8 no1032 4 layer1032
	MATH MOD8 no1032 4 no1032

	MOVEF_8 4.0 mode81032
	
	INPUT_DEVICE READY_RAW layer1032 no1032 0 mode81032 0
    MOVEF_F 15.0 VLV_RED_125
    MOVEF_F 60.0 VLV_YELLOW_125
    MOVEF_F 170.0 VLV_GREEN_125
    MOVEF_F 330.0 VLV_BLUE_125
    MOVEF_F 10.0 VLV_VALUENEGRO_125
    MOVEF_F 100.0 VLV_VALUEBLANCO_125
    MOVEF_F 147.0 VLV_RWHITE_125
    MOVEF_F 143.0 VLV_GWHITE_125
    MOVEF_F 160.0 VLV_BWHITE_125
    MOVEF_F 0.0 VLV_HUE_125
    MOVEF_F 0.0 VLV_SAT_125
    MOVEF_F 0.0 VLV_VALUE_125
    MOVEF_F 0.0 VLV_COLOR_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_125
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_125
  for1038:
    JR_GTF VLV_J_125 VLV_REPS_125 endfor1038
  forbody1038:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_125
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_125 VLV_RGB_125
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_125 VLV_RGB_125
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_125 VLV_RGB_125
    DATAF tmpf1043
    DATA8 flag1043
    DIVF VLV_RRAW_125 VLV_RWHITE_125 tmpf1043
    CP_EQF 0.0 VLV_RWHITE_125 flag1043
    SELECTF flag1043 0.0 tmpf1043 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_RNORMA_125
    DATAF tmpf1047
    DATA8 flag1047
    DIVF VLV_GRAW_125 VLV_GWHITE_125 tmpf1047
    CP_EQF 0.0 VLV_GWHITE_125 flag1047
    SELECTF flag1047 0.0 tmpf1047 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_GNORMA_125
    DATAF tmpf1051
    DATA8 flag1051
    DIVF VLV_BRAW_125 VLV_BWHITE_125 tmpf1051
    CP_EQF 0.0 VLV_BWHITE_125 flag1051
    SELECTF flag1051 0.0 tmpf1051 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_BNORMA_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.2 VLV_RNORMA_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.3 VLV_GNORMA_125
    DATA8 flag1057
	CP_GTF F.2 F.3 flag1057
	SELECTF flag1057 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_125 F.2 VLV_BNORMA_125
    DATA8 flag1059
	CP_GTF F.1 F.2 flag1059
	SELECTF flag1059 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_MAXA_125
    DATA32 milliseconds1061
	MOVEF_32 5.0 milliseconds1061
	DATA32 timer1061
	TIMER_WAIT milliseconds1061 timer1061
	TIMER_READY timer1061
    ADDF VLV_J_125 1.0 VLV_J_125
    JR_LTEQF VLV_J_125 VLV_REPS_125 forbody1038
  endfor1038:
    MOVEF_F 1.0 VLV_J_125
  for1063:
    JR_GTF VLV_J_125 VLV_REPS_125 endfor1063
  forbody1063:
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_RNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_125
    ADDF F.0 F.1 VLV_RNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_GNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_125
    ADDF F.0 F.1 VLV_GNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_BNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_125
    ADDF F.0 F.1 VLV_BNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_MAXA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_125
    ADDF F.0 F.1 VLV_MAX_125
    ADDF VLV_J_125 2.0 VLV_J_125
    JR_LTEQF VLV_J_125 VLV_REPS_125 forbody1063
  endfor1063:
    DATAF tmpf1081
    DATA8 flag1081
    DIVF VLV_RNORM_125 VLV_REPS_125 tmpf1081
    CP_EQF 0.0 VLV_REPS_125 flag1081
    SELECTF flag1081 0.0 tmpf1081 VLV_RNORM_125

    DATAF tmpf1082
    DATA8 flag1082
    DIVF VLV_GNORM_125 VLV_REPS_125 tmpf1082
    CP_EQF 0.0 VLV_REPS_125 flag1082
    SELECTF flag1082 0.0 tmpf1082 VLV_GNORM_125

    DATAF tmpf1083
    DATA8 flag1083
    DIVF VLV_BNORM_125 VLV_REPS_125 tmpf1083
    CP_EQF 0.0 VLV_REPS_125 flag1083
    SELECTF flag1083 0.0 tmpf1083 VLV_BNORM_125

    DATAF tmpf1084
    DATA8 flag1084
    DIVF VLV_MAX_125 VLV_REPS_125 tmpf1084
    CP_EQF 0.0 VLV_REPS_125 flag1084
    SELECTF flag1084 0.0 tmpf1084 VLV_MAX_125

    DATA8 flag1085
	CP_LTF VLV_RNORM_125 VLV_GNORM_125 flag1085
	SELECTF flag1085 VLV_RNORM_125 VLV_GNORM_125 F.0
    DATA8 flag1086
	CP_LTF F.0 VLV_BNORM_125 flag1086
	SELECTF flag1086 F.0 VLV_BNORM_125 VLV_MIN_125
    JR_NEQF VLV_MAX_125 VLV_MIN_125 else1087_1
    MOVEF_F 0.0 VLV_HUE_125
    JR endif1087
  else1087_1:
    JR_NEQF VLV_MAX_125 VLV_RNORM_125 else1087_2
    JR_LTF VLV_GNORM_125 VLV_BNORM_125 else1088_1
    SUBF VLV_GNORM_125 VLV_BNORM_125 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_125 VLV_MIN_125 F.1
    DATAF tmpf1092
    DATA8 flag1092
    DIVF F.0 F.1 tmpf1092
    CP_EQF 0.0 F.1 flag1092
    SELECTF flag1092 0.0 tmpf1092 VLV_HUE_125

    JR endif1088
  else1088_1:
    SUBF VLV_GNORM_125 VLV_BNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1096
    DATA8 flag1096
    DIVF F.1 F.2 tmpf1096
    CP_EQF 0.0 F.2 flag1096
    SELECTF flag1096 0.0 tmpf1096 F.0

    ADDF F.0 360.0 VLV_HUE_125
  else1088_2:
  endif1088:
    JR endif1087
  else1087_2:
    JR_NEQF VLV_MAX_125 VLV_GNORM_125 else1087_3
    SUBF VLV_BNORM_125 VLV_RNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1101
    DATA8 flag1101
    DIVF F.1 F.2 tmpf1101
    CP_EQF 0.0 F.2 flag1101
    SELECTF flag1101 0.0 tmpf1101 F.0

    ADDF F.0 120.0 VLV_HUE_125
    JR endif1087
  else1087_3:
    SUBF VLV_RNORM_125 VLV_GNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1106
    DATA8 flag1106
    DIVF F.1 F.2 tmpf1106
    CP_EQF 0.0 F.2 flag1106
    SELECTF flag1106 0.0 tmpf1106 F.0

    ADDF F.0 240.0 VLV_HUE_125
  else1087_4:
  endif1087:
    JR_NEQF VLV_MAX_125 0.0 else1108_1
    MOVEF_F 0.0 VLV_SAT_125
    JR endif1108
  else1108_1:
    DATAF tmpf1109
    DATA8 flag1109
    DIVF VLV_MIN_125 VLV_MAX_125 tmpf1109
    CP_EQF 0.0 VLV_MAX_125 flag1109
    SELECTF flag1109 0.0 tmpf1109 F.0

    SUBF 1.0 F.0 VLV_SAT_125
  else1108_2:
  endif1108:
    MOVEF_F VLV_MAX_125 VLV_VALUE_125
    ADDF VLV_VALUEBLANCO_125 VLV_VALUENEGRO_125 F.0
    DATAF tmpf1112
    DATA8 flag1112
    DIVF F.0 2.0 tmpf1112
    CP_EQF 0.0 2.0 flag1112
    SELECTF flag1112 0.0 tmpf1112 VLV_RGBGREY_125

    ADDF VLV_RNORM_125 VLV_GNORM_125 F.1
    ADDF F.1 VLV_BNORM_125 F.0
    JR_GTF F.0 3.0 else1113_1
    MOVEF_F 0.0 VLV_COLOR_125
    JR endif1113
  else1113_1:
    JR_GTEQF VLV_SAT_125 0.4 else1116_1
    JR_LTEQF VLV_VALUE_125 VLV_RGBGREY_125 else1117_1
    MOVEF_F 6.0 VLV_COLOR_125
    JR endif1117
  else1117_1:
    MOVEF_F 1.0 VLV_COLOR_125
  else1117_2:
  endif1117:
    JR endif1116
  else1116_1:
    JR_LTF VLV_HUE_125 0.0 else1118_1
    JR_GTEQF VLV_HUE_125 VLV_RED_125 else1118_1
    MOVEF_F 5.0 VLV_COLOR_125
    JR endif1118
  else1118_1:
    JR_LTF VLV_HUE_125 VLV_RED_125 else1118_2
    JR_GTEQF VLV_HUE_125 VLV_YELLOW_125 else1118_2
    MOVEF_F 4.0 VLV_COLOR_125
    JR endif1118
  else1118_2:
    JR_LTF VLV_HUE_125 VLV_YELLOW_125 else1118_3
    JR_GTEQF VLV_HUE_125 VLV_GREEN_125 else1118_3
    MOVEF_F 3.0 VLV_COLOR_125
    JR endif1118
  else1118_3:
    JR_LTF VLV_HUE_125 VLV_GREEN_125 else1118_4
    JR_GTEQF VLV_HUE_125 VLV_BLUE_125 else1118_4
    MOVEF_F 2.0 VLV_COLOR_125
    JR endif1118
  else1118_4:
    MOVEF_F 5.0 VLV_COLOR_125
  else1118_5:
  endif1118:
  else1116_2:
  endif1116:
  else1113_2:
  endif1113:
    STRINGS VALUE_FORMATTED VLV_RRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_125 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_125 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_125 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1134:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_134 0.0 else1135_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1135
  else1135_1:
    JR_NEQF VLV_COLOR_134 1.0 else1135_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1135
  else1135_2:
    JR_NEQF VLV_COLOR_134 2.0 else1135_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1135
  else1135_3:
    JR_NEQF VLV_COLOR_134 3.0 else1135_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1135
  else1135_4:
    JR_NEQF VLV_COLOR_134 4.0 else1135_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1135
  else1135_5:
    JR_NEQF VLV_COLOR_134 5.0 else1135_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1135
  else1135_6:
    JR_NEQF VLV_COLOR_134 6.0 else1135_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1135
  else1135_7:
    JR_NEQF VLV_COLOR_134 7.0 else1135_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1135_8:
  endif1135:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_0:
    DATA32 milliseconds1144
	MOVEF_32 150.0 milliseconds1144
	DATA32 timer1144
	TIMER_WAIT milliseconds1144 timer1144
	TIMER_READY timer1144
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 20.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1145:
    MOVEF_F 40.0 VLV_V_117
    MOVEF_F 70.0 VLV_AENC_117
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1146:
    ADDF VGV_NUM_BLOQUES 1.0 VGV_NUM_BLOQUES
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 270.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1148:
    MOVEF_F 40.0 VLV_V_120
    MOVEF_F 500.0 VLV_T_120
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1149:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F -80.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1150:
RETSUB_F_COGER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_0:
SUB_F_SOLTAR_0:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 250.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1151:
    MOVEF_F 40.0 VLV_V_117
    MOVEF_F 70.0 VLV_AENC_117
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1152:
    SUBF VGV_NUM_BLOQUES 4.0 F.0
    DATA8 flag1154
	CP_GTF 0.0 F.0 flag1154
	SELECTF flag1154 0.0 F.0 VGV_NUM_BLOQUES
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F -660.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1155:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 9.25 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1156:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1157:
RETSUB_F_SOLTAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_0:
SUB_F_GIRO90BLOQUES_2:
    MOVEF_F 84.0 VLV_GRADOS_90_137
    JR_GTEQF VGV_NUM_BLOQUES 3.0 else1158_1
    MOVEF_F VLV_VEL_B_137 VLV_V1_37
    MOVEF_F VLV_VEL_C_137 VLV_V2_37
    MOVEF_F VLV_GRADOS_90_137 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB1159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB1159:
    JR endif1158
  else1158_1:
    MOVEF_F VLV_VEL_B_137 VLV_V1_37
    MOVEF_F VLV_VEL_C_137 VLV_V2_37
    ADDF VLV_GRADOS_90_137 2.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB1161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB1161:
  else1158_2:
  endif1158:
RETSUB_F_GIRO90BLOQUES_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GIRO90BLOQUES_2:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
