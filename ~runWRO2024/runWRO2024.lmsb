DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VPR_GIRO_G1
DATAF VPR_RGB_VALUENEGRO
DATAF VPR_RGB_VALUEBLANCO
DATAF VPR_RECTO_DIAMETRO
DATAF VPR_GIRO_DIAMETRO
DATAF VPR_SIGUELINEAS_DIAMETRO
DATAF VPR_SMART_DIAMETRO
DATAF VPR_SIGUELINEAS_NEGRO1
DATAF VPR_SIGUELINEAS_NEGRO3
DATAF VPR_SIGUELINEAS_NEGRO4
DATAF VPR_SIGUELINEAS_BLANCO1
DATAF VPR_SIGUELINEAS_BLANCO3
DATAF VPR_SIGUELINEAS_BLANCO4
DATAF VPR_SMART_NEGRO1
DATAF VPR_SMART_NEGRO3
DATAF VPR_SMART_NEGRO4
DATAF VPR_SMART_BLANCO1
DATAF VPR_SMART_BLANCO3
DATAF VPR_SMART_BLANCO4
DATAF VPR_RECTO_NEGRO
DATAF VPR_RECTO_BLANCO
DATAF VPR_GIRO_NEGRO
DATAF VPR_GIRO_BLANCO
DATAF VLV_VELOCIDAD_5
DATAF VLV_TIMER_5
DATAF VLV_VELOCIDAD_3
DATAF VLV_ENCODER_3
DATAF VLV_VELOCIDAD_6
DATAF VLV_ENCODER_6
DATAF VLV_VELOCIDAD_7
DATAF VLV_TIEMPO_7
DATAF VLV_VELOCIDAD_8
DATAF VLV_DISTANCIA_8
DATAF VLV_VELOCIDAD1_15
DATAF VLV_VELOCIDAD2_15
DATAF VLV_GRADOS_15
DATAF VLV_V0_9
DATAF VLV_VMAX_9
DATAF VLV_DISTANCIAACCEL_9
DATAF VLV_DISTANCIACRUCERO_9
DATAF VLV_DISTANCIADECEL_9
DATAF VLV_V0_10
DATAF VLV_VMAX_10
DATAF VLV_DISTANCIAACCEL_10
DATAF VLV_DISTANCIACRUCERO_10
DATAF VLV_DISTANCIADECEL_10
DATAF VLV_VELOCIDAD_11
DATAF VLV_DISTANCIA_11
DATAF VLV_VELOCIDAD_12
DATAF VLV_SENSOR_12
DATAF VLV_VELOCIDAD_16
DATAF VLV_ENCODER_16
DATAF VLV_VELOCIDAD_17
DATAF VLV_READER_17
DATAF VLV_VELOCIDAD_18
DATAF VLV_ENCODER_18
DATAF VLV_V0_13
DATAF VLV_VMIN_13
DATAF VLV_DISTANCIADECEL_13
DATAF VLV_DISTANCIACRUCERO_13
DATAF VLV_VELOCIDAD_14
DATAF VLV_SENSOR_14
DATAF VLV_COLOR_14
DATAF VLV_BLOQUES_2
DATAF VLV_ALTURA_2
DATAF VLV_VELOCIDAD_19
DATAF VLV_ENCODER_19
DATAF VGV_ENCODERA
DATAF VGV_ENCODERD
DATAF VGV_ERRORA
DATAF VGV_OLDERRORA
DATAF VGV_ERRORD
DATAF VGV_OLDERRORD
DATAF VGV_DIAMETRO
DATAF VGV_NEGRO1
DATAF VGV_NEGRO3
DATAF VGV_NEGRO4
DATAF VGV_BLANCO1
DATAF VGV_BLANCO3
DATAF VGV_BLANCO4
DATAF VGV_CORRECCIONA
DATAF VLV_ENCDIFF_3
DATAF VLV_SIGNO_3
DATAF VLV_SAFETYTIMER_3
DATAF VLV_ENCDIFF_6
DATAF VLV_SIGNO_6
DATAF VLV_SAFETYTIMER_6
DATAF VLV_CORRECCION_7
DATAF VLV_CORRECCION_8
DATAF VLV_ENC_8
DATAF VLV_STARTB_9
DATAF VLV_STARTC_9
DATAF VLV_ENCODERB_9
DATAF VLV_ENCODERC_9
DATAF VLV_SIGNO_9
DATAF VLV_VEL_9
DATAF VLV_KP_9
DATAF VLV_KD_9
DATAF VLV_ERROR_9
DATAF VLV_OLDERROR_9
DATAF VLV_GRADOSACCEL_9
DATAF VLV_GRADOSCRUCERO_9
DATAF VLV_GRADOSDECEL_9
DATAF VLV_PENDIENTE_9
DATAF VLV_CORRECCION_9
DATAF VLV_STARTB_10
DATAF VLV_STARTC_10
DATAF VLV_ENCODERB_10
DATAF VLV_ENCODERC_10
DATAF VLV_SIGNO_10
DATAF VLV_VEL_10
DATAF VLV_KP_10
DATAF VLV_KD_10
DATAF VLV_ERROR_10
DATAF VLV_OLDERROR_10
DATAF VLV_GRADOSACCEL_10
DATAF VLV_GRADOSCRUCERO_10
DATAF VLV_GRADOSDECEL_10
DATAF VLV_PENDIENTE_10
DATAF VLV_CORRECCION_10
DATAF VLV_CORRECCION_11
DATAF VLV_ENC_11
DATAF VLV_CORRECCION_12
DATAF VLV_LECTURA_12
DATAF VLV_STARTB_13
DATAF VLV_STARTC_13
DATAF VLV_SIGNO_13
DATAF VLV_VEL_13
DATAF VLV_KP_13
DATAF VLV_KD_13
DATAF VLV_ERROR_13
DATAF VLV_OLDERROR_13
DATAF VLV_GRADOSDECEL_13
DATAF VLV_GRADOSCRUCERO_13
DATAF VLV_ENCODERB_13
DATAF VLV_ENCODERC_13
DATAF VLV_PENDIENTE_13
DATAF VLV_CORRECCION_13
DATAF VLV_CORRECCION_14
DATAF VLV_MODE_14
DATAF VLV_SIGNO_15
DATAF VLV_VMIN_15
DATAF VLV_VMAX_15
DATAF VLV_ENCODER_15
DATAF VLV_LECTURA1_16
DATAF VLV_LECTURA3_16
DATAF VLV_LECTURA4_16
DATAF VLV_KP_16
DATAF VLV_KD_16
DATAF VLV_DISTANCIA_16
DATAF VLV_ERROR_16
DATAF VLV_OLDERROR_16
DATAF VLV_U_16
DATAF VLV_SENTIDO_16
DATAF VLV_STARTVELOCIDAD_16
DATAF VLV_STARTKP_16
DATAF VLV_STARTKD_16
DATAF VLV_STARTC_16
DATAF VLV_ENCODERC_16
DATAF VLV_LECTURA1_17
DATAF VLV_LECTURA3_17
DATAF VLV_LECTURA4_17
DATAF VLV_KP_17
DATAF VLV_KD_17
DATAF VLV_ERROR_17
DATAF VLV_OLDERROR_17
DATAF VLV_U_17
DATAF VLV_SENTIDO_17
DATAF VLV_LECTURA_17
DATAF VLV_LECTURAIZQ_17
DATAF VLV_LECTURADCH_17
DATAF VLV_LECTURA1_18
DATAF VLV_LECTURA3_18
DATAF VLV_LECTURA4_18
DATAF VLV_KP_18
DATAF VLV_KD_18
DATAF VLV_ERROR_18
DATAF VLV_OLDERROR_18
DATAF VLV_U_18
DATAF VLV_SENTIDO_18
DATAF VLV_STARTC_18
DATAF VLV_ENCODERC_18
DATAF VLV_LECTURA1_19
DATAF VLV_LECTURA3_19
DATAF VLV_LECTURA4_19
DATAF VLV_KP_19
DATAF VLV_KD_19
DATAF VLV_ERROR_19
DATAF VLV_OLDERROR_19
DATAF VLV_U_19
DATAF VLV_SENTIDO_19
DATAF VLV_STARTC_19
DATAF VLV_ENCODERC_19
DATA32 RUNCOUNTER_F_CONTROLBRAZO_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VPR_GIRO_G1
    MOVEF_F 0.0 VPR_RGB_VALUENEGRO
    MOVEF_F 0.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 0.0 VPR_RECTO_DIAMETRO
    MOVEF_F 0.0 VPR_GIRO_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F 0.0 VPR_SMART_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F 0.0 VPR_SMART_NEGRO1
    MOVEF_F 0.0 VPR_SMART_NEGRO3
    MOVEF_F 0.0 VPR_SMART_NEGRO4
    MOVEF_F 0.0 VPR_SMART_BLANCO1
    MOVEF_F 0.0 VPR_SMART_BLANCO3
    MOVEF_F 0.0 VPR_SMART_BLANCO4
    MOVEF_F 0.0 VPR_RECTO_NEGRO
    MOVEF_F 0.0 VPR_RECTO_BLANCO
    MOVEF_F 0.0 VPR_GIRO_NEGRO
    MOVEF_F 0.0 VPR_GIRO_BLANCO
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_TIMER_5
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_ENCODER_3
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_ENCODER_6
    MOVEF_F 0.0 VLV_VELOCIDAD_7
    MOVEF_F 0.0 VLV_TIEMPO_7
    MOVEF_F 0.0 VLV_VELOCIDAD_8
    MOVEF_F 0.0 VLV_DISTANCIA_8
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_GRADOS_15
    MOVEF_F 0.0 VLV_V0_9
    MOVEF_F 0.0 VLV_VMAX_9
    MOVEF_F 0.0 VLV_DISTANCIAACCEL_9
    MOVEF_F 0.0 VLV_DISTANCIACRUCERO_9
    MOVEF_F 0.0 VLV_DISTANCIADECEL_9
    MOVEF_F 0.0 VLV_V0_10
    MOVEF_F 0.0 VLV_VMAX_10
    MOVEF_F 0.0 VLV_DISTANCIAACCEL_10
    MOVEF_F 0.0 VLV_DISTANCIACRUCERO_10
    MOVEF_F 0.0 VLV_DISTANCIADECEL_10
    MOVEF_F 0.0 VLV_VELOCIDAD_11
    MOVEF_F 0.0 VLV_DISTANCIA_11
    MOVEF_F 0.0 VLV_VELOCIDAD_12
    MOVEF_F 0.0 VLV_SENSOR_12
    MOVEF_F 0.0 VLV_VELOCIDAD_16
    MOVEF_F 0.0 VLV_ENCODER_16
    MOVEF_F 0.0 VLV_VELOCIDAD_17
    MOVEF_F 0.0 VLV_READER_17
    MOVEF_F 0.0 VLV_VELOCIDAD_18
    MOVEF_F 0.0 VLV_ENCODER_18
    MOVEF_F 0.0 VLV_V0_13
    MOVEF_F 0.0 VLV_VMIN_13
    MOVEF_F 0.0 VLV_DISTANCIADECEL_13
    MOVEF_F 0.0 VLV_DISTANCIACRUCERO_13
    MOVEF_F 0.0 VLV_VELOCIDAD_14
    MOVEF_F 0.0 VLV_SENSOR_14
    MOVEF_F 0.0 VLV_COLOR_14
    MOVEF_F 0.0 VLV_BLOQUES_2
    MOVEF_F 0.0 VLV_ALTURA_2
    MOVEF_F 0.0 VLV_VELOCIDAD_19
    MOVEF_F 0.0 VLV_ENCODER_19
    MOVEF_F 0.0 VGV_ENCODERA
    MOVEF_F 0.0 VGV_ENCODERD
    MOVEF_F 0.0 VGV_ERRORA
    MOVEF_F 0.0 VGV_OLDERRORA
    MOVEF_F 0.0 VGV_ERRORD
    MOVEF_F 0.0 VGV_OLDERRORD
    MOVEF_F 0.0 VGV_DIAMETRO
    MOVEF_F 0.0 VGV_NEGRO1
    MOVEF_F 0.0 VGV_NEGRO3
    MOVEF_F 0.0 VGV_NEGRO4
    MOVEF_F 0.0 VGV_BLANCO1
    MOVEF_F 0.0 VGV_BLANCO3
    MOVEF_F 0.0 VGV_BLANCO4
    MOVEF_F 0.0 VGV_CORRECCIONA
    MOVEF_F 0.0 VLV_ENCDIFF_3
    MOVEF_F 0.0 VLV_SIGNO_3
    MOVEF_F 0.0 VLV_SAFETYTIMER_3
    MOVEF_F 0.0 VLV_ENCDIFF_6
    MOVEF_F 0.0 VLV_SIGNO_6
    MOVEF_F 0.0 VLV_SAFETYTIMER_6
    MOVEF_F 0.0 VLV_CORRECCION_7
    MOVEF_F 0.0 VLV_CORRECCION_8
    MOVEF_F 0.0 VLV_ENC_8
    MOVEF_F 0.0 VLV_STARTB_9
    MOVEF_F 0.0 VLV_STARTC_9
    MOVEF_F 0.0 VLV_ENCODERB_9
    MOVEF_F 0.0 VLV_ENCODERC_9
    MOVEF_F 0.0 VLV_SIGNO_9
    MOVEF_F 0.0 VLV_VEL_9
    MOVEF_F 0.0 VLV_KP_9
    MOVEF_F 0.0 VLV_KD_9
    MOVEF_F 0.0 VLV_ERROR_9
    MOVEF_F 0.0 VLV_OLDERROR_9
    MOVEF_F 0.0 VLV_GRADOSACCEL_9
    MOVEF_F 0.0 VLV_GRADOSCRUCERO_9
    MOVEF_F 0.0 VLV_GRADOSDECEL_9
    MOVEF_F 0.0 VLV_PENDIENTE_9
    MOVEF_F 0.0 VLV_CORRECCION_9
    MOVEF_F 0.0 VLV_STARTB_10
    MOVEF_F 0.0 VLV_STARTC_10
    MOVEF_F 0.0 VLV_ENCODERB_10
    MOVEF_F 0.0 VLV_ENCODERC_10
    MOVEF_F 0.0 VLV_SIGNO_10
    MOVEF_F 0.0 VLV_VEL_10
    MOVEF_F 0.0 VLV_KP_10
    MOVEF_F 0.0 VLV_KD_10
    MOVEF_F 0.0 VLV_ERROR_10
    MOVEF_F 0.0 VLV_OLDERROR_10
    MOVEF_F 0.0 VLV_GRADOSACCEL_10
    MOVEF_F 0.0 VLV_GRADOSCRUCERO_10
    MOVEF_F 0.0 VLV_GRADOSDECEL_10
    MOVEF_F 0.0 VLV_PENDIENTE_10
    MOVEF_F 0.0 VLV_CORRECCION_10
    MOVEF_F 0.0 VLV_CORRECCION_11
    MOVEF_F 0.0 VLV_ENC_11
    MOVEF_F 0.0 VLV_CORRECCION_12
    MOVEF_F 0.0 VLV_LECTURA_12
    MOVEF_F 0.0 VLV_STARTB_13
    MOVEF_F 0.0 VLV_STARTC_13
    MOVEF_F 0.0 VLV_SIGNO_13
    MOVEF_F 0.0 VLV_VEL_13
    MOVEF_F 0.0 VLV_KP_13
    MOVEF_F 0.0 VLV_KD_13
    MOVEF_F 0.0 VLV_ERROR_13
    MOVEF_F 0.0 VLV_OLDERROR_13
    MOVEF_F 0.0 VLV_GRADOSDECEL_13
    MOVEF_F 0.0 VLV_GRADOSCRUCERO_13
    MOVEF_F 0.0 VLV_ENCODERB_13
    MOVEF_F 0.0 VLV_ENCODERC_13
    MOVEF_F 0.0 VLV_PENDIENTE_13
    MOVEF_F 0.0 VLV_CORRECCION_13
    MOVEF_F 0.0 VLV_CORRECCION_14
    MOVEF_F 0.0 VLV_MODE_14
    MOVEF_F 0.0 VLV_SIGNO_15
    MOVEF_F 0.0 VLV_VMIN_15
    MOVEF_F 0.0 VLV_VMAX_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_LECTURA1_16
    MOVEF_F 0.0 VLV_LECTURA3_16
    MOVEF_F 0.0 VLV_LECTURA4_16
    MOVEF_F 0.0 VLV_KP_16
    MOVEF_F 0.0 VLV_KD_16
    MOVEF_F 0.0 VLV_DISTANCIA_16
    MOVEF_F 0.0 VLV_ERROR_16
    MOVEF_F 0.0 VLV_OLDERROR_16
    MOVEF_F 0.0 VLV_U_16
    MOVEF_F 0.0 VLV_SENTIDO_16
    MOVEF_F 0.0 VLV_STARTVELOCIDAD_16
    MOVEF_F 0.0 VLV_STARTKP_16
    MOVEF_F 0.0 VLV_STARTKD_16
    MOVEF_F 0.0 VLV_STARTC_16
    MOVEF_F 0.0 VLV_ENCODERC_16
    MOVEF_F 0.0 VLV_LECTURA1_17
    MOVEF_F 0.0 VLV_LECTURA3_17
    MOVEF_F 0.0 VLV_LECTURA4_17
    MOVEF_F 0.0 VLV_KP_17
    MOVEF_F 0.0 VLV_KD_17
    MOVEF_F 0.0 VLV_ERROR_17
    MOVEF_F 0.0 VLV_OLDERROR_17
    MOVEF_F 0.0 VLV_U_17
    MOVEF_F 0.0 VLV_SENTIDO_17
    MOVEF_F 0.0 VLV_LECTURA_17
    MOVEF_F 0.0 VLV_LECTURAIZQ_17
    MOVEF_F 0.0 VLV_LECTURADCH_17
    MOVEF_F 0.0 VLV_LECTURA1_18
    MOVEF_F 0.0 VLV_LECTURA3_18
    MOVEF_F 0.0 VLV_LECTURA4_18
    MOVEF_F 0.0 VLV_KP_18
    MOVEF_F 0.0 VLV_KD_18
    MOVEF_F 0.0 VLV_ERROR_18
    MOVEF_F 0.0 VLV_OLDERROR_18
    MOVEF_F 0.0 VLV_U_18
    MOVEF_F 0.0 VLV_SENTIDO_18
    MOVEF_F 0.0 VLV_STARTC_18
    MOVEF_F 0.0 VLV_ENCODERC_18
    MOVEF_F 0.0 VLV_LECTURA1_19
    MOVEF_F 0.0 VLV_LECTURA3_19
    MOVEF_F 0.0 VLV_LECTURA4_19
    MOVEF_F 0.0 VLV_KP_19
    MOVEF_F 0.0 VLV_KD_19
    MOVEF_F 0.0 VLV_ERROR_19
    MOVEF_F 0.0 VLV_OLDERROR_19
    MOVEF_F 0.0 VLV_U_19
    MOVEF_F 0.0 VLV_SENTIDO_19
    MOVEF_F 0.0 VLV_STARTC_19
    MOVEF_F 0.0 VLV_ENCODERC_19
    MOVE32_32 0 RUNCOUNTER_F_CONTROLBRAZO_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_CONTROLBRAZO_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_CONTROLBRAZO_0 0
    CALL GETANDINC32 RUNCOUNTER_F_CONTROLBRAZO_0 -1 RUNCOUNTER_F_CONTROLBRAZO_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_CONTROLBRAZO_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch545
    WRITE32 ENDSUB_F_CONTROLBRAZO_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CONTROLBRAZO_0
  dispatch545:
    MOVEF_F 0.0 VPR_GIRO_G1
    MOVEF_F 0.0 VPR_RGB_VALUENEGRO
    MOVEF_F 0.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 0.0 VPR_RECTO_DIAMETRO
    MOVEF_F 0.0 VPR_GIRO_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F 0.0 VPR_SMART_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F 0.0 VPR_SMART_NEGRO1
    MOVEF_F 0.0 VPR_SMART_NEGRO3
    MOVEF_F 0.0 VPR_SMART_NEGRO4
    MOVEF_F 0.0 VPR_SMART_BLANCO1
    MOVEF_F 0.0 VPR_SMART_BLANCO3
    MOVEF_F 0.0 VPR_SMART_BLANCO4
    MOVEF_F 0.0 VPR_RECTO_NEGRO
    MOVEF_F 0.0 VPR_RECTO_BLANCO
    MOVEF_F 0.0 VPR_GIRO_NEGRO
    MOVEF_F 0.0 VPR_GIRO_BLANCO
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_TIMER_5
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_ENCODER_3
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_ENCODER_6
    MOVEF_F 0.0 VLV_VELOCIDAD_7
    MOVEF_F 0.0 VLV_TIEMPO_7
    MOVEF_F 0.0 VLV_VELOCIDAD_8
    MOVEF_F 0.0 VLV_DISTANCIA_8
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_GRADOS_15
    MOVEF_F 0.0 VLV_V0_9
    MOVEF_F 0.0 VLV_VMAX_9
    MOVEF_F 0.0 VLV_DISTANCIAACCEL_9
    MOVEF_F 0.0 VLV_DISTANCIACRUCERO_9
    MOVEF_F 0.0 VLV_DISTANCIADECEL_9
    MOVEF_F 0.0 VLV_V0_10
    MOVEF_F 0.0 VLV_VMAX_10
    MOVEF_F 0.0 VLV_DISTANCIAACCEL_10
    MOVEF_F 0.0 VLV_DISTANCIACRUCERO_10
    MOVEF_F 0.0 VLV_DISTANCIADECEL_10
    MOVEF_F 0.0 VLV_VELOCIDAD_11
    MOVEF_F 0.0 VLV_DISTANCIA_11
    MOVEF_F 0.0 VLV_VELOCIDAD_12
    MOVEF_F 0.0 VLV_SENSOR_12
    MOVEF_F 0.0 VLV_VELOCIDAD_16
    MOVEF_F 0.0 VLV_ENCODER_16
    MOVEF_F 0.0 VLV_VELOCIDAD_17
    MOVEF_F 0.0 VLV_READER_17
    MOVEF_F 0.0 VLV_VELOCIDAD_18
    MOVEF_F 0.0 VLV_ENCODER_18
    MOVEF_F 0.0 VLV_V0_13
    MOVEF_F 0.0 VLV_VMIN_13
    MOVEF_F 0.0 VLV_DISTANCIADECEL_13
    MOVEF_F 0.0 VLV_DISTANCIACRUCERO_13
    MOVEF_F 0.0 VLV_VELOCIDAD_14
    MOVEF_F 0.0 VLV_SENSOR_14
    MOVEF_F 0.0 VLV_COLOR_14
    MOVEF_F 0.0 VLV_BLOQUES_2
    MOVEF_F 0.0 VLV_ALTURA_2
    MOVEF_F 0.0 VLV_VELOCIDAD_19
    MOVEF_F 0.0 VLV_ENCODER_19
    MOVEF_F 0.0 VGV_ENCODERA
    MOVEF_F 0.0 VGV_ENCODERD
    MOVEF_F 0.0 VGV_ERRORA
    MOVEF_F 0.0 VGV_OLDERRORA
    MOVEF_F 0.0 VGV_ERRORD
    MOVEF_F 0.0 VGV_OLDERRORD
    MOVEF_F 0.0 VGV_DIAMETRO
    MOVEF_F 0.0 VGV_NEGRO1
    MOVEF_F 0.0 VGV_NEGRO3
    MOVEF_F 0.0 VGV_NEGRO4
    MOVEF_F 0.0 VGV_BLANCO1
    MOVEF_F 0.0 VGV_BLANCO3
    MOVEF_F 0.0 VGV_BLANCO4
    MOVEF_F 0.0 VGV_ENCODERA
    MOVEF_F 0.0 VGV_ENCODERD
    MOVEF_F 0.0 VGV_ERRORA
    MOVEF_F 0.0 VGV_OLDERRORA
    MOVEF_F 0.0 VGV_ERRORD
    MOVEF_F 0.0 VGV_OLDERRORD
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB0 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB0:
    DATA32 tmp1
    CALL GETANDINC32 RUNCOUNTER_F_CONTROLBRAZO_0 1  RUNCOUNTER_F_CONTROLBRAZO_0 tmp1
    JR_NEQ32 0 tmp1 alreadylaunched1
    OBJECT_START TF_CONTROLBRAZO_0
  alreadylaunched1:
    WRITE32 ENDSUB_F_MAINPRUEBA_0:CALLSUB2 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAINPRUEBA_0
CALLSUB2:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 0.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 3.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 4.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    MOVEF_F 6.24 VGV_DIAMETRO
    MOVEF_F 2.68055555555556 VPR_GIRO_G1
    MOVEF_F 10.0 VGV_NEGRO1
    MOVEF_F 10.0 VGV_NEGRO3
    MOVEF_F 8.0 VGV_NEGRO4
    MOVEF_F 76.0 VGV_BLANCO1
    MOVEF_F 76.0 VGV_BLANCO3
    MOVEF_F 61.0 VGV_BLANCO4
    MOVEF_F 10.0 VPR_RGB_VALUENEGRO
    MOVEF_F 100.0 VPR_RGB_VALUEBLANCO
    MOVEF_F VGV_DIAMETRO VPR_RECTO_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_GIRO_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_SMART_DIAMETRO
    MOVEF_F VGV_NEGRO1 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F VGV_NEGRO3 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F VGV_NEGRO4 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F VGV_BLANCO1 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F VGV_BLANCO3 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F VGV_BLANCO4 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F VGV_NEGRO1 VPR_SMART_NEGRO1
    MOVEF_F VGV_NEGRO3 VPR_SMART_NEGRO3
    MOVEF_F VGV_NEGRO4 VPR_SMART_NEGRO4
    MOVEF_F VGV_BLANCO1 VPR_SMART_BLANCO1
    MOVEF_F VGV_BLANCO3 VPR_SMART_BLANCO3
    MOVEF_F VGV_BLANCO4 VPR_SMART_BLANCO4
    ADDF VGV_NEGRO1 VGV_NEGRO3 F.1
    ADDF F.1 VGV_NEGRO4 F.0
    DATAF tmpf9
    DATA8 flag9
    DIVF F.0 3.0 tmpf9
    CP_EQF 0.0 3.0 flag9
    SELECTF flag9 0.0 tmpf9 VPR_RECTO_NEGRO

    ADDF VGV_BLANCO1 VGV_BLANCO3 F.1
    ADDF F.1 VGV_BLANCO4 F.0
    DATAF tmpf12
    DATA8 flag12
    DIVF F.0 3.0 tmpf12
    CP_EQF 0.0 3.0 flag12
    SELECTF flag12 0.0 tmpf12 VPR_RECTO_BLANCO

    ADDF VGV_NEGRO1 VGV_NEGRO3 F.1
    ADDF F.1 VGV_NEGRO4 F.0
    DATAF tmpf15
    DATA8 flag15
    DIVF F.0 3.0 tmpf15
    CP_EQF 0.0 3.0 flag15
    SELECTF flag15 0.0 tmpf15 VPR_GIRO_NEGRO

    ADDF VGV_BLANCO1 VGV_BLANCO3 F.1
    ADDF F.1 VGV_BLANCO4 F.0
    DATAF tmpf18
    DATA8 flag18
    DIVF F.0 3.0 tmpf18
    CP_EQF 0.0 3.0 flag18
    SELECTF flag18 0.0 tmpf18 VPR_GIRO_BLANCO

RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    MOVEF_F -50.0 VLV_VELOCIDAD_5
    MOVEF_F 800.0 VLV_TIMER_5
    WRITE32 ENDSUB_M_BRAZO_DTIMER_2:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DTIMER_2
CALLSUB19:
    MOVEF_F 50.0 VLV_VELOCIDAD_3
    MOVEF_F -800.0 VLV_ENCODER_3
    WRITE32 ENDSUB_F_AENCODER_2:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AENCODER_2
CALLSUB20:
    MOVEF_F 0.0 VGV_ENCODERA
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 50.0 VLV_VELOCIDAD_3
    MOVEF_F 650.0 VLV_ENCODER_3
    WRITE32 ENDSUB_F_AENCODER_2:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AENCODER_2
CALLSUB23:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 0.0 VGV_ENCODERA
    MOVEF_F 50.0 VLV_VELOCIDAD_6
    MOVEF_F 80.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_DENCODER_2:CALLSUB26 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DENCODER_2
CALLSUB26:
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_MAINPRUEBA_0:
    MOVEF_F 40.0 VLV_VELOCIDAD_3
    MOVEF_F -100.0 VLV_ENCODER_3
    WRITE32 ENDSUB_F_AENCODER_2:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AENCODER_2
CALLSUB27:
    MOVEF_F 70.0 VLV_VELOCIDAD_6
    MOVEF_F 100.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_DENCODER_2:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DENCODER_2
CALLSUB28:
    MOVEF_F 8.0 VLV_VELOCIDAD1_15
    MOVEF_F 50.0 VLV_VELOCIDAD2_15
    MOVEF_F 100.0 VLV_GRADOS_15
    WRITE32 ENDSUB_M_GIRO_GRADOS_3:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_GIRO_GRADOS_3
CALLSUB29:
    MOVEF_F 30.0 VLV_VELOCIDAD_19
    MOVEF_F 15.0 VLV_ENCODER_19
    WRITE32 ENDSUB_M_SIGUELINEAS_ENCODER14_2:CALLSUB30 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_SIGUELINEAS_ENCODER14_2
CALLSUB30:
RETSUB_F_MAINPRUEBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAINPRUEBA_0:
SUB_F_CONTROLBRAZO_0:
  while31:
  whilebody31:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VGV_ENCODERA F.0 VGV_ERRORA
    MULF VGV_ERRORA 1.0 F.0
    SUBF VGV_ERRORA VGV_OLDERRORA F.2
    MULF F.2 0.6 F.1
    ADDF F.0 F.1 VGV_CORRECCIONA
    MOVEF_8 VGV_CORRECCIONA setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR whilebody31
  endwhile31:
RETSUB_F_CONTROLBRAZO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CONTROLBRAZO_0:
SUB_F_COGER_0:
    MOVEF_F 50.0 VLV_VELOCIDAD_6
    MOVEF_F 350.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_DENCODER_2:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DENCODER_2
CALLSUB39:
    MOVEF_F 15.0 VLV_V0_9
    MOVEF_F 30.0 VLV_VMAX_9
    MOVEF_F 5.0 VLV_DISTANCIAACCEL_9
    MOVEF_F 0.0 VLV_DISTANCIACRUCERO_9
    MOVEF_F 5.0 VLV_DISTANCIADECEL_9
    WRITE32 ENDSUB_M_RECTO_ACCELDECEL_5:CALLSUB40 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ACCELDECEL_5
CALLSUB40:
    MOVEF_F 50.0 VLV_VELOCIDAD_6
    MOVEF_F 240.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_DENCODER_2:CALLSUB41 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DENCODER_2
CALLSUB41:
    MOVEF_F 50.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_ENCODER_3
    WRITE32 ENDSUB_F_AENCODER_2:CALLSUB42 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AENCODER_2
CALLSUB42:
    MOVEF_F 50.0 VLV_VELOCIDAD_6
    MOVEF_F -10.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_DENCODER_2:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DENCODER_2
CALLSUB43:
    MOVEF_F 50.0 VLV_VELOCIDAD_3
    MOVEF_F -180.0 VLV_ENCODER_3
    WRITE32 ENDSUB_F_AENCODER_2:CALLSUB44 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AENCODER_2
CALLSUB44:
    MOVEF_F 50.0 VLV_VELOCIDAD_6
    MOVEF_F 100.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_DENCODER_2:CALLSUB45 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DENCODER_2
CALLSUB45:
RETSUB_F_COGER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_0:
SUB_F_SOLTAR_2:
    SUBF VLV_ALTURA_2 1.0 VLV_ALTURA_2
    SUBF VLV_BLOQUES_2 1.0 VLV_BLOQUES_2
    MOVEF_F 50.0 VLV_VELOCIDAD_6
    MULF 320.0 VLV_ALTURA_2 F.0
    DATA8 flag49
	CP_GTF F.0 0.0 flag49
	SELECTF flag49 F.0 0.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_DENCODER_2:CALLSUB50 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DENCODER_2
CALLSUB50:
    DATA32 milliseconds51
	MOVEF_32 1000.0 milliseconds51
	DATA32 timer51
	TIMER_WAIT milliseconds51 timer51
	TIMER_READY timer51
    MOVEF_F 50.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_ENCODER_3
    WRITE32 ENDSUB_F_AENCODER_2:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AENCODER_2
CALLSUB52:
    MOVEF_F 50.0 VLV_VELOCIDAD_6
    ADDF VLV_BLOQUES_2 VLV_ALTURA_2 F.1
    SUBF F.1 1.0 F.0
    MULF 320.0 F.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_DENCODER_2:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DENCODER_2
CALLSUB56:
    DATA32 milliseconds57
	MOVEF_32 1000.0 milliseconds57
	DATA32 timer57
	TIMER_WAIT milliseconds57 timer57
	TIMER_READY timer57
    MOVEF_F 50.0 VLV_VELOCIDAD_3
    MOVEF_F -250.0 VLV_ENCODER_3
    WRITE32 ENDSUB_F_AENCODER_2:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AENCODER_2
CALLSUB58:
    MOVEF_F 50.0 VLV_VELOCIDAD_6
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    ADDF F.0 200.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_DENCODER_2:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DENCODER_2
CALLSUB61:
    MOVEF_F -15.0 VLV_V0_9
    MOVEF_F 30.0 VLV_VMAX_9
    MOVEF_F 5.0 VLV_DISTANCIAACCEL_9
    MOVEF_F 0.0 VLV_DISTANCIACRUCERO_9
    MOVEF_F 5.0 VLV_DISTANCIADECEL_9
    WRITE32 ENDSUB_M_RECTO_ACCELDECEL_5:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ACCELDECEL_5
CALLSUB62:
    MOVEF_F 50.0 VLV_VELOCIDAD_6
    MOVEF_F 50.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_DENCODER_2:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DENCODER_2
CALLSUB63:
RETSUB_F_SOLTAR_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_2:
SUB_F_AENCODER_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_ENCODER_3 F.0 VLV_ENCDIFF_3
    MATH ABS VLV_ENCDIFF_3 F.0
    DATAF tmpf67
    DATA8 flag67
    DIVF F.0 VLV_ENCDIFF_3 tmpf67
    CP_EQF 0.0 VLV_ENCDIFF_3 flag67
    SELECTF flag67 0.0 tmpf67 VLV_SIGNO_3

    MOVEF_F 1200.0 VLV_SAFETYTIMER_3
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_3 0.0 else69_1
  while70:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.2
    SUBF F.2 VLV_ENCODER_3 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 15.0 endwhile70
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_3 endwhile70
  whilebody70:
    DATAF tmpf75
    DATA8 flag75
    DIVF VLV_VELOCIDAD_3 15.5 tmpf75
    CP_EQF 0.0 15.5 flag75
    SELECTF flag75 0.0 tmpf75 F.1

    MULF F.1 VLV_SIGNO_3 F.0
    ADDF VGV_ENCODERA F.0 VGV_ENCODERA
    JR_LTEQF VLV_SIGNO_3 0.0 else78_1
    DATA8 flag79
	CP_LTF VGV_ENCODERA VLV_ENCODER_3 flag79
	SELECTF flag79 VGV_ENCODERA VLV_ENCODER_3 VGV_ENCODERA
    JR endif78
  else78_1:
    DATA8 flag80
	CP_GTF VGV_ENCODERA VLV_ENCODER_3 flag80
	SELECTF flag80 VGV_ENCODERA VLV_ENCODER_3 VGV_ENCODERA
  else78_2:
  endif78:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.2
    SUBF F.2 VLV_ENCODER_3 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 15.0 and81
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_3 whilebody70
  and81:
  endwhile70:
    MOVEF_F VLV_ENCODER_3 VGV_ENCODERA
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else69_1:
  endif69:
RETSUB_F_AENCODER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_AENCODER_2:
SUB_M_BRAZO_DTIMER_2:
    TIMER_READ timeMC1
  while88:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_TIMER_5 endwhile88
  whilebody88:
    MOVEF_8 VLV_VELOCIDAD_5 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_TIMER_5 whilebody88
  endwhile88:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_M_BRAZO_DTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_BRAZO_DTIMER_2:
SUB_M_BRAZO_DENCODER_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_ENCODER_6 F.0 VLV_ENCDIFF_6
    MATH ABS VLV_ENCDIFF_6 F.0
    DATAF tmpf96
    DATA8 flag96
    DIVF VLV_ENCDIFF_6 F.0 tmpf96
    CP_EQF 0.0 F.0 flag96
    SELECTF flag96 0.0 tmpf96 VLV_SIGNO_6

    MATH ABS VLV_ENCDIFF_6 F.4
    DATAF tmpf98
    DATA8 flag98
    DIVF F.4 100.0 tmpf98
    CP_EQF 0.0 100.0 flag98
    SELECTF flag98 0.0 tmpf98 F.3

    DATAF tmpf99
    DATA8 flag99
    DIVF VLV_VELOCIDAD_6 20.0 tmpf99
    CP_EQF 0.0 20.0 flag99
    SELECTF flag99 0.0 tmpf99 F.4

    DATAF tmpf100
    DATA8 flag100
    DIVF F.3 F.4 tmpf100
    CP_EQF 0.0 F.4 flag100
    SELECTF flag100 0.0 tmpf100 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag103
	CP_GTF F.0 400.0 flag103
	SELECTF flag103 F.0 400.0 VLV_SAFETYTIMER_6
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_6 0.0 else105_1
  while106:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_ENCODER_6 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 15.0 endwhile106
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_6 endwhile106
  whilebody106:
    MULF VLV_SIGNO_6 VLV_VELOCIDAD_6 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_6 '%g' 99 S.1
    CALL TEXT.APPEND 'safetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_ENCODER_6 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 15.0 and117
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_6 whilebody106
  and117:
  endwhile106:
    CALL MOTOR.STOP 'D' 'True'
  else105_1:
  endif105:
RETSUB_M_BRAZO_DENCODER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_BRAZO_DENCODER_2:
SUB_M_RECTO_TIEMPO_2:
    MOVEF_F 0.0 VLV_CORRECCION_7
    TIMER_READ timeMC3
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
  while125:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_7 endwhile125
  whilebody125:
    MATH NEGATE VLV_VELOCIDAD_7 F.1
    ADDF F.1 VLV_CORRECCION_7 F.0
    ADDF VLV_VELOCIDAD_7 VLV_CORRECCION_7 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_7 whilebody125
  endwhile125:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_TIEMPO_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_TIEMPO_2:
SUB_M_RECTO_ENCODER_2:
    MOVEF_F 0.0 VLV_CORRECCION_8
    MULF VLV_DISTANCIA_8 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf135
    DATA8 flag135
    DIVF F.1 F.2 tmpf135
    CP_EQF 0.0 F.2 flag135
    SELECTF flag135 0.0 tmpf135 F.0

    DATAF tmpf136
    DATA8 flag136
    DIVF F.0 VPR_RECTO_DIAMETRO tmpf136
    CP_EQF 0.0 VPR_RECTO_DIAMETRO flag136
    SELECTF flag136 0.0 tmpf136 VLV_ENC_8

    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds138
	MOVEF_32 100.0 milliseconds138
	DATA32 timer138
	TIMER_WAIT milliseconds138 timer138
	TIMER_READY timer138
    MATH NEGATE VLV_VELOCIDAD_8 F.1
    ADDF F.1 VLV_CORRECCION_8 F.0
    ADDF VLV_VELOCIDAD_8 VLV_CORRECCION_8 F.1
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 F.1 VLV_ENC_8 'True'

	DATA8 layer142
	DATA8 nos142
	DATA8 busy142
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer142 nos142
	JR_EQ8 0 nos142 motornotbusy142
  motorwaiting142:
	OUTPUT_TEST layer142 nos142 busy142
	JR_EQ8 busy142 0 motornotbusy142
	SLEEP
	JR motorwaiting142
  motornotbusy142:
RETSUB_M_RECTO_ENCODER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_ENCODER_2:
SUB_M_RECTO_ACCELDECEL_5:
    CALL MOTOR.GETCOUNT 'B' VLV_STARTB_9
    CALL MOTOR.GETCOUNT 'C' VLV_STARTC_9
    MOVEF_F 0.0 VLV_ENCODERB_9
    MOVEF_F 0.0 VLV_ENCODERC_9
    MATH ABS VLV_V0_9 F.0
    DATAF tmpf146
    DATA8 flag146
    DIVF VLV_V0_9 F.0 tmpf146
    CP_EQF 0.0 F.0 flag146
    SELECTF flag146 0.0 tmpf146 VLV_SIGNO_9

    MATH ABS VLV_V0_9 F.1
    DATA8 flag148
	CP_GTF 8.0 F.1 flag148
	SELECTF flag148 8.0 F.1 F.0
    MULF F.0 VLV_SIGNO_9 VLV_V0_9
    MATH ABS VLV_VMAX_9 F.1
    DATA8 flag151
	CP_LTF 90.0 F.1 flag151
	SELECTF flag151 90.0 F.1 F.0
    MULF F.0 VLV_SIGNO_9 VLV_VMAX_9
    MOVEF_F 0.0 VLV_VEL_9
    MOVEF_F 0.4 VLV_KP_9
    MOVEF_F 0.5 VLV_KD_9
    MOVEF_F 0.0 VLV_ERROR_9
    MOVEF_F 0.0 VLV_OLDERROR_9
    MULF VLV_DISTANCIAACCEL_9 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_RECTO_DIAMETRO F.2 F.1
    DATAF tmpf156
    DATA8 flag156
    DIVF F.0 F.1 tmpf156
    CP_EQF 0.0 F.1 flag156
    SELECTF flag156 0.0 tmpf156 VLV_GRADOSACCEL_9

    MULF VLV_DISTANCIACRUCERO_9 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_RECTO_DIAMETRO F.2 F.1
    DATAF tmpf160
    DATA8 flag160
    DIVF F.0 F.1 tmpf160
    CP_EQF 0.0 F.1 flag160
    SELECTF flag160 0.0 tmpf160 VLV_GRADOSCRUCERO_9

    MULF VLV_DISTANCIADECEL_9 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_RECTO_DIAMETRO F.2 F.1
    DATAF tmpf164
    DATA8 flag164
    DIVF F.0 F.1 tmpf164
    CP_EQF 0.0 F.1 flag164
    SELECTF flag164 0.0 tmpf164 VLV_GRADOSDECEL_9

  while165:
    MATH ABS VLV_ENCODERC_9 F.0
    ADDF VLV_GRADOSACCEL_9 VLV_GRADOSCRUCERO_9 F.2
    ADDF F.2 VLV_GRADOSDECEL_9 F.1
    JR_GTEQF F.0 F.1 endwhile165
  whilebody165:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 1.0 F.0
    SUBF F.0 VLV_STARTB_9 VLV_ENCODERB_9
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_STARTC_9 VLV_ENCODERC_9
    MATH ABS VLV_ENCODERC_9 F.0
    ADDF VLV_GRADOSACCEL_9 VLV_GRADOSCRUCERO_9 F.1
    JR_GTEQF F.0 F.1 else174_1
    SUBF VLV_VMAX_9 VLV_V0_9 F.1
    DATAF tmpf178
    DATA8 flag178
    DIVF F.1 VLV_GRADOSACCEL_9 tmpf178
    CP_EQF 0.0 VLV_GRADOSACCEL_9 flag178
    SELECTF flag178 0.0 tmpf178 F.0

    MULF F.0 VLV_SIGNO_9 VLV_PENDIENTE_9
    JR_LTEQF VLV_SIGNO_9 0.0 else180_1
    MULF VLV_PENDIENTE_9 VLV_ENCODERC_9 F.1
    ADDF F.1 VLV_V0_9 F.0
    DATA8 flag183
	CP_LTF VLV_VMAX_9 F.0 flag183
	SELECTF flag183 VLV_VMAX_9 F.0 VLV_VEL_9
    JR endif180
  else180_1:
    MULF VLV_PENDIENTE_9 VLV_ENCODERC_9 F.1
    ADDF F.1 VLV_V0_9 F.0
    DATA8 flag186
	CP_GTF VLV_VMAX_9 F.0 flag186
	SELECTF flag186 VLV_VMAX_9 F.0 VLV_VEL_9
  else180_2:
  endif180:
    JR endif174
  else174_1:
    SUBF VLV_V0_9 VLV_VMAX_9 F.1
    DATAF tmpf188
    DATA8 flag188
    DIVF F.1 VLV_GRADOSDECEL_9 tmpf188
    CP_EQF 0.0 VLV_GRADOSDECEL_9 flag188
    SELECTF flag188 0.0 tmpf188 F.0

    MULF F.0 VLV_SIGNO_9 VLV_PENDIENTE_9
    JR_LTEQF VLV_SIGNO_9 0.0 else190_1
    SUBF VLV_ENCODERC_9 VLV_GRADOSACCEL_9 F.3
    SUBF F.3 VLV_GRADOSCRUCERO_9 F.2
    MULF VLV_PENDIENTE_9 F.2 F.1
    ADDF F.1 VLV_VMAX_9 F.0
    DATA8 flag195
	CP_GTF VLV_V0_9 F.0 flag195
	SELECTF flag195 VLV_V0_9 F.0 VLV_VEL_9
    JR endif190
  else190_1:
    ADDF VLV_ENCODERC_9 VLV_GRADOSACCEL_9 F.3
    ADDF F.3 VLV_GRADOSCRUCERO_9 F.2
    MULF VLV_PENDIENTE_9 F.2 F.1
    ADDF F.1 VLV_VMAX_9 F.0
    DATA8 flag200
	CP_LTF VLV_V0_9 F.0 flag200
	SELECTF flag200 VLV_V0_9 F.0 VLV_VEL_9
  else190_2:
  endif190:
  else174_2:
  endif174:
    MULF -1.0 VLV_ENCODERB_9 F.1
    SUBF F.1 VLV_ENCODERC_9 F.0
    MULF F.0 1.0 VLV_ERROR_9
    MULF VLV_ERROR_9 VLV_KP_9 F.0
    SUBF VLV_ERROR_9 VLV_OLDERROR_9 F.2
    MULF F.2 VLV_KD_9 F.1
    ADDF F.0 F.1 VLV_CORRECCION_9
    SUBF VLV_VEL_9 VLV_CORRECCION_9 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VEL_9 VLV_CORRECCION_9 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_9 VLV_OLDERROR_9
    MATH ABS VLV_ENCODERC_9 F.0
    ADDF VLV_GRADOSACCEL_9 VLV_GRADOSCRUCERO_9 F.2
    ADDF F.2 VLV_GRADOSDECEL_9 F.1
    JR_LTF F.0 F.1 whilebody165
  endwhile165:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_ACCELDECEL_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_ACCELDECEL_5:
SUB_M_RECTO_ACCELDECELF_5:
    CALL MOTOR.GETCOUNT 'B' VLV_STARTB_10
    CALL MOTOR.GETCOUNT 'C' VLV_STARTC_10
    MOVEF_F 0.0 VLV_ENCODERB_10
    MOVEF_F 0.0 VLV_ENCODERC_10
    MATH ABS VLV_V0_10 F.0
    DATAF tmpf219
    DATA8 flag219
    DIVF VLV_V0_10 F.0 tmpf219
    CP_EQF 0.0 F.0 flag219
    SELECTF flag219 0.0 tmpf219 VLV_SIGNO_10

    MATH ABS VLV_V0_10 F.1
    DATA8 flag221
	CP_GTF 8.0 F.1 flag221
	SELECTF flag221 8.0 F.1 F.0
    MULF F.0 VLV_SIGNO_10 VLV_V0_10
    MATH ABS VLV_VMAX_10 F.1
    DATA8 flag224
	CP_LTF 90.0 F.1 flag224
	SELECTF flag224 90.0 F.1 F.0
    MULF F.0 VLV_SIGNO_10 VLV_VMAX_10
    MOVEF_F 0.0 VLV_VEL_10
    MOVEF_F 0.4 VLV_KP_10
    MOVEF_F 0.5 VLV_KD_10
    MOVEF_F 0.0 VLV_ERROR_10
    MOVEF_F 0.0 VLV_OLDERROR_10
    MULF VLV_DISTANCIAACCEL_10 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_RECTO_DIAMETRO F.2 F.1
    DATAF tmpf229
    DATA8 flag229
    DIVF F.0 F.1 tmpf229
    CP_EQF 0.0 F.1 flag229
    SELECTF flag229 0.0 tmpf229 VLV_GRADOSACCEL_10

    MULF VLV_DISTANCIACRUCERO_10 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_RECTO_DIAMETRO F.2 F.1
    DATAF tmpf233
    DATA8 flag233
    DIVF F.0 F.1 tmpf233
    CP_EQF 0.0 F.1 flag233
    SELECTF flag233 0.0 tmpf233 VLV_GRADOSCRUCERO_10

    MULF VLV_DISTANCIADECEL_10 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_RECTO_DIAMETRO F.2 F.1
    DATAF tmpf237
    DATA8 flag237
    DIVF F.0 F.1 tmpf237
    CP_EQF 0.0 F.1 flag237
    SELECTF flag237 0.0 tmpf237 VLV_GRADOSDECEL_10

  while238:
    MATH ABS VLV_ENCODERC_10 F.0
    ADDF VLV_GRADOSACCEL_10 VLV_GRADOSCRUCERO_10 F.2
    ADDF F.2 VLV_GRADOSDECEL_10 F.1
    JR_GTEQF F.0 F.1 endwhile238
  whilebody238:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 1.0 F.0
    SUBF F.0 VLV_STARTB_10 VLV_ENCODERB_10
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_STARTC_10 VLV_ENCODERC_10
    MATH ABS VLV_ENCODERC_10 F.0
    ADDF VLV_GRADOSACCEL_10 VLV_GRADOSCRUCERO_10 F.1
    JR_GTEQF F.0 F.1 else247_1
    SUBF VLV_VMAX_10 VLV_V0_10 F.1
    DATAF tmpf251
    DATA8 flag251
    DIVF F.1 VLV_GRADOSACCEL_10 tmpf251
    CP_EQF 0.0 VLV_GRADOSACCEL_10 flag251
    SELECTF flag251 0.0 tmpf251 F.0

    MULF F.0 VLV_SIGNO_10 VLV_PENDIENTE_10
    JR_LTEQF VLV_SIGNO_10 0.0 else253_1
    MULF VLV_PENDIENTE_10 VLV_ENCODERC_10 F.1
    ADDF F.1 VLV_V0_10 F.0
    DATA8 flag256
	CP_LTF VLV_VMAX_10 F.0 flag256
	SELECTF flag256 VLV_VMAX_10 F.0 VLV_VEL_10
    JR endif253
  else253_1:
    MULF VLV_PENDIENTE_10 VLV_ENCODERC_10 F.1
    ADDF F.1 VLV_V0_10 F.0
    DATA8 flag259
	CP_GTF VLV_VMAX_10 F.0 flag259
	SELECTF flag259 VLV_VMAX_10 F.0 VLV_VEL_10
  else253_2:
  endif253:
    JR endif247
  else247_1:
    SUBF VLV_V0_10 VLV_VMAX_10 F.1
    DATAF tmpf261
    DATA8 flag261
    DIVF F.1 VLV_GRADOSDECEL_10 tmpf261
    CP_EQF 0.0 VLV_GRADOSDECEL_10 flag261
    SELECTF flag261 0.0 tmpf261 F.0

    MULF F.0 VLV_SIGNO_10 VLV_PENDIENTE_10
    JR_LTEQF VLV_SIGNO_10 0.0 else263_1
    SUBF VLV_ENCODERC_10 VLV_GRADOSACCEL_10 F.3
    SUBF F.3 VLV_GRADOSCRUCERO_10 F.2
    MULF VLV_PENDIENTE_10 F.2 F.1
    ADDF F.1 VLV_VMAX_10 F.0
    DATA8 flag268
	CP_GTF VLV_V0_10 F.0 flag268
	SELECTF flag268 VLV_V0_10 F.0 VLV_VEL_10
    JR endif263
  else263_1:
    ADDF VLV_ENCODERC_10 VLV_GRADOSACCEL_10 F.3
    ADDF F.3 VLV_GRADOSCRUCERO_10 F.2
    MULF VLV_PENDIENTE_10 F.2 F.1
    ADDF F.1 VLV_VMAX_10 F.0
    DATA8 flag273
	CP_LTF VLV_V0_10 F.0 flag273
	SELECTF flag273 VLV_V0_10 F.0 VLV_VEL_10
  else263_2:
  endif263:
  else247_2:
  endif247:
    MULF -1.0 VLV_ENCODERB_10 F.1
    SUBF F.1 VLV_ENCODERC_10 F.0
    MULF F.0 1.0 VLV_ERROR_10
    MULF VLV_ERROR_10 VLV_KP_10 F.0
    SUBF VLV_ERROR_10 VLV_OLDERROR_10 F.2
    MULF F.2 VLV_KD_10 F.1
    ADDF F.0 F.1 VLV_CORRECCION_10
    SUBF VLV_VEL_10 VLV_CORRECCION_10 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VEL_10 VLV_CORRECCION_10 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_10 VLV_OLDERROR_10
    MATH ABS VLV_ENCODERC_10 F.0
    ADDF VLV_GRADOSACCEL_10 VLV_GRADOSCRUCERO_10 F.2
    ADDF F.2 VLV_GRADOSDECEL_10 F.1
    JR_LTF F.0 F.1 whilebody238
  endwhile238:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_RECTO_ACCELDECELF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_ACCELDECELF_5:
SUB_M_RECTO_ENCODERF_2:
    MOVEF_F 0.0 VLV_CORRECCION_11
    MULF VLV_DISTANCIA_11 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf291
    DATA8 flag291
    DIVF F.1 F.2 tmpf291
    CP_EQF 0.0 F.2 flag291
    SELECTF flag291 0.0 tmpf291 F.0

    DATAF tmpf292
    DATA8 flag292
    DIVF F.0 VPR_RECTO_DIAMETRO tmpf292
    CP_EQF 0.0 VPR_RECTO_DIAMETRO flag292
    SELECTF flag292 0.0 tmpf292 VLV_ENC_11

    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MATH NEGATE VLV_VELOCIDAD_11 F.1
    ADDF F.1 VLV_CORRECCION_11 F.0
    ADDF VLV_VELOCIDAD_11 VLV_CORRECCION_11 F.1
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 F.1 VLV_ENC_11 'False'

	DATA8 layer297
	DATA8 nos297
	DATA8 busy297
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer297 nos297
	JR_EQ8 0 nos297 motornotbusy297
  motorwaiting297:
	OUTPUT_TEST layer297 nos297 busy297
	JR_EQ8 busy297 0 motornotbusy297
	SLEEP
	JR motorwaiting297
  motornotbusy297:
RETSUB_M_RECTO_ENCODERF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_ENCODERF_2:
SUB_M_RECTO_BLANCO1F_2:
    MOVEF_F 0.0 VLV_CORRECCION_12
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MOVEF_F 50.0 VLV_LECTURA_12
  while299:
    JR_GTEQF VLV_LECTURA_12 60.0 endwhile299
  whilebody299:
    CALL SENSOR.READPERCENT VLV_SENSOR_12 F.2
    SUBF F.2 VPR_RECTO_NEGRO F.1
    DATAF tmpf302
    DATA8 flag302
    DIVF F.1 VPR_RECTO_BLANCO tmpf302
    CP_EQF 0.0 VPR_RECTO_BLANCO flag302
    SELECTF flag302 0.0 tmpf302 F.0

    SUBF 100.0 VPR_RECTO_NEGRO F.1
    MULF F.0 F.1 VLV_LECTURA_12
    MATH NEGATE VLV_VELOCIDAD_12 F.1
    ADDF F.1 VLV_CORRECCION_12 F.0
    ADDF VLV_VELOCIDAD_12 VLV_CORRECCION_12 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    JR_LTF VLV_LECTURA_12 60.0 whilebody299
  endwhile299:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_RECTO_BLANCO1F_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_BLANCO1F_2:
SUB_M_RECTO_DECEL_4:
    CALL MOTOR.GETCOUNT 'B' VLV_STARTB_13
    CALL MOTOR.GETCOUNT 'C' VLV_STARTC_13
    MATH ABS VLV_V0_13 F.0
    DATAF tmpf313
    DATA8 flag313
    DIVF VLV_V0_13 F.0 tmpf313
    CP_EQF 0.0 F.0 flag313
    SELECTF flag313 0.0 tmpf313 VLV_SIGNO_13

    MATH ABS VLV_V0_13 F.1
    DATA8 flag315
	CP_LTF 90.0 F.1 flag315
	SELECTF flag315 90.0 F.1 F.0
    MULF F.0 VLV_SIGNO_13 VLV_V0_13
    MATH ABS VLV_VMIN_13 F.1
    DATA8 flag318
	CP_GTF 8.0 F.1 flag318
	SELECTF flag318 8.0 F.1 F.0
    MULF F.0 VLV_SIGNO_13 VLV_VMIN_13
    MOVEF_F 0.0 VLV_VEL_13
    MOVEF_F 0.4 VLV_KP_13
    MOVEF_F 0.5 VLV_KD_13
    MOVEF_F 0.0 VLV_ERROR_13
    MOVEF_F 0.0 VLV_OLDERROR_13
    MULF VLV_DISTANCIADECEL_13 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_RECTO_DIAMETRO F.2 F.1
    DATAF tmpf323
    DATA8 flag323
    DIVF F.0 F.1 tmpf323
    CP_EQF 0.0 F.1 flag323
    SELECTF flag323 0.0 tmpf323 VLV_GRADOSDECEL_13

    MULF VLV_DISTANCIACRUCERO_13 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_RECTO_DIAMETRO F.2 F.1
    DATAF tmpf327
    DATA8 flag327
    DIVF F.0 F.1 tmpf327
    CP_EQF 0.0 F.1 flag327
    SELECTF flag327 0.0 tmpf327 VLV_GRADOSCRUCERO_13

    MOVEF_F 0.0 VLV_ENCODERB_13
    MOVEF_F 0.0 VLV_ENCODERC_13
  while328:
    MATH ABS VLV_ENCODERC_13 F.0
    ADDF VLV_GRADOSDECEL_13 VLV_GRADOSCRUCERO_13 F.1
    JR_GTEQF F.0 F.1 endwhile328
  whilebody328:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 1.0 F.0
    SUBF F.0 VLV_STARTB_13 VLV_ENCODERB_13
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_STARTC_13 VLV_ENCODERC_13
    SUBF VLV_VMIN_13 VLV_V0_13 F.1
    DATAF tmpf337
    DATA8 flag337
    DIVF F.1 VLV_GRADOSDECEL_13 tmpf337
    CP_EQF 0.0 VLV_GRADOSDECEL_13 flag337
    SELECTF flag337 0.0 tmpf337 F.0

    MULF F.0 VLV_SIGNO_13 VLV_PENDIENTE_13
    JR_LTEQF VLV_SIGNO_13 0.0 else339_1
    MULF VLV_PENDIENTE_13 VLV_ENCODERC_13 F.1
    ADDF F.1 VLV_V0_13 F.0
    DATA8 flag342
	CP_GTF VLV_VMIN_13 F.0 flag342
	SELECTF flag342 VLV_VMIN_13 F.0 VLV_VEL_13
    JR endif339
  else339_1:
    MULF VLV_PENDIENTE_13 VLV_ENCODERC_13 F.1
    ADDF F.1 VLV_V0_13 F.0
    DATA8 flag345
	CP_LTF VLV_VMIN_13 F.0 flag345
	SELECTF flag345 VLV_VMIN_13 F.0 VLV_VEL_13
  else339_2:
  endif339:
    MULF -1.0 VLV_ENCODERB_13 F.1
    SUBF F.1 VLV_ENCODERC_13 F.0
    MULF F.0 1.0 VLV_ERROR_13
    MULF VLV_ERROR_13 VLV_KP_13 F.0
    SUBF VLV_ERROR_13 VLV_OLDERROR_13 F.2
    MULF F.2 VLV_KD_13 F.1
    ADDF F.0 F.1 VLV_CORRECCION_13
    MOVEF_F VLV_ERROR_13 VLV_OLDERROR_13
    SUBF VLV_VEL_13 VLV_CORRECCION_13 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 1.0 F.0
    ADDF VLV_VEL_13 VLV_CORRECCION_13 F.2
    MULF F.2 1.0 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODERC_13 F.0
    ADDF VLV_GRADOSDECEL_13 VLV_GRADOSCRUCERO_13 F.1
    JR_LTF F.0 F.1 whilebody328
  endwhile328:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_DECEL_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_DECEL_4:
SUB_M_RECTO_COLOR1_3:
    MOVEF_F 0.0 VLV_CORRECCION_14
    CALL SENSOR.GETMODE VLV_SENSOR_14 VLV_MODE_14
    DATA8 layer363
	DATA8 no363
	DATA8 mode8363
	
	MOVEF_8 VLV_SENSOR_14 no363
	SUB8 no363 1 no363
	DIV8 no363 4 layer363
	MATH MOD8 no363 4 no363

	MOVEF_8 2.0 mode8363
	
	INPUT_DEVICE READY_RAW layer363 no363 0 mode8363 0
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
  while365:
    CALL SENSOR.READRAWVALUE VLV_SENSOR_14 0.0 F.0
    JR_EQF F.0 VLV_COLOR_14 endwhile365
  whilebody365:
    MATH NEGATE VLV_VELOCIDAD_14 F.1
    ADDF F.1 VLV_CORRECCION_14 F.0
    ADDF VLV_VELOCIDAD_14 VLV_CORRECCION_14 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READRAWVALUE VLV_SENSOR_14 0.0 F.0
    JR_NEQF F.0 VLV_COLOR_14 whilebody365
  endwhile365:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    DATA8 layer373
	DATA8 no373
	DATA8 mode8373
	
	MOVEF_8 VLV_SENSOR_14 no373
	SUB8 no373 1 no373
	DIV8 no373 4 layer373
	MATH MOD8 no373 4 no373

	MOVEF_8 VLV_MODE_14 mode8373
	
	INPUT_DEVICE READY_RAW layer373 no373 0 mode8373 0
RETSUB_M_RECTO_COLOR1_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_COLOR1_3:
SUB_M_GIRO_GRADOS_3:
    DATAF tmpf374
    DATA8 flag374
    DIVF VLV_VELOCIDAD1_15 VLV_VELOCIDAD2_15 tmpf374
    CP_EQF 0.0 VLV_VELOCIDAD2_15 flag374
    SELECTF flag374 0.0 tmpf374 F.0

    DATAF tmpf375
    DATA8 flag375
    DIVF VLV_VELOCIDAD1_15 VLV_VELOCIDAD2_15 tmpf375
    CP_EQF 0.0 VLV_VELOCIDAD2_15 flag375
    SELECTF flag375 0.0 tmpf375 F.2

    MATH ABS F.2 F.1
    DATAF tmpf377
    DATA8 flag377
    DIVF F.0 F.1 tmpf377
    CP_EQF 0.0 F.1 flag377
    SELECTF flag377 0.0 tmpf377 VLV_SIGNO_15

    MATH ABS VLV_VELOCIDAD1_15 F.0
    MATH ABS VLV_VELOCIDAD2_15 F.1
    DATA8 flag380
	CP_LTF F.0 F.1 flag380
	SELECTF flag380 F.0 F.1 VLV_VMIN_15
    MATH ABS VLV_VELOCIDAD1_15 F.0
    MATH ABS VLV_VELOCIDAD2_15 F.1
    DATA8 flag383
	CP_GTF F.0 F.1 flag383
	SELECTF flag383 F.0 F.1 VLV_VMAX_15
    MULF VLV_GRADOS_15 VPR_GIRO_G1 F.0
    MULF VLV_SIGNO_15 VLV_VMIN_15 F.4
    DATAF tmpf386
    DATA8 flag386
    DIVF F.4 VLV_VMAX_15 tmpf386
    CP_EQF 0.0 VLV_VMAX_15 flag386
    SELECTF flag386 0.0 tmpf386 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf388
    DATA8 flag388
    DIVF -2.0 F.2 tmpf388
    CP_EQF 0.0 F.2 flag388
    SELECTF flag388 0.0 tmpf388 F.1

    MULF F.0 F.1 VLV_ENCODER_15
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds391
	MOVEF_32 100.0 milliseconds391
	DATA32 timer391
	TIMER_WAIT milliseconds391 timer391
	TIMER_READY timer391
    MATH NEGATE VLV_VELOCIDAD1_15 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_15 VLV_ENCODER_15 'True'

	DATA8 layer393
	DATA8 nos393
	DATA8 busy393
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer393 nos393
	JR_EQ8 0 nos393 motornotbusy393
  motorwaiting393:
	OUTPUT_TEST layer393 nos393 busy393
	JR_EQ8 busy393 0 motornotbusy393
	SLEEP
	JR motorwaiting393
  motornotbusy393:
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_GRADOS_15
    DATA32 milliseconds394
	MOVEF_32 100.0 milliseconds394
	DATA32 timer394
	TIMER_WAIT milliseconds394 timer394
	TIMER_READY timer394
RETSUB_M_GIRO_GRADOS_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_GRADOS_3:
SUB_M_SMART_ENCODER31F_2:
    MULF VLV_VELOCIDAD_16 1.0 VLV_VELOCIDAD_16
    MOVEF_F 50.0 VLV_LECTURA1_16
    MOVEF_F 50.0 VLV_LECTURA3_16
    MOVEF_F 50.0 VLV_LECTURA4_16
    DATAF tmpf396
    DATA8 flag396
    DIVF VLV_VELOCIDAD_16 220.0 tmpf396
    CP_EQF 0.0 220.0 flag396
    SELECTF flag396 0.0 tmpf396 VLV_KP_16

    MULF VLV_KP_16 28.0 VLV_KD_16
    MOVEF_F 3.1415926535897932384 F.1
    MULF VPR_SMART_DIAMETRO F.1 F.0
    DATAF tmpf400
    DATA8 flag400
    DIVF 2520.0 F.0 tmpf400
    CP_EQF 0.0 F.0 flag400
    SELECTF flag400 0.0 tmpf400 VLV_DISTANCIA_16

    MOVEF_F 0.0 VLV_ERROR_16
    MOVEF_F 0.0 VLV_OLDERROR_16
    MOVEF_F 0.0 VLV_U_16
    MATH ABS VLV_VELOCIDAD_16 F.0
    DATAF tmpf402
    DATA8 flag402
    DIVF VLV_VELOCIDAD_16 F.0 tmpf402
    CP_EQF 0.0 F.0 flag402
    SELECTF flag402 0.0 tmpf402 VLV_SENTIDO_16

    MOVEF_F VLV_VELOCIDAD_16 VLV_STARTVELOCIDAD_16
    MOVEF_F VLV_KP_16 VLV_STARTKP_16
    MOVEF_F VLV_KD_16 VLV_STARTKD_16
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SMART_DIAMETRO F.2 F.1
    DATAF tmpf405
    DATA8 flag405
    DIVF VLV_ENCODER_16 F.1 tmpf405
    CP_EQF 0.0 F.1 flag405
    SELECTF flag405 0.0 tmpf405 F.0

    MULF F.0 360.0 VLV_ENCODER_16
    CALL MOTOR.GETCOUNT 'C' VLV_STARTC_16
    MOVEF_F 0.0 VLV_ENCODERC_16
  while408:
    MATH ABS VLV_ENCODERC_16 F.0
    JR_GTEQF F.0 VLV_ENCODER_16 endwhile408
  whilebody408:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_STARTC_16 VLV_ENCODERC_16
    JR_GTEQF VLV_ENCODERC_16 VLV_DISTANCIA_16 else412_1
    MOVEF_F 20.0 VLV_VELOCIDAD_16
    MOVEF_F 0.1 VLV_KP_16
    MULF VLV_KP_16 28.0 VLV_KD_16
    JR endif412
  else412_1:
    MOVEF_F VLV_STARTVELOCIDAD_16 VLV_VELOCIDAD_16
    MOVEF_F VLV_STARTKP_16 VLV_KP_16
    MOVEF_F VLV_STARTKD_16 VLV_KD_16
  else412_2:
  endif412:
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SMART_NEGRO1 F.1
    DATAF tmpf416
    DATA8 flag416
    DIVF F.1 VPR_SMART_BLANCO1 tmpf416
    CP_EQF 0.0 VPR_SMART_BLANCO1 flag416
    SELECTF flag416 0.0 tmpf416 F.0

    SUBF 100.0 VPR_SMART_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_16
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SMART_NEGRO3 F.1
    DATAF tmpf421
    DATA8 flag421
    DIVF F.1 VPR_SMART_BLANCO3 tmpf421
    CP_EQF 0.0 VPR_SMART_BLANCO3 flag421
    SELECTF flag421 0.0 tmpf421 F.0

    SUBF 100.0 VPR_SMART_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_16
    SUBF VLV_LECTURA3_16 VLV_LECTURA1_16 F.1
    MULF F.1 VLV_SENTIDO_16 F.0
    MULF F.0 1.0 VLV_ERROR_16
    MULF VLV_ERROR_16 VLV_KP_16 F.0
    SUBF VLV_ERROR_16 VLV_OLDERROR_16 F.2
    MULF F.2 VLV_KD_16 F.1
    ADDF F.0 F.1 VLV_U_16
    ADDF VLV_VELOCIDAD_16 VLV_U_16 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_16 VLV_U_16 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_16 VLV_OLDERROR_16
    MATH ABS VLV_ENCODERC_16 F.0
    JR_LTF F.0 VLV_ENCODER_16 whilebody408
  endwhile408:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_SMART_ENCODER31F_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SMART_ENCODER31F_2:
SUB_M_SIGUELINEAS_CRUCE_EXTERNOF_2:
    MULF VLV_VELOCIDAD_17 1.0 VLV_VELOCIDAD_17
    MOVEF_F 50.0 VLV_LECTURA1_17
    MOVEF_F 50.0 VLV_LECTURA3_17
    MOVEF_F 50.0 VLV_LECTURA4_17
    DATAF tmpf438
    DATA8 flag438
    DIVF VLV_VELOCIDAD_17 200.0 tmpf438
    CP_EQF 0.0 200.0 flag438
    SELECTF flag438 0.0 tmpf438 VLV_KP_17

    MULF VLV_KP_17 28.0 VLV_KD_17
    MOVEF_F 0.0 VLV_ERROR_17
    MOVEF_F 0.0 VLV_OLDERROR_17
    MOVEF_F 0.0 VLV_U_17
    MATH ABS VLV_VELOCIDAD_17 F.0
    DATAF tmpf441
    DATA8 flag441
    DIVF VLV_VELOCIDAD_17 F.0 tmpf441
    CP_EQF 0.0 F.0 flag441
    SELECTF flag441 0.0 tmpf441 VLV_SENTIDO_17

    MOVEF_F 50.0 VLV_LECTURA_17
  while442:
    JR_LTEQF VLV_LECTURA_17 10.0 endwhile442
  whilebody442:
    JR_NEQF VLV_READER_17 3.0 else443_1
    MOVEF_F VLV_LECTURA3_17 VLV_LECTURA_17
    MOVEF_F VLV_LECTURA1_17 VLV_LECTURAIZQ_17
    MOVEF_F VLV_LECTURA4_17 VLV_LECTURADCH_17
    JR endif443
  else443_1:
    MOVEF_F VLV_LECTURA4_17 VLV_LECTURA_17
    MOVEF_F VLV_LECTURA3_17 VLV_LECTURAIZQ_17
    MOVEF_F VLV_LECTURA1_17 VLV_LECTURADCH_17
  else443_2:
  endif443:
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf446
    DATA8 flag446
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf446
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag446
    SELECTF flag446 0.0 tmpf446 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_17
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO3 F.1
    DATAF tmpf451
    DATA8 flag451
    DIVF F.1 VPR_SIGUELINEAS_BLANCO3 tmpf451
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO3 flag451
    SELECTF flag451 0.0 tmpf451 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_17
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf456
    DATA8 flag456
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf456
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag456
    SELECTF flag456 0.0 tmpf456 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_17
    SUBF VLV_LECTURAIZQ_17 VLV_LECTURADCH_17 F.1
    MULF F.1 VLV_SENTIDO_17 F.0
    MULF F.0 1.0 VLV_ERROR_17
    MULF VLV_ERROR_17 VLV_KP_17 F.0
    SUBF VLV_ERROR_17 VLV_OLDERROR_17 F.2
    MULF F.2 VLV_KD_17 F.1
    ADDF F.0 F.1 VLV_U_17
    ADDF VLV_VELOCIDAD_17 VLV_U_17 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_17 VLV_U_17 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_17 VLV_OLDERROR_17
    JR_GTF VLV_LECTURA_17 10.0 whilebody442
  endwhile442:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_SIGUELINEAS_CRUCE_EXTERNOF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_CRUCE_EXTERNOF_2:
SUB_M_SIGUELINEAS_ENCODER31F_2:
    MULF VLV_VELOCIDAD_18 1.0 VLV_VELOCIDAD_18
    MOVEF_F 50.0 VLV_LECTURA1_18
    MOVEF_F 50.0 VLV_LECTURA3_18
    MOVEF_F 50.0 VLV_LECTURA4_18
    DATAF tmpf472
    DATA8 flag472
    DIVF VLV_VELOCIDAD_18 200.0 tmpf472
    CP_EQF 0.0 200.0 flag472
    SELECTF flag472 0.0 tmpf472 VLV_KP_18

    MULF VLV_KP_18 28.0 VLV_KD_18
    MOVEF_F 0.0 VLV_ERROR_18
    MOVEF_F 0.0 VLV_OLDERROR_18
    MOVEF_F 0.0 VLV_U_18
    MATH ABS VLV_VELOCIDAD_18 F.0
    DATAF tmpf475
    DATA8 flag475
    DIVF VLV_VELOCIDAD_18 F.0 tmpf475
    CP_EQF 0.0 F.0 flag475
    SELECTF flag475 0.0 tmpf475 VLV_SENTIDO_18

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf478
    DATA8 flag478
    DIVF VLV_ENCODER_18 F.1 tmpf478
    CP_EQF 0.0 F.1 flag478
    SELECTF flag478 0.0 tmpf478 F.0

    MULF F.0 360.0 VLV_ENCODER_18
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_18
    MOVEF_F 0.0 VLV_ENCODERC_18
  while481:
    MATH ABS VLV_ENCODERC_18 F.0
    JR_GTEQF F.0 VLV_ENCODER_18 endwhile481
  whilebody481:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_18 VLV_ENCODERC_18
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf487
    DATA8 flag487
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf487
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag487
    SELECTF flag487 0.0 tmpf487 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_18
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO3 F.1
    DATAF tmpf492
    DATA8 flag492
    DIVF F.1 VPR_SIGUELINEAS_BLANCO3 tmpf492
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO3 flag492
    SELECTF flag492 0.0 tmpf492 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_18
    SUBF VLV_LECTURA3_18 VLV_LECTURA1_18 F.1
    MULF F.1 VLV_SENTIDO_18 F.0
    MULF F.0 1.0 VLV_ERROR_18
    MULF VLV_ERROR_18 VLV_KP_18 F.0
    SUBF VLV_ERROR_18 VLV_OLDERROR_18 F.2
    MULF F.2 VLV_KD_18 F.1
    ADDF F.0 F.1 VLV_U_18
    ADDF VLV_VELOCIDAD_18 VLV_U_18 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_18 VLV_U_18 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_18 VLV_OLDERROR_18
    MATH ABS VLV_ENCODERC_18 F.0
    JR_LTF F.0 VLV_ENCODER_18 whilebody481
  endwhile481:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_SIGUELINEAS_ENCODER31F_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER31F_2:
SUB_M_SIGUELINEAS_ENCODER14_2:
    MULF VLV_VELOCIDAD_19 1.0 VLV_VELOCIDAD_19
    MOVEF_F 50.0 VLV_LECTURA1_19
    MOVEF_F 50.0 VLV_LECTURA3_19
    MOVEF_F 50.0 VLV_LECTURA4_19
    DATAF tmpf509
    DATA8 flag509
    DIVF VLV_VELOCIDAD_19 200.0 tmpf509
    CP_EQF 0.0 200.0 flag509
    SELECTF flag509 0.0 tmpf509 VLV_KP_19

    MULF VLV_KP_19 28.0 VLV_KD_19
    MOVEF_F 0.0 VLV_ERROR_19
    MOVEF_F 0.0 VLV_OLDERROR_19
    MOVEF_F 0.0 VLV_U_19
    MATH ABS VLV_VELOCIDAD_19 F.0
    DATAF tmpf512
    DATA8 flag512
    DIVF VLV_VELOCIDAD_19 F.0 tmpf512
    CP_EQF 0.0 F.0 flag512
    SELECTF flag512 0.0 tmpf512 VLV_SENTIDO_19

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf515
    DATA8 flag515
    DIVF VLV_ENCODER_19 F.1 tmpf515
    CP_EQF 0.0 F.1 flag515
    SELECTF flag515 0.0 tmpf515 F.0

    MULF F.0 360.0 VLV_ENCODER_19
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_19
    MOVEF_F 0.0 VLV_ENCODERC_19
  while518:
    MATH ABS VLV_ENCODERC_19 F.0
    JR_GTEQF F.0 VLV_ENCODER_19 endwhile518
  whilebody518:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_19 VLV_ENCODERC_19
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf524
    DATA8 flag524
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf524
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag524
    SELECTF flag524 0.0 tmpf524 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_19
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf529
    DATA8 flag529
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf529
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag529
    SELECTF flag529 0.0 tmpf529 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_19
    SUBF VLV_LECTURA1_19 VLV_LECTURA4_19 F.1
    MULF F.1 VLV_SENTIDO_19 F.0
    MULF F.0 1.0 VLV_ERROR_19
    MULF VLV_ERROR_19 VLV_KP_19 F.0
    SUBF VLV_ERROR_19 VLV_OLDERROR_19 F.2
    MULF F.2 VLV_KD_19 F.1
    ADDF F.0 F.1 VLV_U_19
    ADDF VLV_VELOCIDAD_19 VLV_U_19 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_19 VLV_U_19 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_19 VLV_OLDERROR_19
    MATH ABS VLV_ENCODERC_19 F.0
    JR_LTF F.0 VLV_ENCODER_19 whilebody518
  endwhile518:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_ENCODER14_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER14_2:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall SENSOR.GETMODE		// FF
{
	IN_F port
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 type
	DATA8 mode
	
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	
	INPUT_DEVICE GET_TYPEMODE layer no type mode
	MOVE8_F mode result
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
