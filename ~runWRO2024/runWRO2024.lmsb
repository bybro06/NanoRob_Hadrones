DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_111
DATAF VLV_AENC_111
DATAF VLV_V_121
DATAF VLV_AENC_121
DATAF VLV_V1_38
DATAF VLV_V2_38
DATAF VLV_ANGLE_38
DATAF VLV_V1_37
DATAF VLV_V2_37
DATAF VLV_ANGLE_37
DATAF VLV_VELOCIDAD_77
DATAF VLV_KP_77
DATAF VLV_KI_77
DATAF VLV_KD_77
DATAF VLV_ENCODER_77
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V_107
DATAF VLV_AENC_107
DATAF VLV_VELOCIDAD_78
DATAF VLV_KP_78
DATAF VLV_KI_78
DATAF VLV_KD_78
DATAF VLV_ENCODER_78
DATAF VLV_VELOCIDAD_91
DATAF VLV_KP_91
DATAF VLV_KI_91
DATAF VLV_KD_91
DATAF VLV_READER_91
DATAF VLV_VELOCIDAD_73
DATAF VLV_KP_73
DATAF VLV_KI_73
DATAF VLV_KD_73
DATAF VLV_VEL_B_137
DATAF VLV_VEL_C_137
DATAF VLV_VELOCIDAD_85
DATAF VLV_KP_85
DATAF VLV_KI_85
DATAF VLV_KD_85
DATAF VLV_ENCODER_85
DATAF VLV_VELOCIDAD_92
DATAF VLV_KP_92
DATAF VLV_KI_92
DATAF VLV_KD_92
DATAF VLV_READER_92
DATAF VLV_VELOCIDAD_86
DATAF VLV_KP_86
DATAF VLV_KI_86
DATAF VLV_KD_86
DATAF VLV_ENCODER_86
DATAF VLV_V0_58
DATAF VLV_VMAX_58
DATAF VLV_KP_58
DATAF VLV_KI_58
DATAF VLV_KD_58
DATAF VLV_ACCELENCODER_58
DATAF VLV_VELOCIDAD_74
DATAF VLV_KP_74
DATAF VLV_KI_74
DATAF VLV_KD_74
DATAF VLV_VMAX_100
DATAF VLV_KP_100
DATAF VLV_KI_100
DATAF VLV_KD_100
DATAF VLV_COLOR_134
DATAF VLV_REPS_122
DATAF VLV_COLOR_122
DATAF VLV_REPS_123
DATAF VLV_COLOR_123
DATAF VLV_REPS_124
DATAF VLV_COLOR_124
DATAF VLV_REPS_125
DATAF VLV_COLOR_125
DATAF VLV_V_117
DATAF VLV_AENC_117
DATAF VLV_V_120
DATAF VLV_T_120
DATAF VLV_COLOR_126
DATAF VLV_COLOR_127
DATAF VLV_COLOR_128
DATAF VLV_COLOR_129
DATAF VLV_READ_138
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DIAMETER
DATAF VGV_CENTRO
DATAF VGV_NUM_BLOQUES
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_CORRECCION
DATAF VGV_G1
DATAF VGV_TIEMPOHASTALINEA
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAS VLV_I_37 252
DATAS VLV_D_37 252
DATAF VLV_SIGNO_37
DATAF VLV_VMIN_37
DATAF VLV_VMAX_37
DATAF VLV_ENCODR_37
DATAS VLV_I_38 252
DATAS VLV_D_38 252
DATAF VLV_SIGNO_38
DATAF VLV_VMIN_38
DATAF VLV_VMAX_38
DATAF VLV_ENCODR_38
DATAS VLV_I_58 252
DATAS VLV_D_58 252
DATAF VLV_U_58
DATAF VLV_ERROR_58
DATAF VLV_OLDERROR_58
DATAF VLV_ERRSUM_58
DATAF VLV_VEL_58
DATAF VLV_SENTIDO_58
DATAS VLV_I_73 252
DATAS VLV_D_73 252
DATAF VLV_ERROR_73
DATAF VLV_OLDERROR_73
DATAF VLV_ERRSUM_73
DATAF VLV_U_73
DATAF VLV_SENTIDO_73
DATAS VLV_I_74 252
DATAS VLV_D_74 252
DATAF VLV_ERROR_74
DATAF VLV_OLDERROR_74
DATAF VLV_ERRSUM_74
DATAF VLV_U_74
DATAF VLV_SENTIDO_74
DATAS VLV_I_77 252
DATAS VLV_D_77 252
DATAF VLV_ERROR_77
DATAF VLV_OLDERROR_77
DATAF VLV_ERRSUM_77
DATAF VLV_U_77
DATAF VLV_SENTIDO_77
DATAF VLV_START_C_77
DATAF VLV_ENCODER_C_77
DATAS VLV_I_78 252
DATAS VLV_D_78 252
DATAF VLV_ERROR_78
DATAF VLV_OLDERROR_78
DATAF VLV_ERRSUM_78
DATAF VLV_U_78
DATAF VLV_SENTIDO_78
DATAF VLV_START_C_78
DATAF VLV_ENCODER_C_78
DATAS VLV_I_85 252
DATAS VLV_D_85 252
DATAF VLV_ERROR_85
DATAF VLV_OLDERROR_85
DATAF VLV_ERRSUM_85
DATAF VLV_U_85
DATAF VLV_SENTIDO_85
DATAF VLV_START_C_85
DATAF VLV_ENCODER_C_85
DATAS VLV_I_86 252
DATAS VLV_D_86 252
DATAF VLV_ERROR_86
DATAF VLV_OLDERROR_86
DATAF VLV_ERRSUM_86
DATAF VLV_U_86
DATAF VLV_SENTIDO_86
DATAF VLV_START_C_86
DATAF VLV_ENCODER_C_86
DATAS VLV_I_91 252
DATAS VLV_D_91 252
DATAF VLV_ERROR_91
DATAF VLV_OLDERROR_91
DATAF VLV_ERRSUM_91
DATAF VLV_U_91
DATAF VLV_SENTIDO_91
DATAF VLV_READER1_91
DATAF VLV_READER2_91
DATAS VLV_I_92 252
DATAS VLV_D_92 252
DATAF VLV_ERROR_92
DATAF VLV_OLDERROR_92
DATAF VLV_ERRSUM_92
DATAF VLV_U_92
DATAF VLV_SENTIDO_92
DATAF VLV_READER1_92
DATAF VLV_READER2_92
DATAS VLV_I_100 252
DATAS VLV_D_100 252
DATAF VLV_V0_100
DATAF VLV_ACCELENCODER_100
DATAF VLV_U_100
DATAF VLV_ERRSUM_100
DATAF VLV_OLDERROR_100
DATAF VLV_VEL_100
DATAF VLV_SENTIDO_100
DATAF VLV_ERROR_100
DATAF VLV_ENCDIFF_107
DATAF VLV_SIGNO_107
DATAF VLV_ENCDIFF_111
DATAF VLV_SIGNO_111
DATAF VLV_SAFETYTIMER_111
DATAF VLV_ENCDIFF_117
DATAF VLV_SIGNO_117
DATAF VLV_ENCDIFF_121
DATAF VLV_SIGNO_121
DATAF VLV_SAFETYTIMER_121
DATAF VLV_RED_122
DATAF VLV_YELLOW_122
DATAF VLV_GREEN_122
DATAF VLV_BLUE_122
DATAF VLV_VALUENEGRO_122
DATAF VLV_VALUEBLANCO_122
DATAF VLV_RWHITE_122
DATAF VLV_GWHITE_122
DATAF VLV_BWHITE_122
DATAF VLV_HUE_122
DATAF VLV_SAT_122
DATAF VLV_VALUE_122
ARRAY16 VLV_RNORMA_122 2
ARRAY16 VLV_GNORMA_122 2
ARRAY16 VLV_BNORMA_122 2
ARRAY16 VLV_MAXA_122 2
DATAF VLV_J_122
ARRAY16 VLV_RGB_122 2
DATAF VLV_RRAW_122
DATAF VLV_GRAW_122
DATAF VLV_BRAW_122
DATAF VLV_RNORM_122
DATAF VLV_GNORM_122
DATAF VLV_BNORM_122
DATAF VLV_MAX_122
DATAF VLV_MIN_122
DATAF VLV_RGBGREY_122
DATAF VLV_RED_123
DATAF VLV_YELLOW_123
DATAF VLV_GREEN_123
DATAF VLV_BLUE_123
DATAF VLV_VALUENEGRO_123
DATAF VLV_VALUEBLANCO_123
DATAF VLV_RWHITE_123
DATAF VLV_GWHITE_123
DATAF VLV_BWHITE_123
DATAF VLV_HUE_123
DATAF VLV_SAT_123
DATAF VLV_VALUE_123
ARRAY16 VLV_RNORMA_123 2
ARRAY16 VLV_GNORMA_123 2
ARRAY16 VLV_BNORMA_123 2
ARRAY16 VLV_MAXA_123 2
DATAF VLV_J_123
ARRAY16 VLV_RGB_123 2
DATAF VLV_RRAW_123
DATAF VLV_GRAW_123
DATAF VLV_BRAW_123
DATAF VLV_RNORM_123
DATAF VLV_GNORM_123
DATAF VLV_BNORM_123
DATAF VLV_MAX_123
DATAF VLV_MIN_123
DATAF VLV_RGBGREY_123
DATAF VLV_RED_124
DATAF VLV_YELLOW_124
DATAF VLV_GREEN_124
DATAF VLV_BLUE_124
DATAF VLV_VALUENEGRO_124
DATAF VLV_VALUEBLANCO_124
DATAF VLV_RWHITE_124
DATAF VLV_GWHITE_124
DATAF VLV_BWHITE_124
DATAF VLV_HUE_124
DATAF VLV_SAT_124
DATAF VLV_VALUE_124
ARRAY16 VLV_RNORMA_124 2
ARRAY16 VLV_GNORMA_124 2
ARRAY16 VLV_BNORMA_124 2
ARRAY16 VLV_MAXA_124 2
DATAF VLV_J_124
ARRAY16 VLV_RGB_124 2
DATAF VLV_RRAW_124
DATAF VLV_GRAW_124
DATAF VLV_BRAW_124
DATAF VLV_RNORM_124
DATAF VLV_GNORM_124
DATAF VLV_BNORM_124
DATAF VLV_MAX_124
DATAF VLV_MIN_124
DATAF VLV_RGBGREY_124
DATAF VLV_RED_125
DATAF VLV_YELLOW_125
DATAF VLV_GREEN_125
DATAF VLV_BLUE_125
DATAF VLV_VALUENEGRO_125
DATAF VLV_VALUEBLANCO_125
DATAF VLV_RWHITE_125
DATAF VLV_GWHITE_125
DATAF VLV_BWHITE_125
DATAF VLV_HUE_125
DATAF VLV_SAT_125
DATAF VLV_VALUE_125
ARRAY16 VLV_RNORMA_125 2
ARRAY16 VLV_GNORMA_125 2
ARRAY16 VLV_BNORMA_125 2
ARRAY16 VLV_MAXA_125 2
DATAF VLV_J_125
ARRAY16 VLV_RGB_125 2
DATAF VLV_RRAW_125
DATAF VLV_GRAW_125
DATAF VLV_BRAW_125
DATAF VLV_RNORM_125
DATAF VLV_GNORM_125
DATAF VLV_BNORM_125
DATAF VLV_MAX_125
DATAF VLV_MIN_125
DATAF VLV_RGBGREY_125
DATAF VLV_GRADOS_90_137
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0
DATA32 RUNCOUNTER_F_COLOCARD_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_VELOCIDAD_78
    MOVEF_F 0.0 VLV_KP_78
    MOVEF_F 0.0 VLV_KI_78
    MOVEF_F 0.0 VLV_KD_78
    MOVEF_F 0.0 VLV_ENCODER_78
    MOVEF_F 0.0 VLV_VELOCIDAD_91
    MOVEF_F 0.0 VLV_KP_91
    MOVEF_F 0.0 VLV_KI_91
    MOVEF_F 0.0 VLV_KD_91
    MOVEF_F 0.0 VLV_READER_91
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VEL_B_137
    MOVEF_F 0.0 VLV_VEL_C_137
    MOVEF_F 0.0 VLV_VELOCIDAD_85
    MOVEF_F 0.0 VLV_KP_85
    MOVEF_F 0.0 VLV_KI_85
    MOVEF_F 0.0 VLV_KD_85
    MOVEF_F 0.0 VLV_ENCODER_85
    MOVEF_F 0.0 VLV_VELOCIDAD_92
    MOVEF_F 0.0 VLV_KP_92
    MOVEF_F 0.0 VLV_KI_92
    MOVEF_F 0.0 VLV_KD_92
    MOVEF_F 0.0 VLV_READER_92
    MOVEF_F 0.0 VLV_VELOCIDAD_86
    MOVEF_F 0.0 VLV_KP_86
    MOVEF_F 0.0 VLV_KI_86
    MOVEF_F 0.0 VLV_KD_86
    MOVEF_F 0.0 VLV_ENCODER_86
    MOVEF_F 0.0 VLV_V0_58
    MOVEF_F 0.0 VLV_VMAX_58
    MOVEF_F 0.0 VLV_KP_58
    MOVEF_F 0.0 VLV_KI_58
    MOVEF_F 0.0 VLV_KD_58
    MOVEF_F 0.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_VELOCIDAD_74
    MOVEF_F 0.0 VLV_KP_74
    MOVEF_F 0.0 VLV_KI_74
    MOVEF_F 0.0 VLV_KD_74
    MOVEF_F 0.0 VLV_VMAX_100
    MOVEF_F 0.0 VLV_KP_100
    MOVEF_F 0.0 VLV_KI_100
    MOVEF_F 0.0 VLV_KD_100
    MOVEF_F 0.0 VLV_COLOR_134
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_125
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_T_120
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_COLOR_129
    MOVEF_F 0.0 VLV_READ_138
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_TIEMPOHASTALINEA
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    STRINGS DUPLICATE '' VLV_I_37
    STRINGS DUPLICATE '' VLV_D_37
    MOVEF_F 0.0 VLV_SIGNO_37
    MOVEF_F 0.0 VLV_VMIN_37
    MOVEF_F 0.0 VLV_VMAX_37
    MOVEF_F 0.0 VLV_ENCODR_37
    STRINGS DUPLICATE '' VLV_I_38
    STRINGS DUPLICATE '' VLV_D_38
    MOVEF_F 0.0 VLV_SIGNO_38
    MOVEF_F 0.0 VLV_VMIN_38
    MOVEF_F 0.0 VLV_VMAX_38
    MOVEF_F 0.0 VLV_ENCODR_38
    STRINGS DUPLICATE '' VLV_I_58
    STRINGS DUPLICATE '' VLV_D_58
    MOVEF_F 0.0 VLV_U_58
    MOVEF_F 0.0 VLV_ERROR_58
    MOVEF_F 0.0 VLV_OLDERROR_58
    MOVEF_F 0.0 VLV_ERRSUM_58
    MOVEF_F 0.0 VLV_VEL_58
    MOVEF_F 0.0 VLV_SENTIDO_58
    STRINGS DUPLICATE '' VLV_I_73
    STRINGS DUPLICATE '' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MOVEF_F 0.0 VLV_SENTIDO_73
    STRINGS DUPLICATE '' VLV_I_74
    STRINGS DUPLICATE '' VLV_D_74
    MOVEF_F 0.0 VLV_ERROR_74
    MOVEF_F 0.0 VLV_OLDERROR_74
    MOVEF_F 0.0 VLV_ERRSUM_74
    MOVEF_F 0.0 VLV_U_74
    MOVEF_F 0.0 VLV_SENTIDO_74
    STRINGS DUPLICATE '' VLV_I_77
    STRINGS DUPLICATE '' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MOVEF_F 0.0 VLV_SENTIDO_77
    MOVEF_F 0.0 VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
    STRINGS DUPLICATE '' VLV_I_78
    STRINGS DUPLICATE '' VLV_D_78
    MOVEF_F 0.0 VLV_ERROR_78
    MOVEF_F 0.0 VLV_OLDERROR_78
    MOVEF_F 0.0 VLV_ERRSUM_78
    MOVEF_F 0.0 VLV_U_78
    MOVEF_F 0.0 VLV_SENTIDO_78
    MOVEF_F 0.0 VLV_START_C_78
    MOVEF_F 0.0 VLV_ENCODER_C_78
    STRINGS DUPLICATE '' VLV_I_85
    STRINGS DUPLICATE '' VLV_D_85
    MOVEF_F 0.0 VLV_ERROR_85
    MOVEF_F 0.0 VLV_OLDERROR_85
    MOVEF_F 0.0 VLV_ERRSUM_85
    MOVEF_F 0.0 VLV_U_85
    MOVEF_F 0.0 VLV_SENTIDO_85
    MOVEF_F 0.0 VLV_START_C_85
    MOVEF_F 0.0 VLV_ENCODER_C_85
    STRINGS DUPLICATE '' VLV_I_86
    STRINGS DUPLICATE '' VLV_D_86
    MOVEF_F 0.0 VLV_ERROR_86
    MOVEF_F 0.0 VLV_OLDERROR_86
    MOVEF_F 0.0 VLV_ERRSUM_86
    MOVEF_F 0.0 VLV_U_86
    MOVEF_F 0.0 VLV_SENTIDO_86
    MOVEF_F 0.0 VLV_START_C_86
    MOVEF_F 0.0 VLV_ENCODER_C_86
    STRINGS DUPLICATE '' VLV_I_91
    STRINGS DUPLICATE '' VLV_D_91
    MOVEF_F 0.0 VLV_ERROR_91
    MOVEF_F 0.0 VLV_OLDERROR_91
    MOVEF_F 0.0 VLV_ERRSUM_91
    MOVEF_F 0.0 VLV_U_91
    MOVEF_F 0.0 VLV_SENTIDO_91
    MOVEF_F 0.0 VLV_READER1_91
    MOVEF_F 0.0 VLV_READER2_91
    STRINGS DUPLICATE '' VLV_I_92
    STRINGS DUPLICATE '' VLV_D_92
    MOVEF_F 0.0 VLV_ERROR_92
    MOVEF_F 0.0 VLV_OLDERROR_92
    MOVEF_F 0.0 VLV_ERRSUM_92
    MOVEF_F 0.0 VLV_U_92
    MOVEF_F 0.0 VLV_SENTIDO_92
    MOVEF_F 0.0 VLV_READER1_92
    MOVEF_F 0.0 VLV_READER2_92
    STRINGS DUPLICATE '' VLV_I_100
    STRINGS DUPLICATE '' VLV_D_100
    MOVEF_F 0.0 VLV_V0_100
    MOVEF_F 0.0 VLV_ACCELENCODER_100
    MOVEF_F 0.0 VLV_U_100
    MOVEF_F 0.0 VLV_ERRSUM_100
    MOVEF_F 0.0 VLV_OLDERROR_100
    MOVEF_F 0.0 VLV_VEL_100
    MOVEF_F 0.0 VLV_SENTIDO_100
    MOVEF_F 0.0 VLV_ERROR_100
    MOVEF_F 0.0 VLV_ENCDIFF_107
    MOVEF_F 0.0 VLV_SIGNO_107
    MOVEF_F 0.0 VLV_ENCDIFF_111
    MOVEF_F 0.0 VLV_SIGNO_111
    MOVEF_F 0.0 VLV_SAFETYTIMER_111
    MOVEF_F 0.0 VLV_ENCDIFF_117
    MOVEF_F 0.0 VLV_SIGNO_117
    MOVEF_F 0.0 VLV_ENCDIFF_121
    MOVEF_F 0.0 VLV_SIGNO_121
    MOVEF_F 0.0 VLV_SAFETYTIMER_121
    MOVEF_F 0.0 VLV_RED_122
    MOVEF_F 0.0 VLV_YELLOW_122
    MOVEF_F 0.0 VLV_GREEN_122
    MOVEF_F 0.0 VLV_BLUE_122
    MOVEF_F 0.0 VLV_VALUENEGRO_122
    MOVEF_F 0.0 VLV_VALUEBLANCO_122
    MOVEF_F 0.0 VLV_RWHITE_122
    MOVEF_F 0.0 VLV_GWHITE_122
    MOVEF_F 0.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_MAXA_122
    MOVEF_F 0.0 VLV_J_122
    CALL ARRAYCREATE_FLOAT VLV_RGB_122
    MOVEF_F 0.0 VLV_RRAW_122
    MOVEF_F 0.0 VLV_GRAW_122
    MOVEF_F 0.0 VLV_BRAW_122
    MOVEF_F 0.0 VLV_RNORM_122
    MOVEF_F 0.0 VLV_GNORM_122
    MOVEF_F 0.0 VLV_BNORM_122
    MOVEF_F 0.0 VLV_MAX_122
    MOVEF_F 0.0 VLV_MIN_122
    MOVEF_F 0.0 VLV_RGBGREY_122
    MOVEF_F 0.0 VLV_RED_123
    MOVEF_F 0.0 VLV_YELLOW_123
    MOVEF_F 0.0 VLV_GREEN_123
    MOVEF_F 0.0 VLV_BLUE_123
    MOVEF_F 0.0 VLV_VALUENEGRO_123
    MOVEF_F 0.0 VLV_VALUEBLANCO_123
    MOVEF_F 0.0 VLV_RWHITE_123
    MOVEF_F 0.0 VLV_GWHITE_123
    MOVEF_F 0.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_MAXA_123
    MOVEF_F 0.0 VLV_J_123
    CALL ARRAYCREATE_FLOAT VLV_RGB_123
    MOVEF_F 0.0 VLV_RRAW_123
    MOVEF_F 0.0 VLV_GRAW_123
    MOVEF_F 0.0 VLV_BRAW_123
    MOVEF_F 0.0 VLV_RNORM_123
    MOVEF_F 0.0 VLV_GNORM_123
    MOVEF_F 0.0 VLV_BNORM_123
    MOVEF_F 0.0 VLV_MAX_123
    MOVEF_F 0.0 VLV_MIN_123
    MOVEF_F 0.0 VLV_RGBGREY_123
    MOVEF_F 0.0 VLV_RED_124
    MOVEF_F 0.0 VLV_YELLOW_124
    MOVEF_F 0.0 VLV_GREEN_124
    MOVEF_F 0.0 VLV_BLUE_124
    MOVEF_F 0.0 VLV_VALUENEGRO_124
    MOVEF_F 0.0 VLV_VALUEBLANCO_124
    MOVEF_F 0.0 VLV_RWHITE_124
    MOVEF_F 0.0 VLV_GWHITE_124
    MOVEF_F 0.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_MAXA_124
    MOVEF_F 0.0 VLV_J_124
    CALL ARRAYCREATE_FLOAT VLV_RGB_124
    MOVEF_F 0.0 VLV_RRAW_124
    MOVEF_F 0.0 VLV_GRAW_124
    MOVEF_F 0.0 VLV_BRAW_124
    MOVEF_F 0.0 VLV_RNORM_124
    MOVEF_F 0.0 VLV_GNORM_124
    MOVEF_F 0.0 VLV_BNORM_124
    MOVEF_F 0.0 VLV_MAX_124
    MOVEF_F 0.0 VLV_MIN_124
    MOVEF_F 0.0 VLV_RGBGREY_124
    MOVEF_F 0.0 VLV_RED_125
    MOVEF_F 0.0 VLV_YELLOW_125
    MOVEF_F 0.0 VLV_GREEN_125
    MOVEF_F 0.0 VLV_BLUE_125
    MOVEF_F 0.0 VLV_VALUENEGRO_125
    MOVEF_F 0.0 VLV_VALUEBLANCO_125
    MOVEF_F 0.0 VLV_RWHITE_125
    MOVEF_F 0.0 VLV_GWHITE_125
    MOVEF_F 0.0 VLV_BWHITE_125
    MOVEF_F 0.0 VLV_HUE_125
    MOVEF_F 0.0 VLV_SAT_125
    MOVEF_F 0.0 VLV_VALUE_125
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_125
    CALL ARRAYCREATE_FLOAT VLV_MAXA_125
    MOVEF_F 0.0 VLV_J_125
    CALL ARRAYCREATE_FLOAT VLV_RGB_125
    MOVEF_F 0.0 VLV_RRAW_125
    MOVEF_F 0.0 VLV_GRAW_125
    MOVEF_F 0.0 VLV_BRAW_125
    MOVEF_F 0.0 VLV_RNORM_125
    MOVEF_F 0.0 VLV_GNORM_125
    MOVEF_F 0.0 VLV_BNORM_125
    MOVEF_F 0.0 VLV_MAX_125
    MOVEF_F 0.0 VLV_MIN_125
    MOVEF_F 0.0 VLV_RGBGREY_125
    MOVEF_F 0.0 VLV_GRADOS_90_137
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    MOVE32_32 0 RUNCOUNTER_F_COLOCARD_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 1
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_COLOCARD_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_COLOCARD_0 2
    CALL GETANDINC32 RUNCOUNTER_F_COLOCARD_0 -1 RUNCOUNTER_F_COLOCARD_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
subcall PROGRAM_F_COLOCARD_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1144
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1144:
    JR_NEQ32 SUBPROGRAM 1 dispatch1145
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1145:
    JR_NEQ32 SUBPROGRAM 2 dispatch1146
    WRITE32 ENDSUB_F_COLOCARD_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COLOCARD_0
  dispatch1146:
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_VELOCIDAD_78
    MOVEF_F 0.0 VLV_KP_78
    MOVEF_F 0.0 VLV_KI_78
    MOVEF_F 0.0 VLV_KD_78
    MOVEF_F 0.0 VLV_ENCODER_78
    MOVEF_F 0.0 VLV_VELOCIDAD_91
    MOVEF_F 0.0 VLV_KP_91
    MOVEF_F 0.0 VLV_KI_91
    MOVEF_F 0.0 VLV_KD_91
    MOVEF_F 0.0 VLV_READER_91
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VEL_B_137
    MOVEF_F 0.0 VLV_VEL_C_137
    MOVEF_F 0.0 VLV_VELOCIDAD_85
    MOVEF_F 0.0 VLV_KP_85
    MOVEF_F 0.0 VLV_KI_85
    MOVEF_F 0.0 VLV_KD_85
    MOVEF_F 0.0 VLV_ENCODER_85
    MOVEF_F 0.0 VLV_VELOCIDAD_92
    MOVEF_F 0.0 VLV_KP_92
    MOVEF_F 0.0 VLV_KI_92
    MOVEF_F 0.0 VLV_KD_92
    MOVEF_F 0.0 VLV_READER_92
    MOVEF_F 0.0 VLV_VELOCIDAD_86
    MOVEF_F 0.0 VLV_KP_86
    MOVEF_F 0.0 VLV_KI_86
    MOVEF_F 0.0 VLV_KD_86
    MOVEF_F 0.0 VLV_ENCODER_86
    MOVEF_F 0.0 VLV_V0_58
    MOVEF_F 0.0 VLV_VMAX_58
    MOVEF_F 0.0 VLV_KP_58
    MOVEF_F 0.0 VLV_KI_58
    MOVEF_F 0.0 VLV_KD_58
    MOVEF_F 0.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_VELOCIDAD_74
    MOVEF_F 0.0 VLV_KP_74
    MOVEF_F 0.0 VLV_KI_74
    MOVEF_F 0.0 VLV_KD_74
    MOVEF_F 0.0 VLV_VMAX_100
    MOVEF_F 0.0 VLV_KP_100
    MOVEF_F 0.0 VLV_KI_100
    MOVEF_F 0.0 VLV_KD_100
    MOVEF_F 0.0 VLV_COLOR_134
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_125
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_T_120
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_COLOR_129
    MOVEF_F 0.0 VLV_READ_138
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_TIEMPOHASTALINEA
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.1 VGV_KP
    MOVEF_F 0.0001 VGV_KI
    MOVEF_F 2.0 VGV_KD
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_NUM_BLOQUES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.44444444444444 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB0 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB0:
    DATA32 tmp1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp1
    JR_NEQ32 0 tmp1 alreadylaunched1
    OBJECT_START TF_DISPLAY_0
  alreadylaunched1:
    DATA32 tmp2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp2
    JR_NEQ32 0 tmp2 alreadylaunched2
    OBJECT_START TF_STOP_0
  alreadylaunched2:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB3 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB3:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 1.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 4.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    DATA8 layer7
	DATA8 no7
	DATA8 mode87
	
	MOVEF_8 4.0 no7
	SUB8 no7 1 no7
	DIV8 no7 4 layer7
	MATH MOD8 no7 4 no7

	MOVEF_8 0.0 mode87
	
	INPUT_DEVICE READY_RAW layer7 no7 0 mode87 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while9:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 800.0 endwhile9
  whilebody9:
    MOVEF_8 85.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 -80.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 800.0 whilebody9
  endwhile9:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    DATA32 milliseconds15
	MOVEF_32 100.0 milliseconds15
	DATA32 timer15
	TIMER_WAIT milliseconds15 timer15
	TIMER_READY timer15
    DATA32 tmp16
    CALL GETANDINC32 RUNCOUNTER_F_COLOCARD_0 1  RUNCOUNTER_F_COLOCARD_0 tmp16
    JR_NEQ32 0 tmp16 alreadylaunched16
    OBJECT_START TF_COLOCARD_0
  alreadylaunched16:
    WRITE32 ENDSUB_F_COLOCARA_0:CALLSUB17 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COLOCARA_0
CALLSUB17:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds20
	MOVEF_32 100.0 milliseconds20
	DATA32 timer20
	TIMER_WAIT milliseconds20 timer20
	TIMER_READY timer20
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_COLOCARA_0:
    CALL MOTOR.SCHEDULE 'A' -50.0 0.0 350.0 0.0 'True' 

	DATA8 layer21
	DATA8 nos21
	DATA8 busy21
	CALL MOTORDECODEPORTSDESCRIPTOR 'A' layer21 nos21
	JR_EQ8 0 nos21 motornotbusy21
  motorwaiting21:
	OUTPUT_TEST layer21 nos21 busy21
	JR_EQ8 busy21 0 motornotbusy21
	SLEEP
	JR motorwaiting21
  motornotbusy21:
RETSUB_F_COLOCARA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COLOCARA_0:
SUB_F_COLOCARD_0:
    CALL MOTOR.SCHEDULE 'D' 90.0 0.0 550.0 0.0 'True' 

	DATA8 layer22
	DATA8 nos22
	DATA8 busy22
	CALL MOTORDECODEPORTSDESCRIPTOR 'D' layer22 nos22
	JR_EQ8 0 nos22 motornotbusy22
  motorwaiting22:
	OUTPUT_TEST layer22 nos22 busy22
	JR_EQ8 busy22 0 motornotbusy22
	SLEEP
	JR motorwaiting22
  motornotbusy22:
RETSUB_F_COLOCARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COLOCARD_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while23:
  whilebody23:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_NUM_BLOQUES '%g' 99 S.1
    CALL TEXT.APPEND 'Bloques: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf44
    DATA8 flag44
    DIVF F.2 0.05 tmpf44
    CP_EQF 0.0 0.05 flag44
    SELECTF flag44 0.0 tmpf44 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf52
    DATA8 flag52
    DIVF F.1 0.05 tmpf52
    CP_EQF 0.0 0.05 flag52
    SELECTF flag52 0.0 tmpf52 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds66
	MOVEF_32 50.0 milliseconds66
	DATA32 timer66
	TIMER_WAIT milliseconds66 timer66
	TIMER_READY timer66
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody23
  endwhile23:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_STOP_0:
  while69:
  whilebody69:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else70_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 60.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEASAFE_2:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEASAFE_2
CALLSUB75:
    MOVEF_F 60.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB76:
    PROGRAM_STOP -1
  else70_1:
  endif70:
    JR whilebody69
  endwhile69:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB78:
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 30.0 VLV_V2_38
    MOVEF_F 60.0 VLV_ANGLE_38
    WRITE32 ENDSUB_F_GUNIVENCMMF_3:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMMF_3
CALLSUB79:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 60.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB80:
    MOVEF_F 25.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 16.5 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB81:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 96.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB82:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB83:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB84:
    MOVEF_F -20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB85:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB86:
    MOVEF_F 20.0 VLV_VELOCIDAD_77
    MULF VGV_KP 0.5 VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 10.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB88:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 91.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB89:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB90:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB91:
    MULF VGV_VELOCIDAD 0.4 VLV_V_107
    MOVEF_F -110.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB93:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 8.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB94:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 96.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB95:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 22.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB96:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    DATA32 milliseconds98
	MOVEF_32 200.0 milliseconds98
	DATA32 timer98
	TIMER_WAIT milliseconds98 timer98
	TIMER_READY timer98
    MOVEF_F 20.0 VLV_VELOCIDAD_78
    MOVEF_F VGV_KP VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 7.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB99:
    TIMER_READ timeMC4
    MOVEF_F 30.0 VLV_VELOCIDAD_91
    MOVEF_F VGV_KP VLV_KP_91
    MOVEF_F VGV_KI VLV_KI_91
    MOVEF_F VGV_KD VLV_KD_91
    MOVEF_F 3.0 VLV_READER_91
    WRITE32 ENDSUB_F_SL1SPIDCROSS_5:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_5
CALLSUB101:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 2.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB102:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp VGV_TIEMPOHASTALINEA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_TIEMPOHASTALINEA '%g' 99 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB107:
    MOVEF_F 40.0 VLV_VELOCIDAD_73
    MOVEF_F VGV_KP VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB108:
    JR_GTEQF VGV_TIEMPOHASTALINEA 850.0 else109_1
    WRITE32 ENDSUB_F_CASOPSOE_0:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASOPSOE_0
CALLSUB110:
    WRITE32 ENDSUB_F_FINPRUEBA_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINPRUEBA_0
CALLSUB111:
    JR endif109
  else109_1:
    WRITE32 ENDSUB_F_CASOVOX_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASOVOX_0
CALLSUB112:
    WRITE32 ENDSUB_F_FINPRUEBA_0:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINPRUEBA_0
CALLSUB113:
  else109_2:
  endif109:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_CASOPSOE_0:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 96.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB114:
    MOVEF_F 30.0 VLV_VELOCIDAD_85
    MOVEF_F VGV_KP VLV_KP_85
    MOVEF_F VGV_KI VLV_KI_85
    MOVEF_F VGV_KD VLV_KD_85
    MOVEF_F 25.5 VLV_ENCODER_85
    WRITE32 ENDSUB_F_SL31PIDENC_5:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENC_5
CALLSUB115:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB116:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB117:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB118:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB119:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 97.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB120:
    MOVEF_F 15.0 VLV_VELOCIDAD_77
    MULF VGV_KP 1.5 VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 10.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB122:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 96.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB123:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB124:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB125:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB126:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB127:
    MOVEF_F 20.0 VLV_VELOCIDAD_78
    MOVEF_F VGV_KP VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 5.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB128:
    MOVEF_F 30.0 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB129:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 22.5 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB130:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_37
    MULF VGV_VELOCIDAD 0.2 VLV_V2_37
    MOVEF_F 97.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB133:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 13.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB135:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB136:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB138:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB141:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_86
    MULF VGV_KP 1.25 VLV_KP_86
    MOVEF_F VGV_KI VLV_KI_86
    MOVEF_F VGV_KD VLV_KD_86
    MOVEF_F 5.0 VLV_ENCODER_86
    WRITE32 ENDSUB_F_SL31PIDENCF_5:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENCF_5
CALLSUB144:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 4.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB146:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 1.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB148:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB151:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB153:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB154:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB155:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB156:
    MOVEF_F 15.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 11.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB157:
    MOVEF_F -30.0 VLV_V1_37
    MOVEF_F 30.0 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB158:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB159:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB160:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB161:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB164:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_78
    MOVEF_F VGV_KP VLV_KP_78
    MOVEF_F VGV_KI VLV_KI_78
    MOVEF_F VGV_KD VLV_KD_78
    MOVEF_F 3.0 VLV_ENCODER_78
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB166:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_92
    MOVEF_F VGV_KP VLV_KP_92
    MOVEF_F VGV_KI VLV_KI_92
    MOVEF_F VGV_KD VLV_KD_92
    MOVEF_F 3.0 VLV_READER_92
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB168:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB170:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB173:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 20.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB175:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB177:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_73
    MOVEF_F VGV_KP VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB179:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB181:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_37
    MULF VGV_VELOCIDAD 0.3 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB184:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 9.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB186:
    MOVEF_F 30.0 VLV_V1_37
    MOVEF_F -30.0 VLV_V2_37
    MOVEF_F 95.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB187:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 4.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB188:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB189:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB190:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 92.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB191:
    MOVEF_F 30.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 9.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB192:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 91.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB193:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB194:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB195:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB196:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_37
    MULF VGV_VELOCIDAD -0.2 VLV_V2_37
    MOVEF_F 93.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB199:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_91
    MOVEF_F VGV_KP VLV_KP_91
    MOVEF_F VGV_KI VLV_KI_91
    MOVEF_F VGV_KD VLV_KD_91
    MOVEF_F 4.0 VLV_READER_91
    WRITE32 ENDSUB_F_SL1SPIDCROSS_5:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_5
CALLSUB201:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB203:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_37
    MULF VGV_VELOCIDAD -0.3 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB206:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 10.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB208:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB209:
RETSUB_F_CASOPSOE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOPSOE_0:
SUB_F_CASOVOX_0:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 8.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB211:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB212:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB213:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 96.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB214:
    MOVEF_F 15.0 VLV_VELOCIDAD_77
    MOVEF_F VGV_KP VLV_KP_77
    MOVEF_F VGV_KI VLV_KI_77
    MOVEF_F VGV_KD VLV_KD_77
    MOVEF_F 10.0 VLV_ENCODER_77
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB215:
    MOVEF_F -20.0 VLV_V1_37
    MOVEF_F 20.0 VLV_V2_37
    MOVEF_F 96.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB216:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB217:
    WRITE32 ENDSUB_F_COGER_0:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB218:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 36.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB219:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB220:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB221:
    WRITE32 ENDSUB_F_SOLTAR_0:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_0
CALLSUB222:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB223:
    MOVEF_F 20.0 VLV_V1_37
    MOVEF_F -20.0 VLV_V2_37
    MOVEF_F 94.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB224:
    MOVEF_F 25.0 VLV_VELOCIDAD_73
    MULF VGV_KP 0.5 VLV_KP_73
    MOVEF_F VGV_KI VLV_KI_73
    MOVEF_F VGV_KD VLV_KD_73
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB226:
RETSUB_F_CASOVOX_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOVOX_0:
SUB_F_FINPRUEBA_0:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEASAFE_2:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEASAFE_2
CALLSUB229:
    MOVEF_F 20.0 VLV_V_121
    MOVEF_F 0.0 VLV_AENC_121
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB230:
    PROGRAM_STOP -1
RETSUB_F_FINPRUEBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINPRUEBA_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf235
    DATA8 flag235
    DIVF F.1 F.2 tmpf235
    CP_EQF 0.0 F.2 flag235
    SELECTF flag235 0.0 tmpf235 F.0

    DATAF tmpf236
    DATA8 flag236
    DIVF F.0 VLV_DIAMETRO_1 tmpf236
    CP_EQF 0.0 VLV_DIAMETRO_1 flag236
    SELECTF flag236 0.0 tmpf236 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    DATAF tmpf239
    DATA8 flag239
    DIVF VGV_CORRECCION 30.0 tmpf239
    CP_EQF 0.0 30.0 flag239
    SELECTF flag239 0.0 tmpf239 F.2

    MULF F.2 VLV_VELOCIDAD_1 F.1
    ADDF F.0 F.1 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while245:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile245
  whilebody245:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 1.2 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody245
  endwhile245:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_37
    STRINGS DUPLICATE 'C' VLV_D_37
    DATAF tmpf261
    DATA8 flag261
    DIVF VLV_V1_37 VLV_V2_37 tmpf261
    CP_EQF 0.0 VLV_V2_37 flag261
    SELECTF flag261 0.0 tmpf261 F.0

    DATAF tmpf262
    DATA8 flag262
    DIVF VLV_V1_37 VLV_V2_37 tmpf262
    CP_EQF 0.0 VLV_V2_37 flag262
    SELECTF flag262 0.0 tmpf262 F.2

    MATH ABS F.2 F.1
    DATAF tmpf264
    DATA8 flag264
    DIVF F.0 F.1 tmpf264
    CP_EQF 0.0 F.1 flag264
    SELECTF flag264 0.0 tmpf264 VLV_SIGNO_37

    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag267
	CP_LTF F.0 F.1 flag267
	SELECTF flag267 F.0 F.1 VLV_VMIN_37
    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag270
	CP_GTF F.0 F.1 flag270
	SELECTF flag270 F.0 F.1 VLV_VMAX_37
    MULF VLV_ANGLE_37 VGV_G1 F.0
    MULF VLV_SIGNO_37 VLV_VMIN_37 F.4
    DATAF tmpf273
    DATA8 flag273
    DIVF F.4 VLV_VMAX_37 tmpf273
    CP_EQF 0.0 VLV_VMAX_37 flag273
    SELECTF flag273 0.0 tmpf273 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf275
    DATA8 flag275
    DIVF -2.0 F.2 tmpf275
    CP_EQF 0.0 F.2 flag275
    SELECTF flag275 0.0 tmpf275 F.1

    MULF F.0 F.1 VLV_ENCODR_37
    CALL TEXT.APPEND VLV_I_37 VLV_D_37 S.0
    MATH NEGATE VLV_V1_37 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_37 VLV_ENCODR_37 'True'

	DATA8 layer279
	DATA8 nos279
	DATA8 busy279
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer279 nos279
	JR_EQ8 0 nos279 motornotbusy279
  motorwaiting279:
	OUTPUT_TEST layer279 nos279 busy279
	JR_EQ8 busy279 0 motornotbusy279
	SLEEP
	JR motorwaiting279
  motornotbusy279:
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    DATA32 milliseconds280
	MOVEF_32 200.0 milliseconds280
	DATA32 timer280
	TIMER_WAIT milliseconds280 timer280
	TIMER_READY timer280
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_GUNIVENCMMF_3:
    STRINGS DUPLICATE 'B' VLV_I_38
    STRINGS DUPLICATE 'C' VLV_D_38
    DATAF tmpf281
    DATA8 flag281
    DIVF VLV_V1_38 VLV_V2_38 tmpf281
    CP_EQF 0.0 VLV_V2_38 flag281
    SELECTF flag281 0.0 tmpf281 F.0

    DATAF tmpf282
    DATA8 flag282
    DIVF VLV_V1_38 VLV_V2_38 tmpf282
    CP_EQF 0.0 VLV_V2_38 flag282
    SELECTF flag282 0.0 tmpf282 F.2

    MATH ABS F.2 F.1
    DATAF tmpf284
    DATA8 flag284
    DIVF F.0 F.1 tmpf284
    CP_EQF 0.0 F.1 flag284
    SELECTF flag284 0.0 tmpf284 VLV_SIGNO_38

    MATH ABS VLV_V1_38 F.0
    MATH ABS VLV_V2_38 F.1
    DATA8 flag287
	CP_LTF F.0 F.1 flag287
	SELECTF flag287 F.0 F.1 VLV_VMIN_38
    MATH ABS VLV_V1_38 F.0
    MATH ABS VLV_V2_38 F.1
    DATA8 flag290
	CP_GTF F.0 F.1 flag290
	SELECTF flag290 F.0 F.1 VLV_VMAX_38
    MULF VLV_ANGLE_38 VGV_G1 F.0
    MULF VLV_SIGNO_38 VLV_VMIN_38 F.4
    DATAF tmpf293
    DATA8 flag293
    DIVF F.4 VLV_VMAX_38 tmpf293
    CP_EQF 0.0 VLV_VMAX_38 flag293
    SELECTF flag293 0.0 tmpf293 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf295
    DATA8 flag295
    DIVF -2.0 F.2 tmpf295
    CP_EQF 0.0 F.2 flag295
    SELECTF flag295 0.0 tmpf295 F.1

    MULF F.0 F.1 VLV_ENCODR_38
    CALL TEXT.APPEND VLV_I_38 VLV_D_38 S.0
    MATH NEGATE VLV_V1_38 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_38 VLV_ENCODR_38 'False'

	DATA8 layer299
	DATA8 nos299
	DATA8 busy299
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer299 nos299
	JR_EQ8 0 nos299 motornotbusy299
  motorwaiting299:
	OUTPUT_TEST layer299 nos299 busy299
	JR_EQ8 busy299 0 motornotbusy299
	SLEEP
	JR motorwaiting299
  motornotbusy299:
    MOVEF_F 0.0 VLV_V1_38
    MOVEF_F 0.0 VLV_V2_38
    MOVEF_F 0.0 VLV_ANGLE_38
RETSUB_F_GUNIVENCMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMMF_3:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_58
    STRINGS DUPLICATE 'C' VLV_D_58
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf302
    DATA8 flag302
    DIVF VLV_ACCELENCODER_58 F.1 tmpf302
    CP_EQF 0.0 F.1 flag302
    SELECTF flag302 0.0 tmpf302 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_58
    MOVEF_F 0.0 VLV_U_58
    MOVEF_F 0.0 VLV_ERROR_58
    MOVEF_F 0.0 VLV_OLDERROR_58
    MOVEF_F 0.0 VLV_ERRSUM_58
    CALL MOTOR.RESETCOUNT 'C'
  while305:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or306
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile305
  or306:
  whilebody305:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf310
    DATA8 flag310
    DIVF F.3 VLV_ACCELENCODER_58 tmpf310
    CP_EQF 0.0 VLV_ACCELENCODER_58 flag310
    SELECTF flag310 0.0 tmpf310 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_58 VLV_V0_58 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_58 VLV_VEL_58
    DATA8 flag315
	CP_LTF VLV_VEL_58 VLV_VMAX_58 flag315
	SELECTF flag315 VLV_VEL_58 VLV_VMAX_58 VLV_VEL_58
    MATH ABS VLV_VEL_58 F.0
    DATAF tmpf317
    DATA8 flag317
    DIVF VLV_VEL_58 F.0 tmpf317
    CP_EQF 0.0 F.0 flag317
    SELECTF flag317 0.0 tmpf317 VLV_SENTIDO_58

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_58 VLV_ERROR_58
    ADDF VLV_ERRSUM_58 VLV_ERROR_58 VLV_ERRSUM_58
    MULF VLV_ERROR_58 VLV_KP_58 F.1
    SUBF VLV_ERROR_58 VLV_OLDERROR_58 F.3
    MULF F.3 VLV_KD_58 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_58 VLV_KI_58 F.1
    ADDF F.0 F.1 VLV_U_58
    CALL TEXT.APPEND VLV_I_58 VLV_D_58 S.0
    ADDF VLV_VEL_58 VLV_U_58 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_58 VLV_U_58 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_58 VLV_OLDERROR_58
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody305
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody305
  endwhile305:
    CALL TEXT.APPEND VLV_I_58 VLV_D_58 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PID_4:
    MULF VLV_VELOCIDAD_73 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_73
    STRINGS DUPLICATE 'B' VLV_I_73
    STRINGS DUPLICATE 'C' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MATH ABS VLV_VELOCIDAD_73 F.0
    DATAF tmpf342
    DATA8 flag342
    DIVF VLV_VELOCIDAD_73 F.0 tmpf342
    CP_EQF 0.0 F.0 flag342
    SELECTF flag342 0.0 tmpf342 VLV_SENTIDO_73

  while343:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or344
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile343
  or344:
  whilebody343:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_73 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_73
    ADDF VLV_ERRSUM_73 VLV_ERROR_73 VLV_ERRSUM_73
    MULF VLV_ERROR_73 VLV_KP_73 F.1
    SUBF VLV_ERROR_73 VLV_OLDERROR_73 F.3
    MULF F.3 VLV_KD_73 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_73 VLV_KI_73 F.1
    ADDF F.0 F.1 VLV_U_73
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    ADDF VLV_VELOCIDAD_73 VLV_U_73 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_73 VLV_U_73 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_73 VLV_OLDERROR_73
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody343
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody343
  endwhile343:
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PID_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PID_4:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_74 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_74
    STRINGS DUPLICATE 'B' VLV_I_74
    STRINGS DUPLICATE 'C' VLV_D_74
    MOVEF_F 0.0 VLV_ERROR_74
    MOVEF_F 0.0 VLV_OLDERROR_74
    MOVEF_F 0.0 VLV_ERRSUM_74
    MOVEF_F 0.0 VLV_U_74
    MATH ABS VLV_VELOCIDAD_74 F.0
    DATAF tmpf370
    DATA8 flag370
    DIVF VLV_VELOCIDAD_74 F.0 tmpf370
    CP_EQF 0.0 F.0 flag370
    SELECTF flag370 0.0 tmpf370 VLV_SENTIDO_74

  while371:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or372
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile371
  or372:
  whilebody371:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_74 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_74
    ADDF VLV_ERRSUM_74 VLV_ERROR_74 VLV_ERRSUM_74
    MULF VLV_ERROR_74 VLV_KP_74 F.1
    SUBF VLV_ERROR_74 VLV_OLDERROR_74 F.3
    MULF F.3 VLV_KD_74 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_74 VLV_KI_74 F.1
    ADDF F.0 F.1 VLV_U_74
    CALL TEXT.APPEND VLV_I_74 VLV_D_74 S.0
    ADDF VLV_VELOCIDAD_74 VLV_U_74 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_74 VLV_U_74 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_74 VLV_OLDERROR_74
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody371
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody371
  endwhile371:
    CALL TEXT.APPEND VLV_I_74 VLV_D_74 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_77 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_77
    STRINGS DUPLICATE 'B' VLV_I_77
    STRINGS DUPLICATE 'C' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MATH ABS VLV_VELOCIDAD_77 F.0
    DATAF tmpf398
    DATA8 flag398
    DIVF VLV_VELOCIDAD_77 F.0 tmpf398
    CP_EQF 0.0 F.0 flag398
    SELECTF flag398 0.0 tmpf398 VLV_SENTIDO_77

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf401
    DATA8 flag401
    DIVF VLV_ENCODER_77 F.1 tmpf401
    CP_EQF 0.0 F.1 flag401
    SELECTF flag401 0.0 tmpf401 F.0

    MULF F.0 360.0 VLV_ENCODER_77
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
  while404:
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_GTEQF F.0 VLV_ENCODER_77 endwhile404
  whilebody404:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_77 VLV_ENCODER_C_77
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_77 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_77
    ADDF VLV_ERRSUM_77 VLV_ERROR_77 VLV_ERRSUM_77
    MULF VLV_ERROR_77 VLV_KP_77 F.1
    SUBF VLV_ERROR_77 VLV_OLDERROR_77 F.3
    MULF F.3 VLV_KD_77 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_77 VLV_KI_77 F.1
    ADDF F.0 F.1 VLV_U_77
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    ADDF VLV_VELOCIDAD_77 VLV_U_77 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_77 VLV_U_77 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_77 VLV_OLDERROR_77
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_LTF F.0 VLV_ENCODER_77 whilebody404
  endwhile404:
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_78 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_78
    STRINGS DUPLICATE 'B' VLV_I_78
    STRINGS DUPLICATE 'C' VLV_D_78
    MOVEF_F 0.0 VLV_ERROR_78
    MOVEF_F 0.0 VLV_OLDERROR_78
    MOVEF_F 0.0 VLV_ERRSUM_78
    MOVEF_F 0.0 VLV_U_78
    MATH ABS VLV_VELOCIDAD_78 F.0
    DATAF tmpf430
    DATA8 flag430
    DIVF VLV_VELOCIDAD_78 F.0 tmpf430
    CP_EQF 0.0 F.0 flag430
    SELECTF flag430 0.0 tmpf430 VLV_SENTIDO_78

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf433
    DATA8 flag433
    DIVF VLV_ENCODER_78 F.1 tmpf433
    CP_EQF 0.0 F.1 flag433
    SELECTF flag433 0.0 tmpf433 F.0

    MULF F.0 360.0 VLV_ENCODER_78
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_78
    MOVEF_F 0.0 VLV_ENCODER_C_78
  while436:
    MATH ABS VLV_ENCODER_C_78 F.0
    JR_GTEQF F.0 VLV_ENCODER_78 endwhile436
  whilebody436:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_78 VLV_ENCODER_C_78
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_78 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_78
    ADDF VLV_ERRSUM_78 VLV_ERROR_78 VLV_ERRSUM_78
    MULF VLV_ERROR_78 VLV_KP_78 F.1
    SUBF VLV_ERROR_78 VLV_OLDERROR_78 F.3
    MULF F.3 VLV_KD_78 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_78 VLV_KI_78 F.1
    ADDF F.0 F.1 VLV_U_78
    CALL TEXT.APPEND VLV_I_78 VLV_D_78 S.0
    ADDF VLV_VELOCIDAD_78 VLV_U_78 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_78 VLV_U_78 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_78 VLV_OLDERROR_78
    MATH ABS VLV_ENCODER_C_78 F.0
    JR_LTF F.0 VLV_ENCODER_78 whilebody436
  endwhile436:
    CALL TEXT.APPEND VLV_I_78 VLV_D_78 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL31PIDENC_5:
    MULF VLV_VELOCIDAD_85 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_85
    STRINGS DUPLICATE 'B' VLV_I_85
    STRINGS DUPLICATE 'C' VLV_D_85
    MOVEF_F 0.0 VLV_ERROR_85
    MOVEF_F 0.0 VLV_OLDERROR_85
    MOVEF_F 0.0 VLV_ERRSUM_85
    MOVEF_F 0.0 VLV_U_85
    MATH ABS VLV_VELOCIDAD_85 F.0
    DATAF tmpf462
    DATA8 flag462
    DIVF VLV_VELOCIDAD_85 F.0 tmpf462
    CP_EQF 0.0 F.0 flag462
    SELECTF flag462 0.0 tmpf462 VLV_SENTIDO_85

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf465
    DATA8 flag465
    DIVF VLV_ENCODER_85 F.1 tmpf465
    CP_EQF 0.0 F.1 flag465
    SELECTF flag465 0.0 tmpf465 F.0

    MULF F.0 360.0 VLV_ENCODER_85
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_85
    MOVEF_F 0.0 VLV_ENCODER_C_85
  while468:
    MATH ABS VLV_ENCODER_C_85 F.0
    JR_GTEQF F.0 VLV_ENCODER_85 endwhile468
  whilebody468:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_85 VLV_ENCODER_C_85
    CALL SENSOR.READPERCENT 3.0 F.2
    CALL SENSOR.READPERCENT 1.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_85 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_85
    ADDF VLV_ERRSUM_85 VLV_ERROR_85 VLV_ERRSUM_85
    MULF VLV_ERROR_85 VLV_KP_85 F.1
    SUBF VLV_ERROR_85 VLV_OLDERROR_85 F.3
    MULF F.3 VLV_KD_85 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_85 VLV_KI_85 F.1
    ADDF F.0 F.1 VLV_U_85
    CALL TEXT.APPEND VLV_I_85 VLV_D_85 S.0
    ADDF VLV_VELOCIDAD_85 VLV_U_85 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_85 VLV_U_85 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_85 VLV_OLDERROR_85
    MATH ABS VLV_ENCODER_C_85 F.0
    JR_LTF F.0 VLV_ENCODER_85 whilebody468
  endwhile468:
    CALL TEXT.APPEND VLV_I_85 VLV_D_85 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL31PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL31PIDENC_5:
SUB_F_SL31PIDENCF_5:
    MULF VLV_VELOCIDAD_86 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_86
    STRINGS DUPLICATE 'B' VLV_I_86
    STRINGS DUPLICATE 'C' VLV_D_86
    MOVEF_F 0.0 VLV_ERROR_86
    MOVEF_F 0.0 VLV_OLDERROR_86
    MOVEF_F 0.0 VLV_ERRSUM_86
    MOVEF_F 0.0 VLV_U_86
    MATH ABS VLV_VELOCIDAD_86 F.0
    DATAF tmpf494
    DATA8 flag494
    DIVF VLV_VELOCIDAD_86 F.0 tmpf494
    CP_EQF 0.0 F.0 flag494
    SELECTF flag494 0.0 tmpf494 VLV_SENTIDO_86

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf497
    DATA8 flag497
    DIVF VLV_ENCODER_86 F.1 tmpf497
    CP_EQF 0.0 F.1 flag497
    SELECTF flag497 0.0 tmpf497 F.0

    MULF F.0 360.0 VLV_ENCODER_86
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_86
    MOVEF_F 0.0 VLV_ENCODER_C_86
  while500:
    MATH ABS VLV_ENCODER_C_86 F.0
    JR_GTEQF F.0 VLV_ENCODER_86 endwhile500
  whilebody500:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_86 VLV_ENCODER_C_86
    CALL SENSOR.READPERCENT 3.0 F.2
    CALL SENSOR.READPERCENT 1.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_86 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_86
    ADDF VLV_ERRSUM_86 VLV_ERROR_86 VLV_ERRSUM_86
    MULF VLV_ERROR_86 VLV_KP_86 F.1
    SUBF VLV_ERROR_86 VLV_OLDERROR_86 F.3
    MULF F.3 VLV_KD_86 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_86 VLV_KI_86 F.1
    ADDF F.0 F.1 VLV_U_86
    CALL TEXT.APPEND VLV_I_86 VLV_D_86 S.0
    ADDF VLV_VELOCIDAD_86 VLV_U_86 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_86 VLV_U_86 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_86 VLV_OLDERROR_86
    MATH ABS VLV_ENCODER_C_86 F.0
    JR_LTF F.0 VLV_ENCODER_86 whilebody500
  endwhile500:
    CALL TEXT.APPEND VLV_I_86 VLV_D_86 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL31PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL31PIDENCF_5:
SUB_F_SL1SPIDCROSS_5:
    MULF VLV_VELOCIDAD_91 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_91
    STRINGS DUPLICATE 'B' VLV_I_91
    STRINGS DUPLICATE 'C' VLV_D_91
    MOVEF_F 0.0 VLV_ERROR_91
    MOVEF_F 0.0 VLV_OLDERROR_91
    MOVEF_F 0.0 VLV_ERRSUM_91
    MOVEF_F 0.0 VLV_U_91
    MATH ABS VLV_VELOCIDAD_91 F.0
    DATAF tmpf526
    DATA8 flag526
    DIVF VLV_VELOCIDAD_91 F.0 tmpf526
    CP_EQF 0.0 F.0 flag526
    SELECTF flag526 0.0 tmpf526 VLV_SENTIDO_91

    JR_NEQF VLV_READER_91 3.0 else527_1
    MOVEF_F 1.0 VLV_READER1_91
    MOVEF_F 4.0 VLV_READER2_91
    JR endif527
  else527_1:
    MOVEF_F 3.0 VLV_READER1_91
    MOVEF_F 1.0 VLV_READER2_91
  else527_2:
  endif527:
  while528:
    CALL SENSOR.READPERCENT VLV_READER_91 F.0
    JR_LTEQF F.0 10.0 endwhile528
  whilebody528:
    CALL SENSOR.READPERCENT VLV_READER1_91 F.2
    CALL SENSOR.READPERCENT VLV_READER2_91 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_91 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_91
    ADDF VLV_ERRSUM_91 VLV_ERROR_91 VLV_ERRSUM_91
    MULF VLV_ERROR_91 VLV_KP_91 F.1
    SUBF VLV_ERROR_91 VLV_OLDERROR_91 F.3
    MULF F.3 VLV_KD_91 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_91 VLV_KI_91 F.1
    ADDF F.0 F.1 VLV_U_91
    CALL TEXT.APPEND VLV_I_91 VLV_D_91 S.0
    ADDF VLV_VELOCIDAD_91 VLV_U_91 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_91 VLV_U_91 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_91 VLV_OLDERROR_91
    CALL SENSOR.READPERCENT VLV_READER_91 F.0
    JR_GTF F.0 10.0 whilebody528
  endwhile528:
    CALL TEXT.APPEND VLV_I_91 VLV_D_91 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL1SPIDCROSS_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSS_5:
SUB_F_SL1SPIDCROSSF_5:
    MULF VLV_VELOCIDAD_92 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_92
    STRINGS DUPLICATE 'B' VLV_I_92
    STRINGS DUPLICATE 'C' VLV_D_92
    MOVEF_F 0.0 VLV_ERROR_92
    MOVEF_F 0.0 VLV_OLDERROR_92
    MOVEF_F 0.0 VLV_ERRSUM_92
    MOVEF_F 0.0 VLV_U_92
    MATH ABS VLV_VELOCIDAD_92 F.0
    DATAF tmpf552
    DATA8 flag552
    DIVF VLV_VELOCIDAD_92 F.0 tmpf552
    CP_EQF 0.0 F.0 flag552
    SELECTF flag552 0.0 tmpf552 VLV_SENTIDO_92

    JR_NEQF VLV_READER_92 3.0 else553_1
    MOVEF_F 1.0 VLV_READER1_92
    MOVEF_F 4.0 VLV_READER2_92
    JR endif553
  else553_1:
    MOVEF_F 3.0 VLV_READER1_92
    MOVEF_F 1.0 VLV_READER2_92
  else553_2:
  endif553:
  while554:
    CALL SENSOR.READPERCENT VLV_READER_92 F.0
    JR_LTEQF F.0 10.0 endwhile554
  whilebody554:
    CALL SENSOR.READPERCENT VLV_READER1_92 F.2
    CALL SENSOR.READPERCENT VLV_READER2_92 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_92 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_92
    ADDF VLV_ERRSUM_92 VLV_ERROR_92 VLV_ERRSUM_92
    MULF VLV_ERROR_92 VLV_KP_92 F.1
    SUBF VLV_ERROR_92 VLV_OLDERROR_92 F.3
    MULF F.3 VLV_KD_92 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_92 VLV_KI_92 F.1
    ADDF F.0 F.1 VLV_U_92
    CALL TEXT.APPEND VLV_I_92 VLV_D_92 S.0
    ADDF VLV_VELOCIDAD_92 VLV_U_92 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_92 VLV_U_92 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_92 VLV_OLDERROR_92
    CALL SENSOR.READPERCENT VLV_READER_92 F.0
    JR_GTF F.0 10.0 whilebody554
  endwhile554:
    CALL TEXT.APPEND VLV_I_92 VLV_D_92 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL1SPIDCROSSF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSSF_5:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_100 VGV_SENTIDO_MOTORES VLV_VMAX_100
    STRINGS DUPLICATE 'B' VLV_I_100
    STRINGS DUPLICATE 'C' VLV_D_100
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_100
    MOVEF_F 150.0 VLV_ACCELENCODER_100
    MOVEF_F 0.0 VLV_U_100
    MOVEF_F 0.0 VLV_ERRSUM_100
    MOVEF_F 0.0 VLV_OLDERROR_100
    CALL MOTOR.RESETCOUNT 'C'
  while579:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or580
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile579
  or580:
  whilebody579:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf584
    DATA8 flag584
    DIVF F.2 VLV_ACCELENCODER_100 tmpf584
    CP_EQF 0.0 VLV_ACCELENCODER_100 flag584
    SELECTF flag584 0.0 tmpf584 F.1

    ADDF VLV_VMAX_100 VLV_V0_100 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_100 VLV_VEL_100
    DATA8 flag588
	CP_LTF VLV_VEL_100 VLV_VMAX_100 flag588
	SELECTF flag588 VLV_VEL_100 VLV_VMAX_100 VLV_VEL_100
    MATH ABS VLV_VEL_100 F.0
    DATAF tmpf590
    DATA8 flag590
    DIVF VLV_VEL_100 F.0 tmpf590
    CP_EQF 0.0 F.0 flag590
    SELECTF flag590 0.0 tmpf590 VLV_SENTIDO_100

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_100 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_100
    MULF VLV_ERRSUM_100 0.9 F.0
    ADDF F.0 VLV_ERROR_100 VLV_ERRSUM_100
    MULF VLV_ERROR_100 VLV_KP_100 F.1
    SUBF VLV_ERROR_100 VLV_OLDERROR_100 F.3
    MULF F.3 VLV_KD_100 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_100 VLV_KI_100 F.1
    ADDF F.0 F.1 VLV_U_100
    CALL TEXT.APPEND VLV_I_100 VLV_D_100 S.0
    ADDF VLV_VEL_100 VLV_U_100 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_100 VLV_U_100 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_100 VLV_OLDERROR_100
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody579
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody579
  endwhile579:
    CALL TEXT.APPEND VLV_I_100 VLV_D_100 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_107 F.0 VLV_ENCDIFF_107
    MATH ABS VLV_ENCDIFF_107 F.0
    DATAF tmpf616
    DATA8 flag616
    DIVF VLV_ENCDIFF_107 F.0 tmpf616
    CP_EQF 0.0 F.0 flag616
    SELECTF flag616 0.0 tmpf616 VLV_SIGNO_107

    JR_EQF VLV_ENCDIFF_107 0.0 else617_1
  while618:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 15.0 endwhile618
  whilebody618:
    MULF VLV_SIGNO_107 VLV_V_107 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 15.0 whilebody618
  endwhile618:
    CALL MOTOR.STOP 'A' 'True'
  else617_1:
  endif617:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEASAFE_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_111 F.0 VLV_ENCDIFF_111
    MATH ABS VLV_ENCDIFF_111 F.0
    DATAF tmpf631
    DATA8 flag631
    DIVF VLV_ENCDIFF_111 F.0 tmpf631
    CP_EQF 0.0 F.0 flag631
    SELECTF flag631 0.0 tmpf631 VLV_SIGNO_111

    MATH ABS VLV_ENCDIFF_111 F.4
    DATAF tmpf633
    DATA8 flag633
    DIVF F.4 100.0 tmpf633
    CP_EQF 0.0 100.0 flag633
    SELECTF flag633 0.0 tmpf633 F.3

    DATAF tmpf634
    DATA8 flag634
    DIVF VLV_V_111 20.0 tmpf634
    CP_EQF 0.0 20.0 flag634
    SELECTF flag634 0.0 tmpf634 F.4

    DATAF tmpf635
    DATA8 flag635
    DIVF F.3 F.4 tmpf635
    CP_EQF 0.0 F.4 flag635
    SELECTF flag635 0.0 tmpf635 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag638
	CP_GTF F.0 400.0 flag638
	SELECTF flag638 F.0 400.0 VLV_SAFETYTIMER_111
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_111 0.0 else640_1
  while641:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile641
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 2000.0 endwhile641
  whilebody641:
    MULF VLV_SIGNO_111 VLV_V_111 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and648
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 2000.0 whilebody641
  and648:
  endwhile641:
    CALL MOTOR.STOP 'A' 'True'
  else640_1:
  endif640:
RETSUB_F_BMOVEASAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEASAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_117 F.0 VLV_ENCDIFF_117
    MATH ABS VLV_ENCDIFF_117 F.0
    DATAF tmpf657
    DATA8 flag657
    DIVF VLV_ENCDIFF_117 F.0 tmpf657
    CP_EQF 0.0 F.0 flag657
    SELECTF flag657 0.0 tmpf657 VLV_SIGNO_117

    JR_EQF VLV_ENCDIFF_117 0.0 else658_1
    MULF VLV_SIGNO_117 VLV_V_117 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while661:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_117 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile661
  whilebody661:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_117 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody661
  endwhile661:
    CALL MOTOR.STOP 'D' 'True'
  else658_1:
  endif658:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while670:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_120 endwhile670
  whilebody670:
    MOVEF_8 VLV_V_120 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_120 whilebody670
  endwhile670:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_121 F.0 VLV_ENCDIFF_121
    MATH ABS VLV_ENCDIFF_121 F.0
    DATAF tmpf678
    DATA8 flag678
    DIVF VLV_ENCDIFF_121 F.0 tmpf678
    CP_EQF 0.0 F.0 flag678
    SELECTF flag678 0.0 tmpf678 VLV_SIGNO_121

    MATH ABS VLV_ENCDIFF_121 F.4
    DATAF tmpf680
    DATA8 flag680
    DIVF F.4 100.0 tmpf680
    CP_EQF 0.0 100.0 flag680
    SELECTF flag680 0.0 tmpf680 F.3

    DATAF tmpf681
    DATA8 flag681
    DIVF VLV_V_121 20.0 tmpf681
    CP_EQF 0.0 20.0 flag681
    SELECTF flag681 0.0 tmpf681 F.4

    DATAF tmpf682
    DATA8 flag682
    DIVF F.3 F.4 tmpf682
    CP_EQF 0.0 F.4 flag682
    SELECTF flag682 0.0 tmpf682 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag685
	CP_GTF F.0 400.0 flag685
	SELECTF flag685 F.0 400.0 VLV_SAFETYTIMER_121
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_121 0.0 else687_1
  while688:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_121 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile688
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_121 endwhile688
  whilebody688:
    MULF VLV_SIGNO_121 VLV_V_121 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_121 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_121 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and699
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_121 whilebody688
  and699:
  endwhile688:
    CALL MOTOR.STOP 'D' 'True'
  else687_1:
  endif687:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer705
	DATA8 no705
	DATA8 mode8705
	
	MOVEF_8 1.0 no705
	SUB8 no705 1 no705
	DIV8 no705 4 layer705
	MATH MOD8 no705 4 no705

	MOVEF_8 4.0 mode8705
	
	INPUT_DEVICE READY_RAW layer705 no705 0 mode8705 0
    MOVEF_F 15.0 VLV_RED_122
    MOVEF_F 60.0 VLV_YELLOW_122
    MOVEF_F 170.0 VLV_GREEN_122
    MOVEF_F 330.0 VLV_BLUE_122
    MOVEF_F 10.0 VLV_VALUENEGRO_122
    MOVEF_F 100.0 VLV_VALUEBLANCO_122
    MOVEF_F 147.0 VLV_RWHITE_122
    MOVEF_F 143.0 VLV_GWHITE_122
    MOVEF_F 160.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    MOVEF_F 0.0 VLV_COLOR_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_122
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_122
  for711:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor711
  forbody711:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_122
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_122 VLV_RGB_122
    DATAF tmpf716
    DATA8 flag716
    DIVF VLV_RRAW_122 VLV_RWHITE_122 tmpf716
    CP_EQF 0.0 VLV_RWHITE_122 flag716
    SELECTF flag716 0.0 tmpf716 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    DATAF tmpf720
    DATA8 flag720
    DIVF VLV_GRAW_122 VLV_GWHITE_122 tmpf720
    CP_EQF 0.0 VLV_GWHITE_122 flag720
    SELECTF flag720 0.0 tmpf720 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    DATAF tmpf724
    DATA8 flag724
    DIVF VLV_BRAW_122 VLV_BWHITE_122 tmpf724
    CP_EQF 0.0 VLV_BWHITE_122 flag724
    SELECTF flag724 0.0 tmpf724 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_RNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.3 VLV_GNORMA_122
    DATA8 flag730
	CP_GTF F.2 F.3 flag730
	SELECTF flag730 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_BNORMA_122
    DATA8 flag732
	CP_GTF F.1 F.2 flag732
	SELECTF flag732 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    DATA32 milliseconds734
	MOVEF_32 5.0 milliseconds734
	DATA32 timer734
	TIMER_WAIT milliseconds734 timer734
	TIMER_READY timer734
    ADDF VLV_J_122 1.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody711
  endfor711:
    MOVEF_F 1.0 VLV_J_122
  for736:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor736
  forbody736:
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_122
    ADDF F.0 F.1 VLV_RNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_122
    ADDF F.0 F.1 VLV_GNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_122
    ADDF F.0 F.1 VLV_BNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_122
    ADDF F.0 F.1 VLV_MAX_122
    ADDF VLV_J_122 2.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody736
  endfor736:
    DATAF tmpf754
    DATA8 flag754
    DIVF VLV_RNORM_122 VLV_REPS_122 tmpf754
    CP_EQF 0.0 VLV_REPS_122 flag754
    SELECTF flag754 0.0 tmpf754 VLV_RNORM_122

    DATAF tmpf755
    DATA8 flag755
    DIVF VLV_GNORM_122 VLV_REPS_122 tmpf755
    CP_EQF 0.0 VLV_REPS_122 flag755
    SELECTF flag755 0.0 tmpf755 VLV_GNORM_122

    DATAF tmpf756
    DATA8 flag756
    DIVF VLV_BNORM_122 VLV_REPS_122 tmpf756
    CP_EQF 0.0 VLV_REPS_122 flag756
    SELECTF flag756 0.0 tmpf756 VLV_BNORM_122

    DATAF tmpf757
    DATA8 flag757
    DIVF VLV_MAX_122 VLV_REPS_122 tmpf757
    CP_EQF 0.0 VLV_REPS_122 flag757
    SELECTF flag757 0.0 tmpf757 VLV_MAX_122

    DATA8 flag758
	CP_LTF VLV_RNORM_122 VLV_GNORM_122 flag758
	SELECTF flag758 VLV_RNORM_122 VLV_GNORM_122 F.0
    DATA8 flag759
	CP_LTF F.0 VLV_BNORM_122 flag759
	SELECTF flag759 F.0 VLV_BNORM_122 VLV_MIN_122
    JR_NEQF VLV_MAX_122 VLV_MIN_122 else760_1
    MOVEF_F 0.0 VLV_HUE_122
    JR endif760
  else760_1:
    JR_NEQF VLV_MAX_122 VLV_RNORM_122 else760_2
    JR_LTF VLV_GNORM_122 VLV_BNORM_122 else761_1
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_122 VLV_MIN_122 F.1
    DATAF tmpf765
    DATA8 flag765
    DIVF F.0 F.1 tmpf765
    CP_EQF 0.0 F.1 flag765
    SELECTF flag765 0.0 tmpf765 VLV_HUE_122

    JR endif761
  else761_1:
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf769
    DATA8 flag769
    DIVF F.1 F.2 tmpf769
    CP_EQF 0.0 F.2 flag769
    SELECTF flag769 0.0 tmpf769 F.0

    ADDF F.0 360.0 VLV_HUE_122
  else761_2:
  endif761:
    JR endif760
  else760_2:
    JR_NEQF VLV_MAX_122 VLV_GNORM_122 else760_3
    SUBF VLV_BNORM_122 VLV_RNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf774
    DATA8 flag774
    DIVF F.1 F.2 tmpf774
    CP_EQF 0.0 F.2 flag774
    SELECTF flag774 0.0 tmpf774 F.0

    ADDF F.0 120.0 VLV_HUE_122
    JR endif760
  else760_3:
    SUBF VLV_RNORM_122 VLV_GNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf779
    DATA8 flag779
    DIVF F.1 F.2 tmpf779
    CP_EQF 0.0 F.2 flag779
    SELECTF flag779 0.0 tmpf779 F.0

    ADDF F.0 240.0 VLV_HUE_122
  else760_4:
  endif760:
    JR_NEQF VLV_MAX_122 0.0 else781_1
    MOVEF_F 0.0 VLV_SAT_122
    JR endif781
  else781_1:
    DATAF tmpf782
    DATA8 flag782
    DIVF VLV_MIN_122 VLV_MAX_122 tmpf782
    CP_EQF 0.0 VLV_MAX_122 flag782
    SELECTF flag782 0.0 tmpf782 F.0

    SUBF 1.0 F.0 VLV_SAT_122
  else781_2:
  endif781:
    MOVEF_F VLV_MAX_122 VLV_VALUE_122
    ADDF VLV_VALUEBLANCO_122 VLV_VALUENEGRO_122 F.0
    DATAF tmpf785
    DATA8 flag785
    DIVF F.0 2.0 tmpf785
    CP_EQF 0.0 2.0 flag785
    SELECTF flag785 0.0 tmpf785 VLV_RGBGREY_122

    ADDF VLV_RNORM_122 VLV_GNORM_122 F.1
    ADDF F.1 VLV_BNORM_122 F.0
    JR_GTF F.0 3.0 else786_1
    MOVEF_F 0.0 VLV_COLOR_122
    JR endif786
  else786_1:
    JR_GTEQF VLV_SAT_122 0.4 else789_1
    JR_LTEQF VLV_VALUE_122 VLV_RGBGREY_122 else790_1
    MOVEF_F 6.0 VLV_COLOR_122
    JR endif790
  else790_1:
    MOVEF_F 1.0 VLV_COLOR_122
  else790_2:
  endif790:
    JR endif789
  else789_1:
    JR_LTF VLV_HUE_122 0.0 else791_1
    JR_GTEQF VLV_HUE_122 VLV_RED_122 else791_1
    MOVEF_F 5.0 VLV_COLOR_122
    JR endif791
  else791_1:
    JR_LTF VLV_HUE_122 VLV_RED_122 else791_2
    JR_GTEQF VLV_HUE_122 VLV_YELLOW_122 else791_2
    MOVEF_F 4.0 VLV_COLOR_122
    JR endif791
  else791_2:
    JR_LTF VLV_HUE_122 VLV_YELLOW_122 else791_3
    JR_GTEQF VLV_HUE_122 VLV_GREEN_122 else791_3
    MOVEF_F 3.0 VLV_COLOR_122
    JR endif791
  else791_3:
    JR_LTF VLV_HUE_122 VLV_GREEN_122 else791_4
    JR_GTEQF VLV_HUE_122 VLV_BLUE_122 else791_4
    MOVEF_F 2.0 VLV_COLOR_122
    JR endif791
  else791_4:
    MOVEF_F 5.0 VLV_COLOR_122
  else791_5:
  endif791:
  else789_2:
  endif789:
  else786_2:
  endif786:
    STRINGS VALUE_FORMATTED VLV_RRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_122 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB807:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer808
	DATA8 no808
	DATA8 mode8808
	
	MOVEF_8 2.0 no808
	SUB8 no808 1 no808
	DIV8 no808 4 layer808
	MATH MOD8 no808 4 no808

	MOVEF_8 4.0 mode8808
	
	INPUT_DEVICE READY_RAW layer808 no808 0 mode8808 0
    MOVEF_F 15.0 VLV_RED_123
    MOVEF_F 60.0 VLV_YELLOW_123
    MOVEF_F 170.0 VLV_GREEN_123
    MOVEF_F 330.0 VLV_BLUE_123
    MOVEF_F 10.0 VLV_VALUENEGRO_123
    MOVEF_F 100.0 VLV_VALUEBLANCO_123
    MOVEF_F 147.0 VLV_RWHITE_123
    MOVEF_F 143.0 VLV_GWHITE_123
    MOVEF_F 160.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    MOVEF_F 0.0 VLV_COLOR_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_123
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_123
  for814:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor814
  forbody814:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_123
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_123 VLV_RGB_123
    DATAF tmpf819
    DATA8 flag819
    DIVF VLV_RRAW_123 VLV_RWHITE_123 tmpf819
    CP_EQF 0.0 VLV_RWHITE_123 flag819
    SELECTF flag819 0.0 tmpf819 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    DATAF tmpf823
    DATA8 flag823
    DIVF VLV_GRAW_123 VLV_GWHITE_123 tmpf823
    CP_EQF 0.0 VLV_GWHITE_123 flag823
    SELECTF flag823 0.0 tmpf823 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    DATAF tmpf827
    DATA8 flag827
    DIVF VLV_BRAW_123 VLV_BWHITE_123 tmpf827
    CP_EQF 0.0 VLV_BWHITE_123 flag827
    SELECTF flag827 0.0 tmpf827 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_RNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.3 VLV_GNORMA_123
    DATA8 flag833
	CP_GTF F.2 F.3 flag833
	SELECTF flag833 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_BNORMA_123
    DATA8 flag835
	CP_GTF F.1 F.2 flag835
	SELECTF flag835 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    DATA32 milliseconds837
	MOVEF_32 5.0 milliseconds837
	DATA32 timer837
	TIMER_WAIT milliseconds837 timer837
	TIMER_READY timer837
    ADDF VLV_J_123 1.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody814
  endfor814:
    MOVEF_F 1.0 VLV_J_123
  for839:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor839
  forbody839:
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_123
    ADDF F.0 F.1 VLV_RNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_123
    ADDF F.0 F.1 VLV_GNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_123
    ADDF F.0 F.1 VLV_BNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_123
    ADDF F.0 F.1 VLV_MAX_123
    ADDF VLV_J_123 2.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody839
  endfor839:
    DATAF tmpf857
    DATA8 flag857
    DIVF VLV_RNORM_123 VLV_REPS_123 tmpf857
    CP_EQF 0.0 VLV_REPS_123 flag857
    SELECTF flag857 0.0 tmpf857 VLV_RNORM_123

    DATAF tmpf858
    DATA8 flag858
    DIVF VLV_GNORM_123 VLV_REPS_123 tmpf858
    CP_EQF 0.0 VLV_REPS_123 flag858
    SELECTF flag858 0.0 tmpf858 VLV_GNORM_123

    DATAF tmpf859
    DATA8 flag859
    DIVF VLV_BNORM_123 VLV_REPS_123 tmpf859
    CP_EQF 0.0 VLV_REPS_123 flag859
    SELECTF flag859 0.0 tmpf859 VLV_BNORM_123

    DATAF tmpf860
    DATA8 flag860
    DIVF VLV_MAX_123 VLV_REPS_123 tmpf860
    CP_EQF 0.0 VLV_REPS_123 flag860
    SELECTF flag860 0.0 tmpf860 VLV_MAX_123

    DATA8 flag861
	CP_LTF VLV_RNORM_123 VLV_GNORM_123 flag861
	SELECTF flag861 VLV_RNORM_123 VLV_GNORM_123 F.0
    DATA8 flag862
	CP_LTF F.0 VLV_BNORM_123 flag862
	SELECTF flag862 F.0 VLV_BNORM_123 VLV_MIN_123
    JR_NEQF VLV_MAX_123 VLV_MIN_123 else863_1
    MOVEF_F 0.0 VLV_HUE_123
    JR endif863
  else863_1:
    JR_NEQF VLV_MAX_123 VLV_RNORM_123 else863_2
    JR_LTF VLV_GNORM_123 VLV_BNORM_123 else864_1
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_123 VLV_MIN_123 F.1
    DATAF tmpf868
    DATA8 flag868
    DIVF F.0 F.1 tmpf868
    CP_EQF 0.0 F.1 flag868
    SELECTF flag868 0.0 tmpf868 VLV_HUE_123

    JR endif864
  else864_1:
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf872
    DATA8 flag872
    DIVF F.1 F.2 tmpf872
    CP_EQF 0.0 F.2 flag872
    SELECTF flag872 0.0 tmpf872 F.0

    ADDF F.0 360.0 VLV_HUE_123
  else864_2:
  endif864:
    JR endif863
  else863_2:
    JR_NEQF VLV_MAX_123 VLV_GNORM_123 else863_3
    SUBF VLV_BNORM_123 VLV_RNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf877
    DATA8 flag877
    DIVF F.1 F.2 tmpf877
    CP_EQF 0.0 F.2 flag877
    SELECTF flag877 0.0 tmpf877 F.0

    ADDF F.0 120.0 VLV_HUE_123
    JR endif863
  else863_3:
    SUBF VLV_RNORM_123 VLV_GNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf882
    DATA8 flag882
    DIVF F.1 F.2 tmpf882
    CP_EQF 0.0 F.2 flag882
    SELECTF flag882 0.0 tmpf882 F.0

    ADDF F.0 240.0 VLV_HUE_123
  else863_4:
  endif863:
    JR_NEQF VLV_MAX_123 0.0 else884_1
    MOVEF_F 0.0 VLV_SAT_123
    JR endif884
  else884_1:
    DATAF tmpf885
    DATA8 flag885
    DIVF VLV_MIN_123 VLV_MAX_123 tmpf885
    CP_EQF 0.0 VLV_MAX_123 flag885
    SELECTF flag885 0.0 tmpf885 F.0

    SUBF 1.0 F.0 VLV_SAT_123
  else884_2:
  endif884:
    MOVEF_F VLV_MAX_123 VLV_VALUE_123
    ADDF VLV_VALUEBLANCO_123 VLV_VALUENEGRO_123 F.0
    DATAF tmpf888
    DATA8 flag888
    DIVF F.0 2.0 tmpf888
    CP_EQF 0.0 2.0 flag888
    SELECTF flag888 0.0 tmpf888 VLV_RGBGREY_123

    ADDF VLV_RNORM_123 VLV_GNORM_123 F.1
    ADDF F.1 VLV_BNORM_123 F.0
    JR_GTF F.0 3.0 else889_1
    MOVEF_F 0.0 VLV_COLOR_123
    JR endif889
  else889_1:
    JR_GTEQF VLV_SAT_123 0.4 else892_1
    JR_LTEQF VLV_VALUE_123 VLV_RGBGREY_123 else893_1
    MOVEF_F 6.0 VLV_COLOR_123
    JR endif893
  else893_1:
    MOVEF_F 1.0 VLV_COLOR_123
  else893_2:
  endif893:
    JR endif892
  else892_1:
    JR_LTF VLV_HUE_123 0.0 else894_1
    JR_GTEQF VLV_HUE_123 VLV_RED_123 else894_1
    MOVEF_F 5.0 VLV_COLOR_123
    JR endif894
  else894_1:
    JR_LTF VLV_HUE_123 VLV_RED_123 else894_2
    JR_GTEQF VLV_HUE_123 VLV_YELLOW_123 else894_2
    MOVEF_F 4.0 VLV_COLOR_123
    JR endif894
  else894_2:
    JR_LTF VLV_HUE_123 VLV_YELLOW_123 else894_3
    JR_GTEQF VLV_HUE_123 VLV_GREEN_123 else894_3
    MOVEF_F 3.0 VLV_COLOR_123
    JR endif894
  else894_3:
    JR_LTF VLV_HUE_123 VLV_GREEN_123 else894_4
    JR_GTEQF VLV_HUE_123 VLV_BLUE_123 else894_4
    MOVEF_F 2.0 VLV_COLOR_123
    JR endif894
  else894_4:
    MOVEF_F 5.0 VLV_COLOR_123
  else894_5:
  endif894:
  else892_2:
  endif892:
  else889_2:
  endif889:
    STRINGS VALUE_FORMATTED VLV_RRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_123 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB910:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer911
	DATA8 no911
	DATA8 mode8911
	
	MOVEF_8 3.0 no911
	SUB8 no911 1 no911
	DIV8 no911 4 layer911
	MATH MOD8 no911 4 no911

	MOVEF_8 4.0 mode8911
	
	INPUT_DEVICE READY_RAW layer911 no911 0 mode8911 0
    MOVEF_F 15.0 VLV_RED_124
    MOVEF_F 60.0 VLV_YELLOW_124
    MOVEF_F 170.0 VLV_GREEN_124
    MOVEF_F 330.0 VLV_BLUE_124
    MOVEF_F 10.0 VLV_VALUENEGRO_124
    MOVEF_F 100.0 VLV_VALUEBLANCO_124
    MOVEF_F 147.0 VLV_RWHITE_124
    MOVEF_F 143.0 VLV_GWHITE_124
    MOVEF_F 160.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    MOVEF_F 0.0 VLV_COLOR_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_124
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_124
  for917:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor917
  forbody917:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_124
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_124 VLV_RGB_124
    DATAF tmpf922
    DATA8 flag922
    DIVF VLV_RRAW_124 VLV_RWHITE_124 tmpf922
    CP_EQF 0.0 VLV_RWHITE_124 flag922
    SELECTF flag922 0.0 tmpf922 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    DATAF tmpf926
    DATA8 flag926
    DIVF VLV_GRAW_124 VLV_GWHITE_124 tmpf926
    CP_EQF 0.0 VLV_GWHITE_124 flag926
    SELECTF flag926 0.0 tmpf926 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    DATAF tmpf930
    DATA8 flag930
    DIVF VLV_BRAW_124 VLV_BWHITE_124 tmpf930
    CP_EQF 0.0 VLV_BWHITE_124 flag930
    SELECTF flag930 0.0 tmpf930 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_RNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.3 VLV_GNORMA_124
    DATA8 flag936
	CP_GTF F.2 F.3 flag936
	SELECTF flag936 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_BNORMA_124
    DATA8 flag938
	CP_GTF F.1 F.2 flag938
	SELECTF flag938 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    DATA32 milliseconds940
	MOVEF_32 5.0 milliseconds940
	DATA32 timer940
	TIMER_WAIT milliseconds940 timer940
	TIMER_READY timer940
    ADDF VLV_J_124 1.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody917
  endfor917:
    MOVEF_F 1.0 VLV_J_124
  for942:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor942
  forbody942:
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_124
    ADDF F.0 F.1 VLV_RNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_124
    ADDF F.0 F.1 VLV_GNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_124
    ADDF F.0 F.1 VLV_BNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_124
    ADDF F.0 F.1 VLV_MAX_124
    ADDF VLV_J_124 2.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody942
  endfor942:
    DATAF tmpf960
    DATA8 flag960
    DIVF VLV_RNORM_124 VLV_REPS_124 tmpf960
    CP_EQF 0.0 VLV_REPS_124 flag960
    SELECTF flag960 0.0 tmpf960 VLV_RNORM_124

    DATAF tmpf961
    DATA8 flag961
    DIVF VLV_GNORM_124 VLV_REPS_124 tmpf961
    CP_EQF 0.0 VLV_REPS_124 flag961
    SELECTF flag961 0.0 tmpf961 VLV_GNORM_124

    DATAF tmpf962
    DATA8 flag962
    DIVF VLV_BNORM_124 VLV_REPS_124 tmpf962
    CP_EQF 0.0 VLV_REPS_124 flag962
    SELECTF flag962 0.0 tmpf962 VLV_BNORM_124

    DATAF tmpf963
    DATA8 flag963
    DIVF VLV_MAX_124 VLV_REPS_124 tmpf963
    CP_EQF 0.0 VLV_REPS_124 flag963
    SELECTF flag963 0.0 tmpf963 VLV_MAX_124

    DATA8 flag964
	CP_LTF VLV_RNORM_124 VLV_GNORM_124 flag964
	SELECTF flag964 VLV_RNORM_124 VLV_GNORM_124 F.0
    DATA8 flag965
	CP_LTF F.0 VLV_BNORM_124 flag965
	SELECTF flag965 F.0 VLV_BNORM_124 VLV_MIN_124
    JR_NEQF VLV_MAX_124 VLV_MIN_124 else966_1
    MOVEF_F 0.0 VLV_HUE_124
    JR endif966
  else966_1:
    JR_NEQF VLV_MAX_124 VLV_RNORM_124 else966_2
    JR_LTF VLV_GNORM_124 VLV_BNORM_124 else967_1
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_124 VLV_MIN_124 F.1
    DATAF tmpf971
    DATA8 flag971
    DIVF F.0 F.1 tmpf971
    CP_EQF 0.0 F.1 flag971
    SELECTF flag971 0.0 tmpf971 VLV_HUE_124

    JR endif967
  else967_1:
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf975
    DATA8 flag975
    DIVF F.1 F.2 tmpf975
    CP_EQF 0.0 F.2 flag975
    SELECTF flag975 0.0 tmpf975 F.0

    ADDF F.0 360.0 VLV_HUE_124
  else967_2:
  endif967:
    JR endif966
  else966_2:
    JR_NEQF VLV_MAX_124 VLV_GNORM_124 else966_3
    SUBF VLV_BNORM_124 VLV_RNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf980
    DATA8 flag980
    DIVF F.1 F.2 tmpf980
    CP_EQF 0.0 F.2 flag980
    SELECTF flag980 0.0 tmpf980 F.0

    ADDF F.0 120.0 VLV_HUE_124
    JR endif966
  else966_3:
    SUBF VLV_RNORM_124 VLV_GNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf985
    DATA8 flag985
    DIVF F.1 F.2 tmpf985
    CP_EQF 0.0 F.2 flag985
    SELECTF flag985 0.0 tmpf985 F.0

    ADDF F.0 240.0 VLV_HUE_124
  else966_4:
  endif966:
    JR_NEQF VLV_MAX_124 0.0 else987_1
    MOVEF_F 0.0 VLV_SAT_124
    JR endif987
  else987_1:
    DATAF tmpf988
    DATA8 flag988
    DIVF VLV_MIN_124 VLV_MAX_124 tmpf988
    CP_EQF 0.0 VLV_MAX_124 flag988
    SELECTF flag988 0.0 tmpf988 F.0

    SUBF 1.0 F.0 VLV_SAT_124
  else987_2:
  endif987:
    MOVEF_F VLV_MAX_124 VLV_VALUE_124
    ADDF VLV_VALUEBLANCO_124 VLV_VALUENEGRO_124 F.0
    DATAF tmpf991
    DATA8 flag991
    DIVF F.0 2.0 tmpf991
    CP_EQF 0.0 2.0 flag991
    SELECTF flag991 0.0 tmpf991 VLV_RGBGREY_124

    ADDF VLV_RNORM_124 VLV_GNORM_124 F.1
    ADDF F.1 VLV_BNORM_124 F.0
    JR_GTF F.0 3.0 else992_1
    MOVEF_F 0.0 VLV_COLOR_124
    JR endif992
  else992_1:
    JR_GTEQF VLV_SAT_124 0.4 else995_1
    JR_LTEQF VLV_VALUE_124 VLV_RGBGREY_124 else996_1
    MOVEF_F 6.0 VLV_COLOR_124
    JR endif996
  else996_1:
    MOVEF_F 1.0 VLV_COLOR_124
  else996_2:
  endif996:
    JR endif995
  else995_1:
    JR_LTF VLV_HUE_124 0.0 else997_1
    JR_GTEQF VLV_HUE_124 VLV_RED_124 else997_1
    MOVEF_F 5.0 VLV_COLOR_124
    JR endif997
  else997_1:
    JR_LTF VLV_HUE_124 VLV_RED_124 else997_2
    JR_GTEQF VLV_HUE_124 VLV_YELLOW_124 else997_2
    MOVEF_F 4.0 VLV_COLOR_124
    JR endif997
  else997_2:
    JR_LTF VLV_HUE_124 VLV_YELLOW_124 else997_3
    JR_GTEQF VLV_HUE_124 VLV_GREEN_124 else997_3
    MOVEF_F 3.0 VLV_COLOR_124
    JR endif997
  else997_3:
    JR_LTF VLV_HUE_124 VLV_GREEN_124 else997_4
    JR_GTEQF VLV_HUE_124 VLV_BLUE_124 else997_4
    MOVEF_F 2.0 VLV_COLOR_124
    JR endif997
  else997_4:
    MOVEF_F 5.0 VLV_COLOR_124
  else997_5:
  endif997:
  else995_2:
  endif995:
  else992_2:
  endif992:
    STRINGS VALUE_FORMATTED VLV_RRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_124 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1013 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1013:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer1014
	DATA8 no1014
	DATA8 mode81014
	
	MOVEF_8 4.0 no1014
	SUB8 no1014 1 no1014
	DIV8 no1014 4 layer1014
	MATH MOD8 no1014 4 no1014

	MOVEF_8 4.0 mode81014
	
	INPUT_DEVICE READY_RAW layer1014 no1014 0 mode81014 0
    MOVEF_F 15.0 VLV_RED_125
    MOVEF_F 60.0 VLV_YELLOW_125
    MOVEF_F 170.0 VLV_GREEN_125
    MOVEF_F 330.0 VLV_BLUE_125
    MOVEF_F 10.0 VLV_VALUENEGRO_125
    MOVEF_F 100.0 VLV_VALUEBLANCO_125
    MOVEF_F 147.0 VLV_RWHITE_125
    MOVEF_F 143.0 VLV_GWHITE_125
    MOVEF_F 160.0 VLV_BWHITE_125
    MOVEF_F 0.0 VLV_HUE_125
    MOVEF_F 0.0 VLV_SAT_125
    MOVEF_F 0.0 VLV_VALUE_125
    MOVEF_F 0.0 VLV_COLOR_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_125
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_125
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_125
  for1020:
    JR_GTF VLV_J_125 VLV_REPS_125 endfor1020
  forbody1020:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_125
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_125 VLV_RGB_125
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_125 VLV_RGB_125
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_125 VLV_RGB_125
    DATAF tmpf1025
    DATA8 flag1025
    DIVF VLV_RRAW_125 VLV_RWHITE_125 tmpf1025
    CP_EQF 0.0 VLV_RWHITE_125 flag1025
    SELECTF flag1025 0.0 tmpf1025 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_RNORMA_125
    DATAF tmpf1029
    DATA8 flag1029
    DIVF VLV_GRAW_125 VLV_GWHITE_125 tmpf1029
    CP_EQF 0.0 VLV_GWHITE_125 flag1029
    SELECTF flag1029 0.0 tmpf1029 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_GNORMA_125
    DATAF tmpf1033
    DATA8 flag1033
    DIVF VLV_BRAW_125 VLV_BWHITE_125 tmpf1033
    CP_EQF 0.0 VLV_BWHITE_125 flag1033
    SELECTF flag1033 0.0 tmpf1033 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_BNORMA_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.2 VLV_RNORMA_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.3 VLV_GNORMA_125
    DATA8 flag1039
	CP_GTF F.2 F.3 flag1039
	SELECTF flag1039 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_125 F.2 VLV_BNORMA_125
    DATA8 flag1041
	CP_GTF F.1 F.2 flag1041
	SELECTF flag1041 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_125 F.0 VLV_MAXA_125
    DATA32 milliseconds1043
	MOVEF_32 5.0 milliseconds1043
	DATA32 timer1043
	TIMER_WAIT milliseconds1043 timer1043
	TIMER_READY timer1043
    ADDF VLV_J_125 1.0 VLV_J_125
    JR_LTEQF VLV_J_125 VLV_REPS_125 forbody1020
  endfor1020:
    MOVEF_F 1.0 VLV_J_125
  for1045:
    JR_GTF VLV_J_125 VLV_REPS_125 endfor1045
  forbody1045:
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_RNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_125
    ADDF F.0 F.1 VLV_RNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_GNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_125
    ADDF F.0 F.1 VLV_GNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_BNORMA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_125
    ADDF F.0 F.1 VLV_BNORM_125
    CALL ARRAYGET_FLOAT VLV_J_125 F.0 VLV_MAXA_125
    ADDF VLV_J_125 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_125
    ADDF F.0 F.1 VLV_MAX_125
    ADDF VLV_J_125 2.0 VLV_J_125
    JR_LTEQF VLV_J_125 VLV_REPS_125 forbody1045
  endfor1045:
    DATAF tmpf1063
    DATA8 flag1063
    DIVF VLV_RNORM_125 VLV_REPS_125 tmpf1063
    CP_EQF 0.0 VLV_REPS_125 flag1063
    SELECTF flag1063 0.0 tmpf1063 VLV_RNORM_125

    DATAF tmpf1064
    DATA8 flag1064
    DIVF VLV_GNORM_125 VLV_REPS_125 tmpf1064
    CP_EQF 0.0 VLV_REPS_125 flag1064
    SELECTF flag1064 0.0 tmpf1064 VLV_GNORM_125

    DATAF tmpf1065
    DATA8 flag1065
    DIVF VLV_BNORM_125 VLV_REPS_125 tmpf1065
    CP_EQF 0.0 VLV_REPS_125 flag1065
    SELECTF flag1065 0.0 tmpf1065 VLV_BNORM_125

    DATAF tmpf1066
    DATA8 flag1066
    DIVF VLV_MAX_125 VLV_REPS_125 tmpf1066
    CP_EQF 0.0 VLV_REPS_125 flag1066
    SELECTF flag1066 0.0 tmpf1066 VLV_MAX_125

    DATA8 flag1067
	CP_LTF VLV_RNORM_125 VLV_GNORM_125 flag1067
	SELECTF flag1067 VLV_RNORM_125 VLV_GNORM_125 F.0
    DATA8 flag1068
	CP_LTF F.0 VLV_BNORM_125 flag1068
	SELECTF flag1068 F.0 VLV_BNORM_125 VLV_MIN_125
    JR_NEQF VLV_MAX_125 VLV_MIN_125 else1069_1
    MOVEF_F 0.0 VLV_HUE_125
    JR endif1069
  else1069_1:
    JR_NEQF VLV_MAX_125 VLV_RNORM_125 else1069_2
    JR_LTF VLV_GNORM_125 VLV_BNORM_125 else1070_1
    SUBF VLV_GNORM_125 VLV_BNORM_125 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_125 VLV_MIN_125 F.1
    DATAF tmpf1074
    DATA8 flag1074
    DIVF F.0 F.1 tmpf1074
    CP_EQF 0.0 F.1 flag1074
    SELECTF flag1074 0.0 tmpf1074 VLV_HUE_125

    JR endif1070
  else1070_1:
    SUBF VLV_GNORM_125 VLV_BNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1078
    DATA8 flag1078
    DIVF F.1 F.2 tmpf1078
    CP_EQF 0.0 F.2 flag1078
    SELECTF flag1078 0.0 tmpf1078 F.0

    ADDF F.0 360.0 VLV_HUE_125
  else1070_2:
  endif1070:
    JR endif1069
  else1069_2:
    JR_NEQF VLV_MAX_125 VLV_GNORM_125 else1069_3
    SUBF VLV_BNORM_125 VLV_RNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1083
    DATA8 flag1083
    DIVF F.1 F.2 tmpf1083
    CP_EQF 0.0 F.2 flag1083
    SELECTF flag1083 0.0 tmpf1083 F.0

    ADDF F.0 120.0 VLV_HUE_125
    JR endif1069
  else1069_3:
    SUBF VLV_RNORM_125 VLV_GNORM_125 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_125 VLV_MIN_125 F.2
    DATAF tmpf1088
    DATA8 flag1088
    DIVF F.1 F.2 tmpf1088
    CP_EQF 0.0 F.2 flag1088
    SELECTF flag1088 0.0 tmpf1088 F.0

    ADDF F.0 240.0 VLV_HUE_125
  else1069_4:
  endif1069:
    JR_NEQF VLV_MAX_125 0.0 else1090_1
    MOVEF_F 0.0 VLV_SAT_125
    JR endif1090
  else1090_1:
    DATAF tmpf1091
    DATA8 flag1091
    DIVF VLV_MIN_125 VLV_MAX_125 tmpf1091
    CP_EQF 0.0 VLV_MAX_125 flag1091
    SELECTF flag1091 0.0 tmpf1091 F.0

    SUBF 1.0 F.0 VLV_SAT_125
  else1090_2:
  endif1090:
    MOVEF_F VLV_MAX_125 VLV_VALUE_125
    ADDF VLV_VALUEBLANCO_125 VLV_VALUENEGRO_125 F.0
    DATAF tmpf1094
    DATA8 flag1094
    DIVF F.0 2.0 tmpf1094
    CP_EQF 0.0 2.0 flag1094
    SELECTF flag1094 0.0 tmpf1094 VLV_RGBGREY_125

    ADDF VLV_RNORM_125 VLV_GNORM_125 F.1
    ADDF F.1 VLV_BNORM_125 F.0
    JR_GTF F.0 3.0 else1095_1
    MOVEF_F 0.0 VLV_COLOR_125
    JR endif1095
  else1095_1:
    JR_GTEQF VLV_SAT_125 0.4 else1098_1
    JR_LTEQF VLV_VALUE_125 VLV_RGBGREY_125 else1099_1
    MOVEF_F 6.0 VLV_COLOR_125
    JR endif1099
  else1099_1:
    MOVEF_F 1.0 VLV_COLOR_125
  else1099_2:
  endif1099:
    JR endif1098
  else1098_1:
    JR_LTF VLV_HUE_125 0.0 else1100_1
    JR_GTEQF VLV_HUE_125 VLV_RED_125 else1100_1
    MOVEF_F 5.0 VLV_COLOR_125
    JR endif1100
  else1100_1:
    JR_LTF VLV_HUE_125 VLV_RED_125 else1100_2
    JR_GTEQF VLV_HUE_125 VLV_YELLOW_125 else1100_2
    MOVEF_F 4.0 VLV_COLOR_125
    JR endif1100
  else1100_2:
    JR_LTF VLV_HUE_125 VLV_YELLOW_125 else1100_3
    JR_GTEQF VLV_HUE_125 VLV_GREEN_125 else1100_3
    MOVEF_F 3.0 VLV_COLOR_125
    JR endif1100
  else1100_3:
    JR_LTF VLV_HUE_125 VLV_GREEN_125 else1100_4
    JR_GTEQF VLV_HUE_125 VLV_BLUE_125 else1100_4
    MOVEF_F 2.0 VLV_COLOR_125
    JR endif1100
  else1100_4:
    MOVEF_F 5.0 VLV_COLOR_125
  else1100_5:
  endif1100:
  else1098_2:
  endif1098:
  else1095_2:
  endif1095:
    STRINGS VALUE_FORMATTED VLV_RRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_125 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_125 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_125 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_125 VLV_COLOR_134
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1116:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_134 0.0 else1117_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1117
  else1117_1:
    JR_NEQF VLV_COLOR_134 1.0 else1117_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1117
  else1117_2:
    JR_NEQF VLV_COLOR_134 2.0 else1117_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1117
  else1117_3:
    JR_NEQF VLV_COLOR_134 3.0 else1117_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1117
  else1117_4:
    JR_NEQF VLV_COLOR_134 4.0 else1117_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1117
  else1117_5:
    JR_NEQF VLV_COLOR_134 5.0 else1117_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1117
  else1117_6:
    JR_NEQF VLV_COLOR_134 6.0 else1117_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1117
  else1117_7:
    JR_NEQF VLV_COLOR_134 7.0 else1117_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1117_8:
  endif1117:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_0:
    DATA32 milliseconds1126
	MOVEF_32 150.0 milliseconds1126
	DATA32 timer1126
	TIMER_WAIT milliseconds1126 timer1126
	TIMER_READY timer1126
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 20.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1127:
    MOVEF_F 40.0 VLV_V_117
    MOVEF_F 0.0 VLV_AENC_117
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1128:
    ADDF VGV_NUM_BLOQUES 1.0 VGV_NUM_BLOQUES
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 360.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1130:
    MOVEF_F -60.0 VLV_V_120
    MOVEF_F 500.0 VLV_T_120
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1131:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F -80.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1132:
RETSUB_F_COGER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_0:
SUB_F_SOLTAR_0:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 250.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1133:
    MOVEF_F 40.0 VLV_V_117
    MOVEF_F -70.0 VLV_AENC_117
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1134:
    SUBF VGV_NUM_BLOQUES 4.0 F.0
    DATA8 flag1136
	CP_GTF 0.0 F.0 flag1136
	SELECTF flag1136 0.0 F.0 VGV_NUM_BLOQUES
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F -660.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1137:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 9.25 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1138:
    MOVEF_F 60.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1139:
RETSUB_F_SOLTAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_0:
SUB_F_GIRO90BLOQUES_2:
    MOVEF_F 82.0 VLV_GRADOS_90_137
    JR_GTEQF VGV_NUM_BLOQUES 3.0 else1140_1
    MOVEF_F VLV_VEL_B_137 VLV_V1_37
    MOVEF_F VLV_VEL_C_137 VLV_V2_37
    MOVEF_F VLV_GRADOS_90_137 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB1141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB1141:
    JR endif1140
  else1140_1:
    MOVEF_F VLV_VEL_B_137 VLV_V1_37
    MOVEF_F VLV_VEL_C_137 VLV_V2_37
    ADDF VLV_GRADOS_90_137 2.0 VLV_ANGLE_37
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB1143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB1143:
  else1140_2:
  endif1140:
RETSUB_F_GIRO90BLOQUES_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GIRO90BLOQUES_2:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
