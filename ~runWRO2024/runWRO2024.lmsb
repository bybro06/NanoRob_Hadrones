DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V1_36
DATAF VLV_V2_36
DATAF VLV_ANGLE_36
DATAF VLV_VELOCIDAD_84
DATAF VLV_KP_84
DATAF VLV_KI_84
DATAF VLV_KD_84
DATAF VLV_ENCODER_84
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_VELOCIDAD_90
DATAF VLV_KP_90
DATAF VLV_KI_90
DATAF VLV_KD_90
DATAF VLV_READER_90
DATAF VLV_VELOCIDAD_72
DATAF VLV_KP_72
DATAF VLV_KI_72
DATAF VLV_KD_72
DATAF VLV_VELOCIDAD_76
DATAF VLV_KP_76
DATAF VLV_KI_76
DATAF VLV_KD_76
DATAF VLV_ENCODER_76
DATAF VLV_VELOCIDAD_6
DATAF VLV_SENS_6
DATAF VLV_V_115
DATAF VLV_GRADOS_115
DATAF VLV_V1_37
DATAF VLV_V2_37
DATAF VLV_ANGLE_37
DATAF VLV_V0_57
DATAF VLV_VMAX_57
DATAF VLV_KP_57
DATAF VLV_KI_57
DATAF VLV_KD_57
DATAF VLV_ACCELENCODER_57
DATAF VLV_VELOCIDAD_73
DATAF VLV_KP_73
DATAF VLV_KI_73
DATAF VLV_KD_73
DATAF VLV_VELOCIDAD_77
DATAF VLV_KP_77
DATAF VLV_KI_77
DATAF VLV_KD_77
DATAF VLV_ENCODER_77
DATAF VLV_VMAX_99
DATAF VLV_KP_99
DATAF VLV_KI_99
DATAF VLV_KD_99
DATAF VLV_COLOR_133
DATAF VLV_REPS_121
DATAF VLV_COLOR_121
DATAF VLV_REPS_122
DATAF VLV_COLOR_122
DATAF VLV_REPS_123
DATAF VLV_COLOR_123
DATAF VLV_REPS_124
DATAF VLV_COLOR_124
DATAF VLV_V_116
DATAF VLV_AENC_116
DATAF VLV_V_106
DATAF VLV_AENC_106
DATAF VLV_V_119
DATAF VLV_T_119
DATAF VLV_V_120
DATAF VLV_AENC_120
DATAF VLV_COLOR_125
DATAF VLV_COLOR_126
DATAF VLV_COLOR_127
DATAF VLV_COLOR_128
DATAF VLV_READ_136
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DIAMETER
DATAF VGV_CENTRO
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_CORRECCION
DATAF VGV_G1
DATAF VGV_ROJOS
DATAF VGV_AMARILLOS
DATAF VGV_VERDES
DATAF VGV_AZULES
DATAF VGV_TIEMPOHASTALINEA
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAF VLV_START_B_6
DATAF VLV_START_C_6
DATAF VLV_ENCODER_B_6
DATAF VLV_ENCODER_C_6
DATAF VLV_ERROR_6
DATAF VLV_PROPORCIAL_6
DATAS VLV_I_36 252
DATAS VLV_D_36 252
DATAF VLV_SIGNO_36
DATAF VLV_VMIN_36
DATAF VLV_VMAX_36
DATAF VLV_ENCODR_36
DATAS VLV_I_37 252
DATAS VLV_D_37 252
DATAF VLV_SIGNO_37
DATAF VLV_VMIN_37
DATAF VLV_VMAX_37
DATAF VLV_ENCODR_37
DATAS VLV_I_57 252
DATAS VLV_D_57 252
DATAF VLV_U_57
DATAF VLV_ERROR_57
DATAF VLV_OLDERROR_57
DATAF VLV_ERRSUM_57
DATAF VLV_VEL_57
DATAF VLV_SENTIDO_57
DATAS VLV_I_72 252
DATAS VLV_D_72 252
DATAF VLV_ERROR_72
DATAF VLV_OLDERROR_72
DATAF VLV_ERRSUM_72
DATAF VLV_U_72
DATAF VLV_SENTIDO_72
DATAS VLV_I_73 252
DATAS VLV_D_73 252
DATAF VLV_ERROR_73
DATAF VLV_OLDERROR_73
DATAF VLV_ERRSUM_73
DATAF VLV_U_73
DATAF VLV_SENTIDO_73
DATAS VLV_I_76 252
DATAS VLV_D_76 252
DATAF VLV_ERROR_76
DATAF VLV_OLDERROR_76
DATAF VLV_ERRSUM_76
DATAF VLV_U_76
DATAF VLV_SENTIDO_76
DATAF VLV_START_C_76
DATAF VLV_ENCODER_C_76
DATAS VLV_I_77 252
DATAS VLV_D_77 252
DATAF VLV_ERROR_77
DATAF VLV_OLDERROR_77
DATAF VLV_ERRSUM_77
DATAF VLV_U_77
DATAF VLV_SENTIDO_77
DATAF VLV_START_C_77
DATAF VLV_ENCODER_C_77
DATAS VLV_I_84 252
DATAS VLV_D_84 252
DATAF VLV_ERROR_84
DATAF VLV_OLDERROR_84
DATAF VLV_ERRSUM_84
DATAF VLV_U_84
DATAF VLV_SENTIDO_84
DATAF VLV_START_C_84
DATAF VLV_ENCODER_C_84
DATAS VLV_I_90 252
DATAS VLV_D_90 252
DATAF VLV_ERROR_90
DATAF VLV_OLDERROR_90
DATAF VLV_ERRSUM_90
DATAF VLV_U_90
DATAF VLV_SENTIDO_90
DATAF VLV_READER1_90
DATAF VLV_READER2_90
DATAS VLV_I_99 252
DATAS VLV_D_99 252
DATAF VLV_V0_99
DATAF VLV_ACCELENCODER_99
DATAF VLV_U_99
DATAF VLV_ERRSUM_99
DATAF VLV_OLDERROR_99
DATAF VLV_VEL_99
DATAF VLV_SENTIDO_99
DATAF VLV_ERROR_99
DATAF VLV_ENCDIFF_106
DATAF VLV_SIGNO_106
DATAF VLV_DIFFA_115
DATAF VLV_DIFFD_115
DATAF VLV_SAFETYTIMER_115
DATAF VLV_SIGNOA_115
DATAF VLV_SIGNOD_115
DATAF VLV_VELA_115
DATAF VLV_VELD_115
DATAF VLV_ENCDIFF_116
DATAF VLV_SIGNO_116
DATAF VLV_ENCDIFF_120
DATAF VLV_SIGNO_120
DATAF VLV_SAFETYTIMER_120
DATAF VLV_RED_121
DATAF VLV_YELLOW_121
DATAF VLV_GREEN_121
DATAF VLV_BLUE_121
DATAF VLV_VALUENEGRO_121
DATAF VLV_VALUEBLANCO_121
DATAF VLV_RWHITE_121
DATAF VLV_GWHITE_121
DATAF VLV_BWHITE_121
DATAF VLV_HUE_121
DATAF VLV_SAT_121
DATAF VLV_VALUE_121
ARRAY16 VLV_RNORMA_121 2
ARRAY16 VLV_GNORMA_121 2
ARRAY16 VLV_BNORMA_121 2
ARRAY16 VLV_MAXA_121 2
DATAF VLV_J_121
ARRAY16 VLV_RGB_121 2
DATAF VLV_RRAW_121
DATAF VLV_GRAW_121
DATAF VLV_BRAW_121
DATAF VLV_RNORM_121
DATAF VLV_GNORM_121
DATAF VLV_BNORM_121
DATAF VLV_MAX_121
DATAF VLV_MIN_121
DATAF VLV_RGBGREY_121
DATAF VLV_RED_122
DATAF VLV_YELLOW_122
DATAF VLV_GREEN_122
DATAF VLV_BLUE_122
DATAF VLV_VALUENEGRO_122
DATAF VLV_VALUEBLANCO_122
DATAF VLV_RWHITE_122
DATAF VLV_GWHITE_122
DATAF VLV_BWHITE_122
DATAF VLV_HUE_122
DATAF VLV_SAT_122
DATAF VLV_VALUE_122
ARRAY16 VLV_RNORMA_122 2
ARRAY16 VLV_GNORMA_122 2
ARRAY16 VLV_BNORMA_122 2
ARRAY16 VLV_MAXA_122 2
DATAF VLV_J_122
ARRAY16 VLV_RGB_122 2
DATAF VLV_RRAW_122
DATAF VLV_GRAW_122
DATAF VLV_BRAW_122
DATAF VLV_RNORM_122
DATAF VLV_GNORM_122
DATAF VLV_BNORM_122
DATAF VLV_MAX_122
DATAF VLV_MIN_122
DATAF VLV_RGBGREY_122
DATAF VLV_RED_123
DATAF VLV_YELLOW_123
DATAF VLV_GREEN_123
DATAF VLV_BLUE_123
DATAF VLV_VALUENEGRO_123
DATAF VLV_VALUEBLANCO_123
DATAF VLV_RWHITE_123
DATAF VLV_GWHITE_123
DATAF VLV_BWHITE_123
DATAF VLV_HUE_123
DATAF VLV_SAT_123
DATAF VLV_VALUE_123
ARRAY16 VLV_RNORMA_123 2
ARRAY16 VLV_GNORMA_123 2
ARRAY16 VLV_BNORMA_123 2
ARRAY16 VLV_MAXA_123 2
DATAF VLV_J_123
ARRAY16 VLV_RGB_123 2
DATAF VLV_RRAW_123
DATAF VLV_GRAW_123
DATAF VLV_BRAW_123
DATAF VLV_RNORM_123
DATAF VLV_GNORM_123
DATAF VLV_BNORM_123
DATAF VLV_MAX_123
DATAF VLV_MIN_123
DATAF VLV_RGBGREY_123
DATAF VLV_RED_124
DATAF VLV_YELLOW_124
DATAF VLV_GREEN_124
DATAF VLV_BLUE_124
DATAF VLV_VALUENEGRO_124
DATAF VLV_VALUEBLANCO_124
DATAF VLV_RWHITE_124
DATAF VLV_GWHITE_124
DATAF VLV_BWHITE_124
DATAF VLV_HUE_124
DATAF VLV_SAT_124
DATAF VLV_VALUE_124
ARRAY16 VLV_RNORMA_124 2
ARRAY16 VLV_GNORMA_124 2
ARRAY16 VLV_BNORMA_124 2
ARRAY16 VLV_MAXA_124 2
DATAF VLV_J_124
ARRAY16 VLV_RGB_124 2
DATAF VLV_RRAW_124
DATAF VLV_GRAW_124
DATAF VLV_BRAW_124
DATAF VLV_RNORM_124
DATAF VLV_GNORM_124
DATAF VLV_BNORM_124
DATAF VLV_MAX_124
DATAF VLV_MIN_124
DATAF VLV_RGBGREY_124
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
    MOVEF_F 0.0 VLV_VELOCIDAD_84
    MOVEF_F 0.0 VLV_KP_84
    MOVEF_F 0.0 VLV_KI_84
    MOVEF_F 0.0 VLV_KD_84
    MOVEF_F 0.0 VLV_ENCODER_84
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_VELOCIDAD_90
    MOVEF_F 0.0 VLV_KP_90
    MOVEF_F 0.0 VLV_KI_90
    MOVEF_F 0.0 VLV_KD_90
    MOVEF_F 0.0 VLV_READER_90
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_SENS_6
    MOVEF_F 0.0 VLV_V_115
    MOVEF_F 0.0 VLV_GRADOS_115
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_V0_57
    MOVEF_F 0.0 VLV_VMAX_57
    MOVEF_F 0.0 VLV_KP_57
    MOVEF_F 0.0 VLV_KI_57
    MOVEF_F 0.0 VLV_KD_57
    MOVEF_F 0.0 VLV_ACCELENCODER_57
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VMAX_99
    MOVEF_F 0.0 VLV_KP_99
    MOVEF_F 0.0 VLV_KI_99
    MOVEF_F 0.0 VLV_KD_99
    MOVEF_F 0.0 VLV_COLOR_133
    MOVEF_F 0.0 VLV_REPS_121
    MOVEF_F 0.0 VLV_COLOR_121
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_V_116
    MOVEF_F 0.0 VLV_AENC_116
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_AENC_106
    MOVEF_F 0.0 VLV_V_119
    MOVEF_F 0.0 VLV_T_119
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_AENC_120
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_READ_136
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 0.0 VGV_TIEMPOHASTALINEA
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    MOVEF_F 0.0 VLV_START_B_6
    MOVEF_F 0.0 VLV_START_C_6
    MOVEF_F 0.0 VLV_ENCODER_B_6
    MOVEF_F 0.0 VLV_ENCODER_C_6
    MOVEF_F 0.0 VLV_ERROR_6
    MOVEF_F 0.0 VLV_PROPORCIAL_6
    STRINGS DUPLICATE '' VLV_I_36
    STRINGS DUPLICATE '' VLV_D_36
    MOVEF_F 0.0 VLV_SIGNO_36
    MOVEF_F 0.0 VLV_VMIN_36
    MOVEF_F 0.0 VLV_VMAX_36
    MOVEF_F 0.0 VLV_ENCODR_36
    STRINGS DUPLICATE '' VLV_I_37
    STRINGS DUPLICATE '' VLV_D_37
    MOVEF_F 0.0 VLV_SIGNO_37
    MOVEF_F 0.0 VLV_VMIN_37
    MOVEF_F 0.0 VLV_VMAX_37
    MOVEF_F 0.0 VLV_ENCODR_37
    STRINGS DUPLICATE '' VLV_I_57
    STRINGS DUPLICATE '' VLV_D_57
    MOVEF_F 0.0 VLV_U_57
    MOVEF_F 0.0 VLV_ERROR_57
    MOVEF_F 0.0 VLV_OLDERROR_57
    MOVEF_F 0.0 VLV_ERRSUM_57
    MOVEF_F 0.0 VLV_VEL_57
    MOVEF_F 0.0 VLV_SENTIDO_57
    STRINGS DUPLICATE '' VLV_I_72
    STRINGS DUPLICATE '' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MOVEF_F 0.0 VLV_SENTIDO_72
    STRINGS DUPLICATE '' VLV_I_73
    STRINGS DUPLICATE '' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MOVEF_F 0.0 VLV_SENTIDO_73
    STRINGS DUPLICATE '' VLV_I_76
    STRINGS DUPLICATE '' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MOVEF_F 0.0 VLV_SENTIDO_76
    MOVEF_F 0.0 VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
    STRINGS DUPLICATE '' VLV_I_77
    STRINGS DUPLICATE '' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MOVEF_F 0.0 VLV_SENTIDO_77
    MOVEF_F 0.0 VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
    STRINGS DUPLICATE '' VLV_I_84
    STRINGS DUPLICATE '' VLV_D_84
    MOVEF_F 0.0 VLV_ERROR_84
    MOVEF_F 0.0 VLV_OLDERROR_84
    MOVEF_F 0.0 VLV_ERRSUM_84
    MOVEF_F 0.0 VLV_U_84
    MOVEF_F 0.0 VLV_SENTIDO_84
    MOVEF_F 0.0 VLV_START_C_84
    MOVEF_F 0.0 VLV_ENCODER_C_84
    STRINGS DUPLICATE '' VLV_I_90
    STRINGS DUPLICATE '' VLV_D_90
    MOVEF_F 0.0 VLV_ERROR_90
    MOVEF_F 0.0 VLV_OLDERROR_90
    MOVEF_F 0.0 VLV_ERRSUM_90
    MOVEF_F 0.0 VLV_U_90
    MOVEF_F 0.0 VLV_SENTIDO_90
    MOVEF_F 0.0 VLV_READER1_90
    MOVEF_F 0.0 VLV_READER2_90
    STRINGS DUPLICATE '' VLV_I_99
    STRINGS DUPLICATE '' VLV_D_99
    MOVEF_F 0.0 VLV_V0_99
    MOVEF_F 0.0 VLV_ACCELENCODER_99
    MOVEF_F 0.0 VLV_U_99
    MOVEF_F 0.0 VLV_ERRSUM_99
    MOVEF_F 0.0 VLV_OLDERROR_99
    MOVEF_F 0.0 VLV_VEL_99
    MOVEF_F 0.0 VLV_SENTIDO_99
    MOVEF_F 0.0 VLV_ERROR_99
    MOVEF_F 0.0 VLV_ENCDIFF_106
    MOVEF_F 0.0 VLV_SIGNO_106
    MOVEF_F 0.0 VLV_DIFFA_115
    MOVEF_F 0.0 VLV_DIFFD_115
    MOVEF_F 0.0 VLV_SAFETYTIMER_115
    MOVEF_F 0.0 VLV_SIGNOA_115
    MOVEF_F 0.0 VLV_SIGNOD_115
    MOVEF_F 0.0 VLV_VELA_115
    MOVEF_F 0.0 VLV_VELD_115
    MOVEF_F 0.0 VLV_ENCDIFF_116
    MOVEF_F 0.0 VLV_SIGNO_116
    MOVEF_F 0.0 VLV_ENCDIFF_120
    MOVEF_F 0.0 VLV_SIGNO_120
    MOVEF_F 0.0 VLV_SAFETYTIMER_120
    MOVEF_F 0.0 VLV_RED_121
    MOVEF_F 0.0 VLV_YELLOW_121
    MOVEF_F 0.0 VLV_GREEN_121
    MOVEF_F 0.0 VLV_BLUE_121
    MOVEF_F 0.0 VLV_VALUENEGRO_121
    MOVEF_F 0.0 VLV_VALUEBLANCO_121
    MOVEF_F 0.0 VLV_RWHITE_121
    MOVEF_F 0.0 VLV_GWHITE_121
    MOVEF_F 0.0 VLV_BWHITE_121
    MOVEF_F 0.0 VLV_HUE_121
    MOVEF_F 0.0 VLV_SAT_121
    MOVEF_F 0.0 VLV_VALUE_121
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_121
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_121
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_121
    CALL ARRAYCREATE_FLOAT VLV_MAXA_121
    MOVEF_F 0.0 VLV_J_121
    CALL ARRAYCREATE_FLOAT VLV_RGB_121
    MOVEF_F 0.0 VLV_RRAW_121
    MOVEF_F 0.0 VLV_GRAW_121
    MOVEF_F 0.0 VLV_BRAW_121
    MOVEF_F 0.0 VLV_RNORM_121
    MOVEF_F 0.0 VLV_GNORM_121
    MOVEF_F 0.0 VLV_BNORM_121
    MOVEF_F 0.0 VLV_MAX_121
    MOVEF_F 0.0 VLV_MIN_121
    MOVEF_F 0.0 VLV_RGBGREY_121
    MOVEF_F 0.0 VLV_RED_122
    MOVEF_F 0.0 VLV_YELLOW_122
    MOVEF_F 0.0 VLV_GREEN_122
    MOVEF_F 0.0 VLV_BLUE_122
    MOVEF_F 0.0 VLV_VALUENEGRO_122
    MOVEF_F 0.0 VLV_VALUEBLANCO_122
    MOVEF_F 0.0 VLV_RWHITE_122
    MOVEF_F 0.0 VLV_GWHITE_122
    MOVEF_F 0.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_122
    CALL ARRAYCREATE_FLOAT VLV_MAXA_122
    MOVEF_F 0.0 VLV_J_122
    CALL ARRAYCREATE_FLOAT VLV_RGB_122
    MOVEF_F 0.0 VLV_RRAW_122
    MOVEF_F 0.0 VLV_GRAW_122
    MOVEF_F 0.0 VLV_BRAW_122
    MOVEF_F 0.0 VLV_RNORM_122
    MOVEF_F 0.0 VLV_GNORM_122
    MOVEF_F 0.0 VLV_BNORM_122
    MOVEF_F 0.0 VLV_MAX_122
    MOVEF_F 0.0 VLV_MIN_122
    MOVEF_F 0.0 VLV_RGBGREY_122
    MOVEF_F 0.0 VLV_RED_123
    MOVEF_F 0.0 VLV_YELLOW_123
    MOVEF_F 0.0 VLV_GREEN_123
    MOVEF_F 0.0 VLV_BLUE_123
    MOVEF_F 0.0 VLV_VALUENEGRO_123
    MOVEF_F 0.0 VLV_VALUEBLANCO_123
    MOVEF_F 0.0 VLV_RWHITE_123
    MOVEF_F 0.0 VLV_GWHITE_123
    MOVEF_F 0.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_123
    CALL ARRAYCREATE_FLOAT VLV_MAXA_123
    MOVEF_F 0.0 VLV_J_123
    CALL ARRAYCREATE_FLOAT VLV_RGB_123
    MOVEF_F 0.0 VLV_RRAW_123
    MOVEF_F 0.0 VLV_GRAW_123
    MOVEF_F 0.0 VLV_BRAW_123
    MOVEF_F 0.0 VLV_RNORM_123
    MOVEF_F 0.0 VLV_GNORM_123
    MOVEF_F 0.0 VLV_BNORM_123
    MOVEF_F 0.0 VLV_MAX_123
    MOVEF_F 0.0 VLV_MIN_123
    MOVEF_F 0.0 VLV_RGBGREY_123
    MOVEF_F 0.0 VLV_RED_124
    MOVEF_F 0.0 VLV_YELLOW_124
    MOVEF_F 0.0 VLV_GREEN_124
    MOVEF_F 0.0 VLV_BLUE_124
    MOVEF_F 0.0 VLV_VALUENEGRO_124
    MOVEF_F 0.0 VLV_VALUEBLANCO_124
    MOVEF_F 0.0 VLV_RWHITE_124
    MOVEF_F 0.0 VLV_GWHITE_124
    MOVEF_F 0.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_124
    CALL ARRAYCREATE_FLOAT VLV_MAXA_124
    MOVEF_F 0.0 VLV_J_124
    CALL ARRAYCREATE_FLOAT VLV_RGB_124
    MOVEF_F 0.0 VLV_RRAW_124
    MOVEF_F 0.0 VLV_GRAW_124
    MOVEF_F 0.0 VLV_BRAW_124
    MOVEF_F 0.0 VLV_RNORM_124
    MOVEF_F 0.0 VLV_GNORM_124
    MOVEF_F 0.0 VLV_BNORM_124
    MOVEF_F 0.0 VLV_MAX_124
    MOVEF_F 0.0 VLV_MIN_124
    MOVEF_F 0.0 VLV_RGBGREY_124
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 0
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch957
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch957:
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
    MOVEF_F 0.0 VLV_VELOCIDAD_84
    MOVEF_F 0.0 VLV_KP_84
    MOVEF_F 0.0 VLV_KI_84
    MOVEF_F 0.0 VLV_KD_84
    MOVEF_F 0.0 VLV_ENCODER_84
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_VELOCIDAD_90
    MOVEF_F 0.0 VLV_KP_90
    MOVEF_F 0.0 VLV_KI_90
    MOVEF_F 0.0 VLV_KD_90
    MOVEF_F 0.0 VLV_READER_90
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_SENS_6
    MOVEF_F 0.0 VLV_V_115
    MOVEF_F 0.0 VLV_GRADOS_115
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
    MOVEF_F 0.0 VLV_V0_57
    MOVEF_F 0.0 VLV_VMAX_57
    MOVEF_F 0.0 VLV_KP_57
    MOVEF_F 0.0 VLV_KI_57
    MOVEF_F 0.0 VLV_KD_57
    MOVEF_F 0.0 VLV_ACCELENCODER_57
    MOVEF_F 0.0 VLV_VELOCIDAD_73
    MOVEF_F 0.0 VLV_KP_73
    MOVEF_F 0.0 VLV_KI_73
    MOVEF_F 0.0 VLV_KD_73
    MOVEF_F 0.0 VLV_VELOCIDAD_77
    MOVEF_F 0.0 VLV_KP_77
    MOVEF_F 0.0 VLV_KI_77
    MOVEF_F 0.0 VLV_KD_77
    MOVEF_F 0.0 VLV_ENCODER_77
    MOVEF_F 0.0 VLV_VMAX_99
    MOVEF_F 0.0 VLV_KP_99
    MOVEF_F 0.0 VLV_KI_99
    MOVEF_F 0.0 VLV_KD_99
    MOVEF_F 0.0 VLV_COLOR_133
    MOVEF_F 0.0 VLV_REPS_121
    MOVEF_F 0.0 VLV_COLOR_121
    MOVEF_F 0.0 VLV_REPS_122
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_123
    MOVEF_F 0.0 VLV_COLOR_123
    MOVEF_F 0.0 VLV_REPS_124
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_V_116
    MOVEF_F 0.0 VLV_AENC_116
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_AENC_106
    MOVEF_F 0.0 VLV_V_119
    MOVEF_F 0.0 VLV_T_119
    MOVEF_F 0.0 VLV_V_120
    MOVEF_F 0.0 VLV_AENC_120
    MOVEF_F 0.0 VLV_COLOR_125
    MOVEF_F 0.0 VLV_COLOR_126
    MOVEF_F 0.0 VLV_COLOR_127
    MOVEF_F 0.0 VLV_COLOR_128
    MOVEF_F 0.0 VLV_READ_136
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 0.0 VGV_TIEMPOHASTALINEA
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0003 VGV_KI
    MOVEF_F 5.0 VGV_KD
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.44444444444444 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB0 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB0:
    DATA32 tmp1
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp1
    JR_NEQ32 0 tmp1 alreadylaunched1
    OBJECT_START TF_STOP_0
  alreadylaunched1:
    WRITE32 ENDSUB_F_MAINPRUEBA_0:CALLSUB2 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAINPRUEBA_0
CALLSUB2:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 0.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 4.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 4.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_MAINPRUEBA_0:
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    WRITE32 ENDSUB_F_COGER_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_0
CALLSUB7:
    PROGRAM_STOP -1
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 30.0 VLV_V2_36
    MOVEF_F 55.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB9:
    MOVEF_F 30.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 55.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB10:
    MOVEF_F 40.0 VLV_VELOCIDAD_84
    MOVEF_F VGV_KP VLV_KP_84
    MOVEF_F VGV_KI VLV_KI_84
    MOVEF_F VGV_KD VLV_KD_84
    MOVEF_F 13.0 VLV_ENCODER_84
    WRITE32 ENDSUB_F_SL31PIDENC_5:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL31PIDENC_5
CALLSUB11:
    MOVEF_F 30.0 VLV_V1_36
    MOVEF_F -30.0 VLV_V2_36
    MOVEF_F 92.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB12:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB13 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB13:
    DATA32 milliseconds14
	MOVEF_32 500.0 milliseconds14
	DATA32 timer14
	TIMER_WAIT milliseconds14 timer14
	TIMER_READY timer14
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB15 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB15:
    MOVEF_F -30.0 VLV_V1_36
    MOVEF_F 30.0 VLV_V2_36
    MOVEF_F 92.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB16:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 11.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB17 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB17:
    MOVEF_F 30.0 VLV_V1_36
    MOVEF_F -30.0 VLV_V2_36
    MOVEF_F 95.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB18 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB18:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB19:
    DATA32 milliseconds20
	MOVEF_32 500.0 milliseconds20
	DATA32 timer20
	TIMER_WAIT milliseconds20 timer20
	TIMER_READY timer20
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB21 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB21:
    MOVEF_F -30.0 VLV_V1_36
    MOVEF_F 30.0 VLV_V2_36
    MOVEF_F 92.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB22 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB22:
    MOVEF_F -40.0 VLV_VELOCIDAD_1
    MOVEF_F 25.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB23:
    DATA32 milliseconds24
	MOVEF_32 500.0 milliseconds24
	DATA32 timer24
	TIMER_WAIT milliseconds24 timer24
	TIMER_READY timer24
    TIMER_READ timeMC4
    MOVEF_F 30.0 VLV_VELOCIDAD_90
    MOVEF_F VGV_KP VLV_KP_90
    MOVEF_F VGV_KI VLV_KI_90
    MOVEF_F VGV_KD VLV_KD_90
    MOVEF_F 3.0 VLV_READER_90
    WRITE32 ENDSUB_F_SL1SPIDCROSS_5:CALLSUB26 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_5
CALLSUB26:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp VGV_TIEMPOHASTALINEA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_TIEMPOHASTALINEA '%g' 99 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    JR_GTEQF VGV_TIEMPOHASTALINEA 1700.0 else31_1
    WRITE32 ENDSUB_F_CASOPSOE_0:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASOPSOE_0
CALLSUB32:
    JR endif31
  else31_1:
    WRITE32 ENDSUB_F_CASOVOX_0:CALLSUB33 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASOVOX_0
CALLSUB33:
  else31_2:
  endif31:
RETSUB_F_MAINPRUEBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAINPRUEBA_0:
SUB_F_CASOPSOE_0:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB34 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB34:
    MOVEF_F -30.0 VLV_V1_36
    MOVEF_F 30.0 VLV_V2_36
    MOVEF_F 94.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB35 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB35:
    MOVEF_F 50.0 VLV_VELOCIDAD_72
    MOVEF_F VGV_KP VLV_KP_72
    MOVEF_F VGV_KI VLV_KI_72
    MOVEF_F VGV_KD VLV_KD_72
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB36:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB37 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB37:
    MOVEF_F 30.0 VLV_V1_36
    MOVEF_F -30.0 VLV_V2_36
    MOVEF_F 90.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB38 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB38:
    MOVEF_F 40.0 VLV_VELOCIDAD_76
    MOVEF_F VGV_KP VLV_KP_76
    MOVEF_F VGV_KI VLV_KI_76
    MOVEF_F VGV_KD VLV_KD_76
    MOVEF_F 28.5 VLV_ENCODER_76
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB39:
    MOVEF_F -30.0 VLV_V1_36
    MOVEF_F 30.0 VLV_V2_36
    MOVEF_F 94.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB40 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB40:
    MOVEF_F 50.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB41 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB41:
    DATA32 milliseconds42
	MOVEF_32 500.0 milliseconds42
	DATA32 timer42
	TIMER_WAIT milliseconds42 timer42
	TIMER_READY timer42
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB43:
    MOVEF_F -30.0 VLV_V1_36
    MOVEF_F 30.0 VLV_V2_36
    MOVEF_F 94.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB44 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB44:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 11.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB45 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB45:
    MOVEF_F 30.0 VLV_V1_36
    MOVEF_F -30.0 VLV_V2_36
    MOVEF_F 91.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB46:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB47 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB47:
    DATA32 milliseconds48
	MOVEF_32 500.0 milliseconds48
	DATA32 timer48
	TIMER_WAIT milliseconds48 timer48
	TIMER_READY timer48
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB49 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB49:
    MOVEF_F -40.0 VLV_VELOCIDAD_1
    MOVEF_F 30.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB50 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB50:
    MOVEF_F -30.0 VLV_V1_36
    MOVEF_F 30.0 VLV_V2_36
    MOVEF_F 90.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB51:
    MOVEF_F 40.0 VLV_VELOCIDAD_1
    MOVEF_F 26.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB52:
    DATA32 milliseconds53
	MOVEF_32 1000.0 milliseconds53
	DATA32 timer53
	TIMER_WAIT milliseconds53 timer53
	TIMER_READY timer53
    MOVEF_F -30.0 VLV_VELOCIDAD_6
    MOVEF_F 1.0 VLV_SENS_6
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB54:
    MOVEF_F 30.0 VLV_V1_36
    MOVEF_F -30.0 VLV_V2_36
    MOVEF_F 94.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB55:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB56:
    MOVEF_F 30.0 VLV_VELOCIDAD_72
    MOVEF_F VGV_KP VLV_KP_72
    MOVEF_F VGV_KI VLV_KI_72
    MOVEF_F VGV_KD VLV_KD_72
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB57 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB57:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 11.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB58:
    DATA32 milliseconds59
	MOVEF_32 500.0 milliseconds59
	DATA32 timer59
	TIMER_WAIT milliseconds59 timer59
	TIMER_READY timer59
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 11.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB60:
    MOVEF_F 30.0 VLV_V1_36
    MOVEF_F -30.0 VLV_V2_36
    MOVEF_F 93.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB61:
    MOVEF_F 30.0 VLV_VELOCIDAD_76
    MOVEF_F VGV_KP VLV_KP_76
    MOVEF_F VGV_KI VLV_KI_76
    MOVEF_F VGV_KD VLV_KD_76
    MOVEF_F 11.0 VLV_ENCODER_76
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB62:
    MOVEF_F -30.0 VLV_V1_36
    MOVEF_F 30.0 VLV_V2_36
    MOVEF_F 93.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB63:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB64 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB64:
    DATA32 milliseconds65
	MOVEF_32 500.0 milliseconds65
	DATA32 timer65
	TIMER_WAIT milliseconds65 timer65
	TIMER_READY timer65
RETSUB_F_CASOPSOE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOPSOE_0:
SUB_F_CASOVOX_0:
RETSUB_F_CASOVOX_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASOVOX_0:
SUB_F_STOP_0:
  while66:
  whilebody66:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else67_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_115
    MOVEF_F 0.0 VLV_GRADOS_115
    WRITE32 ENDSUB_F_BMOVEADSAFE_2:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEADSAFE_2
CALLSUB72:
    PROGRAM_STOP -1
  else67_1:
  endif67:
    JR whilebody66
  endwhile66:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf77
    DATA8 flag77
    DIVF F.1 F.2 tmpf77
    CP_EQF 0.0 F.2 flag77
    SELECTF flag77 0.0 tmpf77 F.0

    DATAF tmpf78
    DATA8 flag78
    DIVF F.0 VLV_DIAMETRO_1 tmpf78
    CP_EQF 0.0 VLV_DIAMETRO_1 flag78
    SELECTF flag78 0.0 tmpf78 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    DATAF tmpf81
    DATA8 flag81
    DIVF VGV_CORRECCION 30.0 tmpf81
    CP_EQF 0.0 30.0 flag81
    SELECTF flag81 0.0 tmpf81 F.2

    MULF F.2 VLV_VELOCIDAD_1 F.1
    ADDF F.0 F.1 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while87:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile87
  whilebody87:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 1.2 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody87
  endwhile87:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_1BLANCORECTOMM_2:
    MULF VLV_VELOCIDAD_6 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_6
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_6
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_6
  while108:
    CALL SENSOR.READPERCENT VLV_SENS_6 F.0
    JR_GTEQF F.0 70.0 endwhile108
  whilebody108:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_6 VLV_ENCODER_B_6
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_6 VLV_ENCODER_C_6
    SUBF VLV_ENCODER_B_6 VLV_ENCODER_C_6 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_6
    MULF VLV_ERROR_6 1.2 VLV_PROPORCIAL_6
    SUBF VLV_VELOCIDAD_6 VLV_PROPORCIAL_6 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_6 VLV_PROPORCIAL_6 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_6 F.0
    JR_LTF F.0 70.0 whilebody108
  endwhile108:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1BLANCORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMM_2:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_36
    STRINGS DUPLICATE 'C' VLV_D_36
    DATAF tmpf124
    DATA8 flag124
    DIVF VLV_V1_36 VLV_V2_36 tmpf124
    CP_EQF 0.0 VLV_V2_36 flag124
    SELECTF flag124 0.0 tmpf124 F.0

    DATAF tmpf125
    DATA8 flag125
    DIVF VLV_V1_36 VLV_V2_36 tmpf125
    CP_EQF 0.0 VLV_V2_36 flag125
    SELECTF flag125 0.0 tmpf125 F.2

    MATH ABS F.2 F.1
    DATAF tmpf127
    DATA8 flag127
    DIVF F.0 F.1 tmpf127
    CP_EQF 0.0 F.1 flag127
    SELECTF flag127 0.0 tmpf127 VLV_SIGNO_36

    MATH ABS VLV_V1_36 F.0
    MATH ABS VLV_V2_36 F.1
    DATA8 flag130
	CP_LTF F.0 F.1 flag130
	SELECTF flag130 F.0 F.1 VLV_VMIN_36
    MATH ABS VLV_V1_36 F.0
    MATH ABS VLV_V2_36 F.1
    DATA8 flag133
	CP_GTF F.0 F.1 flag133
	SELECTF flag133 F.0 F.1 VLV_VMAX_36
    MULF VLV_ANGLE_36 VGV_G1 F.0
    MULF VLV_SIGNO_36 VLV_VMIN_36 F.4
    DATAF tmpf136
    DATA8 flag136
    DIVF F.4 VLV_VMAX_36 tmpf136
    CP_EQF 0.0 VLV_VMAX_36 flag136
    SELECTF flag136 0.0 tmpf136 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf138
    DATA8 flag138
    DIVF -2.0 F.2 tmpf138
    CP_EQF 0.0 F.2 flag138
    SELECTF flag138 0.0 tmpf138 F.1

    MULF F.0 F.1 VLV_ENCODR_36
    CALL TEXT.APPEND VLV_I_36 VLV_D_36 S.0
    MATH NEGATE VLV_V1_36 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_36 VLV_ENCODR_36 'True'

	DATA8 layer142
	DATA8 nos142
	DATA8 busy142
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer142 nos142
	JR_EQ8 0 nos142 motornotbusy142
  motorwaiting142:
	OUTPUT_TEST layer142 nos142 busy142
	JR_EQ8 busy142 0 motornotbusy142
	SLEEP
	JR motorwaiting142
  motornotbusy142:
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
    DATA32 milliseconds143
	MOVEF_32 200.0 milliseconds143
	DATA32 timer143
	TIMER_WAIT milliseconds143 timer143
	TIMER_READY timer143
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_GUNIVENCMMF_3:
    STRINGS DUPLICATE 'B' VLV_I_37
    STRINGS DUPLICATE 'C' VLV_D_37
    DATAF tmpf144
    DATA8 flag144
    DIVF VLV_V1_37 VLV_V2_37 tmpf144
    CP_EQF 0.0 VLV_V2_37 flag144
    SELECTF flag144 0.0 tmpf144 F.0

    DATAF tmpf145
    DATA8 flag145
    DIVF VLV_V1_37 VLV_V2_37 tmpf145
    CP_EQF 0.0 VLV_V2_37 flag145
    SELECTF flag145 0.0 tmpf145 F.2

    MATH ABS F.2 F.1
    DATAF tmpf147
    DATA8 flag147
    DIVF F.0 F.1 tmpf147
    CP_EQF 0.0 F.1 flag147
    SELECTF flag147 0.0 tmpf147 VLV_SIGNO_37

    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag150
	CP_LTF F.0 F.1 flag150
	SELECTF flag150 F.0 F.1 VLV_VMIN_37
    MATH ABS VLV_V1_37 F.0
    MATH ABS VLV_V2_37 F.1
    DATA8 flag153
	CP_GTF F.0 F.1 flag153
	SELECTF flag153 F.0 F.1 VLV_VMAX_37
    MULF VLV_ANGLE_37 VGV_G1 F.0
    MULF VLV_SIGNO_37 VLV_VMIN_37 F.4
    DATAF tmpf156
    DATA8 flag156
    DIVF F.4 VLV_VMAX_37 tmpf156
    CP_EQF 0.0 VLV_VMAX_37 flag156
    SELECTF flag156 0.0 tmpf156 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf158
    DATA8 flag158
    DIVF -2.0 F.2 tmpf158
    CP_EQF 0.0 F.2 flag158
    SELECTF flag158 0.0 tmpf158 F.1

    MULF F.0 F.1 VLV_ENCODR_37
    CALL TEXT.APPEND VLV_I_37 VLV_D_37 S.0
    MATH NEGATE VLV_V1_37 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_37 VLV_ENCODR_37 'False'

	DATA8 layer162
	DATA8 nos162
	DATA8 busy162
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer162 nos162
	JR_EQ8 0 nos162 motornotbusy162
  motorwaiting162:
	OUTPUT_TEST layer162 nos162 busy162
	JR_EQ8 busy162 0 motornotbusy162
	SLEEP
	JR motorwaiting162
  motornotbusy162:
    MOVEF_F 0.0 VLV_V1_37
    MOVEF_F 0.0 VLV_V2_37
    MOVEF_F 0.0 VLV_ANGLE_37
RETSUB_F_GUNIVENCMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMMF_3:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_57
    STRINGS DUPLICATE 'C' VLV_D_57
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf165
    DATA8 flag165
    DIVF VLV_ACCELENCODER_57 F.1 tmpf165
    CP_EQF 0.0 F.1 flag165
    SELECTF flag165 0.0 tmpf165 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_57
    MOVEF_F 0.0 VLV_U_57
    MOVEF_F 0.0 VLV_ERROR_57
    MOVEF_F 0.0 VLV_OLDERROR_57
    MOVEF_F 0.0 VLV_ERRSUM_57
    CALL MOTOR.RESETCOUNT 'C'
  while168:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or169
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile168
  or169:
  whilebody168:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf173
    DATA8 flag173
    DIVF F.3 VLV_ACCELENCODER_57 tmpf173
    CP_EQF 0.0 VLV_ACCELENCODER_57 flag173
    SELECTF flag173 0.0 tmpf173 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_57 VLV_V0_57 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_57 VLV_VEL_57
    DATA8 flag178
	CP_LTF VLV_VEL_57 VLV_VMAX_57 flag178
	SELECTF flag178 VLV_VEL_57 VLV_VMAX_57 VLV_VEL_57
    MATH ABS VLV_VEL_57 F.0
    DATAF tmpf180
    DATA8 flag180
    DIVF VLV_VEL_57 F.0 tmpf180
    CP_EQF 0.0 F.0 flag180
    SELECTF flag180 0.0 tmpf180 VLV_SENTIDO_57

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_57 VLV_ERROR_57
    ADDF VLV_ERRSUM_57 VLV_ERROR_57 VLV_ERRSUM_57
    MULF VLV_ERROR_57 VLV_KP_57 F.1
    SUBF VLV_ERROR_57 VLV_OLDERROR_57 F.3
    MULF F.3 VLV_KD_57 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_57 VLV_KI_57 F.1
    ADDF F.0 F.1 VLV_U_57
    CALL TEXT.APPEND VLV_I_57 VLV_D_57 S.0
    ADDF VLV_VEL_57 VLV_U_57 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_57 VLV_U_57 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_57 VLV_OLDERROR_57
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody168
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody168
  endwhile168:
    CALL TEXT.APPEND VLV_I_57 VLV_D_57 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PID_4:
    MULF VLV_VELOCIDAD_72 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_72
    STRINGS DUPLICATE 'B' VLV_I_72
    STRINGS DUPLICATE 'C' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MATH ABS VLV_VELOCIDAD_72 F.0
    DATAF tmpf205
    DATA8 flag205
    DIVF VLV_VELOCIDAD_72 F.0 tmpf205
    CP_EQF 0.0 F.0 flag205
    SELECTF flag205 0.0 tmpf205 VLV_SENTIDO_72

  while206:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or207
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile206
  or207:
  whilebody206:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_72 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_72
    ADDF VLV_ERRSUM_72 VLV_ERROR_72 VLV_ERRSUM_72
    MULF VLV_ERROR_72 VLV_KP_72 F.1
    SUBF VLV_ERROR_72 VLV_OLDERROR_72 F.3
    MULF F.3 VLV_KD_72 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_72 VLV_KI_72 F.1
    ADDF F.0 F.1 VLV_U_72
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    ADDF VLV_VELOCIDAD_72 VLV_U_72 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_72 VLV_U_72 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_72 VLV_OLDERROR_72
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody206
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody206
  endwhile206:
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PID_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PID_4:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_73 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_73
    STRINGS DUPLICATE 'B' VLV_I_73
    STRINGS DUPLICATE 'C' VLV_D_73
    MOVEF_F 0.0 VLV_ERROR_73
    MOVEF_F 0.0 VLV_OLDERROR_73
    MOVEF_F 0.0 VLV_ERRSUM_73
    MOVEF_F 0.0 VLV_U_73
    MATH ABS VLV_VELOCIDAD_73 F.0
    DATAF tmpf233
    DATA8 flag233
    DIVF VLV_VELOCIDAD_73 F.0 tmpf233
    CP_EQF 0.0 F.0 flag233
    SELECTF flag233 0.0 tmpf233 VLV_SENTIDO_73

  while234:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or235
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile234
  or235:
  whilebody234:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_73 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_73
    ADDF VLV_ERRSUM_73 VLV_ERROR_73 VLV_ERRSUM_73
    MULF VLV_ERROR_73 VLV_KP_73 F.1
    SUBF VLV_ERROR_73 VLV_OLDERROR_73 F.3
    MULF F.3 VLV_KD_73 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_73 VLV_KI_73 F.1
    ADDF F.0 F.1 VLV_U_73
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    ADDF VLV_VELOCIDAD_73 VLV_U_73 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_73 VLV_U_73 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_73 VLV_OLDERROR_73
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody234
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody234
  endwhile234:
    CALL TEXT.APPEND VLV_I_73 VLV_D_73 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_76 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_76
    STRINGS DUPLICATE 'B' VLV_I_76
    STRINGS DUPLICATE 'C' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MATH ABS VLV_VELOCIDAD_76 F.0
    DATAF tmpf261
    DATA8 flag261
    DIVF VLV_VELOCIDAD_76 F.0 tmpf261
    CP_EQF 0.0 F.0 flag261
    SELECTF flag261 0.0 tmpf261 VLV_SENTIDO_76

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf264
    DATA8 flag264
    DIVF VLV_ENCODER_76 F.1 tmpf264
    CP_EQF 0.0 F.1 flag264
    SELECTF flag264 0.0 tmpf264 F.0

    MULF F.0 360.0 VLV_ENCODER_76
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
  while267:
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_GTEQF F.0 VLV_ENCODER_76 endwhile267
  whilebody267:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_76 VLV_ENCODER_C_76
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_76 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_76
    ADDF VLV_ERRSUM_76 VLV_ERROR_76 VLV_ERRSUM_76
    MULF VLV_ERROR_76 VLV_KP_76 F.1
    SUBF VLV_ERROR_76 VLV_OLDERROR_76 F.3
    MULF F.3 VLV_KD_76 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_76 VLV_KI_76 F.1
    ADDF F.0 F.1 VLV_U_76
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    ADDF VLV_VELOCIDAD_76 VLV_U_76 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_76 VLV_U_76 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_76 VLV_OLDERROR_76
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_LTF F.0 VLV_ENCODER_76 whilebody267
  endwhile267:
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_77 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_77
    STRINGS DUPLICATE 'B' VLV_I_77
    STRINGS DUPLICATE 'C' VLV_D_77
    MOVEF_F 0.0 VLV_ERROR_77
    MOVEF_F 0.0 VLV_OLDERROR_77
    MOVEF_F 0.0 VLV_ERRSUM_77
    MOVEF_F 0.0 VLV_U_77
    MATH ABS VLV_VELOCIDAD_77 F.0
    DATAF tmpf293
    DATA8 flag293
    DIVF VLV_VELOCIDAD_77 F.0 tmpf293
    CP_EQF 0.0 F.0 flag293
    SELECTF flag293 0.0 tmpf293 VLV_SENTIDO_77

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf296
    DATA8 flag296
    DIVF VLV_ENCODER_77 F.1 tmpf296
    CP_EQF 0.0 F.1 flag296
    SELECTF flag296 0.0 tmpf296 F.0

    MULF F.0 360.0 VLV_ENCODER_77
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_77
    MOVEF_F 0.0 VLV_ENCODER_C_77
  while299:
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_GTEQF F.0 VLV_ENCODER_77 endwhile299
  whilebody299:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_77 VLV_ENCODER_C_77
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_77 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_77
    ADDF VLV_ERRSUM_77 VLV_ERROR_77 VLV_ERRSUM_77
    MULF VLV_ERROR_77 VLV_KP_77 F.1
    SUBF VLV_ERROR_77 VLV_OLDERROR_77 F.3
    MULF F.3 VLV_KD_77 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_77 VLV_KI_77 F.1
    ADDF F.0 F.1 VLV_U_77
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    ADDF VLV_VELOCIDAD_77 VLV_U_77 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_77 VLV_U_77 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_77 VLV_OLDERROR_77
    MATH ABS VLV_ENCODER_C_77 F.0
    JR_LTF F.0 VLV_ENCODER_77 whilebody299
  endwhile299:
    CALL TEXT.APPEND VLV_I_77 VLV_D_77 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL31PIDENC_5:
    MULF VLV_VELOCIDAD_84 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_84
    STRINGS DUPLICATE 'B' VLV_I_84
    STRINGS DUPLICATE 'C' VLV_D_84
    MOVEF_F 0.0 VLV_ERROR_84
    MOVEF_F 0.0 VLV_OLDERROR_84
    MOVEF_F 0.0 VLV_ERRSUM_84
    MOVEF_F 0.0 VLV_U_84
    MATH ABS VLV_VELOCIDAD_84 F.0
    DATAF tmpf325
    DATA8 flag325
    DIVF VLV_VELOCIDAD_84 F.0 tmpf325
    CP_EQF 0.0 F.0 flag325
    SELECTF flag325 0.0 tmpf325 VLV_SENTIDO_84

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf328
    DATA8 flag328
    DIVF VLV_ENCODER_84 F.1 tmpf328
    CP_EQF 0.0 F.1 flag328
    SELECTF flag328 0.0 tmpf328 F.0

    MULF F.0 360.0 VLV_ENCODER_84
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_84
    MOVEF_F 0.0 VLV_ENCODER_C_84
  while331:
    MATH ABS VLV_ENCODER_C_84 F.0
    JR_GTEQF F.0 VLV_ENCODER_84 endwhile331
  whilebody331:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_84 VLV_ENCODER_C_84
    CALL SENSOR.READPERCENT 3.0 F.2
    CALL SENSOR.READPERCENT 1.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_84 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_84
    ADDF VLV_ERRSUM_84 VLV_ERROR_84 VLV_ERRSUM_84
    MULF VLV_ERROR_84 VLV_KP_84 F.1
    SUBF VLV_ERROR_84 VLV_OLDERROR_84 F.3
    MULF F.3 VLV_KD_84 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_84 VLV_KI_84 F.1
    ADDF F.0 F.1 VLV_U_84
    CALL TEXT.APPEND VLV_I_84 VLV_D_84 S.0
    ADDF VLV_VELOCIDAD_84 VLV_U_84 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_84 VLV_U_84 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_84 VLV_OLDERROR_84
    MATH ABS VLV_ENCODER_C_84 F.0
    JR_LTF F.0 VLV_ENCODER_84 whilebody331
  endwhile331:
    CALL TEXT.APPEND VLV_I_84 VLV_D_84 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL31PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL31PIDENC_5:
SUB_F_SL1SPIDCROSS_5:
    MULF VLV_VELOCIDAD_90 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_90
    STRINGS DUPLICATE 'B' VLV_I_90
    STRINGS DUPLICATE 'C' VLV_D_90
    MOVEF_F 0.0 VLV_ERROR_90
    MOVEF_F 0.0 VLV_OLDERROR_90
    MOVEF_F 0.0 VLV_ERRSUM_90
    MOVEF_F 0.0 VLV_U_90
    MATH ABS VLV_VELOCIDAD_90 F.0
    DATAF tmpf357
    DATA8 flag357
    DIVF VLV_VELOCIDAD_90 F.0 tmpf357
    CP_EQF 0.0 F.0 flag357
    SELECTF flag357 0.0 tmpf357 VLV_SENTIDO_90

    JR_NEQF VLV_READER_90 3.0 else358_1
    MOVEF_F 1.0 VLV_READER1_90
    MOVEF_F 4.0 VLV_READER2_90
    JR endif358
  else358_1:
    MOVEF_F 3.0 VLV_READER1_90
    MOVEF_F 1.0 VLV_READER2_90
  else358_2:
  endif358:
  while359:
    CALL SENSOR.READPERCENT VLV_READER_90 F.0
    JR_LTEQF F.0 20.0 endwhile359
  whilebody359:
    CALL SENSOR.READPERCENT VLV_READER1_90 F.2
    CALL SENSOR.READPERCENT VLV_READER2_90 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_90 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_90
    ADDF VLV_ERRSUM_90 VLV_ERROR_90 VLV_ERRSUM_90
    MULF VLV_ERROR_90 VLV_KP_90 F.1
    SUBF VLV_ERROR_90 VLV_OLDERROR_90 F.3
    MULF F.3 VLV_KD_90 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_90 VLV_KI_90 F.1
    ADDF F.0 F.1 VLV_U_90
    CALL TEXT.APPEND VLV_I_90 VLV_D_90 S.0
    ADDF VLV_VELOCIDAD_90 VLV_U_90 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_90 VLV_U_90 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_90 VLV_OLDERROR_90
    CALL SENSOR.READPERCENT VLV_READER_90 F.0
    JR_GTF F.0 20.0 whilebody359
  endwhile359:
    CALL TEXT.APPEND VLV_I_90 VLV_D_90 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL1SPIDCROSS_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSS_5:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_99 VGV_SENTIDO_MOTORES VLV_VMAX_99
    STRINGS DUPLICATE 'B' VLV_I_99
    STRINGS DUPLICATE 'C' VLV_D_99
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_99
    MOVEF_F 150.0 VLV_ACCELENCODER_99
    MOVEF_F 0.0 VLV_U_99
    MOVEF_F 0.0 VLV_ERRSUM_99
    MOVEF_F 0.0 VLV_OLDERROR_99
    CALL MOTOR.RESETCOUNT 'C'
  while384:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or385
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile384
  or385:
  whilebody384:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf389
    DATA8 flag389
    DIVF F.2 VLV_ACCELENCODER_99 tmpf389
    CP_EQF 0.0 VLV_ACCELENCODER_99 flag389
    SELECTF flag389 0.0 tmpf389 F.1

    ADDF VLV_VMAX_99 VLV_V0_99 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_99 VLV_VEL_99
    DATA8 flag393
	CP_LTF VLV_VEL_99 VLV_VMAX_99 flag393
	SELECTF flag393 VLV_VEL_99 VLV_VMAX_99 VLV_VEL_99
    MATH ABS VLV_VEL_99 F.0
    DATAF tmpf395
    DATA8 flag395
    DIVF VLV_VEL_99 F.0 tmpf395
    CP_EQF 0.0 F.0 flag395
    SELECTF flag395 0.0 tmpf395 VLV_SENTIDO_99

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_99 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_99
    MULF VLV_ERRSUM_99 0.9 F.0
    ADDF F.0 VLV_ERROR_99 VLV_ERRSUM_99
    MULF VLV_ERROR_99 VLV_KP_99 F.1
    SUBF VLV_ERROR_99 VLV_OLDERROR_99 F.3
    MULF F.3 VLV_KD_99 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_99 VLV_KI_99 F.1
    ADDF F.0 F.1 VLV_U_99
    CALL TEXT.APPEND VLV_I_99 VLV_D_99 S.0
    ADDF VLV_VEL_99 VLV_U_99 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_99 VLV_U_99 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_99 VLV_OLDERROR_99
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody384
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody384
  endwhile384:
    CALL TEXT.APPEND VLV_I_99 VLV_D_99 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_106 F.0 VLV_ENCDIFF_106
    MATH ABS VLV_ENCDIFF_106 F.0
    DATAF tmpf421
    DATA8 flag421
    DIVF VLV_ENCDIFF_106 F.0 tmpf421
    CP_EQF 0.0 F.0 flag421
    SELECTF flag421 0.0 tmpf421 VLV_SIGNO_106

    JR_EQF VLV_ENCDIFF_106 0.0 else422_1
  while423:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_106 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 15.0 endwhile423
  whilebody423:
    MULF VLV_SIGNO_106 VLV_V_106 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_106 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 15.0 whilebody423
  endwhile423:
    CALL MOTOR.STOP 'A' 'True'
  else422_1:
  endif422:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEADSAFE_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_115 F.0 VLV_DIFFA_115
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_115 F.0 VLV_DIFFD_115
    MATH ABS VLV_DIFFA_115 F.5
    MATH ABS VLV_DIFFD_115 F.6
    DATA8 flag439
	CP_GTF F.5 F.6 flag439
	SELECTF flag439 F.5 F.6 F.4
    DATAF tmpf440
    DATA8 flag440
    DIVF F.4 100.0 tmpf440
    CP_EQF 0.0 100.0 flag440
    SELECTF flag440 0.0 tmpf440 F.3

    DATAF tmpf441
    DATA8 flag441
    DIVF VLV_V_115 20.0 tmpf441
    CP_EQF 0.0 20.0 flag441
    SELECTF flag441 0.0 tmpf441 F.4

    DATAF tmpf442
    DATA8 flag442
    DIVF F.3 F.4 tmpf442
    CP_EQF 0.0 F.4 flag442
    SELECTF flag442 0.0 tmpf442 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag445
	CP_GTF F.0 400.0 flag445
	SELECTF flag445 F.0 400.0 VLV_SAFETYTIMER_115
    MATH ABS VLV_DIFFA_115 F.0
    DATAF tmpf447
    DATA8 flag447
    DIVF VLV_DIFFA_115 F.0 tmpf447
    CP_EQF 0.0 F.0 flag447
    SELECTF flag447 0.0 tmpf447 VLV_SIGNOA_115

    MATH ABS VLV_DIFFD_115 F.0
    DATAF tmpf449
    DATA8 flag449
    DIVF VLV_DIFFD_115 F.0 tmpf449
    CP_EQF 0.0 F.0 flag449
    SELECTF flag449 0.0 tmpf449 VLV_SIGNOD_115

    MULF VLV_V_115 VLV_SIGNOA_115 VLV_VELA_115
    MULF VLV_V_115 VLV_SIGNOD_115 VLV_VELD_115
    CALL MOTOR.SCHEDULESYNC 'AD' VLV_VELA_115 VLV_VELD_115 5.0 'False'

	DATA8 layer452
	DATA8 nos452
	DATA8 busy452
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer452 nos452
	JR_EQ8 0 nos452 motornotbusy452
  motorwaiting452:
	OUTPUT_TEST layer452 nos452 busy452
	JR_EQ8 busy452 0 motornotbusy452
	SLEEP
	JR motorwaiting452
  motornotbusy452:
    CALL LCD.CLEAR
    TIMER_READ timeMC3
  while455:
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 or456
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_EQF F.0 0.0 endwhile455
  or456:
  whilebody455:
    MULF VLV_DIFFA_115 VLV_SIGNOA_115 F.0
    JR_LTEQF F.0 0.0 else459_1
    MOVEF_8 VLV_VELA_115 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif459
  else459_1:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else459_2:
  endif459:
    MULF VLV_DIFFD_115 VLV_SIGNOD_115 F.0
    JR_LTEQF F.0 0.0 else463_1
    MOVEF_8 VLV_VELD_115 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif463
  else463_1:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else463_2:
  endif463:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTEQF F.0 VLV_SAFETYTIMER_115 else467_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
  else467_1:
  endif467:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_115 F.0 VLV_DIFFA_115
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_115 F.0 VLV_DIFFD_115
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_115 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 whilebody455
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_NEQF F.0 0.0 whilebody455
  endwhile455:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEADSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEADSAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_116 F.0 VLV_ENCDIFF_116
    MATH ABS VLV_ENCDIFF_116 F.0
    DATAF tmpf484
    DATA8 flag484
    DIVF VLV_ENCDIFF_116 F.0 tmpf484
    CP_EQF 0.0 F.0 flag484
    SELECTF flag484 0.0 tmpf484 VLV_SIGNO_116

    JR_EQF VLV_ENCDIFF_116 0.0 else485_1
    MULF VLV_SIGNO_116 VLV_V_116 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while488:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_116 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile488
  whilebody488:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_116 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody488
  endwhile488:
    CALL MOTOR.STOP 'D' 'True'
  else485_1:
  endif485:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while497:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_119 endwhile497
  whilebody497:
    MOVEF_8 VLV_V_119 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_119 whilebody497
  endwhile497:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_120 F.0 VLV_ENCDIFF_120
    MATH ABS VLV_ENCDIFF_120 F.0
    DATAF tmpf505
    DATA8 flag505
    DIVF VLV_ENCDIFF_120 F.0 tmpf505
    CP_EQF 0.0 F.0 flag505
    SELECTF flag505 0.0 tmpf505 VLV_SIGNO_120

    MATH ABS VLV_ENCDIFF_120 F.4
    DATAF tmpf507
    DATA8 flag507
    DIVF F.4 100.0 tmpf507
    CP_EQF 0.0 100.0 flag507
    SELECTF flag507 0.0 tmpf507 F.3

    DATAF tmpf508
    DATA8 flag508
    DIVF VLV_V_120 20.0 tmpf508
    CP_EQF 0.0 20.0 flag508
    SELECTF flag508 0.0 tmpf508 F.4

    DATAF tmpf509
    DATA8 flag509
    DIVF F.3 F.4 tmpf509
    CP_EQF 0.0 F.4 flag509
    SELECTF flag509 0.0 tmpf509 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag512
	CP_GTF F.0 400.0 flag512
	SELECTF flag512 F.0 400.0 VLV_SAFETYTIMER_120
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_120 0.0 else514_1
  while515:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_120 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile515
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_120 endwhile515
  whilebody515:
    MULF VLV_SIGNO_120 VLV_V_120 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_120 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_120 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and526
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_120 whilebody515
  and526:
  endwhile515:
    CALL MOTOR.STOP 'D' 'True'
  else514_1:
  endif514:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer532
	DATA8 no532
	DATA8 mode8532
	
	MOVEF_8 1.0 no532
	SUB8 no532 1 no532
	DIV8 no532 4 layer532
	MATH MOD8 no532 4 no532

	MOVEF_8 4.0 mode8532
	
	INPUT_DEVICE READY_RAW layer532 no532 0 mode8532 0
    MOVEF_F 15.0 VLV_RED_121
    MOVEF_F 60.0 VLV_YELLOW_121
    MOVEF_F 170.0 VLV_GREEN_121
    MOVEF_F 330.0 VLV_BLUE_121
    MOVEF_F 10.0 VLV_VALUENEGRO_121
    MOVEF_F 100.0 VLV_VALUEBLANCO_121
    MOVEF_F 147.0 VLV_RWHITE_121
    MOVEF_F 143.0 VLV_GWHITE_121
    MOVEF_F 160.0 VLV_BWHITE_121
    MOVEF_F 0.0 VLV_HUE_121
    MOVEF_F 0.0 VLV_SAT_121
    MOVEF_F 0.0 VLV_VALUE_121
    MOVEF_F 0.0 VLV_COLOR_121
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_121
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_121
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_121
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_121
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_121
  for538:
    JR_GTF VLV_J_121 VLV_REPS_121 endfor538
  forbody538:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_121
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_121 VLV_RGB_121
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_121 VLV_RGB_121
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_121 VLV_RGB_121
    DATAF tmpf543
    DATA8 flag543
    DIVF VLV_RRAW_121 VLV_RWHITE_121 tmpf543
    CP_EQF 0.0 VLV_RWHITE_121 flag543
    SELECTF flag543 0.0 tmpf543 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_121 F.0 VLV_RNORMA_121
    DATAF tmpf547
    DATA8 flag547
    DIVF VLV_GRAW_121 VLV_GWHITE_121 tmpf547
    CP_EQF 0.0 VLV_GWHITE_121 flag547
    SELECTF flag547 0.0 tmpf547 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_121 F.0 VLV_GNORMA_121
    DATAF tmpf551
    DATA8 flag551
    DIVF VLV_BRAW_121 VLV_BWHITE_121 tmpf551
    CP_EQF 0.0 VLV_BWHITE_121 flag551
    SELECTF flag551 0.0 tmpf551 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_121 F.0 VLV_BNORMA_121
    CALL ARRAYGET_FLOAT VLV_J_121 F.2 VLV_RNORMA_121
    CALL ARRAYGET_FLOAT VLV_J_121 F.3 VLV_GNORMA_121
    DATA8 flag557
	CP_GTF F.2 F.3 flag557
	SELECTF flag557 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_121 F.2 VLV_BNORMA_121
    DATA8 flag559
	CP_GTF F.1 F.2 flag559
	SELECTF flag559 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_121 F.0 VLV_MAXA_121
    DATA32 milliseconds561
	MOVEF_32 5.0 milliseconds561
	DATA32 timer561
	TIMER_WAIT milliseconds561 timer561
	TIMER_READY timer561
    ADDF VLV_J_121 1.0 VLV_J_121
    JR_LTEQF VLV_J_121 VLV_REPS_121 forbody538
  endfor538:
    MOVEF_F 1.0 VLV_J_121
  for563:
    JR_GTF VLV_J_121 VLV_REPS_121 endfor563
  forbody563:
    CALL ARRAYGET_FLOAT VLV_J_121 F.0 VLV_RNORMA_121
    ADDF VLV_J_121 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_121
    ADDF F.0 F.1 VLV_RNORM_121
    CALL ARRAYGET_FLOAT VLV_J_121 F.0 VLV_GNORMA_121
    ADDF VLV_J_121 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_121
    ADDF F.0 F.1 VLV_GNORM_121
    CALL ARRAYGET_FLOAT VLV_J_121 F.0 VLV_BNORMA_121
    ADDF VLV_J_121 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_121
    ADDF F.0 F.1 VLV_BNORM_121
    CALL ARRAYGET_FLOAT VLV_J_121 F.0 VLV_MAXA_121
    ADDF VLV_J_121 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_121
    ADDF F.0 F.1 VLV_MAX_121
    ADDF VLV_J_121 2.0 VLV_J_121
    JR_LTEQF VLV_J_121 VLV_REPS_121 forbody563
  endfor563:
    DATAF tmpf581
    DATA8 flag581
    DIVF VLV_RNORM_121 VLV_REPS_121 tmpf581
    CP_EQF 0.0 VLV_REPS_121 flag581
    SELECTF flag581 0.0 tmpf581 VLV_RNORM_121

    DATAF tmpf582
    DATA8 flag582
    DIVF VLV_GNORM_121 VLV_REPS_121 tmpf582
    CP_EQF 0.0 VLV_REPS_121 flag582
    SELECTF flag582 0.0 tmpf582 VLV_GNORM_121

    DATAF tmpf583
    DATA8 flag583
    DIVF VLV_BNORM_121 VLV_REPS_121 tmpf583
    CP_EQF 0.0 VLV_REPS_121 flag583
    SELECTF flag583 0.0 tmpf583 VLV_BNORM_121

    DATAF tmpf584
    DATA8 flag584
    DIVF VLV_MAX_121 VLV_REPS_121 tmpf584
    CP_EQF 0.0 VLV_REPS_121 flag584
    SELECTF flag584 0.0 tmpf584 VLV_MAX_121

    DATA8 flag585
	CP_LTF VLV_RNORM_121 VLV_GNORM_121 flag585
	SELECTF flag585 VLV_RNORM_121 VLV_GNORM_121 F.0
    DATA8 flag586
	CP_LTF F.0 VLV_BNORM_121 flag586
	SELECTF flag586 F.0 VLV_BNORM_121 VLV_MIN_121
    JR_NEQF VLV_MAX_121 VLV_MIN_121 else587_1
    MOVEF_F 0.0 VLV_HUE_121
    JR endif587
  else587_1:
    JR_NEQF VLV_MAX_121 VLV_RNORM_121 else587_2
    JR_LTF VLV_GNORM_121 VLV_BNORM_121 else588_1
    SUBF VLV_GNORM_121 VLV_BNORM_121 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_121 VLV_MIN_121 F.1
    DATAF tmpf592
    DATA8 flag592
    DIVF F.0 F.1 tmpf592
    CP_EQF 0.0 F.1 flag592
    SELECTF flag592 0.0 tmpf592 VLV_HUE_121

    JR endif588
  else588_1:
    SUBF VLV_GNORM_121 VLV_BNORM_121 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_121 VLV_MIN_121 F.2
    DATAF tmpf596
    DATA8 flag596
    DIVF F.1 F.2 tmpf596
    CP_EQF 0.0 F.2 flag596
    SELECTF flag596 0.0 tmpf596 F.0

    ADDF F.0 360.0 VLV_HUE_121
  else588_2:
  endif588:
    JR endif587
  else587_2:
    JR_NEQF VLV_MAX_121 VLV_GNORM_121 else587_3
    SUBF VLV_BNORM_121 VLV_RNORM_121 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_121 VLV_MIN_121 F.2
    DATAF tmpf601
    DATA8 flag601
    DIVF F.1 F.2 tmpf601
    CP_EQF 0.0 F.2 flag601
    SELECTF flag601 0.0 tmpf601 F.0

    ADDF F.0 120.0 VLV_HUE_121
    JR endif587
  else587_3:
    SUBF VLV_RNORM_121 VLV_GNORM_121 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_121 VLV_MIN_121 F.2
    DATAF tmpf606
    DATA8 flag606
    DIVF F.1 F.2 tmpf606
    CP_EQF 0.0 F.2 flag606
    SELECTF flag606 0.0 tmpf606 F.0

    ADDF F.0 240.0 VLV_HUE_121
  else587_4:
  endif587:
    JR_NEQF VLV_MAX_121 0.0 else608_1
    MOVEF_F 0.0 VLV_SAT_121
    JR endif608
  else608_1:
    DATAF tmpf609
    DATA8 flag609
    DIVF VLV_MIN_121 VLV_MAX_121 tmpf609
    CP_EQF 0.0 VLV_MAX_121 flag609
    SELECTF flag609 0.0 tmpf609 F.0

    SUBF 1.0 F.0 VLV_SAT_121
  else608_2:
  endif608:
    MOVEF_F VLV_MAX_121 VLV_VALUE_121
    ADDF VLV_VALUEBLANCO_121 VLV_VALUENEGRO_121 F.0
    DATAF tmpf612
    DATA8 flag612
    DIVF F.0 2.0 tmpf612
    CP_EQF 0.0 2.0 flag612
    SELECTF flag612 0.0 tmpf612 VLV_RGBGREY_121

    ADDF VLV_RNORM_121 VLV_GNORM_121 F.1
    ADDF F.1 VLV_BNORM_121 F.0
    JR_GTF F.0 3.0 else613_1
    MOVEF_F 0.0 VLV_COLOR_121
    JR endif613
  else613_1:
    JR_GTEQF VLV_SAT_121 0.4 else616_1
    JR_LTEQF VLV_VALUE_121 VLV_RGBGREY_121 else617_1
    MOVEF_F 6.0 VLV_COLOR_121
    JR endif617
  else617_1:
    MOVEF_F 1.0 VLV_COLOR_121
  else617_2:
  endif617:
    JR endif616
  else616_1:
    JR_LTF VLV_HUE_121 0.0 else618_1
    JR_GTEQF VLV_HUE_121 VLV_RED_121 else618_1
    MOVEF_F 5.0 VLV_COLOR_121
    JR endif618
  else618_1:
    JR_LTF VLV_HUE_121 VLV_RED_121 else618_2
    JR_GTEQF VLV_HUE_121 VLV_YELLOW_121 else618_2
    MOVEF_F 4.0 VLV_COLOR_121
    JR endif618
  else618_2:
    JR_LTF VLV_HUE_121 VLV_YELLOW_121 else618_3
    JR_GTEQF VLV_HUE_121 VLV_GREEN_121 else618_3
    MOVEF_F 3.0 VLV_COLOR_121
    JR endif618
  else618_3:
    JR_LTF VLV_HUE_121 VLV_GREEN_121 else618_4
    JR_GTEQF VLV_HUE_121 VLV_BLUE_121 else618_4
    MOVEF_F 2.0 VLV_COLOR_121
    JR endif618
  else618_4:
    MOVEF_F 5.0 VLV_COLOR_121
  else618_5:
  endif618:
  else616_2:
  endif616:
  else613_2:
  endif613:
    STRINGS VALUE_FORMATTED VLV_RRAW_121 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_121 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_121 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_121 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_121 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_121 VLV_COLOR_133
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB634:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer635
	DATA8 no635
	DATA8 mode8635
	
	MOVEF_8 2.0 no635
	SUB8 no635 1 no635
	DIV8 no635 4 layer635
	MATH MOD8 no635 4 no635

	MOVEF_8 4.0 mode8635
	
	INPUT_DEVICE READY_RAW layer635 no635 0 mode8635 0
    MOVEF_F 15.0 VLV_RED_122
    MOVEF_F 60.0 VLV_YELLOW_122
    MOVEF_F 170.0 VLV_GREEN_122
    MOVEF_F 330.0 VLV_BLUE_122
    MOVEF_F 10.0 VLV_VALUENEGRO_122
    MOVEF_F 100.0 VLV_VALUEBLANCO_122
    MOVEF_F 147.0 VLV_RWHITE_122
    MOVEF_F 143.0 VLV_GWHITE_122
    MOVEF_F 160.0 VLV_BWHITE_122
    MOVEF_F 0.0 VLV_HUE_122
    MOVEF_F 0.0 VLV_SAT_122
    MOVEF_F 0.0 VLV_VALUE_122
    MOVEF_F 0.0 VLV_COLOR_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_122
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_122
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_122
  for641:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor641
  forbody641:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_122
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_122 VLV_RGB_122
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_122 VLV_RGB_122
    DATAF tmpf646
    DATA8 flag646
    DIVF VLV_RRAW_122 VLV_RWHITE_122 tmpf646
    CP_EQF 0.0 VLV_RWHITE_122 flag646
    SELECTF flag646 0.0 tmpf646 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    DATAF tmpf650
    DATA8 flag650
    DIVF VLV_GRAW_122 VLV_GWHITE_122 tmpf650
    CP_EQF 0.0 VLV_GWHITE_122 flag650
    SELECTF flag650 0.0 tmpf650 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    DATAF tmpf654
    DATA8 flag654
    DIVF VLV_BRAW_122 VLV_BWHITE_122 tmpf654
    CP_EQF 0.0 VLV_BWHITE_122 flag654
    SELECTF flag654 0.0 tmpf654 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_RNORMA_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.3 VLV_GNORMA_122
    DATA8 flag660
	CP_GTF F.2 F.3 flag660
	SELECTF flag660 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_122 F.2 VLV_BNORMA_122
    DATA8 flag662
	CP_GTF F.1 F.2 flag662
	SELECTF flag662 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    DATA32 milliseconds664
	MOVEF_32 5.0 milliseconds664
	DATA32 timer664
	TIMER_WAIT milliseconds664 timer664
	TIMER_READY timer664
    ADDF VLV_J_122 1.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody641
  endfor641:
    MOVEF_F 1.0 VLV_J_122
  for666:
    JR_GTF VLV_J_122 VLV_REPS_122 endfor666
  forbody666:
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_RNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_122
    ADDF F.0 F.1 VLV_RNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_GNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_122
    ADDF F.0 F.1 VLV_GNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_BNORMA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_122
    ADDF F.0 F.1 VLV_BNORM_122
    CALL ARRAYGET_FLOAT VLV_J_122 F.0 VLV_MAXA_122
    ADDF VLV_J_122 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_122
    ADDF F.0 F.1 VLV_MAX_122
    ADDF VLV_J_122 2.0 VLV_J_122
    JR_LTEQF VLV_J_122 VLV_REPS_122 forbody666
  endfor666:
    DATAF tmpf684
    DATA8 flag684
    DIVF VLV_RNORM_122 VLV_REPS_122 tmpf684
    CP_EQF 0.0 VLV_REPS_122 flag684
    SELECTF flag684 0.0 tmpf684 VLV_RNORM_122

    DATAF tmpf685
    DATA8 flag685
    DIVF VLV_GNORM_122 VLV_REPS_122 tmpf685
    CP_EQF 0.0 VLV_REPS_122 flag685
    SELECTF flag685 0.0 tmpf685 VLV_GNORM_122

    DATAF tmpf686
    DATA8 flag686
    DIVF VLV_BNORM_122 VLV_REPS_122 tmpf686
    CP_EQF 0.0 VLV_REPS_122 flag686
    SELECTF flag686 0.0 tmpf686 VLV_BNORM_122

    DATAF tmpf687
    DATA8 flag687
    DIVF VLV_MAX_122 VLV_REPS_122 tmpf687
    CP_EQF 0.0 VLV_REPS_122 flag687
    SELECTF flag687 0.0 tmpf687 VLV_MAX_122

    DATA8 flag688
	CP_LTF VLV_RNORM_122 VLV_GNORM_122 flag688
	SELECTF flag688 VLV_RNORM_122 VLV_GNORM_122 F.0
    DATA8 flag689
	CP_LTF F.0 VLV_BNORM_122 flag689
	SELECTF flag689 F.0 VLV_BNORM_122 VLV_MIN_122
    JR_NEQF VLV_MAX_122 VLV_MIN_122 else690_1
    MOVEF_F 0.0 VLV_HUE_122
    JR endif690
  else690_1:
    JR_NEQF VLV_MAX_122 VLV_RNORM_122 else690_2
    JR_LTF VLV_GNORM_122 VLV_BNORM_122 else691_1
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_122 VLV_MIN_122 F.1
    DATAF tmpf695
    DATA8 flag695
    DIVF F.0 F.1 tmpf695
    CP_EQF 0.0 F.1 flag695
    SELECTF flag695 0.0 tmpf695 VLV_HUE_122

    JR endif691
  else691_1:
    SUBF VLV_GNORM_122 VLV_BNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf699
    DATA8 flag699
    DIVF F.1 F.2 tmpf699
    CP_EQF 0.0 F.2 flag699
    SELECTF flag699 0.0 tmpf699 F.0

    ADDF F.0 360.0 VLV_HUE_122
  else691_2:
  endif691:
    JR endif690
  else690_2:
    JR_NEQF VLV_MAX_122 VLV_GNORM_122 else690_3
    SUBF VLV_BNORM_122 VLV_RNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf704
    DATA8 flag704
    DIVF F.1 F.2 tmpf704
    CP_EQF 0.0 F.2 flag704
    SELECTF flag704 0.0 tmpf704 F.0

    ADDF F.0 120.0 VLV_HUE_122
    JR endif690
  else690_3:
    SUBF VLV_RNORM_122 VLV_GNORM_122 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_122 VLV_MIN_122 F.2
    DATAF tmpf709
    DATA8 flag709
    DIVF F.1 F.2 tmpf709
    CP_EQF 0.0 F.2 flag709
    SELECTF flag709 0.0 tmpf709 F.0

    ADDF F.0 240.0 VLV_HUE_122
  else690_4:
  endif690:
    JR_NEQF VLV_MAX_122 0.0 else711_1
    MOVEF_F 0.0 VLV_SAT_122
    JR endif711
  else711_1:
    DATAF tmpf712
    DATA8 flag712
    DIVF VLV_MIN_122 VLV_MAX_122 tmpf712
    CP_EQF 0.0 VLV_MAX_122 flag712
    SELECTF flag712 0.0 tmpf712 F.0

    SUBF 1.0 F.0 VLV_SAT_122
  else711_2:
  endif711:
    MOVEF_F VLV_MAX_122 VLV_VALUE_122
    ADDF VLV_VALUEBLANCO_122 VLV_VALUENEGRO_122 F.0
    DATAF tmpf715
    DATA8 flag715
    DIVF F.0 2.0 tmpf715
    CP_EQF 0.0 2.0 flag715
    SELECTF flag715 0.0 tmpf715 VLV_RGBGREY_122

    ADDF VLV_RNORM_122 VLV_GNORM_122 F.1
    ADDF F.1 VLV_BNORM_122 F.0
    JR_GTF F.0 3.0 else716_1
    MOVEF_F 0.0 VLV_COLOR_122
    JR endif716
  else716_1:
    JR_GTEQF VLV_SAT_122 0.4 else719_1
    JR_LTEQF VLV_VALUE_122 VLV_RGBGREY_122 else720_1
    MOVEF_F 6.0 VLV_COLOR_122
    JR endif720
  else720_1:
    MOVEF_F 1.0 VLV_COLOR_122
  else720_2:
  endif720:
    JR endif719
  else719_1:
    JR_LTF VLV_HUE_122 0.0 else721_1
    JR_GTEQF VLV_HUE_122 VLV_RED_122 else721_1
    MOVEF_F 5.0 VLV_COLOR_122
    JR endif721
  else721_1:
    JR_LTF VLV_HUE_122 VLV_RED_122 else721_2
    JR_GTEQF VLV_HUE_122 VLV_YELLOW_122 else721_2
    MOVEF_F 4.0 VLV_COLOR_122
    JR endif721
  else721_2:
    JR_LTF VLV_HUE_122 VLV_YELLOW_122 else721_3
    JR_GTEQF VLV_HUE_122 VLV_GREEN_122 else721_3
    MOVEF_F 3.0 VLV_COLOR_122
    JR endif721
  else721_3:
    JR_LTF VLV_HUE_122 VLV_GREEN_122 else721_4
    JR_GTEQF VLV_HUE_122 VLV_BLUE_122 else721_4
    MOVEF_F 2.0 VLV_COLOR_122
    JR endif721
  else721_4:
    MOVEF_F 5.0 VLV_COLOR_122
  else721_5:
  endif721:
  else719_2:
  endif719:
  else716_2:
  endif716:
    STRINGS VALUE_FORMATTED VLV_RRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_122 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_122 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_122 VLV_COLOR_133
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB737:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer738
	DATA8 no738
	DATA8 mode8738
	
	MOVEF_8 3.0 no738
	SUB8 no738 1 no738
	DIV8 no738 4 layer738
	MATH MOD8 no738 4 no738

	MOVEF_8 4.0 mode8738
	
	INPUT_DEVICE READY_RAW layer738 no738 0 mode8738 0
    MOVEF_F 15.0 VLV_RED_123
    MOVEF_F 60.0 VLV_YELLOW_123
    MOVEF_F 170.0 VLV_GREEN_123
    MOVEF_F 330.0 VLV_BLUE_123
    MOVEF_F 10.0 VLV_VALUENEGRO_123
    MOVEF_F 100.0 VLV_VALUEBLANCO_123
    MOVEF_F 147.0 VLV_RWHITE_123
    MOVEF_F 143.0 VLV_GWHITE_123
    MOVEF_F 160.0 VLV_BWHITE_123
    MOVEF_F 0.0 VLV_HUE_123
    MOVEF_F 0.0 VLV_SAT_123
    MOVEF_F 0.0 VLV_VALUE_123
    MOVEF_F 0.0 VLV_COLOR_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_123
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_123
  for744:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor744
  forbody744:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_123
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_123 VLV_RGB_123
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_123 VLV_RGB_123
    DATAF tmpf749
    DATA8 flag749
    DIVF VLV_RRAW_123 VLV_RWHITE_123 tmpf749
    CP_EQF 0.0 VLV_RWHITE_123 flag749
    SELECTF flag749 0.0 tmpf749 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    DATAF tmpf753
    DATA8 flag753
    DIVF VLV_GRAW_123 VLV_GWHITE_123 tmpf753
    CP_EQF 0.0 VLV_GWHITE_123 flag753
    SELECTF flag753 0.0 tmpf753 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    DATAF tmpf757
    DATA8 flag757
    DIVF VLV_BRAW_123 VLV_BWHITE_123 tmpf757
    CP_EQF 0.0 VLV_BWHITE_123 flag757
    SELECTF flag757 0.0 tmpf757 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_RNORMA_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.3 VLV_GNORMA_123
    DATA8 flag763
	CP_GTF F.2 F.3 flag763
	SELECTF flag763 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_123 F.2 VLV_BNORMA_123
    DATA8 flag765
	CP_GTF F.1 F.2 flag765
	SELECTF flag765 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    DATA32 milliseconds767
	MOVEF_32 5.0 milliseconds767
	DATA32 timer767
	TIMER_WAIT milliseconds767 timer767
	TIMER_READY timer767
    ADDF VLV_J_123 1.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody744
  endfor744:
    MOVEF_F 1.0 VLV_J_123
  for769:
    JR_GTF VLV_J_123 VLV_REPS_123 endfor769
  forbody769:
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_RNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_123
    ADDF F.0 F.1 VLV_RNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_GNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_123
    ADDF F.0 F.1 VLV_GNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_BNORMA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_123
    ADDF F.0 F.1 VLV_BNORM_123
    CALL ARRAYGET_FLOAT VLV_J_123 F.0 VLV_MAXA_123
    ADDF VLV_J_123 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_123
    ADDF F.0 F.1 VLV_MAX_123
    ADDF VLV_J_123 2.0 VLV_J_123
    JR_LTEQF VLV_J_123 VLV_REPS_123 forbody769
  endfor769:
    DATAF tmpf787
    DATA8 flag787
    DIVF VLV_RNORM_123 VLV_REPS_123 tmpf787
    CP_EQF 0.0 VLV_REPS_123 flag787
    SELECTF flag787 0.0 tmpf787 VLV_RNORM_123

    DATAF tmpf788
    DATA8 flag788
    DIVF VLV_GNORM_123 VLV_REPS_123 tmpf788
    CP_EQF 0.0 VLV_REPS_123 flag788
    SELECTF flag788 0.0 tmpf788 VLV_GNORM_123

    DATAF tmpf789
    DATA8 flag789
    DIVF VLV_BNORM_123 VLV_REPS_123 tmpf789
    CP_EQF 0.0 VLV_REPS_123 flag789
    SELECTF flag789 0.0 tmpf789 VLV_BNORM_123

    DATAF tmpf790
    DATA8 flag790
    DIVF VLV_MAX_123 VLV_REPS_123 tmpf790
    CP_EQF 0.0 VLV_REPS_123 flag790
    SELECTF flag790 0.0 tmpf790 VLV_MAX_123

    DATA8 flag791
	CP_LTF VLV_RNORM_123 VLV_GNORM_123 flag791
	SELECTF flag791 VLV_RNORM_123 VLV_GNORM_123 F.0
    DATA8 flag792
	CP_LTF F.0 VLV_BNORM_123 flag792
	SELECTF flag792 F.0 VLV_BNORM_123 VLV_MIN_123
    JR_NEQF VLV_MAX_123 VLV_MIN_123 else793_1
    MOVEF_F 0.0 VLV_HUE_123
    JR endif793
  else793_1:
    JR_NEQF VLV_MAX_123 VLV_RNORM_123 else793_2
    JR_LTF VLV_GNORM_123 VLV_BNORM_123 else794_1
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_123 VLV_MIN_123 F.1
    DATAF tmpf798
    DATA8 flag798
    DIVF F.0 F.1 tmpf798
    CP_EQF 0.0 F.1 flag798
    SELECTF flag798 0.0 tmpf798 VLV_HUE_123

    JR endif794
  else794_1:
    SUBF VLV_GNORM_123 VLV_BNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf802
    DATA8 flag802
    DIVF F.1 F.2 tmpf802
    CP_EQF 0.0 F.2 flag802
    SELECTF flag802 0.0 tmpf802 F.0

    ADDF F.0 360.0 VLV_HUE_123
  else794_2:
  endif794:
    JR endif793
  else793_2:
    JR_NEQF VLV_MAX_123 VLV_GNORM_123 else793_3
    SUBF VLV_BNORM_123 VLV_RNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf807
    DATA8 flag807
    DIVF F.1 F.2 tmpf807
    CP_EQF 0.0 F.2 flag807
    SELECTF flag807 0.0 tmpf807 F.0

    ADDF F.0 120.0 VLV_HUE_123
    JR endif793
  else793_3:
    SUBF VLV_RNORM_123 VLV_GNORM_123 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_123 VLV_MIN_123 F.2
    DATAF tmpf812
    DATA8 flag812
    DIVF F.1 F.2 tmpf812
    CP_EQF 0.0 F.2 flag812
    SELECTF flag812 0.0 tmpf812 F.0

    ADDF F.0 240.0 VLV_HUE_123
  else793_4:
  endif793:
    JR_NEQF VLV_MAX_123 0.0 else814_1
    MOVEF_F 0.0 VLV_SAT_123
    JR endif814
  else814_1:
    DATAF tmpf815
    DATA8 flag815
    DIVF VLV_MIN_123 VLV_MAX_123 tmpf815
    CP_EQF 0.0 VLV_MAX_123 flag815
    SELECTF flag815 0.0 tmpf815 F.0

    SUBF 1.0 F.0 VLV_SAT_123
  else814_2:
  endif814:
    MOVEF_F VLV_MAX_123 VLV_VALUE_123
    ADDF VLV_VALUEBLANCO_123 VLV_VALUENEGRO_123 F.0
    DATAF tmpf818
    DATA8 flag818
    DIVF F.0 2.0 tmpf818
    CP_EQF 0.0 2.0 flag818
    SELECTF flag818 0.0 tmpf818 VLV_RGBGREY_123

    ADDF VLV_RNORM_123 VLV_GNORM_123 F.1
    ADDF F.1 VLV_BNORM_123 F.0
    JR_GTF F.0 3.0 else819_1
    MOVEF_F 0.0 VLV_COLOR_123
    JR endif819
  else819_1:
    JR_GTEQF VLV_SAT_123 0.4 else822_1
    JR_LTEQF VLV_VALUE_123 VLV_RGBGREY_123 else823_1
    MOVEF_F 6.0 VLV_COLOR_123
    JR endif823
  else823_1:
    MOVEF_F 1.0 VLV_COLOR_123
  else823_2:
  endif823:
    JR endif822
  else822_1:
    JR_LTF VLV_HUE_123 0.0 else824_1
    JR_GTEQF VLV_HUE_123 VLV_RED_123 else824_1
    MOVEF_F 5.0 VLV_COLOR_123
    JR endif824
  else824_1:
    JR_LTF VLV_HUE_123 VLV_RED_123 else824_2
    JR_GTEQF VLV_HUE_123 VLV_YELLOW_123 else824_2
    MOVEF_F 4.0 VLV_COLOR_123
    JR endif824
  else824_2:
    JR_LTF VLV_HUE_123 VLV_YELLOW_123 else824_3
    JR_GTEQF VLV_HUE_123 VLV_GREEN_123 else824_3
    MOVEF_F 3.0 VLV_COLOR_123
    JR endif824
  else824_3:
    JR_LTF VLV_HUE_123 VLV_GREEN_123 else824_4
    JR_GTEQF VLV_HUE_123 VLV_BLUE_123 else824_4
    MOVEF_F 2.0 VLV_COLOR_123
    JR endif824
  else824_4:
    MOVEF_F 5.0 VLV_COLOR_123
  else824_5:
  endif824:
  else822_2:
  endif822:
  else819_2:
  endif819:
    STRINGS VALUE_FORMATTED VLV_RRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_123 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_123 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_123 VLV_COLOR_133
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB840:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer841
	DATA8 no841
	DATA8 mode8841
	
	MOVEF_8 4.0 no841
	SUB8 no841 1 no841
	DIV8 no841 4 layer841
	MATH MOD8 no841 4 no841

	MOVEF_8 4.0 mode8841
	
	INPUT_DEVICE READY_RAW layer841 no841 0 mode8841 0
    MOVEF_F 15.0 VLV_RED_124
    MOVEF_F 60.0 VLV_YELLOW_124
    MOVEF_F 170.0 VLV_GREEN_124
    MOVEF_F 330.0 VLV_BLUE_124
    MOVEF_F 10.0 VLV_VALUENEGRO_124
    MOVEF_F 100.0 VLV_VALUEBLANCO_124
    MOVEF_F 147.0 VLV_RWHITE_124
    MOVEF_F 143.0 VLV_GWHITE_124
    MOVEF_F 160.0 VLV_BWHITE_124
    MOVEF_F 0.0 VLV_HUE_124
    MOVEF_F 0.0 VLV_SAT_124
    MOVEF_F 0.0 VLV_VALUE_124
    MOVEF_F 0.0 VLV_COLOR_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_124
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_124
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_124
  for847:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor847
  forbody847:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_124
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_124 VLV_RGB_124
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_124 VLV_RGB_124
    DATAF tmpf852
    DATA8 flag852
    DIVF VLV_RRAW_124 VLV_RWHITE_124 tmpf852
    CP_EQF 0.0 VLV_RWHITE_124 flag852
    SELECTF flag852 0.0 tmpf852 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    DATAF tmpf856
    DATA8 flag856
    DIVF VLV_GRAW_124 VLV_GWHITE_124 tmpf856
    CP_EQF 0.0 VLV_GWHITE_124 flag856
    SELECTF flag856 0.0 tmpf856 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    DATAF tmpf860
    DATA8 flag860
    DIVF VLV_BRAW_124 VLV_BWHITE_124 tmpf860
    CP_EQF 0.0 VLV_BWHITE_124 flag860
    SELECTF flag860 0.0 tmpf860 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_RNORMA_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.3 VLV_GNORMA_124
    DATA8 flag866
	CP_GTF F.2 F.3 flag866
	SELECTF flag866 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_124 F.2 VLV_BNORMA_124
    DATA8 flag868
	CP_GTF F.1 F.2 flag868
	SELECTF flag868 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    DATA32 milliseconds870
	MOVEF_32 5.0 milliseconds870
	DATA32 timer870
	TIMER_WAIT milliseconds870 timer870
	TIMER_READY timer870
    ADDF VLV_J_124 1.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody847
  endfor847:
    MOVEF_F 1.0 VLV_J_124
  for872:
    JR_GTF VLV_J_124 VLV_REPS_124 endfor872
  forbody872:
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_RNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_124
    ADDF F.0 F.1 VLV_RNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_GNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_124
    ADDF F.0 F.1 VLV_GNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_BNORMA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_124
    ADDF F.0 F.1 VLV_BNORM_124
    CALL ARRAYGET_FLOAT VLV_J_124 F.0 VLV_MAXA_124
    ADDF VLV_J_124 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_124
    ADDF F.0 F.1 VLV_MAX_124
    ADDF VLV_J_124 2.0 VLV_J_124
    JR_LTEQF VLV_J_124 VLV_REPS_124 forbody872
  endfor872:
    DATAF tmpf890
    DATA8 flag890
    DIVF VLV_RNORM_124 VLV_REPS_124 tmpf890
    CP_EQF 0.0 VLV_REPS_124 flag890
    SELECTF flag890 0.0 tmpf890 VLV_RNORM_124

    DATAF tmpf891
    DATA8 flag891
    DIVF VLV_GNORM_124 VLV_REPS_124 tmpf891
    CP_EQF 0.0 VLV_REPS_124 flag891
    SELECTF flag891 0.0 tmpf891 VLV_GNORM_124

    DATAF tmpf892
    DATA8 flag892
    DIVF VLV_BNORM_124 VLV_REPS_124 tmpf892
    CP_EQF 0.0 VLV_REPS_124 flag892
    SELECTF flag892 0.0 tmpf892 VLV_BNORM_124

    DATAF tmpf893
    DATA8 flag893
    DIVF VLV_MAX_124 VLV_REPS_124 tmpf893
    CP_EQF 0.0 VLV_REPS_124 flag893
    SELECTF flag893 0.0 tmpf893 VLV_MAX_124

    DATA8 flag894
	CP_LTF VLV_RNORM_124 VLV_GNORM_124 flag894
	SELECTF flag894 VLV_RNORM_124 VLV_GNORM_124 F.0
    DATA8 flag895
	CP_LTF F.0 VLV_BNORM_124 flag895
	SELECTF flag895 F.0 VLV_BNORM_124 VLV_MIN_124
    JR_NEQF VLV_MAX_124 VLV_MIN_124 else896_1
    MOVEF_F 0.0 VLV_HUE_124
    JR endif896
  else896_1:
    JR_NEQF VLV_MAX_124 VLV_RNORM_124 else896_2
    JR_LTF VLV_GNORM_124 VLV_BNORM_124 else897_1
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_124 VLV_MIN_124 F.1
    DATAF tmpf901
    DATA8 flag901
    DIVF F.0 F.1 tmpf901
    CP_EQF 0.0 F.1 flag901
    SELECTF flag901 0.0 tmpf901 VLV_HUE_124

    JR endif897
  else897_1:
    SUBF VLV_GNORM_124 VLV_BNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf905
    DATA8 flag905
    DIVF F.1 F.2 tmpf905
    CP_EQF 0.0 F.2 flag905
    SELECTF flag905 0.0 tmpf905 F.0

    ADDF F.0 360.0 VLV_HUE_124
  else897_2:
  endif897:
    JR endif896
  else896_2:
    JR_NEQF VLV_MAX_124 VLV_GNORM_124 else896_3
    SUBF VLV_BNORM_124 VLV_RNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf910
    DATA8 flag910
    DIVF F.1 F.2 tmpf910
    CP_EQF 0.0 F.2 flag910
    SELECTF flag910 0.0 tmpf910 F.0

    ADDF F.0 120.0 VLV_HUE_124
    JR endif896
  else896_3:
    SUBF VLV_RNORM_124 VLV_GNORM_124 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_124 VLV_MIN_124 F.2
    DATAF tmpf915
    DATA8 flag915
    DIVF F.1 F.2 tmpf915
    CP_EQF 0.0 F.2 flag915
    SELECTF flag915 0.0 tmpf915 F.0

    ADDF F.0 240.0 VLV_HUE_124
  else896_4:
  endif896:
    JR_NEQF VLV_MAX_124 0.0 else917_1
    MOVEF_F 0.0 VLV_SAT_124
    JR endif917
  else917_1:
    DATAF tmpf918
    DATA8 flag918
    DIVF VLV_MIN_124 VLV_MAX_124 tmpf918
    CP_EQF 0.0 VLV_MAX_124 flag918
    SELECTF flag918 0.0 tmpf918 F.0

    SUBF 1.0 F.0 VLV_SAT_124
  else917_2:
  endif917:
    MOVEF_F VLV_MAX_124 VLV_VALUE_124
    ADDF VLV_VALUEBLANCO_124 VLV_VALUENEGRO_124 F.0
    DATAF tmpf921
    DATA8 flag921
    DIVF F.0 2.0 tmpf921
    CP_EQF 0.0 2.0 flag921
    SELECTF flag921 0.0 tmpf921 VLV_RGBGREY_124

    ADDF VLV_RNORM_124 VLV_GNORM_124 F.1
    ADDF F.1 VLV_BNORM_124 F.0
    JR_GTF F.0 3.0 else922_1
    MOVEF_F 0.0 VLV_COLOR_124
    JR endif922
  else922_1:
    JR_GTEQF VLV_SAT_124 0.4 else925_1
    JR_LTEQF VLV_VALUE_124 VLV_RGBGREY_124 else926_1
    MOVEF_F 6.0 VLV_COLOR_124
    JR endif926
  else926_1:
    MOVEF_F 1.0 VLV_COLOR_124
  else926_2:
  endif926:
    JR endif925
  else925_1:
    JR_LTF VLV_HUE_124 0.0 else927_1
    JR_GTEQF VLV_HUE_124 VLV_RED_124 else927_1
    MOVEF_F 5.0 VLV_COLOR_124
    JR endif927
  else927_1:
    JR_LTF VLV_HUE_124 VLV_RED_124 else927_2
    JR_GTEQF VLV_HUE_124 VLV_YELLOW_124 else927_2
    MOVEF_F 4.0 VLV_COLOR_124
    JR endif927
  else927_2:
    JR_LTF VLV_HUE_124 VLV_YELLOW_124 else927_3
    JR_GTEQF VLV_HUE_124 VLV_GREEN_124 else927_3
    MOVEF_F 3.0 VLV_COLOR_124
    JR endif927
  else927_3:
    JR_LTF VLV_HUE_124 VLV_GREEN_124 else927_4
    JR_GTEQF VLV_HUE_124 VLV_BLUE_124 else927_4
    MOVEF_F 2.0 VLV_COLOR_124
    JR endif927
  else927_4:
    MOVEF_F 5.0 VLV_COLOR_124
  else927_5:
  endif927:
  else925_2:
  endif925:
  else922_2:
  endif922:
    STRINGS VALUE_FORMATTED VLV_RRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_124 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_124 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_124 VLV_COLOR_133
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB943:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_133 0.0 else944_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif944
  else944_1:
    JR_NEQF VLV_COLOR_133 1.0 else944_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif944
  else944_2:
    JR_NEQF VLV_COLOR_133 2.0 else944_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif944
  else944_3:
    JR_NEQF VLV_COLOR_133 3.0 else944_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif944
  else944_4:
    JR_NEQF VLV_COLOR_133 4.0 else944_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif944
  else944_5:
    JR_NEQF VLV_COLOR_133 5.0 else944_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif944
  else944_6:
    JR_NEQF VLV_COLOR_133 6.0 else944_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif944
  else944_7:
    JR_NEQF VLV_COLOR_133 7.0 else944_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else944_8:
  endif944:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_0:
    MOVEF_F 20.0 VLV_V_116
    MOVEF_F -220.0 VLV_AENC_116
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB953 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB953:
    MOVEF_F 60.0 VLV_V_106
    MOVEF_F 270.0 VLV_AENC_106
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB954:
    MOVEF_F 40.0 VLV_V_119
    MOVEF_F 500.0 VLV_T_119
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB955 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB955:
    MOVEF_F 60.0 VLV_V_106
    MOVEF_F 0.0 VLV_AENC_106
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB956:
RETSUB_F_COGER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_0:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
