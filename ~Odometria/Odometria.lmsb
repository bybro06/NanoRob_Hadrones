DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_105
DATAF VLV_AENC_105
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_READ_126
DATAF VLV_V_95
DATAF VLV_AENC_95
DATAF VLV_V_109
DATAF VLV_AENC_109
DATAF VLV_V_108
DATAF VLV_T_108
DATAF VLV_V_96
DATAF VLV_V_106
DATAF VLV_V_101
DATAF VLV_V0_56
DATAF VLV_VMAX_56
DATAF VLV_KP_56
DATAF VLV_KI_56
DATAF VLV_KD_56
DATAF VLV_ACCELENCODER_56
DATAF VLV_VELOCIDAD_72
DATAF VLV_KP_72
DATAF VLV_KI_72
DATAF VLV_KD_72
DATAF VLV_VELOCIDAD_76
DATAF VLV_KP_76
DATAF VLV_KI_76
DATAF VLV_KD_76
DATAF VLV_ENCODER_76
DATAF VLV_VMAX_88
DATAF VLV_KP_88
DATAF VLV_KI_88
DATAF VLV_KD_88
DATAF VLV_COLOR_122
DATAF VLV_REPS_110
DATAF VLV_COLOR_110
DATAF VLV_REPS_111
DATAF VLV_COLOR_111
DATAF VLV_REPS_112
DATAF VLV_COLOR_112
DATAF VLV_REPS_113
DATAF VLV_COLOR_113
ARRAY16 VLV_M_129 2
DATAF VLV_K_129
ARRAY16 VLV_S_129 2
ARRAY16 VLV_M_127 2
ARRAY16 VLV_S_127 2
ARRAY16 VLV_M_128 2
ARRAY16 VLV_S_128 2
DATAF VGV_FLOOR
DATAF VLV_COLOR_114
DATAF VLV_COLOR_115
DATAF VLV_COLOR_116
DATAF VLV_COLOR_117
ARRAY16 VLV_VELI_123 2
ARRAY16 VLV_VELD_123 2
ARRAY16 VLV_OMEGAI_K1_123 2
ARRAY16 VLV_OMEGAD_K1_123 2
ARRAY16 VLV_V_123 2
ARRAY16 VLV_DH_T_123 2
ARRAY16 VLV_S_INV_123 2
DATAF VGV_CENTRO
DATAF VGV_XTIME
DATAF VGV_YTIME
DATAF VGV_THETATIME
DATAF VGV_XTCORRECT
DATAF VGV_YTCORRECT
DATAF VGV_THETATCORRECT
DATAF VGV_SENTIDO_D
DATAF VGV_DW
DATAF VGV_DIAMETER
DATAF VGV_D_T
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_G1
ARRAY16 VGV_ALPHA_L 2
ARRAY16 VGV_ALPHA_R 2
DATAF VGV_OLDB
DATAF VGV_OLDC
ARRAY16 VGV_XT 2
ARRAY16 VGV_YT 2
ARRAY16 VGV_THETAT 2
DATAF VGV_I
DATAF VGV_D_L
DATAF VGV_D_R
DATAF VGV_D
DATAF VGV_DELTA_THETA
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAS VLV_I_56 252
DATAS VLV_D_56 252
DATAF VLV_U_56
DATAF VLV_ERROR_56
DATAF VLV_OLDERROR_56
DATAF VLV_ERRSUM_56
DATAF VLV_VEL_56
DATAF VLV_SENTIDO_56
DATAS VLV_I_72 252
DATAS VLV_D_72 252
DATAF VLV_ERROR_72
DATAF VLV_OLDERROR_72
DATAF VLV_ERRSUM_72
DATAF VLV_U_72
DATAF VLV_SENTIDO_72
DATAS VLV_I_76 252
DATAS VLV_D_76 252
DATAF VLV_ERROR_76
DATAF VLV_OLDERROR_76
DATAF VLV_ERRSUM_76
DATAF VLV_U_76
DATAF VLV_SENTIDO_76
DATAF VLV_START_C_76
DATAF VLV_ENCODER_C_76
DATAS VLV_I_88 252
DATAS VLV_D_88 252
DATAF VLV_V0_88
DATAF VLV_ACCELENCODER_88
DATAF VLV_U_88
DATAF VLV_ERRSUM_88
DATAF VLV_OLDERROR_88
DATAF VLV_VEL_88
DATAF VLV_SENTIDO_88
DATAF VLV_ERROR_88
DATAF VLV_ENCDIFF_95
DATAF VLV_SIGNO_95
DATAF VLV_ENCDIFF_96
DATAF VLV_SIGNO_96
DATAF VLV_AENC_101
DATAF VLV_ENCDIFF_105
DATAF VLV_SIGNO_105
DATAF VLV_ENCDIFF_109
DATAF VLV_SIGNO_109
DATAF VLV_SAFETYTIMER_109
DATAF VLV_RED_110
DATAF VLV_YELLOW_110
DATAF VLV_GREEN_110
DATAF VLV_BLUE_110
DATAF VLV_VALUENEGRO_110
DATAF VLV_VALUEBLANCO_110
DATAF VLV_RWHITE_110
DATAF VLV_GWHITE_110
DATAF VLV_BWHITE_110
DATAF VLV_HUE_110
DATAF VLV_SAT_110
DATAF VLV_VALUE_110
ARRAY16 VLV_RNORMA_110 2
ARRAY16 VLV_GNORMA_110 2
ARRAY16 VLV_BNORMA_110 2
ARRAY16 VLV_MAXA_110 2
DATAF VLV_J_110
ARRAY16 VLV_RGB_110 2
DATAF VLV_RRAW_110
DATAF VLV_GRAW_110
DATAF VLV_BRAW_110
DATAF VLV_RNORM_110
DATAF VLV_GNORM_110
DATAF VLV_BNORM_110
DATAF VLV_MAX_110
DATAF VLV_MIN_110
DATAF VLV_RGBGREY_110
DATAF VLV_RED_111
DATAF VLV_YELLOW_111
DATAF VLV_GREEN_111
DATAF VLV_BLUE_111
DATAF VLV_VALUENEGRO_111
DATAF VLV_VALUEBLANCO_111
DATAF VLV_RWHITE_111
DATAF VLV_GWHITE_111
DATAF VLV_BWHITE_111
DATAF VLV_HUE_111
DATAF VLV_SAT_111
DATAF VLV_VALUE_111
ARRAY16 VLV_RNORMA_111 2
ARRAY16 VLV_GNORMA_111 2
ARRAY16 VLV_BNORMA_111 2
ARRAY16 VLV_MAXA_111 2
DATAF VLV_J_111
ARRAY16 VLV_RGB_111 2
DATAF VLV_RRAW_111
DATAF VLV_GRAW_111
DATAF VLV_BRAW_111
DATAF VLV_RNORM_111
DATAF VLV_GNORM_111
DATAF VLV_BNORM_111
DATAF VLV_MAX_111
DATAF VLV_MIN_111
DATAF VLV_RGBGREY_111
DATAF VLV_RED_112
DATAF VLV_YELLOW_112
DATAF VLV_GREEN_112
DATAF VLV_BLUE_112
DATAF VLV_VALUENEGRO_112
DATAF VLV_VALUEBLANCO_112
DATAF VLV_RWHITE_112
DATAF VLV_GWHITE_112
DATAF VLV_BWHITE_112
DATAF VLV_HUE_112
DATAF VLV_SAT_112
DATAF VLV_VALUE_112
ARRAY16 VLV_RNORMA_112 2
ARRAY16 VLV_GNORMA_112 2
ARRAY16 VLV_BNORMA_112 2
ARRAY16 VLV_MAXA_112 2
DATAF VLV_J_112
ARRAY16 VLV_RGB_112 2
DATAF VLV_RRAW_112
DATAF VLV_GRAW_112
DATAF VLV_BRAW_112
DATAF VLV_RNORM_112
DATAF VLV_GNORM_112
DATAF VLV_BNORM_112
DATAF VLV_MAX_112
DATAF VLV_MIN_112
DATAF VLV_RGBGREY_112
DATAF VLV_RED_113
DATAF VLV_YELLOW_113
DATAF VLV_GREEN_113
DATAF VLV_BLUE_113
DATAF VLV_VALUENEGRO_113
DATAF VLV_VALUEBLANCO_113
DATAF VLV_RWHITE_113
DATAF VLV_GWHITE_113
DATAF VLV_BWHITE_113
DATAF VLV_HUE_113
DATAF VLV_SAT_113
DATAF VLV_VALUE_113
ARRAY16 VLV_RNORMA_113 2
ARRAY16 VLV_GNORMA_113 2
ARRAY16 VLV_BNORMA_113 2
ARRAY16 VLV_MAXA_113 2
DATAF VLV_J_113
ARRAY16 VLV_RGB_113 2
DATAF VLV_RRAW_113
DATAF VLV_GRAW_113
DATAF VLV_BRAW_113
DATAF VLV_RNORM_113
DATAF VLV_GNORM_113
DATAF VLV_BNORM_113
DATAF VLV_MAX_113
DATAF VLV_MIN_113
DATAF VLV_RGBGREY_113
DATAF VLV_DETERMINANTE_128
DATAF VLV_I_129
DATA32 RUNCOUNTER_F_ODOMETRY_0
DATA32 RUNCOUNTER_F_DISPLAY_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_READ_126
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_96
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYCREATE_FLOAT VLV_M_129
    MOVEF_F 0.0 VLV_K_129
    CALL ARRAYCREATE_FLOAT VLV_S_129
    CALL ARRAYCREATE_FLOAT VLV_M_127
    CALL ARRAYCREATE_FLOAT VLV_S_127
    CALL ARRAYCREATE_FLOAT VLV_M_128
    CALL ARRAYCREATE_FLOAT VLV_S_128
    MOVEF_F 0.0 VGV_FLOOR
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYCREATE_FLOAT VLV_VELI_123
    CALL ARRAYCREATE_FLOAT VLV_VELD_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAI_K1_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAD_K1_123
    CALL ARRAYCREATE_FLOAT VLV_V_123
    CALL ARRAYCREATE_FLOAT VLV_DH_T_123
    CALL ARRAYCREATE_FLOAT VLV_S_INV_123
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_L
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYCREATE_FLOAT VGV_XT
    CALL ARRAYCREATE_FLOAT VGV_YT
    CALL ARRAYCREATE_FLOAT VGV_THETAT
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_D_L
    MOVEF_F 0.0 VGV_D_R
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_DELTA_THETA
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    STRINGS DUPLICATE '' VLV_I_56
    STRINGS DUPLICATE '' VLV_D_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    MOVEF_F 0.0 VLV_VEL_56
    MOVEF_F 0.0 VLV_SENTIDO_56
    STRINGS DUPLICATE '' VLV_I_72
    STRINGS DUPLICATE '' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MOVEF_F 0.0 VLV_SENTIDO_72
    STRINGS DUPLICATE '' VLV_I_76
    STRINGS DUPLICATE '' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MOVEF_F 0.0 VLV_SENTIDO_76
    MOVEF_F 0.0 VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
    STRINGS DUPLICATE '' VLV_I_88
    STRINGS DUPLICATE '' VLV_D_88
    MOVEF_F 0.0 VLV_V0_88
    MOVEF_F 0.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    MOVEF_F 0.0 VLV_VEL_88
    MOVEF_F 0.0 VLV_SENTIDO_88
    MOVEF_F 0.0 VLV_ERROR_88
    MOVEF_F 0.0 VLV_ENCDIFF_95
    MOVEF_F 0.0 VLV_SIGNO_95
    MOVEF_F 0.0 VLV_ENCDIFF_96
    MOVEF_F 0.0 VLV_SIGNO_96
    MOVEF_F 0.0 VLV_AENC_101
    MOVEF_F 0.0 VLV_ENCDIFF_105
    MOVEF_F 0.0 VLV_SIGNO_105
    MOVEF_F 0.0 VLV_ENCDIFF_109
    MOVEF_F 0.0 VLV_SIGNO_109
    MOVEF_F 0.0 VLV_SAFETYTIMER_109
    MOVEF_F 0.0 VLV_RED_110
    MOVEF_F 0.0 VLV_YELLOW_110
    MOVEF_F 0.0 VLV_GREEN_110
    MOVEF_F 0.0 VLV_BLUE_110
    MOVEF_F 0.0 VLV_VALUENEGRO_110
    MOVEF_F 0.0 VLV_VALUEBLANCO_110
    MOVEF_F 0.0 VLV_RWHITE_110
    MOVEF_F 0.0 VLV_GWHITE_110
    MOVEF_F 0.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_MAXA_110
    MOVEF_F 0.0 VLV_J_110
    CALL ARRAYCREATE_FLOAT VLV_RGB_110
    MOVEF_F 0.0 VLV_RRAW_110
    MOVEF_F 0.0 VLV_GRAW_110
    MOVEF_F 0.0 VLV_BRAW_110
    MOVEF_F 0.0 VLV_RNORM_110
    MOVEF_F 0.0 VLV_GNORM_110
    MOVEF_F 0.0 VLV_BNORM_110
    MOVEF_F 0.0 VLV_MAX_110
    MOVEF_F 0.0 VLV_MIN_110
    MOVEF_F 0.0 VLV_RGBGREY_110
    MOVEF_F 0.0 VLV_RED_111
    MOVEF_F 0.0 VLV_YELLOW_111
    MOVEF_F 0.0 VLV_GREEN_111
    MOVEF_F 0.0 VLV_BLUE_111
    MOVEF_F 0.0 VLV_VALUENEGRO_111
    MOVEF_F 0.0 VLV_VALUEBLANCO_111
    MOVEF_F 0.0 VLV_RWHITE_111
    MOVEF_F 0.0 VLV_GWHITE_111
    MOVEF_F 0.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_MAXA_111
    MOVEF_F 0.0 VLV_J_111
    CALL ARRAYCREATE_FLOAT VLV_RGB_111
    MOVEF_F 0.0 VLV_RRAW_111
    MOVEF_F 0.0 VLV_GRAW_111
    MOVEF_F 0.0 VLV_BRAW_111
    MOVEF_F 0.0 VLV_RNORM_111
    MOVEF_F 0.0 VLV_GNORM_111
    MOVEF_F 0.0 VLV_BNORM_111
    MOVEF_F 0.0 VLV_MAX_111
    MOVEF_F 0.0 VLV_MIN_111
    MOVEF_F 0.0 VLV_RGBGREY_111
    MOVEF_F 0.0 VLV_RED_112
    MOVEF_F 0.0 VLV_YELLOW_112
    MOVEF_F 0.0 VLV_GREEN_112
    MOVEF_F 0.0 VLV_BLUE_112
    MOVEF_F 0.0 VLV_VALUENEGRO_112
    MOVEF_F 0.0 VLV_VALUEBLANCO_112
    MOVEF_F 0.0 VLV_RWHITE_112
    MOVEF_F 0.0 VLV_GWHITE_112
    MOVEF_F 0.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_MAXA_112
    MOVEF_F 0.0 VLV_J_112
    CALL ARRAYCREATE_FLOAT VLV_RGB_112
    MOVEF_F 0.0 VLV_RRAW_112
    MOVEF_F 0.0 VLV_GRAW_112
    MOVEF_F 0.0 VLV_BRAW_112
    MOVEF_F 0.0 VLV_RNORM_112
    MOVEF_F 0.0 VLV_GNORM_112
    MOVEF_F 0.0 VLV_BNORM_112
    MOVEF_F 0.0 VLV_MAX_112
    MOVEF_F 0.0 VLV_MIN_112
    MOVEF_F 0.0 VLV_RGBGREY_112
    MOVEF_F 0.0 VLV_RED_113
    MOVEF_F 0.0 VLV_YELLOW_113
    MOVEF_F 0.0 VLV_GREEN_113
    MOVEF_F 0.0 VLV_BLUE_113
    MOVEF_F 0.0 VLV_VALUENEGRO_113
    MOVEF_F 0.0 VLV_VALUEBLANCO_113
    MOVEF_F 0.0 VLV_RWHITE_113
    MOVEF_F 0.0 VLV_GWHITE_113
    MOVEF_F 0.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_MAXA_113
    MOVEF_F 0.0 VLV_J_113
    CALL ARRAYCREATE_FLOAT VLV_RGB_113
    MOVEF_F 0.0 VLV_RRAW_113
    MOVEF_F 0.0 VLV_GRAW_113
    MOVEF_F 0.0 VLV_BRAW_113
    MOVEF_F 0.0 VLV_RNORM_113
    MOVEF_F 0.0 VLV_GNORM_113
    MOVEF_F 0.0 VLV_BNORM_113
    MOVEF_F 0.0 VLV_MAX_113
    MOVEF_F 0.0 VLV_MIN_113
    MOVEF_F 0.0 VLV_RGBGREY_113
    MOVEF_F 0.0 VLV_DETERMINANTE_128
    MOVEF_F 0.0 VLV_I_129
    MOVE32_32 0 RUNCOUNTER_F_ODOMETRY_0
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_ODOMETRY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ODOMETRY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 -1 RUNCOUNTER_F_ODOMETRY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_ODOMETRY_0
subcall PROGRAM_F_DISPLAY_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    DATAF F.7
    DATAF F.8
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1042
    WRITE32 ENDSUB_F_ODOMETRY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ODOMETRY_0
  dispatch1042:
    JR_NEQ32 SUBPROGRAM 1 dispatch1043
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1043:
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_READ_126
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_96
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_129
    MOVEF_F 0.0 VLV_K_129
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_129
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_127
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_127
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_128
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_128
    MOVEF_F 0.0 VGV_FLOOR
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELI_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELD_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAI_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAD_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_DH_T_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_INV_123
    MOVEF_F 0.0 VLV_READ_126
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 1.0 VGV_SENTIDO_D
    MOVEF_F 102.0 VGV_DW
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.61111111111111 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB13 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB13:
    DATA32 tmp14
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 1  RUNCOUNTER_F_ODOMETRY_0 tmp14
    JR_NEQ32 0 tmp14 alreadylaunched14
    OBJECT_START TF_ODOMETRY_0
  alreadylaunched14:
    DATA32 tmp15
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp15
    JR_NEQ32 0 tmp15 alreadylaunched15
    OBJECT_START TF_DISPLAY_0
  alreadylaunched15:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB16:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer17
	DATA8 no17
	DATA8 mode817
	
	MOVEF_8 1.0 no17
	SUB8 no17 1 no17
	DIV8 no17 4 layer17
	MATH MOD8 no17 4 no17

	MOVEF_8 0.0 mode817
	
	INPUT_DEVICE READY_RAW layer17 no17 0 mode817 0
    DATA8 layer18
	DATA8 no18
	DATA8 mode818
	
	MOVEF_8 2.0 no18
	SUB8 no18 1 no18
	DIV8 no18 4 layer18
	MATH MOD8 no18 4 no18

	MOVEF_8 4.0 mode818
	
	INPUT_DEVICE READY_RAW layer18 no18 0 mode818 0
    DATA8 layer19
	DATA8 no19
	DATA8 mode819
	
	MOVEF_8 3.0 no19
	SUB8 no19 1 no19
	DIV8 no19 4 layer19
	MATH MOD8 no19 4 no19

	MOVEF_8 4.0 mode819
	
	INPUT_DEVICE READY_RAW layer19 no19 0 mode819 0
    DATA8 layer20
	DATA8 no20
	DATA8 mode820
	
	MOVEF_8 4.0 no20
	SUB8 no20 1 no20
	DIV8 no20 4 layer20
	MATH MOD8 no20 4 no20

	MOVEF_8 0.0 mode820
	
	INPUT_DEVICE READY_RAW layer20 no20 0 mode820 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while22:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 700.0 endwhile22
  whilebody22:
    MOVEF_8 30.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 40.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 700.0 whilebody22
  endwhile22:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -360.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB30 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB30:
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds32
	MOVEF_32 100.0 milliseconds32
	DATA32 timer32
	TIMER_WAIT milliseconds32 timer32
	TIMER_READY timer32
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_ODOMETRY_0:
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_L
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_XT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_YT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_THETAT
    MOVEF_F 0.0 VGV_I
  while38:
  whilebody38:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.2
    MULF F.2 -1.0 F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_L
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_R
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_L
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_L
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf51
    DATA8 flag51
    DIVF F.0 2.0 tmpf51
    CP_EQF 0.0 2.0 flag51
    SELECTF flag51 0.0 tmpf51 VGV_D_L

    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_R
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_R
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf57
    DATA8 flag57
    DIVF F.0 2.0 tmpf57
    CP_EQF 0.0 2.0 flag57
    SELECTF flag57 0.0 tmpf57 VGV_D_R

    ADDF VGV_D_L VGV_D_R F.0
    DATAF tmpf59
    DATA8 flag59
    DIVF F.0 2.0 tmpf59
    CP_EQF 0.0 2.0 flag59
    SELECTF flag59 0.0 tmpf59 VGV_D

    SUBF VGV_D_R VGV_D_L F.0
    MULF 2.0 VGV_DW F.1
    DATAF tmpf62
    DATA8 flag62
    DIVF F.0 F.1 tmpf62
    CP_EQF 0.0 F.1 flag62
    SELECTF flag62 0.0 tmpf62 VGV_DELTA_THETA

    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf65
    DATA8 flag65
    DIVF VGV_DELTA_THETA 2.0 tmpf65
    CP_EQF 0.0 2.0 flag65
    SELECTF flag65 0.0 tmpf65 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf67
	MULF F.4 57.295779513082  tmpf67
	MATH SIN  tmpf67 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf74
    DATA8 flag74
    DIVF VGV_DELTA_THETA 2.0 tmpf74
    CP_EQF 0.0 2.0 flag74
    SELECTF flag74 0.0 tmpf74 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf76
	MULF F.4 57.295779513082 tmpf76
	MATH COS tmpf76 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_THETAT
    ADDF F.2 VGV_DELTA_THETA F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_THETAT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_XTIME VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_YTIME VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_THETATIME VGV_THETAT
    ADDF VGV_I 1.0 VGV_I
    DATA32 milliseconds92
	MOVEF_32 10.0 milliseconds92
	DATA32 timer92
	TIMER_WAIT milliseconds92 timer92
	TIMER_READY timer92
    JR whilebody38
  endwhile38:
RETSUB_F_ODOMETRY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ODOMETRY_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while93:
  whilebody93:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf99
    DATA8 flag99
    DIVF F.1 100.0 tmpf99
    CP_EQF 0.0 100.0 flag99
    SELECTF flag99 0.0 tmpf99 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'xt: ' S.1 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf106
    DATA8 flag106
    DIVF F.1 100.0 tmpf106
    CP_EQF 0.0 100.0 flag106
    SELECTF flag106 0.0 tmpf106 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'yt: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.1 VGV_THETAT
    MULF F.1 57.295779513082 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'thetat: ' S.1 S.0
    CALL LCD.WRITE 5.0 25.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf130
    DATA8 flag130
    DIVF F.2 0.05 tmpf130
    CP_EQF 0.0 0.05 flag130
    SELECTF flag130 0.0 tmpf130 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf138
    DATA8 flag138
    DIVF F.1 0.05 tmpf138
    CP_EQF 0.0 0.05 flag138
    SELECTF flag138 0.0 tmpf138 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    STRINGS VALUE_FORMATTED VGV_D_T '%g' 99 S.1
    CALL TEXT.APPEND 'Delta T:  ' S.1 S.0
    CALL LCD.WRITE 5.0 105.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds155
	MOVEF_32 50.0 milliseconds155
	DATA32 timer155
	TIMER_WAIT milliseconds155 timer155
	TIMER_READY timer155
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody93
  endwhile93:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB158:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB159:
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB160:
    MOVEF_F VLV_READ_126 VGV_FLOOR
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB161:
    MOVEF_F 30.0 VLV_V_95
    MOVEF_F -840.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB162:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -280.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB163:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 200.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB164:
    MOVEF_F 30.0 VLV_V_96
    WRITE32 ENDSUB_F_BMOVEA0_1:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA0_1
CALLSUB165:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 20.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB166:
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB167:
    MOVEF_F VLV_READ_126 VGV_FLOOR
    MOVEF_F 30.0 VLV_V_95
    MOVEF_F -600.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB168:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB169:
    MOVEF_F 30.0 VLV_V_95
    MOVEF_F -700.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB170:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -300.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB171:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -750.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB172:
    DATA32 milliseconds173
	MOVEF_32 400.0 milliseconds173
	DATA32 timer173
	TIMER_WAIT milliseconds173 timer173
	TIMER_READY timer173
    MOVEF_F 20.0 VLV_V_106
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB174:
    MOVEF_F 30.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB175:
    DATA32 milliseconds176
	MOVEF_32 10000.0 milliseconds176
	DATA32 timer176
	TIMER_WAIT milliseconds176 timer176
	TIMER_READY timer176
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf180
    DATA8 flag180
    DIVF F.1 F.2 tmpf180
    CP_EQF 0.0 F.2 flag180
    SELECTF flag180 0.0 tmpf180 F.0

    DATAF tmpf181
    DATA8 flag181
    DIVF F.0 VLV_DIAMETRO_1 tmpf181
    CP_EQF 0.0 VLV_DIAMETRO_1 flag181
    SELECTF flag181 0.0 tmpf181 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while187:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile187
  whilebody187:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 2.0 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody187
  endwhile187:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_56
    STRINGS DUPLICATE 'C' VLV_D_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf205
    DATA8 flag205
    DIVF VLV_ACCELENCODER_56 F.1 tmpf205
    CP_EQF 0.0 F.1 flag205
    SELECTF flag205 0.0 tmpf205 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    CALL MOTOR.RESETCOUNT 'C'
  while208:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or209
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile208
  or209:
  whilebody208:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf213
    DATA8 flag213
    DIVF F.3 VLV_ACCELENCODER_56 tmpf213
    CP_EQF 0.0 VLV_ACCELENCODER_56 flag213
    SELECTF flag213 0.0 tmpf213 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_56 VLV_V0_56 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_56 VLV_VEL_56
    DATA8 flag218
	CP_LTF VLV_VEL_56 VLV_VMAX_56 flag218
	SELECTF flag218 VLV_VEL_56 VLV_VMAX_56 VLV_VEL_56
    MATH ABS VLV_VEL_56 F.0
    DATAF tmpf220
    DATA8 flag220
    DIVF VLV_VEL_56 F.0 tmpf220
    CP_EQF 0.0 F.0 flag220
    SELECTF flag220 0.0 tmpf220 VLV_SENTIDO_56

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_56 VLV_ERROR_56
    ADDF VLV_ERRSUM_56 VLV_ERROR_56 VLV_ERRSUM_56
    MULF VLV_ERROR_56 VLV_KP_56 F.1
    SUBF VLV_ERROR_56 VLV_OLDERROR_56 F.3
    MULF F.3 VLV_KD_56 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_56 VLV_KI_56 F.1
    ADDF F.0 F.1 VLV_U_56
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    ADDF VLV_VEL_56 VLV_U_56 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_56 VLV_U_56 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_56 VLV_OLDERROR_56
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody208
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody208
  endwhile208:
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_72 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_72
    STRINGS DUPLICATE 'B' VLV_I_72
    STRINGS DUPLICATE 'C' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MATH ABS VLV_VELOCIDAD_72 F.0
    DATAF tmpf245
    DATA8 flag245
    DIVF VLV_VELOCIDAD_72 F.0 tmpf245
    CP_EQF 0.0 F.0 flag245
    SELECTF flag245 0.0 tmpf245 VLV_SENTIDO_72

  while246:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or247
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile246
  or247:
  whilebody246:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_72 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_72
    ADDF VLV_ERRSUM_72 VLV_ERROR_72 VLV_ERRSUM_72
    MULF VLV_ERROR_72 VLV_KP_72 F.1
    SUBF VLV_ERROR_72 VLV_OLDERROR_72 F.3
    MULF F.3 VLV_KD_72 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_72 VLV_KI_72 F.1
    ADDF F.0 F.1 VLV_U_72
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    ADDF VLV_VELOCIDAD_72 VLV_U_72 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_72 VLV_U_72 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_72 VLV_OLDERROR_72
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody246
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody246
  endwhile246:
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_76 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_76
    STRINGS DUPLICATE 'B' VLV_I_76
    STRINGS DUPLICATE 'C' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MATH ABS VLV_VELOCIDAD_76 F.0
    DATAF tmpf273
    DATA8 flag273
    DIVF VLV_VELOCIDAD_76 F.0 tmpf273
    CP_EQF 0.0 F.0 flag273
    SELECTF flag273 0.0 tmpf273 VLV_SENTIDO_76

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf276
    DATA8 flag276
    DIVF VLV_ENCODER_76 F.1 tmpf276
    CP_EQF 0.0 F.1 flag276
    SELECTF flag276 0.0 tmpf276 F.0

    MULF F.0 360.0 VLV_ENCODER_76
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
  while279:
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_GTEQF F.0 VLV_ENCODER_76 endwhile279
  whilebody279:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_76 VLV_ENCODER_C_76
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_76 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_76
    ADDF VLV_ERRSUM_76 VLV_ERROR_76 VLV_ERRSUM_76
    MULF VLV_ERROR_76 VLV_KP_76 F.1
    SUBF VLV_ERROR_76 VLV_OLDERROR_76 F.3
    MULF F.3 VLV_KD_76 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_76 VLV_KI_76 F.1
    ADDF F.0 F.1 VLV_U_76
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    ADDF VLV_VELOCIDAD_76 VLV_U_76 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_76 VLV_U_76 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_76 VLV_OLDERROR_76
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_LTF F.0 VLV_ENCODER_76 whilebody279
  endwhile279:
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_88 VGV_SENTIDO_MOTORES VLV_VMAX_88
    STRINGS DUPLICATE 'B' VLV_I_88
    STRINGS DUPLICATE 'C' VLV_D_88
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_88
    MOVEF_F 150.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    CALL MOTOR.RESETCOUNT 'C'
  while306:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or307
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile306
  or307:
  whilebody306:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf311
    DATA8 flag311
    DIVF F.2 VLV_ACCELENCODER_88 tmpf311
    CP_EQF 0.0 VLV_ACCELENCODER_88 flag311
    SELECTF flag311 0.0 tmpf311 F.1

    ADDF VLV_VMAX_88 VLV_V0_88 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_88 VLV_VEL_88
    DATA8 flag315
	CP_LTF VLV_VEL_88 VLV_VMAX_88 flag315
	SELECTF flag315 VLV_VEL_88 VLV_VMAX_88 VLV_VEL_88
    MATH ABS VLV_VEL_88 F.0
    DATAF tmpf317
    DATA8 flag317
    DIVF VLV_VEL_88 F.0 tmpf317
    CP_EQF 0.0 F.0 flag317
    SELECTF flag317 0.0 tmpf317 VLV_SENTIDO_88

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_88 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_88
    MULF VLV_ERRSUM_88 0.9 F.0
    ADDF F.0 VLV_ERROR_88 VLV_ERRSUM_88
    MULF VLV_ERROR_88 VLV_KP_88 F.1
    SUBF VLV_ERROR_88 VLV_OLDERROR_88 F.3
    MULF F.3 VLV_KD_88 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_88 VLV_KI_88 F.1
    ADDF F.0 F.1 VLV_U_88
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    ADDF VLV_VEL_88 VLV_U_88 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_88 VLV_U_88 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_88 VLV_OLDERROR_88
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody306
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody306
  endwhile306:
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_95 F.0 VLV_ENCDIFF_95
    MATH ABS VLV_ENCDIFF_95 F.0
    DATAF tmpf343
    DATA8 flag343
    DIVF VLV_ENCDIFF_95 F.0 tmpf343
    CP_EQF 0.0 F.0 flag343
    SELECTF flag343 0.0 tmpf343 VLV_SIGNO_95

    JR_EQF VLV_ENCDIFF_95 0.0 else344_1
    MULF VLV_SIGNO_95 VLV_V_95 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
  while347:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile347
  whilebody347:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody347
  endwhile347:
    CALL MOTOR.STOP 'A' 'True'
  else344_1:
  endif344:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEA0_1:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF -5.0 F.0 VLV_ENCDIFF_96
    MATH ABS VLV_ENCDIFF_96 F.0
    DATAF tmpf358
    DATA8 flag358
    DIVF VLV_ENCDIFF_96 F.0 tmpf358
    CP_EQF 0.0 F.0 flag358
    SELECTF flag358 0.0 tmpf358 VLV_SIGNO_96

    JR_EQF VLV_ENCDIFF_96 0.0 else359_1
    MULF VLV_SIGNO_96 VLV_V_96 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
  while362:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 5.0 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile362
  whilebody362:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 5.0 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody362
  endwhile362:
    CALL MOTOR.STOP 'A' 'True'
  else359_1:
  endif359:
RETSUB_F_BMOVEA0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA0_1:
SUB_F_BMOVEAD0_1:
    MOVEF_F -10.0 VLV_AENC_101
  while370:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 or371
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENC_101 endwhile370
  or371:
  whilebody370:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_GTEQF F.0 VLV_AENC_101 else374_1
    DATAF tmpf376
    DATA8 flag376
    DIVF VLV_V_101 2.0 tmpf376
    CP_EQF 0.0 2.0 flag376
    SELECTF flag376 0.0 tmpf376 F.2

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf379
    DATA8 flag379
    DIVF F.4 10.0 tmpf379
    CP_EQF 0.0 10.0 flag379
    SELECTF flag379 0.0 tmpf379 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag381
	CP_LTF VLV_V_101 F.1 flag381
	SELECTF flag381 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif374
  else374_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_LTEQF F.0 VLV_AENC_101 else374_2
    DATAF tmpf384
    DATA8 flag384
    DIVF VLV_V_101 2.0 tmpf384
    CP_EQF 0.0 2.0 flag384
    SELECTF flag384 0.0 tmpf384 F.3

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf387
    DATA8 flag387
    DIVF F.5 10.0 tmpf387
    CP_EQF 0.0 10.0 flag387
    SELECTF flag387 0.0 tmpf387 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag389
	CP_LTF VLV_V_101 F.2 flag389
	SELECTF flag389 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif374
  else374_2:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else374_3:
  endif374:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_GTEQF F.0 VLV_AENC_101 else393_1
    DATAF tmpf395
    DATA8 flag395
    DIVF VLV_V_101 2.0 tmpf395
    CP_EQF 0.0 2.0 flag395
    SELECTF flag395 0.0 tmpf395 F.2

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf398
    DATA8 flag398
    DIVF F.4 10.0 tmpf398
    CP_EQF 0.0 10.0 flag398
    SELECTF flag398 0.0 tmpf398 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag400
	CP_LTF VLV_V_101 F.1 flag400
	SELECTF flag400 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif393
  else393_1:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_LTEQF F.0 VLV_AENC_101 else393_2
    DATAF tmpf403
    DATA8 flag403
    DIVF VLV_V_101 2.0 tmpf403
    CP_EQF 0.0 2.0 flag403
    SELECTF flag403 0.0 tmpf403 F.3

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf406
    DATA8 flag406
    DIVF F.5 10.0 tmpf406
    CP_EQF 0.0 10.0 flag406
    SELECTF flag406 0.0 tmpf406 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag408
	CP_LTF VLV_V_101 F.2 flag408
	SELECTF flag408 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif393
  else393_2:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else393_3:
  endif393:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 whilebody370
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_NEQF F.0 VLV_AENC_101 whilebody370
  endwhile370:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEAD0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD0_1:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_105 F.0 VLV_ENCDIFF_105
    MATH ABS VLV_ENCDIFF_105 F.0
    DATAF tmpf418
    DATA8 flag418
    DIVF VLV_ENCDIFF_105 F.0 tmpf418
    CP_EQF 0.0 F.0 flag418
    SELECTF flag418 0.0 tmpf418 VLV_SIGNO_105

    JR_EQF VLV_ENCDIFF_105 0.0 else419_1
    MULF VLV_SIGNO_105 VLV_V_105 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while422:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile422
  whilebody422:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody422
  endwhile422:
    CALL MOTOR.STOP 'D' 'True'
  else419_1:
  endif419:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVED0_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 else430_1
  while432:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 endwhile432
  whilebody432:
    MATH NEGATE VLV_V_106 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTF F.0 -10.0 whilebody432
  endwhile432:
    CALL MOTOR.STOP 'D' 'True'
    JR endif430
  else430_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 else430_2
  while439:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 endwhile439
  whilebody439:
    MOVEF_8 VLV_V_106 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTF F.0 -10.0 whilebody439
  endwhile439:
    CALL MOTOR.STOP 'D' 'True'
    JR endif430
  else430_2:
    CALL MOTOR.STOP 'D' 'True'
  else430_3:
  endif430:
RETSUB_F_BMOVED0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED0_1:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while446:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_108 endwhile446
  whilebody446:
    MOVEF_8 VLV_V_108 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_108 whilebody446
  endwhile446:
    CALL MOTOR.STOP 'D' 'True'
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_109 F.0 VLV_ENCDIFF_109
    MATH ABS VLV_ENCDIFF_109 F.0
    DATAF tmpf454
    DATA8 flag454
    DIVF VLV_ENCDIFF_109 F.0 tmpf454
    CP_EQF 0.0 F.0 flag454
    SELECTF flag454 0.0 tmpf454 VLV_SIGNO_109

    MATH ABS VLV_ENCDIFF_109 F.4
    DATAF tmpf456
    DATA8 flag456
    DIVF F.4 100.0 tmpf456
    CP_EQF 0.0 100.0 flag456
    SELECTF flag456 0.0 tmpf456 F.3

    DATAF tmpf457
    DATA8 flag457
    DIVF VLV_V_109 20.0 tmpf457
    CP_EQF 0.0 20.0 flag457
    SELECTF flag457 0.0 tmpf457 F.4

    DATAF tmpf458
    DATA8 flag458
    DIVF F.3 F.4 tmpf458
    CP_EQF 0.0 F.4 flag458
    SELECTF flag458 0.0 tmpf458 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag461
	CP_GTF F.0 400.0 flag461
	SELECTF flag461 F.0 400.0 VLV_SAFETYTIMER_109
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_109 0.0 else463_1
  while464:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile464
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_109 endwhile464
  whilebody464:
    MULF VLV_SIGNO_109 VLV_V_109 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_109 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and475
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_109 whilebody464
  and475:
  endwhile464:
    CALL MOTOR.STOP 'D' 'True'
  else463_1:
  endif463:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer481
	DATA8 no481
	DATA8 mode8481
	
	MOVEF_8 1.0 no481
	SUB8 no481 1 no481
	DIV8 no481 4 layer481
	MATH MOD8 no481 4 no481

	MOVEF_8 4.0 mode8481
	
	INPUT_DEVICE READY_RAW layer481 no481 0 mode8481 0
    MOVEF_F 15.0 VLV_RED_110
    MOVEF_F 60.0 VLV_YELLOW_110
    MOVEF_F 170.0 VLV_GREEN_110
    MOVEF_F 330.0 VLV_BLUE_110
    MOVEF_F 10.0 VLV_VALUENEGRO_110
    MOVEF_F 100.0 VLV_VALUEBLANCO_110
    MOVEF_F 147.0 VLV_RWHITE_110
    MOVEF_F 143.0 VLV_GWHITE_110
    MOVEF_F 160.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    MOVEF_F 0.0 VLV_COLOR_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_110
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_110
  for487:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor487
  forbody487:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_110
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_110 VLV_RGB_110
    DATAF tmpf492
    DATA8 flag492
    DIVF VLV_RRAW_110 VLV_RWHITE_110 tmpf492
    CP_EQF 0.0 VLV_RWHITE_110 flag492
    SELECTF flag492 0.0 tmpf492 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    DATAF tmpf496
    DATA8 flag496
    DIVF VLV_GRAW_110 VLV_GWHITE_110 tmpf496
    CP_EQF 0.0 VLV_GWHITE_110 flag496
    SELECTF flag496 0.0 tmpf496 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    DATAF tmpf500
    DATA8 flag500
    DIVF VLV_BRAW_110 VLV_BWHITE_110 tmpf500
    CP_EQF 0.0 VLV_BWHITE_110 flag500
    SELECTF flag500 0.0 tmpf500 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_RNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.3 VLV_GNORMA_110
    DATA8 flag506
	CP_GTF F.2 F.3 flag506
	SELECTF flag506 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_BNORMA_110
    DATA8 flag508
	CP_GTF F.1 F.2 flag508
	SELECTF flag508 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    DATA32 milliseconds510
	MOVEF_32 5.0 milliseconds510
	DATA32 timer510
	TIMER_WAIT milliseconds510 timer510
	TIMER_READY timer510
    ADDF VLV_J_110 1.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody487
  endfor487:
    MOVEF_F 1.0 VLV_J_110
  for512:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor512
  forbody512:
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_110
    ADDF F.0 F.1 VLV_RNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_110
    ADDF F.0 F.1 VLV_GNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_110
    ADDF F.0 F.1 VLV_BNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_110
    ADDF F.0 F.1 VLV_MAX_110
    ADDF VLV_J_110 2.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody512
  endfor512:
    DATAF tmpf530
    DATA8 flag530
    DIVF VLV_RNORM_110 VLV_REPS_110 tmpf530
    CP_EQF 0.0 VLV_REPS_110 flag530
    SELECTF flag530 0.0 tmpf530 VLV_RNORM_110

    DATAF tmpf531
    DATA8 flag531
    DIVF VLV_GNORM_110 VLV_REPS_110 tmpf531
    CP_EQF 0.0 VLV_REPS_110 flag531
    SELECTF flag531 0.0 tmpf531 VLV_GNORM_110

    DATAF tmpf532
    DATA8 flag532
    DIVF VLV_BNORM_110 VLV_REPS_110 tmpf532
    CP_EQF 0.0 VLV_REPS_110 flag532
    SELECTF flag532 0.0 tmpf532 VLV_BNORM_110

    DATAF tmpf533
    DATA8 flag533
    DIVF VLV_MAX_110 VLV_REPS_110 tmpf533
    CP_EQF 0.0 VLV_REPS_110 flag533
    SELECTF flag533 0.0 tmpf533 VLV_MAX_110

    DATA8 flag534
	CP_LTF VLV_RNORM_110 VLV_GNORM_110 flag534
	SELECTF flag534 VLV_RNORM_110 VLV_GNORM_110 F.0
    DATA8 flag535
	CP_LTF F.0 VLV_BNORM_110 flag535
	SELECTF flag535 F.0 VLV_BNORM_110 VLV_MIN_110
    JR_NEQF VLV_MAX_110 VLV_MIN_110 else536_1
    MOVEF_F 0.0 VLV_HUE_110
    JR endif536
  else536_1:
    JR_NEQF VLV_MAX_110 VLV_RNORM_110 else536_2
    JR_LTF VLV_GNORM_110 VLV_BNORM_110 else537_1
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_110 VLV_MIN_110 F.1
    DATAF tmpf541
    DATA8 flag541
    DIVF F.0 F.1 tmpf541
    CP_EQF 0.0 F.1 flag541
    SELECTF flag541 0.0 tmpf541 VLV_HUE_110

    JR endif537
  else537_1:
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf545
    DATA8 flag545
    DIVF F.1 F.2 tmpf545
    CP_EQF 0.0 F.2 flag545
    SELECTF flag545 0.0 tmpf545 F.0

    ADDF F.0 360.0 VLV_HUE_110
  else537_2:
  endif537:
    JR endif536
  else536_2:
    JR_NEQF VLV_MAX_110 VLV_GNORM_110 else536_3
    SUBF VLV_BNORM_110 VLV_RNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf550
    DATA8 flag550
    DIVF F.1 F.2 tmpf550
    CP_EQF 0.0 F.2 flag550
    SELECTF flag550 0.0 tmpf550 F.0

    ADDF F.0 120.0 VLV_HUE_110
    JR endif536
  else536_3:
    SUBF VLV_RNORM_110 VLV_GNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf555
    DATA8 flag555
    DIVF F.1 F.2 tmpf555
    CP_EQF 0.0 F.2 flag555
    SELECTF flag555 0.0 tmpf555 F.0

    ADDF F.0 240.0 VLV_HUE_110
  else536_4:
  endif536:
    JR_NEQF VLV_MAX_110 0.0 else557_1
    MOVEF_F 0.0 VLV_SAT_110
    JR endif557
  else557_1:
    DATAF tmpf558
    DATA8 flag558
    DIVF VLV_MIN_110 VLV_MAX_110 tmpf558
    CP_EQF 0.0 VLV_MAX_110 flag558
    SELECTF flag558 0.0 tmpf558 F.0

    SUBF 1.0 F.0 VLV_SAT_110
  else557_2:
  endif557:
    MOVEF_F VLV_MAX_110 VLV_VALUE_110
    ADDF VLV_VALUEBLANCO_110 VLV_VALUENEGRO_110 F.0
    DATAF tmpf561
    DATA8 flag561
    DIVF F.0 2.0 tmpf561
    CP_EQF 0.0 2.0 flag561
    SELECTF flag561 0.0 tmpf561 VLV_RGBGREY_110

    ADDF VLV_RNORM_110 VLV_GNORM_110 F.1
    ADDF F.1 VLV_BNORM_110 F.0
    JR_GTF F.0 3.0 else562_1
    MOVEF_F 0.0 VLV_COLOR_110
    JR endif562
  else562_1:
    JR_GTEQF VLV_SAT_110 0.4 else565_1
    JR_LTEQF VLV_VALUE_110 VLV_RGBGREY_110 else566_1
    MOVEF_F 6.0 VLV_COLOR_110
    JR endif566
  else566_1:
    MOVEF_F 1.0 VLV_COLOR_110
  else566_2:
  endif566:
    JR endif565
  else565_1:
    JR_LTF VLV_HUE_110 0.0 else567_1
    JR_GTEQF VLV_HUE_110 VLV_RED_110 else567_1
    MOVEF_F 5.0 VLV_COLOR_110
    JR endif567
  else567_1:
    JR_LTF VLV_HUE_110 VLV_RED_110 else567_2
    JR_GTEQF VLV_HUE_110 VLV_YELLOW_110 else567_2
    MOVEF_F 4.0 VLV_COLOR_110
    JR endif567
  else567_2:
    JR_LTF VLV_HUE_110 VLV_YELLOW_110 else567_3
    JR_GTEQF VLV_HUE_110 VLV_GREEN_110 else567_3
    MOVEF_F 3.0 VLV_COLOR_110
    JR endif567
  else567_3:
    JR_LTF VLV_HUE_110 VLV_GREEN_110 else567_4
    JR_GTEQF VLV_HUE_110 VLV_BLUE_110 else567_4
    MOVEF_F 2.0 VLV_COLOR_110
    JR endif567
  else567_4:
    MOVEF_F 5.0 VLV_COLOR_110
  else567_5:
  endif567:
  else565_2:
  endif565:
  else562_2:
  endif562:
    STRINGS VALUE_FORMATTED VLV_RRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_110 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB583:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer584
	DATA8 no584
	DATA8 mode8584
	
	MOVEF_8 2.0 no584
	SUB8 no584 1 no584
	DIV8 no584 4 layer584
	MATH MOD8 no584 4 no584

	MOVEF_8 4.0 mode8584
	
	INPUT_DEVICE READY_RAW layer584 no584 0 mode8584 0
    MOVEF_F 15.0 VLV_RED_111
    MOVEF_F 60.0 VLV_YELLOW_111
    MOVEF_F 170.0 VLV_GREEN_111
    MOVEF_F 330.0 VLV_BLUE_111
    MOVEF_F 10.0 VLV_VALUENEGRO_111
    MOVEF_F 100.0 VLV_VALUEBLANCO_111
    MOVEF_F 147.0 VLV_RWHITE_111
    MOVEF_F 143.0 VLV_GWHITE_111
    MOVEF_F 160.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    MOVEF_F 0.0 VLV_COLOR_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_111
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_111
  for590:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor590
  forbody590:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_111
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_111 VLV_RGB_111
    DATAF tmpf595
    DATA8 flag595
    DIVF VLV_RRAW_111 VLV_RWHITE_111 tmpf595
    CP_EQF 0.0 VLV_RWHITE_111 flag595
    SELECTF flag595 0.0 tmpf595 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    DATAF tmpf599
    DATA8 flag599
    DIVF VLV_GRAW_111 VLV_GWHITE_111 tmpf599
    CP_EQF 0.0 VLV_GWHITE_111 flag599
    SELECTF flag599 0.0 tmpf599 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    DATAF tmpf603
    DATA8 flag603
    DIVF VLV_BRAW_111 VLV_BWHITE_111 tmpf603
    CP_EQF 0.0 VLV_BWHITE_111 flag603
    SELECTF flag603 0.0 tmpf603 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_RNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.3 VLV_GNORMA_111
    DATA8 flag609
	CP_GTF F.2 F.3 flag609
	SELECTF flag609 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_BNORMA_111
    DATA8 flag611
	CP_GTF F.1 F.2 flag611
	SELECTF flag611 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    DATA32 milliseconds613
	MOVEF_32 5.0 milliseconds613
	DATA32 timer613
	TIMER_WAIT milliseconds613 timer613
	TIMER_READY timer613
    ADDF VLV_J_111 1.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody590
  endfor590:
    MOVEF_F 1.0 VLV_J_111
  for615:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor615
  forbody615:
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_111
    ADDF F.0 F.1 VLV_RNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_111
    ADDF F.0 F.1 VLV_GNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_111
    ADDF F.0 F.1 VLV_BNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_111
    ADDF F.0 F.1 VLV_MAX_111
    ADDF VLV_J_111 2.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody615
  endfor615:
    DATAF tmpf633
    DATA8 flag633
    DIVF VLV_RNORM_111 VLV_REPS_111 tmpf633
    CP_EQF 0.0 VLV_REPS_111 flag633
    SELECTF flag633 0.0 tmpf633 VLV_RNORM_111

    DATAF tmpf634
    DATA8 flag634
    DIVF VLV_GNORM_111 VLV_REPS_111 tmpf634
    CP_EQF 0.0 VLV_REPS_111 flag634
    SELECTF flag634 0.0 tmpf634 VLV_GNORM_111

    DATAF tmpf635
    DATA8 flag635
    DIVF VLV_BNORM_111 VLV_REPS_111 tmpf635
    CP_EQF 0.0 VLV_REPS_111 flag635
    SELECTF flag635 0.0 tmpf635 VLV_BNORM_111

    DATAF tmpf636
    DATA8 flag636
    DIVF VLV_MAX_111 VLV_REPS_111 tmpf636
    CP_EQF 0.0 VLV_REPS_111 flag636
    SELECTF flag636 0.0 tmpf636 VLV_MAX_111

    DATA8 flag637
	CP_LTF VLV_RNORM_111 VLV_GNORM_111 flag637
	SELECTF flag637 VLV_RNORM_111 VLV_GNORM_111 F.0
    DATA8 flag638
	CP_LTF F.0 VLV_BNORM_111 flag638
	SELECTF flag638 F.0 VLV_BNORM_111 VLV_MIN_111
    JR_NEQF VLV_MAX_111 VLV_MIN_111 else639_1
    MOVEF_F 0.0 VLV_HUE_111
    JR endif639
  else639_1:
    JR_NEQF VLV_MAX_111 VLV_RNORM_111 else639_2
    JR_LTF VLV_GNORM_111 VLV_BNORM_111 else640_1
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_111 VLV_MIN_111 F.1
    DATAF tmpf644
    DATA8 flag644
    DIVF F.0 F.1 tmpf644
    CP_EQF 0.0 F.1 flag644
    SELECTF flag644 0.0 tmpf644 VLV_HUE_111

    JR endif640
  else640_1:
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf648
    DATA8 flag648
    DIVF F.1 F.2 tmpf648
    CP_EQF 0.0 F.2 flag648
    SELECTF flag648 0.0 tmpf648 F.0

    ADDF F.0 360.0 VLV_HUE_111
  else640_2:
  endif640:
    JR endif639
  else639_2:
    JR_NEQF VLV_MAX_111 VLV_GNORM_111 else639_3
    SUBF VLV_BNORM_111 VLV_RNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf653
    DATA8 flag653
    DIVF F.1 F.2 tmpf653
    CP_EQF 0.0 F.2 flag653
    SELECTF flag653 0.0 tmpf653 F.0

    ADDF F.0 120.0 VLV_HUE_111
    JR endif639
  else639_3:
    SUBF VLV_RNORM_111 VLV_GNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf658
    DATA8 flag658
    DIVF F.1 F.2 tmpf658
    CP_EQF 0.0 F.2 flag658
    SELECTF flag658 0.0 tmpf658 F.0

    ADDF F.0 240.0 VLV_HUE_111
  else639_4:
  endif639:
    JR_NEQF VLV_MAX_111 0.0 else660_1
    MOVEF_F 0.0 VLV_SAT_111
    JR endif660
  else660_1:
    DATAF tmpf661
    DATA8 flag661
    DIVF VLV_MIN_111 VLV_MAX_111 tmpf661
    CP_EQF 0.0 VLV_MAX_111 flag661
    SELECTF flag661 0.0 tmpf661 F.0

    SUBF 1.0 F.0 VLV_SAT_111
  else660_2:
  endif660:
    MOVEF_F VLV_MAX_111 VLV_VALUE_111
    ADDF VLV_VALUEBLANCO_111 VLV_VALUENEGRO_111 F.0
    DATAF tmpf664
    DATA8 flag664
    DIVF F.0 2.0 tmpf664
    CP_EQF 0.0 2.0 flag664
    SELECTF flag664 0.0 tmpf664 VLV_RGBGREY_111

    ADDF VLV_RNORM_111 VLV_GNORM_111 F.1
    ADDF F.1 VLV_BNORM_111 F.0
    JR_GTF F.0 3.0 else665_1
    MOVEF_F 0.0 VLV_COLOR_111
    JR endif665
  else665_1:
    JR_GTEQF VLV_SAT_111 0.4 else668_1
    JR_LTEQF VLV_VALUE_111 VLV_RGBGREY_111 else669_1
    MOVEF_F 6.0 VLV_COLOR_111
    JR endif669
  else669_1:
    MOVEF_F 1.0 VLV_COLOR_111
  else669_2:
  endif669:
    JR endif668
  else668_1:
    JR_LTF VLV_HUE_111 0.0 else670_1
    JR_GTEQF VLV_HUE_111 VLV_RED_111 else670_1
    MOVEF_F 5.0 VLV_COLOR_111
    JR endif670
  else670_1:
    JR_LTF VLV_HUE_111 VLV_RED_111 else670_2
    JR_GTEQF VLV_HUE_111 VLV_YELLOW_111 else670_2
    MOVEF_F 4.0 VLV_COLOR_111
    JR endif670
  else670_2:
    JR_LTF VLV_HUE_111 VLV_YELLOW_111 else670_3
    JR_GTEQF VLV_HUE_111 VLV_GREEN_111 else670_3
    MOVEF_F 3.0 VLV_COLOR_111
    JR endif670
  else670_3:
    JR_LTF VLV_HUE_111 VLV_GREEN_111 else670_4
    JR_GTEQF VLV_HUE_111 VLV_BLUE_111 else670_4
    MOVEF_F 2.0 VLV_COLOR_111
    JR endif670
  else670_4:
    MOVEF_F 5.0 VLV_COLOR_111
  else670_5:
  endif670:
  else668_2:
  endif668:
  else665_2:
  endif665:
    STRINGS VALUE_FORMATTED VLV_RRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_111 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB686:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer687
	DATA8 no687
	DATA8 mode8687
	
	MOVEF_8 3.0 no687
	SUB8 no687 1 no687
	DIV8 no687 4 layer687
	MATH MOD8 no687 4 no687

	MOVEF_8 4.0 mode8687
	
	INPUT_DEVICE READY_RAW layer687 no687 0 mode8687 0
    MOVEF_F 15.0 VLV_RED_112
    MOVEF_F 60.0 VLV_YELLOW_112
    MOVEF_F 170.0 VLV_GREEN_112
    MOVEF_F 330.0 VLV_BLUE_112
    MOVEF_F 10.0 VLV_VALUENEGRO_112
    MOVEF_F 100.0 VLV_VALUEBLANCO_112
    MOVEF_F 147.0 VLV_RWHITE_112
    MOVEF_F 143.0 VLV_GWHITE_112
    MOVEF_F 160.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    MOVEF_F 0.0 VLV_COLOR_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_112
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_112
  for693:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor693
  forbody693:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_112
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_112 VLV_RGB_112
    DATAF tmpf698
    DATA8 flag698
    DIVF VLV_RRAW_112 VLV_RWHITE_112 tmpf698
    CP_EQF 0.0 VLV_RWHITE_112 flag698
    SELECTF flag698 0.0 tmpf698 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    DATAF tmpf702
    DATA8 flag702
    DIVF VLV_GRAW_112 VLV_GWHITE_112 tmpf702
    CP_EQF 0.0 VLV_GWHITE_112 flag702
    SELECTF flag702 0.0 tmpf702 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    DATAF tmpf706
    DATA8 flag706
    DIVF VLV_BRAW_112 VLV_BWHITE_112 tmpf706
    CP_EQF 0.0 VLV_BWHITE_112 flag706
    SELECTF flag706 0.0 tmpf706 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_RNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.3 VLV_GNORMA_112
    DATA8 flag712
	CP_GTF F.2 F.3 flag712
	SELECTF flag712 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_BNORMA_112
    DATA8 flag714
	CP_GTF F.1 F.2 flag714
	SELECTF flag714 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    DATA32 milliseconds716
	MOVEF_32 5.0 milliseconds716
	DATA32 timer716
	TIMER_WAIT milliseconds716 timer716
	TIMER_READY timer716
    ADDF VLV_J_112 1.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody693
  endfor693:
    MOVEF_F 1.0 VLV_J_112
  for718:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor718
  forbody718:
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_112
    ADDF F.0 F.1 VLV_RNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_112
    ADDF F.0 F.1 VLV_GNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_112
    ADDF F.0 F.1 VLV_BNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_112
    ADDF F.0 F.1 VLV_MAX_112
    ADDF VLV_J_112 2.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody718
  endfor718:
    DATAF tmpf736
    DATA8 flag736
    DIVF VLV_RNORM_112 VLV_REPS_112 tmpf736
    CP_EQF 0.0 VLV_REPS_112 flag736
    SELECTF flag736 0.0 tmpf736 VLV_RNORM_112

    DATAF tmpf737
    DATA8 flag737
    DIVF VLV_GNORM_112 VLV_REPS_112 tmpf737
    CP_EQF 0.0 VLV_REPS_112 flag737
    SELECTF flag737 0.0 tmpf737 VLV_GNORM_112

    DATAF tmpf738
    DATA8 flag738
    DIVF VLV_BNORM_112 VLV_REPS_112 tmpf738
    CP_EQF 0.0 VLV_REPS_112 flag738
    SELECTF flag738 0.0 tmpf738 VLV_BNORM_112

    DATAF tmpf739
    DATA8 flag739
    DIVF VLV_MAX_112 VLV_REPS_112 tmpf739
    CP_EQF 0.0 VLV_REPS_112 flag739
    SELECTF flag739 0.0 tmpf739 VLV_MAX_112

    DATA8 flag740
	CP_LTF VLV_RNORM_112 VLV_GNORM_112 flag740
	SELECTF flag740 VLV_RNORM_112 VLV_GNORM_112 F.0
    DATA8 flag741
	CP_LTF F.0 VLV_BNORM_112 flag741
	SELECTF flag741 F.0 VLV_BNORM_112 VLV_MIN_112
    JR_NEQF VLV_MAX_112 VLV_MIN_112 else742_1
    MOVEF_F 0.0 VLV_HUE_112
    JR endif742
  else742_1:
    JR_NEQF VLV_MAX_112 VLV_RNORM_112 else742_2
    JR_LTF VLV_GNORM_112 VLV_BNORM_112 else743_1
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_112 VLV_MIN_112 F.1
    DATAF tmpf747
    DATA8 flag747
    DIVF F.0 F.1 tmpf747
    CP_EQF 0.0 F.1 flag747
    SELECTF flag747 0.0 tmpf747 VLV_HUE_112

    JR endif743
  else743_1:
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf751
    DATA8 flag751
    DIVF F.1 F.2 tmpf751
    CP_EQF 0.0 F.2 flag751
    SELECTF flag751 0.0 tmpf751 F.0

    ADDF F.0 360.0 VLV_HUE_112
  else743_2:
  endif743:
    JR endif742
  else742_2:
    JR_NEQF VLV_MAX_112 VLV_GNORM_112 else742_3
    SUBF VLV_BNORM_112 VLV_RNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf756
    DATA8 flag756
    DIVF F.1 F.2 tmpf756
    CP_EQF 0.0 F.2 flag756
    SELECTF flag756 0.0 tmpf756 F.0

    ADDF F.0 120.0 VLV_HUE_112
    JR endif742
  else742_3:
    SUBF VLV_RNORM_112 VLV_GNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf761
    DATA8 flag761
    DIVF F.1 F.2 tmpf761
    CP_EQF 0.0 F.2 flag761
    SELECTF flag761 0.0 tmpf761 F.0

    ADDF F.0 240.0 VLV_HUE_112
  else742_4:
  endif742:
    JR_NEQF VLV_MAX_112 0.0 else763_1
    MOVEF_F 0.0 VLV_SAT_112
    JR endif763
  else763_1:
    DATAF tmpf764
    DATA8 flag764
    DIVF VLV_MIN_112 VLV_MAX_112 tmpf764
    CP_EQF 0.0 VLV_MAX_112 flag764
    SELECTF flag764 0.0 tmpf764 F.0

    SUBF 1.0 F.0 VLV_SAT_112
  else763_2:
  endif763:
    MOVEF_F VLV_MAX_112 VLV_VALUE_112
    ADDF VLV_VALUEBLANCO_112 VLV_VALUENEGRO_112 F.0
    DATAF tmpf767
    DATA8 flag767
    DIVF F.0 2.0 tmpf767
    CP_EQF 0.0 2.0 flag767
    SELECTF flag767 0.0 tmpf767 VLV_RGBGREY_112

    ADDF VLV_RNORM_112 VLV_GNORM_112 F.1
    ADDF F.1 VLV_BNORM_112 F.0
    JR_GTF F.0 3.0 else768_1
    MOVEF_F 0.0 VLV_COLOR_112
    JR endif768
  else768_1:
    JR_GTEQF VLV_SAT_112 0.4 else771_1
    JR_LTEQF VLV_VALUE_112 VLV_RGBGREY_112 else772_1
    MOVEF_F 6.0 VLV_COLOR_112
    JR endif772
  else772_1:
    MOVEF_F 1.0 VLV_COLOR_112
  else772_2:
  endif772:
    JR endif771
  else771_1:
    JR_LTF VLV_HUE_112 0.0 else773_1
    JR_GTEQF VLV_HUE_112 VLV_RED_112 else773_1
    MOVEF_F 5.0 VLV_COLOR_112
    JR endif773
  else773_1:
    JR_LTF VLV_HUE_112 VLV_RED_112 else773_2
    JR_GTEQF VLV_HUE_112 VLV_YELLOW_112 else773_2
    MOVEF_F 4.0 VLV_COLOR_112
    JR endif773
  else773_2:
    JR_LTF VLV_HUE_112 VLV_YELLOW_112 else773_3
    JR_GTEQF VLV_HUE_112 VLV_GREEN_112 else773_3
    MOVEF_F 3.0 VLV_COLOR_112
    JR endif773
  else773_3:
    JR_LTF VLV_HUE_112 VLV_GREEN_112 else773_4
    JR_GTEQF VLV_HUE_112 VLV_BLUE_112 else773_4
    MOVEF_F 2.0 VLV_COLOR_112
    JR endif773
  else773_4:
    MOVEF_F 5.0 VLV_COLOR_112
  else773_5:
  endif773:
  else771_2:
  endif771:
  else768_2:
  endif768:
    STRINGS VALUE_FORMATTED VLV_RRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_112 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB789:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer790
	DATA8 no790
	DATA8 mode8790
	
	MOVEF_8 4.0 no790
	SUB8 no790 1 no790
	DIV8 no790 4 layer790
	MATH MOD8 no790 4 no790

	MOVEF_8 4.0 mode8790
	
	INPUT_DEVICE READY_RAW layer790 no790 0 mode8790 0
    MOVEF_F 15.0 VLV_RED_113
    MOVEF_F 60.0 VLV_YELLOW_113
    MOVEF_F 170.0 VLV_GREEN_113
    MOVEF_F 330.0 VLV_BLUE_113
    MOVEF_F 10.0 VLV_VALUENEGRO_113
    MOVEF_F 100.0 VLV_VALUEBLANCO_113
    MOVEF_F 147.0 VLV_RWHITE_113
    MOVEF_F 143.0 VLV_GWHITE_113
    MOVEF_F 160.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_113
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_113
  for796:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor796
  forbody796:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_113
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_113 VLV_RGB_113
    DATAF tmpf801
    DATA8 flag801
    DIVF VLV_RRAW_113 VLV_RWHITE_113 tmpf801
    CP_EQF 0.0 VLV_RWHITE_113 flag801
    SELECTF flag801 0.0 tmpf801 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    DATAF tmpf805
    DATA8 flag805
    DIVF VLV_GRAW_113 VLV_GWHITE_113 tmpf805
    CP_EQF 0.0 VLV_GWHITE_113 flag805
    SELECTF flag805 0.0 tmpf805 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    DATAF tmpf809
    DATA8 flag809
    DIVF VLV_BRAW_113 VLV_BWHITE_113 tmpf809
    CP_EQF 0.0 VLV_BWHITE_113 flag809
    SELECTF flag809 0.0 tmpf809 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_RNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.3 VLV_GNORMA_113
    DATA8 flag815
	CP_GTF F.2 F.3 flag815
	SELECTF flag815 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_BNORMA_113
    DATA8 flag817
	CP_GTF F.1 F.2 flag817
	SELECTF flag817 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    DATA32 milliseconds819
	MOVEF_32 5.0 milliseconds819
	DATA32 timer819
	TIMER_WAIT milliseconds819 timer819
	TIMER_READY timer819
    ADDF VLV_J_113 1.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody796
  endfor796:
    MOVEF_F 1.0 VLV_J_113
  for821:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor821
  forbody821:
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_113
    ADDF F.0 F.1 VLV_RNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_113
    ADDF F.0 F.1 VLV_GNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_113
    ADDF F.0 F.1 VLV_BNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_113
    ADDF F.0 F.1 VLV_MAX_113
    ADDF VLV_J_113 2.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody821
  endfor821:
    DATAF tmpf839
    DATA8 flag839
    DIVF VLV_RNORM_113 VLV_REPS_113 tmpf839
    CP_EQF 0.0 VLV_REPS_113 flag839
    SELECTF flag839 0.0 tmpf839 VLV_RNORM_113

    DATAF tmpf840
    DATA8 flag840
    DIVF VLV_GNORM_113 VLV_REPS_113 tmpf840
    CP_EQF 0.0 VLV_REPS_113 flag840
    SELECTF flag840 0.0 tmpf840 VLV_GNORM_113

    DATAF tmpf841
    DATA8 flag841
    DIVF VLV_BNORM_113 VLV_REPS_113 tmpf841
    CP_EQF 0.0 VLV_REPS_113 flag841
    SELECTF flag841 0.0 tmpf841 VLV_BNORM_113

    DATAF tmpf842
    DATA8 flag842
    DIVF VLV_MAX_113 VLV_REPS_113 tmpf842
    CP_EQF 0.0 VLV_REPS_113 flag842
    SELECTF flag842 0.0 tmpf842 VLV_MAX_113

    DATA8 flag843
	CP_LTF VLV_RNORM_113 VLV_GNORM_113 flag843
	SELECTF flag843 VLV_RNORM_113 VLV_GNORM_113 F.0
    DATA8 flag844
	CP_LTF F.0 VLV_BNORM_113 flag844
	SELECTF flag844 F.0 VLV_BNORM_113 VLV_MIN_113
    JR_NEQF VLV_MAX_113 VLV_MIN_113 else845_1
    MOVEF_F 0.0 VLV_HUE_113
    JR endif845
  else845_1:
    JR_NEQF VLV_MAX_113 VLV_RNORM_113 else845_2
    JR_LTF VLV_GNORM_113 VLV_BNORM_113 else846_1
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_113 VLV_MIN_113 F.1
    DATAF tmpf850
    DATA8 flag850
    DIVF F.0 F.1 tmpf850
    CP_EQF 0.0 F.1 flag850
    SELECTF flag850 0.0 tmpf850 VLV_HUE_113

    JR endif846
  else846_1:
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf854
    DATA8 flag854
    DIVF F.1 F.2 tmpf854
    CP_EQF 0.0 F.2 flag854
    SELECTF flag854 0.0 tmpf854 F.0

    ADDF F.0 360.0 VLV_HUE_113
  else846_2:
  endif846:
    JR endif845
  else845_2:
    JR_NEQF VLV_MAX_113 VLV_GNORM_113 else845_3
    SUBF VLV_BNORM_113 VLV_RNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf859
    DATA8 flag859
    DIVF F.1 F.2 tmpf859
    CP_EQF 0.0 F.2 flag859
    SELECTF flag859 0.0 tmpf859 F.0

    ADDF F.0 120.0 VLV_HUE_113
    JR endif845
  else845_3:
    SUBF VLV_RNORM_113 VLV_GNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf864
    DATA8 flag864
    DIVF F.1 F.2 tmpf864
    CP_EQF 0.0 F.2 flag864
    SELECTF flag864 0.0 tmpf864 F.0

    ADDF F.0 240.0 VLV_HUE_113
  else845_4:
  endif845:
    JR_NEQF VLV_MAX_113 0.0 else866_1
    MOVEF_F 0.0 VLV_SAT_113
    JR endif866
  else866_1:
    DATAF tmpf867
    DATA8 flag867
    DIVF VLV_MIN_113 VLV_MAX_113 tmpf867
    CP_EQF 0.0 VLV_MAX_113 flag867
    SELECTF flag867 0.0 tmpf867 F.0

    SUBF 1.0 F.0 VLV_SAT_113
  else866_2:
  endif866:
    MOVEF_F VLV_MAX_113 VLV_VALUE_113
    ADDF VLV_VALUEBLANCO_113 VLV_VALUENEGRO_113 F.0
    DATAF tmpf870
    DATA8 flag870
    DIVF F.0 2.0 tmpf870
    CP_EQF 0.0 2.0 flag870
    SELECTF flag870 0.0 tmpf870 VLV_RGBGREY_113

    ADDF VLV_RNORM_113 VLV_GNORM_113 F.1
    ADDF F.1 VLV_BNORM_113 F.0
    JR_GTF F.0 3.0 else871_1
    MOVEF_F 0.0 VLV_COLOR_113
    JR endif871
  else871_1:
    JR_GTEQF VLV_SAT_113 0.4 else874_1
    JR_LTEQF VLV_VALUE_113 VLV_RGBGREY_113 else875_1
    MOVEF_F 6.0 VLV_COLOR_113
    JR endif875
  else875_1:
    MOVEF_F 1.0 VLV_COLOR_113
  else875_2:
  endif875:
    JR endif874
  else874_1:
    JR_LTF VLV_HUE_113 0.0 else876_1
    JR_GTEQF VLV_HUE_113 VLV_RED_113 else876_1
    MOVEF_F 5.0 VLV_COLOR_113
    JR endif876
  else876_1:
    JR_LTF VLV_HUE_113 VLV_RED_113 else876_2
    JR_GTEQF VLV_HUE_113 VLV_YELLOW_113 else876_2
    MOVEF_F 4.0 VLV_COLOR_113
    JR endif876
  else876_2:
    JR_LTF VLV_HUE_113 VLV_YELLOW_113 else876_3
    JR_GTEQF VLV_HUE_113 VLV_GREEN_113 else876_3
    MOVEF_F 3.0 VLV_COLOR_113
    JR endif876
  else876_3:
    JR_LTF VLV_HUE_113 VLV_GREEN_113 else876_4
    JR_GTEQF VLV_HUE_113 VLV_BLUE_113 else876_4
    MOVEF_F 2.0 VLV_COLOR_113
    JR endif876
  else876_4:
    MOVEF_F 5.0 VLV_COLOR_113
  else876_5:
  endif876:
  else874_2:
  endif874:
  else871_2:
  endif871:
    STRINGS VALUE_FORMATTED VLV_RRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_113 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB892:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_122 0.0 else893_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif893
  else893_1:
    JR_NEQF VLV_COLOR_122 1.0 else893_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif893
  else893_2:
    JR_NEQF VLV_COLOR_122 2.0 else893_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif893
  else893_3:
    JR_NEQF VLV_COLOR_122 3.0 else893_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif893
  else893_4:
    JR_NEQF VLV_COLOR_122 4.0 else893_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif893
  else893_5:
    JR_NEQF VLV_COLOR_122 5.0 else893_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif893
  else893_6:
    JR_NEQF VLV_COLOR_122 6.0 else893_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif893
  else893_7:
    JR_NEQF VLV_COLOR_122 7.0 else893_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else893_8:
  endif893:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_LECTURA_1:
    MOVEF_F 30.0 VLV_V_95
    MOVEF_F -650.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB902:
    MOVEF_F 5.0 VLV_REPS_111
    WRITE32 ENDSUB_F_RGBDETECT2_2:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RGBDETECT2_2
CALLSUB903:
    MOVEF_F VLV_COLOR_111 VLV_READ_126
    MOVEF_F VLV_READ_126 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB904:
RETSUB_F_LECTURA_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LECTURA_1:
SUB_F_TRASPMATVECT3X3_2:
    CALL VECTOR.INIT 9.0 0.0 VLV_S_127
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M_127
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_127
    CALL ARRAYGET_FLOAT 3.0 F.0 VLV_M_127
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_127
    CALL ARRAYGET_FLOAT 6.0 F.0 VLV_M_127
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_127
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M_127
    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_127
    CALL ARRAYGET_FLOAT 4.0 F.0 VLV_M_127
    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_127
    CALL ARRAYGET_FLOAT 7.0 F.0 VLV_M_127
    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_127
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M_127
    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_127
    CALL ARRAYGET_FLOAT 5.0 F.0 VLV_M_127
    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_127
    CALL ARRAYGET_FLOAT 8.0 F.0 VLV_M_127
    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_127
RETSUB_F_TRASPMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TRASPMATVECT3X3_2:
SUB_F_INVMATVECT3X3_2:
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_M_128
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_128
    CALL ARRAYGET_FLOAT 8.0 F.6 VLV_M_128
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 5.0 F.6 VLV_M_128
    CALL ARRAYGET_FLOAT 7.0 F.7 VLV_M_128
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_128
    CALL ARRAYGET_FLOAT 3.0 F.6 VLV_M_128
    CALL ARRAYGET_FLOAT 8.0 F.7 VLV_M_128
    MULF F.6 F.7 F.5
    CALL ARRAYGET_FLOAT 5.0 F.7 VLV_M_128
    CALL ARRAYGET_FLOAT 6.0 F.8 VLV_M_128
    MULF F.7 F.8 F.6
    SUBF F.5 F.6 F.4
    MULF F.3 F.4 F.2
    SUBF F.1 F.2 F.0
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_M_128
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_128
    CALL ARRAYGET_FLOAT 7.0 F.6 VLV_M_128
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 4.0 F.6 VLV_M_128
    CALL ARRAYGET_FLOAT 6.0 F.7 VLV_M_128
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    ADDF F.0 F.1 VLV_DETERMINANTE_128
    JR_EQF VLV_DETERMINANTE_128 0.0 else953_1
    CALL ARRAYGET_FLOAT 4.0 F.3 VLV_M_128
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_128
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_128
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_128
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf961
    DATA8 flag961
    DIVF F.1 VLV_DETERMINANTE_128 tmpf961
    CP_EQF 0.0 VLV_DETERMINANTE_128 flag961
    SELECTF flag961 0.0 tmpf961 F.0

    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_128
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_128
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_128
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_128
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_128
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf970
    DATA8 flag970
    DIVF F.1 VLV_DETERMINANTE_128 tmpf970
    CP_EQF 0.0 VLV_DETERMINANTE_128 flag970
    SELECTF flag970 0.0 tmpf970 F.0

    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_128
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_128
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_128
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_128
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_128
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf979
    DATA8 flag979
    DIVF F.1 VLV_DETERMINANTE_128 tmpf979
    CP_EQF 0.0 VLV_DETERMINANTE_128 flag979
    SELECTF flag979 0.0 tmpf979 F.0

    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_128
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_128
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_128
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_128
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_128
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf988
    DATA8 flag988
    DIVF F.1 VLV_DETERMINANTE_128 tmpf988
    CP_EQF 0.0 VLV_DETERMINANTE_128 flag988
    SELECTF flag988 0.0 tmpf988 F.0

    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_128
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_128
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_128
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_128
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_128
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf997
    DATA8 flag997
    DIVF F.1 VLV_DETERMINANTE_128 tmpf997
    CP_EQF 0.0 VLV_DETERMINANTE_128 flag997
    SELECTF flag997 0.0 tmpf997 F.0

    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_128
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_128
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_128
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_128
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_128
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1006
    DATA8 flag1006
    DIVF F.1 VLV_DETERMINANTE_128 tmpf1006
    CP_EQF 0.0 VLV_DETERMINANTE_128 flag1006
    SELECTF flag1006 0.0 tmpf1006 F.0

    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_128
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_128
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_128
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_128
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_128
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1015
    DATA8 flag1015
    DIVF F.1 VLV_DETERMINANTE_128 tmpf1015
    CP_EQF 0.0 VLV_DETERMINANTE_128 flag1015
    SELECTF flag1015 0.0 tmpf1015 F.0

    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_128
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_128
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_128
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_128
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_128
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1024
    DATA8 flag1024
    DIVF F.1 VLV_DETERMINANTE_128 tmpf1024
    CP_EQF 0.0 VLV_DETERMINANTE_128 flag1024
    SELECTF flag1024 0.0 tmpf1024 F.0

    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_128
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_128
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_128
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_128
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_128
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1033
    DATA8 flag1033
    DIVF F.1 VLV_DETERMINANTE_128 tmpf1033
    CP_EQF 0.0 VLV_DETERMINANTE_128 flag1033
    SELECTF flag1033 0.0 tmpf1033 F.0

    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_128
  else953_1:
  endif953:
RETSUB_F_INVMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_INVMATVECT3X3_2:
SUB_F_MULTIMATRIZCOEF_3:
    MOVEF_F 0.0 VLV_I_129
  while1035:
    CALL ARRAYGET_FLOAT VLV_I_129 F.0 VLV_M_129
    JR_EQF F.0 0.0 endwhile1035
  whilebody1035:
    CALL ARRAYGET_FLOAT VLV_I_129 F.1 VLV_M_129
    MULF VLV_K_129 F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_I_129 F.0 VLV_S_129
    ADDF VLV_I_129 1.0 VLV_I_129
    CALL ARRAYGET_FLOAT VLV_I_129 F.0 VLV_M_129
    JR_NEQF F.0 0.0 whilebody1035
  endwhile1035:
RETSUB_F_MULTIMATRIZCOEF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MULTIMATRIZCOEF_3:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall VECTOR.INIT       // FFA
{
	IN_F size
	IN_F value
	IN_16 a

	DATA32 size32
	MOVEF_32 size size32
	JR_LTEQ32 size32 0 empty

	ARRAY RESIZE a size32
	ARRAY FILL a value
	RETURN

empty:
    ARRAY RESIZE a 0
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
