DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_105
DATAF VLV_AENC_105
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_VELOCIDAD_39
DATAF VLV_VELOCIDAD_2
DATAF VLV_DISTANCIA_2
DATAF VLV_VELOCIDAD_76
DATAF VLV_KP_76
DATAF VLV_KI_76
DATAF VLV_KD_76
DATAF VLV_ENCODER_76
DATAF VLV_VELOCIDAD_82
DATAF VLV_KP_82
DATAF VLV_KI_82
DATAF VLV_KD_82
DATAF VLV_LADO_82
DATAF VLV_SENS_82
DATAF VLV_READ_130
DATAF VLV_V_101
DATAF VLV_VELOCIDAD_75
DATAF VLV_KP_75
DATAF VLV_KI_75
DATAF VLV_KD_75
DATAF VLV_ENCODER_75
DATAF VLV_VELOCIDAD_5
DATAF VLV_SENS_5
DATAF VLV_VELOCIDAD_3
DATAF VLV_SENS_3
DATAF VLV_VEL_33
DATAF VLV_V1_35
DATAF VLV_V2_35
DATAF VLV_ANGLE_35
DATAF VLV_V_95
DATAF VLV_AENC_95
DATAF VLV_V_109
DATAF VLV_AENC_109
DATAF VLV_V_108
DATAF VLV_T_108
DATAF VLV_VELOCIDAD_71
DATAF VLV_KP_71
DATAF VLV_KI_71
DATAF VLV_KD_71
DATAF VLV_V_104
DATAF VLV_GRADOS_104
DATAF VLV_V0_56
DATAF VLV_VMAX_56
DATAF VLV_KP_56
DATAF VLV_KI_56
DATAF VLV_KD_56
DATAF VLV_ACCELENCODER_56
DATAF VLV_VELOCIDAD_72
DATAF VLV_KP_72
DATAF VLV_KI_72
DATAF VLV_KD_72
DATAF VLV_VMAX_88
DATAF VLV_KP_88
DATAF VLV_KI_88
DATAF VLV_KD_88
DATAF VLV_COLOR_122
DATAF VLV_REPS_110
DATAF VLV_COLOR_110
DATAF VLV_REPS_111
DATAF VLV_COLOR_111
DATAF VLV_REPS_112
DATAF VLV_COLOR_112
DATAF VLV_REPS_113
DATAF VLV_COLOR_113
ARRAY16 VLV_M_133 2
DATAF VLV_K_133
ARRAY16 VLV_S_133 2
ARRAY16 VLV_M_131 2
ARRAY16 VLV_S_131 2
ARRAY16 VLV_M_132 2
ARRAY16 VLV_S_132 2
DATAF VGV_BLOQUE
DATAF VLV_COLOR_114
DATAF VLV_COLOR_115
DATAF VLV_COLOR_116
DATAF VLV_COLOR_117
ARRAY16 VLV_VELI_123 2
ARRAY16 VLV_VELD_123 2
ARRAY16 VLV_OMEGAI_K1_123 2
ARRAY16 VLV_OMEGAD_K1_123 2
ARRAY16 VLV_V_123 2
ARRAY16 VLV_DH_T_123 2
ARRAY16 VLV_S_INV_123 2
DATAF VGV_CENTRO
DATAF VGV_XTIME
DATAF VGV_YTIME
DATAF VGV_THETATIME
DATAF VGV_XTCORRECT
DATAF VGV_YTCORRECT
DATAF VGV_THETATCORRECT
DATAF VGV_SENTIDO_D
DATAF VGV_DW
DATAF VGV_DIAMETER
DATAF VGV_D_T
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_G1
DATAF VGV_ROJOS
DATAF VGV_AMARILLOS
DATAF VGV_VERDES
DATAF VGV_AZULES
ARRAY16 VGV_BOMBOCLAT 2
DATAF VGV_NUMERO_BLOQUES
ARRAY16 VGV_ALPHA_L 2
ARRAY16 VGV_ALPHA_R 2
DATAF VGV_OLDB
DATAF VGV_OLDC
ARRAY16 VGV_XT 2
ARRAY16 VGV_YT 2
ARRAY16 VGV_THETAT 2
DATAF VGV_I
DATAF VGV_D_L
DATAF VGV_D_R
DATAF VGV_D
DATAF VGV_DELTA_THETA
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAF VLV_DIAMETRO_2
DATAF VLV_ENC_2
DATAF VLV_START_B_2
DATAF VLV_START_C_2
DATAF VLV_ENCODER_C_2
DATAF VLV_ENCODER_B_2
DATAF VLV_ERROR_2
DATAF VLV_PROPORCIAL_2
DATAF VLV_START_B_3
DATAF VLV_START_C_3
DATAF VLV_ENCODER_B_3
DATAF VLV_ENCODER_C_3
DATAF VLV_ERROR_3
DATAF VLV_PROPORCIAL_3
DATAF VLV_START_B_5
DATAF VLV_START_C_5
DATAF VLV_ENCODER_B_5
DATAF VLV_ENCODER_C_5
DATAF VLV_ERROR_5
DATAF VLV_PROPORCIAL_5
DATAF VLV_AVANCE_33
DATAF VLV_GINICIO_33
DATAF VLV_AJUSTE_33
DATAS VLV_I_35 252
DATAS VLV_D_35 252
DATAF VLV_SIGNO_35
DATAF VLV_VMIN_35
DATAF VLV_VMAX_35
DATAF VLV_ENCODR_35
DATAS VLV_I_39 252
DATAS VLV_D_39 252
DATAF VLV_ENCODR_39
DATAF VLV_ANGLE_39
DATAS VLV_I_56 252
DATAS VLV_D_56 252
DATAF VLV_U_56
DATAF VLV_ERROR_56
DATAF VLV_OLDERROR_56
DATAF VLV_ERRSUM_56
DATAF VLV_VEL_56
DATAF VLV_SENTIDO_56
DATAS VLV_I_71 252
DATAS VLV_D_71 252
DATAF VLV_ERROR_71
DATAF VLV_OLDERROR_71
DATAF VLV_ERRSUM_71
DATAF VLV_U_71
DATAF VLV_SENTIDO_71
DATAS VLV_I_72 252
DATAS VLV_D_72 252
DATAF VLV_ERROR_72
DATAF VLV_OLDERROR_72
DATAF VLV_ERRSUM_72
DATAF VLV_U_72
DATAF VLV_SENTIDO_72
DATAS VLV_I_75 252
DATAS VLV_D_75 252
DATAF VLV_ERROR_75
DATAF VLV_OLDERROR_75
DATAF VLV_ERRSUM_75
DATAF VLV_U_75
DATAF VLV_SENTIDO_75
DATAF VLV_START_C_75
DATAF VLV_ENCODER_C_75
DATAS VLV_I_76 252
DATAS VLV_D_76 252
DATAF VLV_ERROR_76
DATAF VLV_OLDERROR_76
DATAF VLV_ERRSUM_76
DATAF VLV_U_76
DATAF VLV_SENTIDO_76
DATAF VLV_START_C_76
DATAF VLV_ENCODER_C_76
DATAS VLV_I_82 252
DATAS VLV_D_82 252
DATAF VLV_ERROR_82
DATAF VLV_OLDERROR_82
DATAF VLV_ERRSUM_82
DATAF VLV_U_82
DATAF VLV_SENTIDO_82
DATAF VLV_READER_82
DATAS VLV_I_88 252
DATAS VLV_D_88 252
DATAF VLV_V0_88
DATAF VLV_ACCELENCODER_88
DATAF VLV_U_88
DATAF VLV_ERRSUM_88
DATAF VLV_OLDERROR_88
DATAF VLV_VEL_88
DATAF VLV_SENTIDO_88
DATAF VLV_ERROR_88
DATAF VLV_ENCDIFF_95
DATAF VLV_SIGNO_95
DATAF VLV_AENC_101
DATAF VLV_DIFFA_104
DATAF VLV_DIFFD_104
DATAF VLV_SAFETYTIMER_104
DATAF VLV_SIGNOA_104
DATAF VLV_SIGNOD_104
DATAF VLV_VELA_104
DATAF VLV_VELD_104
DATAF VLV_ENCDIFF_105
DATAF VLV_SIGNO_105
DATAF VLV_ENCDIFF_109
DATAF VLV_SIGNO_109
DATAF VLV_SAFETYTIMER_109
DATAF VLV_RED_110
DATAF VLV_YELLOW_110
DATAF VLV_GREEN_110
DATAF VLV_BLUE_110
DATAF VLV_VALUENEGRO_110
DATAF VLV_VALUEBLANCO_110
DATAF VLV_RWHITE_110
DATAF VLV_GWHITE_110
DATAF VLV_BWHITE_110
DATAF VLV_HUE_110
DATAF VLV_SAT_110
DATAF VLV_VALUE_110
ARRAY16 VLV_RNORMA_110 2
ARRAY16 VLV_GNORMA_110 2
ARRAY16 VLV_BNORMA_110 2
ARRAY16 VLV_MAXA_110 2
DATAF VLV_J_110
ARRAY16 VLV_RGB_110 2
DATAF VLV_RRAW_110
DATAF VLV_GRAW_110
DATAF VLV_BRAW_110
DATAF VLV_RNORM_110
DATAF VLV_GNORM_110
DATAF VLV_BNORM_110
DATAF VLV_MAX_110
DATAF VLV_MIN_110
DATAF VLV_RGBGREY_110
DATAF VLV_RED_111
DATAF VLV_YELLOW_111
DATAF VLV_GREEN_111
DATAF VLV_BLUE_111
DATAF VLV_VALUENEGRO_111
DATAF VLV_VALUEBLANCO_111
DATAF VLV_RWHITE_111
DATAF VLV_GWHITE_111
DATAF VLV_BWHITE_111
DATAF VLV_HUE_111
DATAF VLV_SAT_111
DATAF VLV_VALUE_111
ARRAY16 VLV_RNORMA_111 2
ARRAY16 VLV_GNORMA_111 2
ARRAY16 VLV_BNORMA_111 2
ARRAY16 VLV_MAXA_111 2
DATAF VLV_J_111
ARRAY16 VLV_RGB_111 2
DATAF VLV_RRAW_111
DATAF VLV_GRAW_111
DATAF VLV_BRAW_111
DATAF VLV_RNORM_111
DATAF VLV_GNORM_111
DATAF VLV_BNORM_111
DATAF VLV_MAX_111
DATAF VLV_MIN_111
DATAF VLV_RGBGREY_111
DATAF VLV_RED_112
DATAF VLV_YELLOW_112
DATAF VLV_GREEN_112
DATAF VLV_BLUE_112
DATAF VLV_VALUENEGRO_112
DATAF VLV_VALUEBLANCO_112
DATAF VLV_RWHITE_112
DATAF VLV_GWHITE_112
DATAF VLV_BWHITE_112
DATAF VLV_HUE_112
DATAF VLV_SAT_112
DATAF VLV_VALUE_112
ARRAY16 VLV_RNORMA_112 2
ARRAY16 VLV_GNORMA_112 2
ARRAY16 VLV_BNORMA_112 2
ARRAY16 VLV_MAXA_112 2
DATAF VLV_J_112
ARRAY16 VLV_RGB_112 2
DATAF VLV_RRAW_112
DATAF VLV_GRAW_112
DATAF VLV_BRAW_112
DATAF VLV_RNORM_112
DATAF VLV_GNORM_112
DATAF VLV_BNORM_112
DATAF VLV_MAX_112
DATAF VLV_MIN_112
DATAF VLV_RGBGREY_112
DATAF VLV_RED_113
DATAF VLV_YELLOW_113
DATAF VLV_GREEN_113
DATAF VLV_BLUE_113
DATAF VLV_VALUENEGRO_113
DATAF VLV_VALUEBLANCO_113
DATAF VLV_RWHITE_113
DATAF VLV_GWHITE_113
DATAF VLV_BWHITE_113
DATAF VLV_HUE_113
DATAF VLV_SAT_113
DATAF VLV_VALUE_113
ARRAY16 VLV_RNORMA_113 2
ARRAY16 VLV_GNORMA_113 2
ARRAY16 VLV_BNORMA_113 2
ARRAY16 VLV_MAXA_113 2
DATAF VLV_J_113
ARRAY16 VLV_RGB_113 2
DATAF VLV_RRAW_113
DATAF VLV_GRAW_113
DATAF VLV_BRAW_113
DATAF VLV_RNORM_113
DATAF VLV_GNORM_113
DATAF VLV_BNORM_113
DATAF VLV_MAX_113
DATAF VLV_MIN_113
DATAF VLV_RGBGREY_113
DATAF VLV_DETERMINANTE_132
DATAF VLV_I_133
DATA32 RUNCOUNTER_F_ODOMETRY_0
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_LADO_82
    MOVEF_F 0.0 VLV_SENS_82
    MOVEF_F 0.0 VLV_READ_130
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_VELOCIDAD_71
    MOVEF_F 0.0 VLV_KP_71
    MOVEF_F 0.0 VLV_KI_71
    MOVEF_F 0.0 VLV_KD_71
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYCREATE_FLOAT VLV_M_133
    MOVEF_F 0.0 VLV_K_133
    CALL ARRAYCREATE_FLOAT VLV_S_133
    CALL ARRAYCREATE_FLOAT VLV_M_131
    CALL ARRAYCREATE_FLOAT VLV_S_131
    CALL ARRAYCREATE_FLOAT VLV_M_132
    CALL ARRAYCREATE_FLOAT VLV_S_132
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYCREATE_FLOAT VLV_VELI_123
    CALL ARRAYCREATE_FLOAT VLV_VELD_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAI_K1_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAD_K1_123
    CALL ARRAYCREATE_FLOAT VLV_V_123
    CALL ARRAYCREATE_FLOAT VLV_DH_T_123
    CALL ARRAYCREATE_FLOAT VLV_S_INV_123
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    CALL ARRAYCREATE_FLOAT VGV_BOMBOCLAT
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_L
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYCREATE_FLOAT VGV_XT
    CALL ARRAYCREATE_FLOAT VGV_YT
    CALL ARRAYCREATE_FLOAT VGV_THETAT
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_D_L
    MOVEF_F 0.0 VGV_D_R
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_DELTA_THETA
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    MOVEF_F 0.0 VLV_DIAMETRO_2
    MOVEF_F 0.0 VLV_ENC_2
    MOVEF_F 0.0 VLV_START_B_2
    MOVEF_F 0.0 VLV_START_C_2
    MOVEF_F 0.0 VLV_ENCODER_C_2
    MOVEF_F 0.0 VLV_ENCODER_B_2
    MOVEF_F 0.0 VLV_ERROR_2
    MOVEF_F 0.0 VLV_PROPORCIAL_2
    MOVEF_F 0.0 VLV_START_B_3
    MOVEF_F 0.0 VLV_START_C_3
    MOVEF_F 0.0 VLV_ENCODER_B_3
    MOVEF_F 0.0 VLV_ENCODER_C_3
    MOVEF_F 0.0 VLV_ERROR_3
    MOVEF_F 0.0 VLV_PROPORCIAL_3
    MOVEF_F 0.0 VLV_START_B_5
    MOVEF_F 0.0 VLV_START_C_5
    MOVEF_F 0.0 VLV_ENCODER_B_5
    MOVEF_F 0.0 VLV_ENCODER_C_5
    MOVEF_F 0.0 VLV_ERROR_5
    MOVEF_F 0.0 VLV_PROPORCIAL_5
    MOVEF_F 0.0 VLV_AVANCE_33
    MOVEF_F 0.0 VLV_GINICIO_33
    MOVEF_F 0.0 VLV_AJUSTE_33
    STRINGS DUPLICATE '' VLV_I_35
    STRINGS DUPLICATE '' VLV_D_35
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VMIN_35
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_ENCODR_35
    STRINGS DUPLICATE '' VLV_I_39
    STRINGS DUPLICATE '' VLV_D_39
    MOVEF_F 0.0 VLV_ENCODR_39
    MOVEF_F 0.0 VLV_ANGLE_39
    STRINGS DUPLICATE '' VLV_I_56
    STRINGS DUPLICATE '' VLV_D_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    MOVEF_F 0.0 VLV_VEL_56
    MOVEF_F 0.0 VLV_SENTIDO_56
    STRINGS DUPLICATE '' VLV_I_71
    STRINGS DUPLICATE '' VLV_D_71
    MOVEF_F 0.0 VLV_ERROR_71
    MOVEF_F 0.0 VLV_OLDERROR_71
    MOVEF_F 0.0 VLV_ERRSUM_71
    MOVEF_F 0.0 VLV_U_71
    MOVEF_F 0.0 VLV_SENTIDO_71
    STRINGS DUPLICATE '' VLV_I_72
    STRINGS DUPLICATE '' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MOVEF_F 0.0 VLV_SENTIDO_72
    STRINGS DUPLICATE '' VLV_I_75
    STRINGS DUPLICATE '' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MOVEF_F 0.0 VLV_SENTIDO_75
    MOVEF_F 0.0 VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
    STRINGS DUPLICATE '' VLV_I_76
    STRINGS DUPLICATE '' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MOVEF_F 0.0 VLV_SENTIDO_76
    MOVEF_F 0.0 VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
    STRINGS DUPLICATE '' VLV_I_82
    STRINGS DUPLICATE '' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MOVEF_F 0.0 VLV_SENTIDO_82
    MOVEF_F 0.0 VLV_READER_82
    STRINGS DUPLICATE '' VLV_I_88
    STRINGS DUPLICATE '' VLV_D_88
    MOVEF_F 0.0 VLV_V0_88
    MOVEF_F 0.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    MOVEF_F 0.0 VLV_VEL_88
    MOVEF_F 0.0 VLV_SENTIDO_88
    MOVEF_F 0.0 VLV_ERROR_88
    MOVEF_F 0.0 VLV_ENCDIFF_95
    MOVEF_F 0.0 VLV_SIGNO_95
    MOVEF_F 0.0 VLV_AENC_101
    MOVEF_F 0.0 VLV_DIFFA_104
    MOVEF_F 0.0 VLV_DIFFD_104
    MOVEF_F 0.0 VLV_SAFETYTIMER_104
    MOVEF_F 0.0 VLV_SIGNOA_104
    MOVEF_F 0.0 VLV_SIGNOD_104
    MOVEF_F 0.0 VLV_VELA_104
    MOVEF_F 0.0 VLV_VELD_104
    MOVEF_F 0.0 VLV_ENCDIFF_105
    MOVEF_F 0.0 VLV_SIGNO_105
    MOVEF_F 0.0 VLV_ENCDIFF_109
    MOVEF_F 0.0 VLV_SIGNO_109
    MOVEF_F 0.0 VLV_SAFETYTIMER_109
    MOVEF_F 0.0 VLV_RED_110
    MOVEF_F 0.0 VLV_YELLOW_110
    MOVEF_F 0.0 VLV_GREEN_110
    MOVEF_F 0.0 VLV_BLUE_110
    MOVEF_F 0.0 VLV_VALUENEGRO_110
    MOVEF_F 0.0 VLV_VALUEBLANCO_110
    MOVEF_F 0.0 VLV_RWHITE_110
    MOVEF_F 0.0 VLV_GWHITE_110
    MOVEF_F 0.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_MAXA_110
    MOVEF_F 0.0 VLV_J_110
    CALL ARRAYCREATE_FLOAT VLV_RGB_110
    MOVEF_F 0.0 VLV_RRAW_110
    MOVEF_F 0.0 VLV_GRAW_110
    MOVEF_F 0.0 VLV_BRAW_110
    MOVEF_F 0.0 VLV_RNORM_110
    MOVEF_F 0.0 VLV_GNORM_110
    MOVEF_F 0.0 VLV_BNORM_110
    MOVEF_F 0.0 VLV_MAX_110
    MOVEF_F 0.0 VLV_MIN_110
    MOVEF_F 0.0 VLV_RGBGREY_110
    MOVEF_F 0.0 VLV_RED_111
    MOVEF_F 0.0 VLV_YELLOW_111
    MOVEF_F 0.0 VLV_GREEN_111
    MOVEF_F 0.0 VLV_BLUE_111
    MOVEF_F 0.0 VLV_VALUENEGRO_111
    MOVEF_F 0.0 VLV_VALUEBLANCO_111
    MOVEF_F 0.0 VLV_RWHITE_111
    MOVEF_F 0.0 VLV_GWHITE_111
    MOVEF_F 0.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_MAXA_111
    MOVEF_F 0.0 VLV_J_111
    CALL ARRAYCREATE_FLOAT VLV_RGB_111
    MOVEF_F 0.0 VLV_RRAW_111
    MOVEF_F 0.0 VLV_GRAW_111
    MOVEF_F 0.0 VLV_BRAW_111
    MOVEF_F 0.0 VLV_RNORM_111
    MOVEF_F 0.0 VLV_GNORM_111
    MOVEF_F 0.0 VLV_BNORM_111
    MOVEF_F 0.0 VLV_MAX_111
    MOVEF_F 0.0 VLV_MIN_111
    MOVEF_F 0.0 VLV_RGBGREY_111
    MOVEF_F 0.0 VLV_RED_112
    MOVEF_F 0.0 VLV_YELLOW_112
    MOVEF_F 0.0 VLV_GREEN_112
    MOVEF_F 0.0 VLV_BLUE_112
    MOVEF_F 0.0 VLV_VALUENEGRO_112
    MOVEF_F 0.0 VLV_VALUEBLANCO_112
    MOVEF_F 0.0 VLV_RWHITE_112
    MOVEF_F 0.0 VLV_GWHITE_112
    MOVEF_F 0.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_MAXA_112
    MOVEF_F 0.0 VLV_J_112
    CALL ARRAYCREATE_FLOAT VLV_RGB_112
    MOVEF_F 0.0 VLV_RRAW_112
    MOVEF_F 0.0 VLV_GRAW_112
    MOVEF_F 0.0 VLV_BRAW_112
    MOVEF_F 0.0 VLV_RNORM_112
    MOVEF_F 0.0 VLV_GNORM_112
    MOVEF_F 0.0 VLV_BNORM_112
    MOVEF_F 0.0 VLV_MAX_112
    MOVEF_F 0.0 VLV_MIN_112
    MOVEF_F 0.0 VLV_RGBGREY_112
    MOVEF_F 0.0 VLV_RED_113
    MOVEF_F 0.0 VLV_YELLOW_113
    MOVEF_F 0.0 VLV_GREEN_113
    MOVEF_F 0.0 VLV_BLUE_113
    MOVEF_F 0.0 VLV_VALUENEGRO_113
    MOVEF_F 0.0 VLV_VALUEBLANCO_113
    MOVEF_F 0.0 VLV_RWHITE_113
    MOVEF_F 0.0 VLV_GWHITE_113
    MOVEF_F 0.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_MAXA_113
    MOVEF_F 0.0 VLV_J_113
    CALL ARRAYCREATE_FLOAT VLV_RGB_113
    MOVEF_F 0.0 VLV_RRAW_113
    MOVEF_F 0.0 VLV_GRAW_113
    MOVEF_F 0.0 VLV_BRAW_113
    MOVEF_F 0.0 VLV_RNORM_113
    MOVEF_F 0.0 VLV_GNORM_113
    MOVEF_F 0.0 VLV_BNORM_113
    MOVEF_F 0.0 VLV_MAX_113
    MOVEF_F 0.0 VLV_MIN_113
    MOVEF_F 0.0 VLV_RGBGREY_113
    MOVEF_F 0.0 VLV_DETERMINANTE_132
    MOVEF_F 0.0 VLV_I_133
    MOVE32_32 0 RUNCOUNTER_F_ODOMETRY_0
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_ODOMETRY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ODOMETRY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 -1 RUNCOUNTER_F_ODOMETRY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_ODOMETRY_0
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    DATAF F.7
    DATAF F.8
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1375
    WRITE32 ENDSUB_F_ODOMETRY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ODOMETRY_0
  dispatch1375:
    JR_NEQ32 SUBPROGRAM 1 dispatch1376
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1376:
    JR_NEQ32 SUBPROGRAM 2 dispatch1377
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1377:
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_LADO_82
    MOVEF_F 0.0 VLV_SENS_82
    MOVEF_F 0.0 VLV_READ_130
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_VELOCIDAD_71
    MOVEF_F 0.0 VLV_KP_71
    MOVEF_F 0.0 VLV_KI_71
    MOVEF_F 0.0 VLV_KD_71
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_133
    MOVEF_F 0.0 VLV_K_133
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_133
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_131
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_131
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_132
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELI_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELD_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAI_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAD_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_DH_T_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_INV_123
    MOVEF_F 0.0 VLV_READ_130
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 1.0 VGV_SENTIDO_D
    MOVEF_F 102.0 VGV_DW
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.61111111111111 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB14:
    DATA32 tmp15
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 1  RUNCOUNTER_F_ODOMETRY_0 tmp15
    JR_NEQ32 0 tmp15 alreadylaunched15
    OBJECT_START TF_ODOMETRY_0
  alreadylaunched15:
    DATA32 tmp16
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp16
    JR_NEQ32 0 tmp16 alreadylaunched16
    OBJECT_START TF_DISPLAY_0
  alreadylaunched16:
    DATA32 tmp17
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp17
    JR_NEQ32 0 tmp17 alreadylaunched17
    OBJECT_START TF_STOP_0
  alreadylaunched17:
    WRITE32 ENDSUB_F_MAINPRUEBA_0:CALLSUB18 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAINPRUEBA_0
CALLSUB18:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer19
	DATA8 no19
	DATA8 mode819
	
	MOVEF_8 1.0 no19
	SUB8 no19 1 no19
	DIV8 no19 4 layer19
	MATH MOD8 no19 4 no19

	MOVEF_8 0.0 mode819
	
	INPUT_DEVICE READY_RAW layer19 no19 0 mode819 0
    DATA8 layer20
	DATA8 no20
	DATA8 mode820
	
	MOVEF_8 2.0 no20
	SUB8 no20 1 no20
	DIV8 no20 4 layer20
	MATH MOD8 no20 4 no20

	MOVEF_8 4.0 mode820
	
	INPUT_DEVICE READY_RAW layer20 no20 0 mode820 0
    DATA8 layer21
	DATA8 no21
	DATA8 mode821
	
	MOVEF_8 3.0 no21
	SUB8 no21 1 no21
	DIV8 no21 4 layer21
	MATH MOD8 no21 4 no21

	MOVEF_8 4.0 mode821
	
	INPUT_DEVICE READY_RAW layer21 no21 0 mode821 0
    DATA8 layer22
	DATA8 no22
	DATA8 mode822
	
	MOVEF_8 4.0 no22
	SUB8 no22 1 no22
	DIV8 no22 4 layer22
	MATH MOD8 no22 4 no22

	MOVEF_8 0.0 mode822
	
	INPUT_DEVICE READY_RAW layer22 no22 0 mode822 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while24:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 850.0 endwhile24
  whilebody24:
    MOVEF_8 30.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 30.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 850.0 whilebody24
  endwhile24:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -360.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB32:
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds34
	MOVEF_32 100.0 milliseconds34
	DATA32 timer34
	TIMER_WAIT milliseconds34 timer34
	TIMER_READY timer34
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_ODOMETRY_0:
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_L
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_XT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_YT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_THETAT
    MOVEF_F 0.0 VGV_I
  while40:
  whilebody40:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.2
    MULF F.2 -1.0 F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_L
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_R
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_L
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_L
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf53
    DATA8 flag53
    DIVF F.0 2.0 tmpf53
    CP_EQF 0.0 2.0 flag53
    SELECTF flag53 0.0 tmpf53 VGV_D_L

    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_R
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_R
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf59
    DATA8 flag59
    DIVF F.0 2.0 tmpf59
    CP_EQF 0.0 2.0 flag59
    SELECTF flag59 0.0 tmpf59 VGV_D_R

    ADDF VGV_D_L VGV_D_R F.0
    DATAF tmpf61
    DATA8 flag61
    DIVF F.0 2.0 tmpf61
    CP_EQF 0.0 2.0 flag61
    SELECTF flag61 0.0 tmpf61 VGV_D

    SUBF VGV_D_R VGV_D_L F.0
    MULF 2.0 VGV_DW F.1
    DATAF tmpf64
    DATA8 flag64
    DIVF F.0 F.1 tmpf64
    CP_EQF 0.0 F.1 flag64
    SELECTF flag64 0.0 tmpf64 VGV_DELTA_THETA

    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf67
    DATA8 flag67
    DIVF VGV_DELTA_THETA 2.0 tmpf67
    CP_EQF 0.0 2.0 flag67
    SELECTF flag67 0.0 tmpf67 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf69
	MULF F.4 57.295779513082  tmpf69
	MATH SIN  tmpf69 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf76
    DATA8 flag76
    DIVF VGV_DELTA_THETA 2.0 tmpf76
    CP_EQF 0.0 2.0 flag76
    SELECTF flag76 0.0 tmpf76 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf78
	MULF F.4 57.295779513082 tmpf78
	MATH COS tmpf78 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_THETAT
    ADDF F.2 VGV_DELTA_THETA F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_THETAT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_XTIME VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_YTIME VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_THETATIME VGV_THETAT
    ADDF VGV_I 1.0 VGV_I
    DATA32 milliseconds94
	MOVEF_32 10.0 milliseconds94
	DATA32 timer94
	TIMER_WAIT milliseconds94 timer94
	TIMER_READY timer94
    JR whilebody40
  endwhile40:
RETSUB_F_ODOMETRY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ODOMETRY_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while95:
  whilebody95:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf101
    DATA8 flag101
    DIVF F.1 100.0 tmpf101
    CP_EQF 0.0 100.0 flag101
    SELECTF flag101 0.0 tmpf101 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'xt: ' S.1 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf108
    DATA8 flag108
    DIVF F.1 100.0 tmpf108
    CP_EQF 0.0 100.0 flag108
    SELECTF flag108 0.0 tmpf108 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'yt: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.1 VGV_THETAT
    MULF F.1 57.295779513082 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'thetat: ' S.1 S.0
    CALL LCD.WRITE 5.0 25.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf132
    DATA8 flag132
    DIVF F.2 0.05 tmpf132
    CP_EQF 0.0 0.05 flag132
    SELECTF flag132 0.0 tmpf132 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf140
    DATA8 flag140
    DIVF F.1 0.05 tmpf140
    CP_EQF 0.0 0.05 flag140
    SELECTF flag140 0.0 tmpf140 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    STRINGS VALUE_FORMATTED VGV_D_T '%g' 99 S.1
    CALL TEXT.APPEND 'Delta T:  ' S.1 S.0
    CALL LCD.WRITE 5.0 105.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds157
	MOVEF_32 50.0 milliseconds157
	DATA32 timer157
	TIMER_WAIT milliseconds157 timer157
	TIMER_READY timer157
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody95
  endwhile95:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAINPRUEBA_0:
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB160:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB161:
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB162:
    MOVEF_F VLV_READ_130 VGV_BLOQUE
    CALL ARRAYSTORE_FLOAT 0.0 VGV_BLOQUE VGV_BOMBOCLAT
    JR_NEQF VGV_BLOQUE 0.0 else164_1
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    JR endif164
  else164_1:
    MOVEF_F 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_BLOQUE 3.0 else165_1
    ADDF VGV_VERDES 1.0 VGV_VERDES
    JR endif165
  else165_1:
    ADDF VGV_AZULES 1.0 VGV_AZULES
  else165_2:
  endif165:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB168:
  else164_2:
  endif164:
    MOVEF_F -20.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB169:
    MOVEF_F 20.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB170:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB171:
    MOVEF_F -20.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB172:
    MOVEF_F 20.0 VLV_VELOCIDAD_1
    MOVEF_F 14.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB173:
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB174:
    MOVEF_F VLV_READ_130 VGV_BLOQUE
    JR_NEQF VGV_BLOQUE 0.0 else175_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    JR endif175
  else175_1:
    CALL ARRAYSTORE_FLOAT 1.0 VGV_BLOQUE VGV_BOMBOCLAT
    ADDF VGV_NUMERO_BLOQUES 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else181_1
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB182:
    JR endif181
  else181_1:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB183:
  else181_2:
  endif181:
  else175_2:
  endif175:
    DATA32 milliseconds184
	MOVEF_32 3000.0 milliseconds184
	DATA32 timer184
	TIMER_WAIT milliseconds184 timer184
	TIMER_READY timer184
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB185:
    MOVEF_F 20.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB186:
RETSUB_F_MAINPRUEBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAINPRUEBA_0:
SUB_F_CASO_ARRIBA_0:
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 30.0 VLV_VELOCIDAD_75
    MOVEF_F 0.2 VLV_KP_75
    MOVEF_F 0.0001 VLV_KI_75
    MOVEF_F 3.0 VLV_KD_75
    MOVEF_F 23.5 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB187:
    MOVEF_F 30.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB188:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB189:
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB190:
    MOVEF_F VLV_READ_130 VGV_BLOQUE
    CALL ARRAYSTORE_FLOAT 0.0 VGV_BLOQUE VGV_BOMBOCLAT
    JR_NEQF VGV_BLOQUE 0.0 else192_1
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    JR endif192
  else192_1:
    MOVEF_F 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_BLOQUE 3.0 else193_1
    ADDF VGV_VERDES 1.0 VGV_VERDES
    JR endif193
  else193_1:
    ADDF VGV_AZULES 1.0 VGV_AZULES
  else193_2:
  endif193:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB196:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB197:
  else192_2:
  endif192:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB198:
    MOVEF_F 30.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB199:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB200:
    MOVEF_F -30.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB201:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB202:
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB203:
    MOVEF_F VLV_READ_130 VGV_BLOQUE
    JR_NEQF VGV_BLOQUE 0.0 else204_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    JR endif204
  else204_1:
    CALL ARRAYSTORE_FLOAT 1.0 VGV_BLOQUE VGV_BOMBOCLAT
    ADDF VGV_NUMERO_BLOQUES 1.0 VGV_NUMERO_BLOQUES
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB210:
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else211_1
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB212:
    JR endif211
  else211_1:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB213:
  else211_2:
  endif211:
  else204_2:
  endif204:
    MOVEF_F -30.0 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB214:
    MOVEF_F -30.0 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB215:
    MOVEF_F 30.0 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB216:
    MOVEF_F 30.0 VLV_VELOCIDAD_75
    MOVEF_F 0.2 VLV_KP_75
    MOVEF_F 0.0001 VLV_KI_75
    MOVEF_F 3.0 VLV_KD_75
    MOVEF_F 37.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB217:
    JR_LTEQF VGV_NUMERO_BLOQUES 0.0 else218_1
    MOVEF_F 30.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB219:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB220:
    CALL ARRAYGET_FLOAT 1.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else221_1
    MOVEF_F 30.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 35.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB223:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -800.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB224:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB225:
    SUBF VGV_NUMERO_BLOQUES 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else227_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 3.0 else227_1
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -750.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB229:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB230:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 200.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB231:
    MOVEF_F 30.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB232:
    MOVEF_F -30.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 35.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB233:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 30.0 VLV_V2_35
    MOVEF_F 35.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB234:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -800.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB235:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB236:
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F -30.0 VLV_V2_35
    MOVEF_F 35.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB237:
    JR endif227
  else227_1:
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    MOVEF_F 30.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB238:
    MOVEF_F -30.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 35.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB239:
  else227_2:
  endif227:
    JR endif221
  else221_1:
    CALL ARRAYGET_FLOAT 1.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 3.0 else221_2
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 30.0 VLV_V2_35
    MOVEF_F 35.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB241:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -800.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB242:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB243:
    SUBF VGV_NUMERO_BLOQUES 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else245_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else245_1
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -750.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB247:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB248:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 200.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB249:
    MOVEF_F 30.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB250:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F -30.0 VLV_V2_35
    MOVEF_F 30.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB251:
    MOVEF_F 30.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 30.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB252:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -800.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB253:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB254:
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    MOVEF_F 30.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB255:
    MOVEF_F -30.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 35.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB256:
    JR endif245
  else245_1:
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    MOVEF_F 30.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB257:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F -30.0 VLV_V2_35
    MOVEF_F 35.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB258:
  else245_2:
  endif245:
  else221_2:
  endif221:
    MOVEF_F 30.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB259:
    MOVEF_F 30.0 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB260:
    MOVEF_F 30.0 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB261:
    MOVEF_F 30.0 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB262:
    MOVEF_F 30.0 VLV_VELOCIDAD_71
    MOVEF_F 0.2 VLV_KP_71
    MOVEF_F 0.0001 VLV_KI_71
    MOVEF_F 1.0 VLV_KD_71
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB263:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 16.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB264:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB265:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB266:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB267:
    MOVEF_F 30.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB268:
    MOVEF_F 30.0 VLV_VELOCIDAD_75
    MOVEF_F 0.2 VLV_KP_75
    MOVEF_F 0.0001 VLV_KI_75
    MOVEF_F 1.0 VLV_KD_75
    MOVEF_F 8.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB269:
    MOVEF_F -30.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB270:
    MOVEF_F 30.0 VLV_VELOCIDAD_1
    MOVEF_F 16.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB271:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB272:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB273:
    JR endif218
  else218_1:
    MOVEF_F -30.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB274:
  else218_2:
  endif218:
RETSUB_F_CASO_ARRIBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASO_ARRIBA_0:
SUB_F_CASO_ABAJO_0:
RETSUB_F_CASO_ABAJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASO_ABAJO_0:
SUB_F_STOP_0:
  while275:
  whilebody275:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else276_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    WRITE32 ENDSUB_F_BMOVEADSAFE_2:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEADSAFE_2
CALLSUB281:
    PROGRAM_STOP -1
  else276_1:
  endif276:
    JR whilebody275
  endwhile275:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf286
    DATA8 flag286
    DIVF F.1 F.2 tmpf286
    CP_EQF 0.0 F.2 flag286
    SELECTF flag286 0.0 tmpf286 F.0

    DATAF tmpf287
    DATA8 flag287
    DIVF F.0 VLV_DIAMETRO_1 tmpf287
    CP_EQF 0.0 VLV_DIAMETRO_1 flag287
    SELECTF flag287 0.0 tmpf287 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while293:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile293
  whilebody293:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 2.0 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody293
  endwhile293:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_ENCODERRECTOMMF_2:
    MULF VLV_VELOCIDAD_2 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_2
    MOVEF_F 5.6 VLV_DIAMETRO_2
    MULF VLV_DISTANCIA_2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf312
    DATA8 flag312
    DIVF F.1 F.2 tmpf312
    CP_EQF 0.0 F.2 flag312
    SELECTF flag312 0.0 tmpf312 F.0

    DATAF tmpf313
    DATA8 flag313
    DIVF F.0 VLV_DIAMETRO_2 tmpf313
    CP_EQF 0.0 VLV_DIAMETRO_2 flag313
    SELECTF flag313 0.0 tmpf313 VLV_ENC_2

    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_2
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
  while319:
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_GTEQF F.0 VLV_ENC_2 endwhile319
  whilebody319:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_2 VLV_ENCODER_B_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
    SUBF VLV_ENCODER_B_2 VLV_ENCODER_C_2 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_2
    MULF VLV_ERROR_2 2.0 VLV_PROPORCIAL_2
    SUBF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_LTF F.0 VLV_ENC_2 whilebody319
  endwhile319:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMMF_2:
SUB_F_1NEGRORECTOMM_2:
    MULF VLV_VELOCIDAD_3 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_3
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_3
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_3
  while339:
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_LTEQF F.0 10.0 endwhile339
  whilebody339:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_3 VLV_ENCODER_B_3
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_3 VLV_ENCODER_C_3
    SUBF VLV_ENCODER_B_3 VLV_ENCODER_C_3 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_3
    MULF VLV_ERROR_3 2.0 VLV_PROPORCIAL_3
    SUBF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_GTF F.0 10.0 whilebody339
  endwhile339:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGRORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMM_2:
SUB_F_1BLANCORECTOMM_2:
    MULF VLV_VELOCIDAD_5 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_5
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_5
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_5
  while359:
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_GTEQF F.0 40.0 endwhile359
  whilebody359:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_5 VLV_ENCODER_B_5
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_5 VLV_ENCODER_C_5
    SUBF VLV_ENCODER_B_5 VLV_ENCODER_C_5 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_5
    MULF VLV_ERROR_5 2.0 VLV_PROPORCIAL_5
    SUBF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_LTF F.0 40.0 whilebody359
  endwhile359:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1BLANCORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMM_2:
SUB_F_GPERFDDEFINITIVOMM_1:
    MOVEF_F 100.0 VLV_AVANCE_33
    MOVEF_F 200.0 VLV_GINICIO_33
    MOVEF_F 70.0 VLV_AJUSTE_33
    DATA8 flag375
	CP_LTF 40.0 VLV_VEL_33 flag375
	SELECTF flag375 40.0 VLV_VEL_33 VLV_VEL_33
    MULF VLV_VEL_33 0.75 VLV_VEL_33
    MULF VLV_VEL_33 VGV_SENTIDO_MOTORES VLV_VEL_33
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VEL_33 VLV_AVANCE_33 'True'

	DATA8 layer379
	DATA8 nos379
	DATA8 busy379
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer379 nos379
	JR_EQ8 0 nos379 motornotbusy379
  motorwaiting379:
	OUTPUT_TEST layer379 nos379 busy379
	JR_EQ8 busy379 0 motornotbusy379
	SLEEP
	JR motorwaiting379
  motornotbusy379:
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_GINICIO_33 0.0 'False' 

	DATA8 layer381
	DATA8 nos381
	DATA8 busy381
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer381 nos381
	JR_EQ8 0 nos381 motornotbusy381
  motorwaiting381:
	OUTPUT_TEST layer381 nos381 busy381
	JR_EQ8 busy381 0 motornotbusy381
	SLEEP
	JR motorwaiting381
  motornotbusy381:
  while382:
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 10.0 endwhile382
  whilebody382:
    MATH NEGATE VLV_VEL_33 F.0
    MATH NEGATE VLV_VEL_33 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 10.0 whilebody382
  endwhile382:
    CALL MOTOR.STOP 'BC' 'False'
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_AJUSTE_33 0.0 'True' 

	DATA8 layer390
	DATA8 nos390
	DATA8 busy390
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer390 nos390
	JR_EQ8 0 nos390 motornotbusy390
  motorwaiting390:
	OUTPUT_TEST layer390 nos390 busy390
	JR_EQ8 busy390 0 motornotbusy390
	SLEEP
	JR motorwaiting390
  motornotbusy390:
RETSUB_F_GPERFDDEFINITIVOMM_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GPERFDDEFINITIVOMM_1:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_35
    STRINGS DUPLICATE 'C' VLV_D_35
    DATAF tmpf391
    DATA8 flag391
    DIVF VLV_V1_35 VLV_V2_35 tmpf391
    CP_EQF 0.0 VLV_V2_35 flag391
    SELECTF flag391 0.0 tmpf391 F.0

    DATAF tmpf392
    DATA8 flag392
    DIVF VLV_V1_35 VLV_V2_35 tmpf392
    CP_EQF 0.0 VLV_V2_35 flag392
    SELECTF flag392 0.0 tmpf392 F.2

    MATH ABS F.2 F.1
    DATAF tmpf394
    DATA8 flag394
    DIVF F.0 F.1 tmpf394
    CP_EQF 0.0 F.1 flag394
    SELECTF flag394 0.0 tmpf394 VLV_SIGNO_35

    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag397
	CP_LTF F.0 F.1 flag397
	SELECTF flag397 F.0 F.1 VLV_VMIN_35
    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag400
	CP_GTF F.0 F.1 flag400
	SELECTF flag400 F.0 F.1 VLV_VMAX_35
    MULF VLV_ANGLE_35 VGV_G1 F.0
    MULF VLV_SIGNO_35 VLV_VMIN_35 F.4
    DATAF tmpf403
    DATA8 flag403
    DIVF F.4 VLV_VMAX_35 tmpf403
    CP_EQF 0.0 VLV_VMAX_35 flag403
    SELECTF flag403 0.0 tmpf403 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf405
    DATA8 flag405
    DIVF -2.0 F.2 tmpf405
    CP_EQF 0.0 F.2 flag405
    SELECTF flag405 0.0 tmpf405 F.1

    MULF F.0 F.1 VLV_ENCODR_35
    CALL TEXT.APPEND VLV_I_35 VLV_D_35 S.0
    MATH NEGATE VLV_V1_35 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_35 VLV_ENCODR_35 'True'

	DATA8 layer409
	DATA8 nos409
	DATA8 busy409
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer409 nos409
	JR_EQ8 0 nos409 motornotbusy409
  motorwaiting409:
	OUTPUT_TEST layer409 nos409 busy409
	JR_EQ8 busy409 0 motornotbusy409
	SLEEP
	JR motorwaiting409
  motornotbusy409:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_SPIN90_1:
    STRINGS DUPLICATE 'B' VLV_I_39
    STRINGS DUPLICATE 'C' VLV_D_39
    MULF 84.0 VGV_G1 VLV_ENCODR_39
    CALL TEXT.APPEND VLV_I_39 VLV_D_39 S.0
    MATH NEGATE VLV_VELOCIDAD_39 F.0
    CALL MOTOR.SCHEDULE S.0 F.0 0.0 VLV_ENCODR_39 0.0 'True' 

	DATA8 layer413
	DATA8 nos413
	DATA8 busy413
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer413 nos413
	JR_EQ8 0 nos413 motornotbusy413
  motorwaiting413:
	OUTPUT_TEST layer413 nos413 busy413
	JR_EQ8 busy413 0 motornotbusy413
	SLEEP
	JR motorwaiting413
  motornotbusy413:
    MOVEF_F 0.0 VLV_ANGLE_39
RETSUB_F_SPIN90_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN90_1:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_56
    STRINGS DUPLICATE 'C' VLV_D_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf416
    DATA8 flag416
    DIVF VLV_ACCELENCODER_56 F.1 tmpf416
    CP_EQF 0.0 F.1 flag416
    SELECTF flag416 0.0 tmpf416 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    CALL MOTOR.RESETCOUNT 'C'
  while419:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or420
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile419
  or420:
  whilebody419:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf424
    DATA8 flag424
    DIVF F.3 VLV_ACCELENCODER_56 tmpf424
    CP_EQF 0.0 VLV_ACCELENCODER_56 flag424
    SELECTF flag424 0.0 tmpf424 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_56 VLV_V0_56 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_56 VLV_VEL_56
    DATA8 flag429
	CP_LTF VLV_VEL_56 VLV_VMAX_56 flag429
	SELECTF flag429 VLV_VEL_56 VLV_VMAX_56 VLV_VEL_56
    MATH ABS VLV_VEL_56 F.0
    DATAF tmpf431
    DATA8 flag431
    DIVF VLV_VEL_56 F.0 tmpf431
    CP_EQF 0.0 F.0 flag431
    SELECTF flag431 0.0 tmpf431 VLV_SENTIDO_56

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_56 VLV_ERROR_56
    ADDF VLV_ERRSUM_56 VLV_ERROR_56 VLV_ERRSUM_56
    MULF VLV_ERROR_56 VLV_KP_56 F.1
    SUBF VLV_ERROR_56 VLV_OLDERROR_56 F.3
    MULF F.3 VLV_KD_56 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_56 VLV_KI_56 F.1
    ADDF F.0 F.1 VLV_U_56
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    ADDF VLV_VEL_56 VLV_U_56 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_56 VLV_U_56 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_56 VLV_OLDERROR_56
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody419
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody419
  endwhile419:
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PID_4:
    MULF VLV_VELOCIDAD_71 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_71
    STRINGS DUPLICATE 'B' VLV_I_71
    STRINGS DUPLICATE 'C' VLV_D_71
    MOVEF_F 0.0 VLV_ERROR_71
    MOVEF_F 0.0 VLV_OLDERROR_71
    MOVEF_F 0.0 VLV_ERRSUM_71
    MOVEF_F 0.0 VLV_U_71
    MATH ABS VLV_VELOCIDAD_71 F.0
    DATAF tmpf456
    DATA8 flag456
    DIVF VLV_VELOCIDAD_71 F.0 tmpf456
    CP_EQF 0.0 F.0 flag456
    SELECTF flag456 0.0 tmpf456 VLV_SENTIDO_71

  while457:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or458
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile457
  or458:
  whilebody457:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_71 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_71
    ADDF VLV_ERRSUM_71 VLV_ERROR_71 VLV_ERRSUM_71
    MULF VLV_ERROR_71 VLV_KP_71 F.1
    SUBF VLV_ERROR_71 VLV_OLDERROR_71 F.3
    MULF F.3 VLV_KD_71 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_71 VLV_KI_71 F.1
    ADDF F.0 F.1 VLV_U_71
    CALL TEXT.APPEND VLV_I_71 VLV_D_71 S.0
    ADDF VLV_VELOCIDAD_71 VLV_U_71 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_71 VLV_U_71 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_71 VLV_OLDERROR_71
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody457
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody457
  endwhile457:
    CALL TEXT.APPEND VLV_I_71 VLV_D_71 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PID_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PID_4:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_72 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_72
    STRINGS DUPLICATE 'B' VLV_I_72
    STRINGS DUPLICATE 'C' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MATH ABS VLV_VELOCIDAD_72 F.0
    DATAF tmpf484
    DATA8 flag484
    DIVF VLV_VELOCIDAD_72 F.0 tmpf484
    CP_EQF 0.0 F.0 flag484
    SELECTF flag484 0.0 tmpf484 VLV_SENTIDO_72

  while485:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or486
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile485
  or486:
  whilebody485:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_72 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_72
    ADDF VLV_ERRSUM_72 VLV_ERROR_72 VLV_ERRSUM_72
    MULF VLV_ERROR_72 VLV_KP_72 F.1
    SUBF VLV_ERROR_72 VLV_OLDERROR_72 F.3
    MULF F.3 VLV_KD_72 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_72 VLV_KI_72 F.1
    ADDF F.0 F.1 VLV_U_72
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    ADDF VLV_VELOCIDAD_72 VLV_U_72 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_72 VLV_U_72 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_72 VLV_OLDERROR_72
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody485
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody485
  endwhile485:
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_75 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_75
    STRINGS DUPLICATE 'B' VLV_I_75
    STRINGS DUPLICATE 'C' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MATH ABS VLV_VELOCIDAD_75 F.0
    DATAF tmpf512
    DATA8 flag512
    DIVF VLV_VELOCIDAD_75 F.0 tmpf512
    CP_EQF 0.0 F.0 flag512
    SELECTF flag512 0.0 tmpf512 VLV_SENTIDO_75

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf515
    DATA8 flag515
    DIVF VLV_ENCODER_75 F.1 tmpf515
    CP_EQF 0.0 F.1 flag515
    SELECTF flag515 0.0 tmpf515 F.0

    MULF F.0 360.0 VLV_ENCODER_75
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
  while518:
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_GTEQF F.0 VLV_ENCODER_75 endwhile518
  whilebody518:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_75 VLV_ENCODER_C_75
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_75 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_75
    ADDF VLV_ERRSUM_75 VLV_ERROR_75 VLV_ERRSUM_75
    MULF VLV_ERROR_75 VLV_KP_75 F.1
    SUBF VLV_ERROR_75 VLV_OLDERROR_75 F.3
    MULF F.3 VLV_KD_75 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_75 VLV_KI_75 F.1
    ADDF F.0 F.1 VLV_U_75
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    ADDF VLV_VELOCIDAD_75 VLV_U_75 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_75 VLV_U_75 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_75 VLV_OLDERROR_75
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_LTF F.0 VLV_ENCODER_75 whilebody518
  endwhile518:
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_76 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_76
    STRINGS DUPLICATE 'B' VLV_I_76
    STRINGS DUPLICATE 'C' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MATH ABS VLV_VELOCIDAD_76 F.0
    DATAF tmpf544
    DATA8 flag544
    DIVF VLV_VELOCIDAD_76 F.0 tmpf544
    CP_EQF 0.0 F.0 flag544
    SELECTF flag544 0.0 tmpf544 VLV_SENTIDO_76

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf547
    DATA8 flag547
    DIVF VLV_ENCODER_76 F.1 tmpf547
    CP_EQF 0.0 F.1 flag547
    SELECTF flag547 0.0 tmpf547 F.0

    MULF F.0 360.0 VLV_ENCODER_76
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
  while550:
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_GTEQF F.0 VLV_ENCODER_76 endwhile550
  whilebody550:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_76 VLV_ENCODER_C_76
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_76 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_76
    ADDF VLV_ERRSUM_76 VLV_ERROR_76 VLV_ERRSUM_76
    MULF VLV_ERROR_76 VLV_KP_76 F.1
    SUBF VLV_ERROR_76 VLV_OLDERROR_76 F.3
    MULF F.3 VLV_KD_76 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_76 VLV_KI_76 F.1
    ADDF F.0 F.1 VLV_U_76
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    ADDF VLV_VELOCIDAD_76 VLV_U_76 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_76 VLV_U_76 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_76 VLV_OLDERROR_76
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_LTF F.0 VLV_ENCODER_76 whilebody550
  endwhile550:
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL1SPIDCROSSF_6:
    MULF VLV_VELOCIDAD_82 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_82
    STRINGS DUPLICATE 'B' VLV_I_82
    STRINGS DUPLICATE 'C' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MATH ABS VLV_VELOCIDAD_82 F.0
    DATAF tmpf576
    DATA8 flag576
    DIVF VLV_VELOCIDAD_82 F.0 tmpf576
    CP_EQF 0.0 F.0 flag576
    SELECTF flag576 0.0 tmpf576 VLV_SENTIDO_82

    JR_NEQF VLV_SENS_82 1.0 else577_1
    MOVEF_F 4.0 VLV_READER_82
    JR endif577
  else577_1:
    MOVEF_F 1.0 VLV_READER_82
  else577_2:
  endif577:
  while578:
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_LTEQF F.0 20.0 endwhile578
  whilebody578:
    CALL SENSOR.READPERCENT VLV_SENS_82 F.3
    SUBF F.3 50.0 F.2
    MULF F.2 VLV_SENTIDO_82 F.1
    MULF F.1 VLV_LADO_82 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_82
    ADDF VLV_ERRSUM_82 VLV_ERROR_82 VLV_ERRSUM_82
    MULF VLV_ERROR_82 VLV_KP_82 F.1
    SUBF VLV_ERROR_82 VLV_OLDERROR_82 F.3
    MULF F.3 VLV_KD_82 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_82 VLV_KI_82 F.1
    ADDF F.0 F.1 VLV_U_82
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    ADDF VLV_VELOCIDAD_82 VLV_U_82 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_82 VLV_U_82 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_82 VLV_OLDERROR_82
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_GTF F.0 20.0 whilebody578
  endwhile578:
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL1SPIDCROSSF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSSF_6:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_88 VGV_SENTIDO_MOTORES VLV_VMAX_88
    STRINGS DUPLICATE 'B' VLV_I_88
    STRINGS DUPLICATE 'C' VLV_D_88
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_88
    MOVEF_F 150.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    CALL MOTOR.RESETCOUNT 'C'
  while603:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or604
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile603
  or604:
  whilebody603:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf608
    DATA8 flag608
    DIVF F.2 VLV_ACCELENCODER_88 tmpf608
    CP_EQF 0.0 VLV_ACCELENCODER_88 flag608
    SELECTF flag608 0.0 tmpf608 F.1

    ADDF VLV_VMAX_88 VLV_V0_88 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_88 VLV_VEL_88
    DATA8 flag612
	CP_LTF VLV_VEL_88 VLV_VMAX_88 flag612
	SELECTF flag612 VLV_VEL_88 VLV_VMAX_88 VLV_VEL_88
    MATH ABS VLV_VEL_88 F.0
    DATAF tmpf614
    DATA8 flag614
    DIVF VLV_VEL_88 F.0 tmpf614
    CP_EQF 0.0 F.0 flag614
    SELECTF flag614 0.0 tmpf614 VLV_SENTIDO_88

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_88 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_88
    MULF VLV_ERRSUM_88 0.9 F.0
    ADDF F.0 VLV_ERROR_88 VLV_ERRSUM_88
    MULF VLV_ERROR_88 VLV_KP_88 F.1
    SUBF VLV_ERROR_88 VLV_OLDERROR_88 F.3
    MULF F.3 VLV_KD_88 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_88 VLV_KI_88 F.1
    ADDF F.0 F.1 VLV_U_88
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    ADDF VLV_VEL_88 VLV_U_88 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_88 VLV_U_88 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_88 VLV_OLDERROR_88
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody603
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody603
  endwhile603:
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_95 F.0 VLV_ENCDIFF_95
    MATH ABS VLV_ENCDIFF_95 F.0
    DATAF tmpf640
    DATA8 flag640
    DIVF VLV_ENCDIFF_95 F.0 tmpf640
    CP_EQF 0.0 F.0 flag640
    SELECTF flag640 0.0 tmpf640 VLV_SIGNO_95

    JR_EQF VLV_ENCDIFF_95 0.0 else641_1
  while642:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile642
  whilebody642:
    MULF VLV_SIGNO_95 VLV_V_95 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody642
  endwhile642:
    CALL MOTOR.STOP 'A' 'True'
  else641_1:
  endif641:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEAD0_1:
    MOVEF_F -10.0 VLV_AENC_101
  while652:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 or653
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENC_101 endwhile652
  or653:
  whilebody652:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_GTEQF F.0 VLV_AENC_101 else656_1
    DATAF tmpf658
    DATA8 flag658
    DIVF VLV_V_101 2.0 tmpf658
    CP_EQF 0.0 2.0 flag658
    SELECTF flag658 0.0 tmpf658 F.2

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf661
    DATA8 flag661
    DIVF F.4 10.0 tmpf661
    CP_EQF 0.0 10.0 flag661
    SELECTF flag661 0.0 tmpf661 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag663
	CP_LTF VLV_V_101 F.1 flag663
	SELECTF flag663 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif656
  else656_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_LTEQF F.0 VLV_AENC_101 else656_2
    DATAF tmpf666
    DATA8 flag666
    DIVF VLV_V_101 2.0 tmpf666
    CP_EQF 0.0 2.0 flag666
    SELECTF flag666 0.0 tmpf666 F.3

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf669
    DATA8 flag669
    DIVF F.5 10.0 tmpf669
    CP_EQF 0.0 10.0 flag669
    SELECTF flag669 0.0 tmpf669 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag671
	CP_LTF VLV_V_101 F.2 flag671
	SELECTF flag671 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif656
  else656_2:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else656_3:
  endif656:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_GTEQF F.0 VLV_AENC_101 else675_1
    DATAF tmpf677
    DATA8 flag677
    DIVF VLV_V_101 2.0 tmpf677
    CP_EQF 0.0 2.0 flag677
    SELECTF flag677 0.0 tmpf677 F.2

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf680
    DATA8 flag680
    DIVF F.4 10.0 tmpf680
    CP_EQF 0.0 10.0 flag680
    SELECTF flag680 0.0 tmpf680 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag682
	CP_LTF VLV_V_101 F.1 flag682
	SELECTF flag682 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif675
  else675_1:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_LTEQF F.0 VLV_AENC_101 else675_2
    DATAF tmpf685
    DATA8 flag685
    DIVF VLV_V_101 2.0 tmpf685
    CP_EQF 0.0 2.0 flag685
    SELECTF flag685 0.0 tmpf685 F.3

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf688
    DATA8 flag688
    DIVF F.5 10.0 tmpf688
    CP_EQF 0.0 10.0 flag688
    SELECTF flag688 0.0 tmpf688 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag690
	CP_LTF VLV_V_101 F.2 flag690
	SELECTF flag690 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif675
  else675_2:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else675_3:
  endif675:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 whilebody652
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_NEQF F.0 VLV_AENC_101 whilebody652
  endwhile652:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEAD0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD0_1:
SUB_F_BMOVEADSAFE_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    MATH ABS VLV_DIFFA_104 F.5
    MATH ABS VLV_DIFFD_104 F.6
    DATA8 flag703
	CP_GTF F.5 F.6 flag703
	SELECTF flag703 F.5 F.6 F.4
    DATAF tmpf704
    DATA8 flag704
    DIVF F.4 100.0 tmpf704
    CP_EQF 0.0 100.0 flag704
    SELECTF flag704 0.0 tmpf704 F.3

    DATAF tmpf705
    DATA8 flag705
    DIVF VLV_V_104 20.0 tmpf705
    CP_EQF 0.0 20.0 flag705
    SELECTF flag705 0.0 tmpf705 F.4

    DATAF tmpf706
    DATA8 flag706
    DIVF F.3 F.4 tmpf706
    CP_EQF 0.0 F.4 flag706
    SELECTF flag706 0.0 tmpf706 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag709
	CP_GTF F.0 400.0 flag709
	SELECTF flag709 F.0 400.0 VLV_SAFETYTIMER_104
    MATH ABS VLV_DIFFA_104 F.0
    DATAF tmpf711
    DATA8 flag711
    DIVF VLV_DIFFA_104 F.0 tmpf711
    CP_EQF 0.0 F.0 flag711
    SELECTF flag711 0.0 tmpf711 VLV_SIGNOA_104

    MATH ABS VLV_DIFFD_104 F.0
    DATAF tmpf713
    DATA8 flag713
    DIVF VLV_DIFFD_104 F.0 tmpf713
    CP_EQF 0.0 F.0 flag713
    SELECTF flag713 0.0 tmpf713 VLV_SIGNOD_104

    MULF VLV_V_104 VLV_SIGNOA_104 VLV_VELA_104
    MULF VLV_V_104 VLV_SIGNOD_104 VLV_VELD_104
    CALL MOTOR.SCHEDULESYNC 'AD' VLV_VELA_104 VLV_VELD_104 5.0 'False'

	DATA8 layer716
	DATA8 nos716
	DATA8 busy716
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer716 nos716
	JR_EQ8 0 nos716 motornotbusy716
  motorwaiting716:
	OUTPUT_TEST layer716 nos716 busy716
	JR_EQ8 busy716 0 motornotbusy716
	SLEEP
	JR motorwaiting716
  motornotbusy716:
    CALL LCD.CLEAR
    TIMER_READ timeMC3
  while719:
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 or720
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_EQF F.0 0.0 endwhile719
  or720:
  whilebody719:
    MULF VLV_DIFFA_104 VLV_SIGNOA_104 F.0
    JR_LTEQF F.0 0.0 else723_1
    MOVEF_8 VLV_VELA_104 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif723
  else723_1:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else723_2:
  endif723:
    MULF VLV_DIFFD_104 VLV_SIGNOD_104 F.0
    JR_LTEQF F.0 0.0 else727_1
    MOVEF_8 VLV_VELD_104 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif727
  else727_1:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else727_2:
  endif727:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTEQF F.0 VLV_SAFETYTIMER_104 else731_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
  else731_1:
  endif731:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_104 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 whilebody719
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_NEQF F.0 0.0 whilebody719
  endwhile719:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEADSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEADSAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_105 F.0 VLV_ENCDIFF_105
    MATH ABS VLV_ENCDIFF_105 F.0
    DATAF tmpf748
    DATA8 flag748
    DIVF VLV_ENCDIFF_105 F.0 tmpf748
    CP_EQF 0.0 F.0 flag748
    SELECTF flag748 0.0 tmpf748 VLV_SIGNO_105

    JR_EQF VLV_ENCDIFF_105 0.0 else749_1
    MULF VLV_SIGNO_105 VLV_V_105 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while752:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile752
  whilebody752:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody752
  endwhile752:
    CALL MOTOR.STOP 'D' 'True'
  else749_1:
  endif749:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while761:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_108 endwhile761
  whilebody761:
    MOVEF_8 VLV_V_108 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_108 whilebody761
  endwhile761:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_109 F.0 VLV_ENCDIFF_109
    MATH ABS VLV_ENCDIFF_109 F.0
    DATAF tmpf769
    DATA8 flag769
    DIVF VLV_ENCDIFF_109 F.0 tmpf769
    CP_EQF 0.0 F.0 flag769
    SELECTF flag769 0.0 tmpf769 VLV_SIGNO_109

    MATH ABS VLV_ENCDIFF_109 F.4
    DATAF tmpf771
    DATA8 flag771
    DIVF F.4 100.0 tmpf771
    CP_EQF 0.0 100.0 flag771
    SELECTF flag771 0.0 tmpf771 F.3

    DATAF tmpf772
    DATA8 flag772
    DIVF VLV_V_109 20.0 tmpf772
    CP_EQF 0.0 20.0 flag772
    SELECTF flag772 0.0 tmpf772 F.4

    DATAF tmpf773
    DATA8 flag773
    DIVF F.3 F.4 tmpf773
    CP_EQF 0.0 F.4 flag773
    SELECTF flag773 0.0 tmpf773 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag776
	CP_GTF F.0 400.0 flag776
	SELECTF flag776 F.0 400.0 VLV_SAFETYTIMER_109
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_109 0.0 else778_1
  while779:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile779
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_109 endwhile779
  whilebody779:
    MULF VLV_SIGNO_109 VLV_V_109 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_109 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and790
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_109 whilebody779
  and790:
  endwhile779:
    CALL MOTOR.STOP 'D' 'True'
  else778_1:
  endif778:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer796
	DATA8 no796
	DATA8 mode8796
	
	MOVEF_8 1.0 no796
	SUB8 no796 1 no796
	DIV8 no796 4 layer796
	MATH MOD8 no796 4 no796

	MOVEF_8 4.0 mode8796
	
	INPUT_DEVICE READY_RAW layer796 no796 0 mode8796 0
    MOVEF_F 15.0 VLV_RED_110
    MOVEF_F 60.0 VLV_YELLOW_110
    MOVEF_F 170.0 VLV_GREEN_110
    MOVEF_F 330.0 VLV_BLUE_110
    MOVEF_F 10.0 VLV_VALUENEGRO_110
    MOVEF_F 100.0 VLV_VALUEBLANCO_110
    MOVEF_F 147.0 VLV_RWHITE_110
    MOVEF_F 143.0 VLV_GWHITE_110
    MOVEF_F 160.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    MOVEF_F 0.0 VLV_COLOR_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_110
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_110
  for802:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor802
  forbody802:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_110
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_110 VLV_RGB_110
    DATAF tmpf807
    DATA8 flag807
    DIVF VLV_RRAW_110 VLV_RWHITE_110 tmpf807
    CP_EQF 0.0 VLV_RWHITE_110 flag807
    SELECTF flag807 0.0 tmpf807 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    DATAF tmpf811
    DATA8 flag811
    DIVF VLV_GRAW_110 VLV_GWHITE_110 tmpf811
    CP_EQF 0.0 VLV_GWHITE_110 flag811
    SELECTF flag811 0.0 tmpf811 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    DATAF tmpf815
    DATA8 flag815
    DIVF VLV_BRAW_110 VLV_BWHITE_110 tmpf815
    CP_EQF 0.0 VLV_BWHITE_110 flag815
    SELECTF flag815 0.0 tmpf815 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_RNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.3 VLV_GNORMA_110
    DATA8 flag821
	CP_GTF F.2 F.3 flag821
	SELECTF flag821 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_BNORMA_110
    DATA8 flag823
	CP_GTF F.1 F.2 flag823
	SELECTF flag823 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    DATA32 milliseconds825
	MOVEF_32 5.0 milliseconds825
	DATA32 timer825
	TIMER_WAIT milliseconds825 timer825
	TIMER_READY timer825
    ADDF VLV_J_110 1.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody802
  endfor802:
    MOVEF_F 1.0 VLV_J_110
  for827:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor827
  forbody827:
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_110
    ADDF F.0 F.1 VLV_RNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_110
    ADDF F.0 F.1 VLV_GNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_110
    ADDF F.0 F.1 VLV_BNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_110
    ADDF F.0 F.1 VLV_MAX_110
    ADDF VLV_J_110 2.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody827
  endfor827:
    DATAF tmpf845
    DATA8 flag845
    DIVF VLV_RNORM_110 VLV_REPS_110 tmpf845
    CP_EQF 0.0 VLV_REPS_110 flag845
    SELECTF flag845 0.0 tmpf845 VLV_RNORM_110

    DATAF tmpf846
    DATA8 flag846
    DIVF VLV_GNORM_110 VLV_REPS_110 tmpf846
    CP_EQF 0.0 VLV_REPS_110 flag846
    SELECTF flag846 0.0 tmpf846 VLV_GNORM_110

    DATAF tmpf847
    DATA8 flag847
    DIVF VLV_BNORM_110 VLV_REPS_110 tmpf847
    CP_EQF 0.0 VLV_REPS_110 flag847
    SELECTF flag847 0.0 tmpf847 VLV_BNORM_110

    DATAF tmpf848
    DATA8 flag848
    DIVF VLV_MAX_110 VLV_REPS_110 tmpf848
    CP_EQF 0.0 VLV_REPS_110 flag848
    SELECTF flag848 0.0 tmpf848 VLV_MAX_110

    DATA8 flag849
	CP_LTF VLV_RNORM_110 VLV_GNORM_110 flag849
	SELECTF flag849 VLV_RNORM_110 VLV_GNORM_110 F.0
    DATA8 flag850
	CP_LTF F.0 VLV_BNORM_110 flag850
	SELECTF flag850 F.0 VLV_BNORM_110 VLV_MIN_110
    JR_NEQF VLV_MAX_110 VLV_MIN_110 else851_1
    MOVEF_F 0.0 VLV_HUE_110
    JR endif851
  else851_1:
    JR_NEQF VLV_MAX_110 VLV_RNORM_110 else851_2
    JR_LTF VLV_GNORM_110 VLV_BNORM_110 else852_1
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_110 VLV_MIN_110 F.1
    DATAF tmpf856
    DATA8 flag856
    DIVF F.0 F.1 tmpf856
    CP_EQF 0.0 F.1 flag856
    SELECTF flag856 0.0 tmpf856 VLV_HUE_110

    JR endif852
  else852_1:
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf860
    DATA8 flag860
    DIVF F.1 F.2 tmpf860
    CP_EQF 0.0 F.2 flag860
    SELECTF flag860 0.0 tmpf860 F.0

    ADDF F.0 360.0 VLV_HUE_110
  else852_2:
  endif852:
    JR endif851
  else851_2:
    JR_NEQF VLV_MAX_110 VLV_GNORM_110 else851_3
    SUBF VLV_BNORM_110 VLV_RNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf865
    DATA8 flag865
    DIVF F.1 F.2 tmpf865
    CP_EQF 0.0 F.2 flag865
    SELECTF flag865 0.0 tmpf865 F.0

    ADDF F.0 120.0 VLV_HUE_110
    JR endif851
  else851_3:
    SUBF VLV_RNORM_110 VLV_GNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf870
    DATA8 flag870
    DIVF F.1 F.2 tmpf870
    CP_EQF 0.0 F.2 flag870
    SELECTF flag870 0.0 tmpf870 F.0

    ADDF F.0 240.0 VLV_HUE_110
  else851_4:
  endif851:
    JR_NEQF VLV_MAX_110 0.0 else872_1
    MOVEF_F 0.0 VLV_SAT_110
    JR endif872
  else872_1:
    DATAF tmpf873
    DATA8 flag873
    DIVF VLV_MIN_110 VLV_MAX_110 tmpf873
    CP_EQF 0.0 VLV_MAX_110 flag873
    SELECTF flag873 0.0 tmpf873 F.0

    SUBF 1.0 F.0 VLV_SAT_110
  else872_2:
  endif872:
    MOVEF_F VLV_MAX_110 VLV_VALUE_110
    ADDF VLV_VALUEBLANCO_110 VLV_VALUENEGRO_110 F.0
    DATAF tmpf876
    DATA8 flag876
    DIVF F.0 2.0 tmpf876
    CP_EQF 0.0 2.0 flag876
    SELECTF flag876 0.0 tmpf876 VLV_RGBGREY_110

    ADDF VLV_RNORM_110 VLV_GNORM_110 F.1
    ADDF F.1 VLV_BNORM_110 F.0
    JR_GTF F.0 3.0 else877_1
    MOVEF_F 0.0 VLV_COLOR_110
    JR endif877
  else877_1:
    JR_GTEQF VLV_SAT_110 0.4 else880_1
    JR_LTEQF VLV_VALUE_110 VLV_RGBGREY_110 else881_1
    MOVEF_F 6.0 VLV_COLOR_110
    JR endif881
  else881_1:
    MOVEF_F 1.0 VLV_COLOR_110
  else881_2:
  endif881:
    JR endif880
  else880_1:
    JR_LTF VLV_HUE_110 0.0 else882_1
    JR_GTEQF VLV_HUE_110 VLV_RED_110 else882_1
    MOVEF_F 5.0 VLV_COLOR_110
    JR endif882
  else882_1:
    JR_LTF VLV_HUE_110 VLV_RED_110 else882_2
    JR_GTEQF VLV_HUE_110 VLV_YELLOW_110 else882_2
    MOVEF_F 4.0 VLV_COLOR_110
    JR endif882
  else882_2:
    JR_LTF VLV_HUE_110 VLV_YELLOW_110 else882_3
    JR_GTEQF VLV_HUE_110 VLV_GREEN_110 else882_3
    MOVEF_F 3.0 VLV_COLOR_110
    JR endif882
  else882_3:
    JR_LTF VLV_HUE_110 VLV_GREEN_110 else882_4
    JR_GTEQF VLV_HUE_110 VLV_BLUE_110 else882_4
    MOVEF_F 2.0 VLV_COLOR_110
    JR endif882
  else882_4:
    MOVEF_F 5.0 VLV_COLOR_110
  else882_5:
  endif882:
  else880_2:
  endif880:
  else877_2:
  endif877:
    STRINGS VALUE_FORMATTED VLV_RRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_110 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB898:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer899
	DATA8 no899
	DATA8 mode8899
	
	MOVEF_8 2.0 no899
	SUB8 no899 1 no899
	DIV8 no899 4 layer899
	MATH MOD8 no899 4 no899

	MOVEF_8 4.0 mode8899
	
	INPUT_DEVICE READY_RAW layer899 no899 0 mode8899 0
    MOVEF_F 15.0 VLV_RED_111
    MOVEF_F 60.0 VLV_YELLOW_111
    MOVEF_F 170.0 VLV_GREEN_111
    MOVEF_F 330.0 VLV_BLUE_111
    MOVEF_F 10.0 VLV_VALUENEGRO_111
    MOVEF_F 100.0 VLV_VALUEBLANCO_111
    MOVEF_F 147.0 VLV_RWHITE_111
    MOVEF_F 143.0 VLV_GWHITE_111
    MOVEF_F 160.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    MOVEF_F 0.0 VLV_COLOR_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_111
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_111
  for905:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor905
  forbody905:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_111
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_111 VLV_RGB_111
    DATAF tmpf910
    DATA8 flag910
    DIVF VLV_RRAW_111 VLV_RWHITE_111 tmpf910
    CP_EQF 0.0 VLV_RWHITE_111 flag910
    SELECTF flag910 0.0 tmpf910 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    DATAF tmpf914
    DATA8 flag914
    DIVF VLV_GRAW_111 VLV_GWHITE_111 tmpf914
    CP_EQF 0.0 VLV_GWHITE_111 flag914
    SELECTF flag914 0.0 tmpf914 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    DATAF tmpf918
    DATA8 flag918
    DIVF VLV_BRAW_111 VLV_BWHITE_111 tmpf918
    CP_EQF 0.0 VLV_BWHITE_111 flag918
    SELECTF flag918 0.0 tmpf918 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_RNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.3 VLV_GNORMA_111
    DATA8 flag924
	CP_GTF F.2 F.3 flag924
	SELECTF flag924 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_BNORMA_111
    DATA8 flag926
	CP_GTF F.1 F.2 flag926
	SELECTF flag926 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    DATA32 milliseconds928
	MOVEF_32 5.0 milliseconds928
	DATA32 timer928
	TIMER_WAIT milliseconds928 timer928
	TIMER_READY timer928
    ADDF VLV_J_111 1.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody905
  endfor905:
    MOVEF_F 1.0 VLV_J_111
  for930:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor930
  forbody930:
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_111
    ADDF F.0 F.1 VLV_RNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_111
    ADDF F.0 F.1 VLV_GNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_111
    ADDF F.0 F.1 VLV_BNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_111
    ADDF F.0 F.1 VLV_MAX_111
    ADDF VLV_J_111 2.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody930
  endfor930:
    DATAF tmpf948
    DATA8 flag948
    DIVF VLV_RNORM_111 VLV_REPS_111 tmpf948
    CP_EQF 0.0 VLV_REPS_111 flag948
    SELECTF flag948 0.0 tmpf948 VLV_RNORM_111

    DATAF tmpf949
    DATA8 flag949
    DIVF VLV_GNORM_111 VLV_REPS_111 tmpf949
    CP_EQF 0.0 VLV_REPS_111 flag949
    SELECTF flag949 0.0 tmpf949 VLV_GNORM_111

    DATAF tmpf950
    DATA8 flag950
    DIVF VLV_BNORM_111 VLV_REPS_111 tmpf950
    CP_EQF 0.0 VLV_REPS_111 flag950
    SELECTF flag950 0.0 tmpf950 VLV_BNORM_111

    DATAF tmpf951
    DATA8 flag951
    DIVF VLV_MAX_111 VLV_REPS_111 tmpf951
    CP_EQF 0.0 VLV_REPS_111 flag951
    SELECTF flag951 0.0 tmpf951 VLV_MAX_111

    DATA8 flag952
	CP_LTF VLV_RNORM_111 VLV_GNORM_111 flag952
	SELECTF flag952 VLV_RNORM_111 VLV_GNORM_111 F.0
    DATA8 flag953
	CP_LTF F.0 VLV_BNORM_111 flag953
	SELECTF flag953 F.0 VLV_BNORM_111 VLV_MIN_111
    JR_NEQF VLV_MAX_111 VLV_MIN_111 else954_1
    MOVEF_F 0.0 VLV_HUE_111
    JR endif954
  else954_1:
    JR_NEQF VLV_MAX_111 VLV_RNORM_111 else954_2
    JR_LTF VLV_GNORM_111 VLV_BNORM_111 else955_1
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_111 VLV_MIN_111 F.1
    DATAF tmpf959
    DATA8 flag959
    DIVF F.0 F.1 tmpf959
    CP_EQF 0.0 F.1 flag959
    SELECTF flag959 0.0 tmpf959 VLV_HUE_111

    JR endif955
  else955_1:
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf963
    DATA8 flag963
    DIVF F.1 F.2 tmpf963
    CP_EQF 0.0 F.2 flag963
    SELECTF flag963 0.0 tmpf963 F.0

    ADDF F.0 360.0 VLV_HUE_111
  else955_2:
  endif955:
    JR endif954
  else954_2:
    JR_NEQF VLV_MAX_111 VLV_GNORM_111 else954_3
    SUBF VLV_BNORM_111 VLV_RNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf968
    DATA8 flag968
    DIVF F.1 F.2 tmpf968
    CP_EQF 0.0 F.2 flag968
    SELECTF flag968 0.0 tmpf968 F.0

    ADDF F.0 120.0 VLV_HUE_111
    JR endif954
  else954_3:
    SUBF VLV_RNORM_111 VLV_GNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf973
    DATA8 flag973
    DIVF F.1 F.2 tmpf973
    CP_EQF 0.0 F.2 flag973
    SELECTF flag973 0.0 tmpf973 F.0

    ADDF F.0 240.0 VLV_HUE_111
  else954_4:
  endif954:
    JR_NEQF VLV_MAX_111 0.0 else975_1
    MOVEF_F 0.0 VLV_SAT_111
    JR endif975
  else975_1:
    DATAF tmpf976
    DATA8 flag976
    DIVF VLV_MIN_111 VLV_MAX_111 tmpf976
    CP_EQF 0.0 VLV_MAX_111 flag976
    SELECTF flag976 0.0 tmpf976 F.0

    SUBF 1.0 F.0 VLV_SAT_111
  else975_2:
  endif975:
    MOVEF_F VLV_MAX_111 VLV_VALUE_111
    ADDF VLV_VALUEBLANCO_111 VLV_VALUENEGRO_111 F.0
    DATAF tmpf979
    DATA8 flag979
    DIVF F.0 2.0 tmpf979
    CP_EQF 0.0 2.0 flag979
    SELECTF flag979 0.0 tmpf979 VLV_RGBGREY_111

    ADDF VLV_RNORM_111 VLV_GNORM_111 F.1
    ADDF F.1 VLV_BNORM_111 F.0
    JR_GTF F.0 3.0 else980_1
    MOVEF_F 0.0 VLV_COLOR_111
    JR endif980
  else980_1:
    JR_GTEQF VLV_SAT_111 0.4 else983_1
    JR_LTEQF VLV_VALUE_111 VLV_RGBGREY_111 else984_1
    MOVEF_F 6.0 VLV_COLOR_111
    JR endif984
  else984_1:
    MOVEF_F 1.0 VLV_COLOR_111
  else984_2:
  endif984:
    JR endif983
  else983_1:
    JR_LTF VLV_HUE_111 0.0 else985_1
    JR_GTEQF VLV_HUE_111 VLV_RED_111 else985_1
    MOVEF_F 5.0 VLV_COLOR_111
    JR endif985
  else985_1:
    JR_LTF VLV_HUE_111 VLV_RED_111 else985_2
    JR_GTEQF VLV_HUE_111 VLV_YELLOW_111 else985_2
    MOVEF_F 4.0 VLV_COLOR_111
    JR endif985
  else985_2:
    JR_LTF VLV_HUE_111 VLV_YELLOW_111 else985_3
    JR_GTEQF VLV_HUE_111 VLV_GREEN_111 else985_3
    MOVEF_F 3.0 VLV_COLOR_111
    JR endif985
  else985_3:
    JR_LTF VLV_HUE_111 VLV_GREEN_111 else985_4
    JR_GTEQF VLV_HUE_111 VLV_BLUE_111 else985_4
    MOVEF_F 2.0 VLV_COLOR_111
    JR endif985
  else985_4:
    MOVEF_F 5.0 VLV_COLOR_111
  else985_5:
  endif985:
  else983_2:
  endif983:
  else980_2:
  endif980:
    STRINGS VALUE_FORMATTED VLV_RRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_111 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1001:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer1002
	DATA8 no1002
	DATA8 mode81002
	
	MOVEF_8 3.0 no1002
	SUB8 no1002 1 no1002
	DIV8 no1002 4 layer1002
	MATH MOD8 no1002 4 no1002

	MOVEF_8 4.0 mode81002
	
	INPUT_DEVICE READY_RAW layer1002 no1002 0 mode81002 0
    MOVEF_F 15.0 VLV_RED_112
    MOVEF_F 60.0 VLV_YELLOW_112
    MOVEF_F 170.0 VLV_GREEN_112
    MOVEF_F 330.0 VLV_BLUE_112
    MOVEF_F 10.0 VLV_VALUENEGRO_112
    MOVEF_F 100.0 VLV_VALUEBLANCO_112
    MOVEF_F 147.0 VLV_RWHITE_112
    MOVEF_F 143.0 VLV_GWHITE_112
    MOVEF_F 160.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    MOVEF_F 0.0 VLV_COLOR_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_112
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_112
  for1008:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1008
  forbody1008:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_112
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_112 VLV_RGB_112
    DATAF tmpf1013
    DATA8 flag1013
    DIVF VLV_RRAW_112 VLV_RWHITE_112 tmpf1013
    CP_EQF 0.0 VLV_RWHITE_112 flag1013
    SELECTF flag1013 0.0 tmpf1013 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    DATAF tmpf1017
    DATA8 flag1017
    DIVF VLV_GRAW_112 VLV_GWHITE_112 tmpf1017
    CP_EQF 0.0 VLV_GWHITE_112 flag1017
    SELECTF flag1017 0.0 tmpf1017 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    DATAF tmpf1021
    DATA8 flag1021
    DIVF VLV_BRAW_112 VLV_BWHITE_112 tmpf1021
    CP_EQF 0.0 VLV_BWHITE_112 flag1021
    SELECTF flag1021 0.0 tmpf1021 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_RNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.3 VLV_GNORMA_112
    DATA8 flag1027
	CP_GTF F.2 F.3 flag1027
	SELECTF flag1027 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_BNORMA_112
    DATA8 flag1029
	CP_GTF F.1 F.2 flag1029
	SELECTF flag1029 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    DATA32 milliseconds1031
	MOVEF_32 5.0 milliseconds1031
	DATA32 timer1031
	TIMER_WAIT milliseconds1031 timer1031
	TIMER_READY timer1031
    ADDF VLV_J_112 1.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1008
  endfor1008:
    MOVEF_F 1.0 VLV_J_112
  for1033:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1033
  forbody1033:
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_112
    ADDF F.0 F.1 VLV_RNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_112
    ADDF F.0 F.1 VLV_GNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_112
    ADDF F.0 F.1 VLV_BNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_112
    ADDF F.0 F.1 VLV_MAX_112
    ADDF VLV_J_112 2.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1033
  endfor1033:
    DATAF tmpf1051
    DATA8 flag1051
    DIVF VLV_RNORM_112 VLV_REPS_112 tmpf1051
    CP_EQF 0.0 VLV_REPS_112 flag1051
    SELECTF flag1051 0.0 tmpf1051 VLV_RNORM_112

    DATAF tmpf1052
    DATA8 flag1052
    DIVF VLV_GNORM_112 VLV_REPS_112 tmpf1052
    CP_EQF 0.0 VLV_REPS_112 flag1052
    SELECTF flag1052 0.0 tmpf1052 VLV_GNORM_112

    DATAF tmpf1053
    DATA8 flag1053
    DIVF VLV_BNORM_112 VLV_REPS_112 tmpf1053
    CP_EQF 0.0 VLV_REPS_112 flag1053
    SELECTF flag1053 0.0 tmpf1053 VLV_BNORM_112

    DATAF tmpf1054
    DATA8 flag1054
    DIVF VLV_MAX_112 VLV_REPS_112 tmpf1054
    CP_EQF 0.0 VLV_REPS_112 flag1054
    SELECTF flag1054 0.0 tmpf1054 VLV_MAX_112

    DATA8 flag1055
	CP_LTF VLV_RNORM_112 VLV_GNORM_112 flag1055
	SELECTF flag1055 VLV_RNORM_112 VLV_GNORM_112 F.0
    DATA8 flag1056
	CP_LTF F.0 VLV_BNORM_112 flag1056
	SELECTF flag1056 F.0 VLV_BNORM_112 VLV_MIN_112
    JR_NEQF VLV_MAX_112 VLV_MIN_112 else1057_1
    MOVEF_F 0.0 VLV_HUE_112
    JR endif1057
  else1057_1:
    JR_NEQF VLV_MAX_112 VLV_RNORM_112 else1057_2
    JR_LTF VLV_GNORM_112 VLV_BNORM_112 else1058_1
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_112 VLV_MIN_112 F.1
    DATAF tmpf1062
    DATA8 flag1062
    DIVF F.0 F.1 tmpf1062
    CP_EQF 0.0 F.1 flag1062
    SELECTF flag1062 0.0 tmpf1062 VLV_HUE_112

    JR endif1058
  else1058_1:
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1066
    DATA8 flag1066
    DIVF F.1 F.2 tmpf1066
    CP_EQF 0.0 F.2 flag1066
    SELECTF flag1066 0.0 tmpf1066 F.0

    ADDF F.0 360.0 VLV_HUE_112
  else1058_2:
  endif1058:
    JR endif1057
  else1057_2:
    JR_NEQF VLV_MAX_112 VLV_GNORM_112 else1057_3
    SUBF VLV_BNORM_112 VLV_RNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1071
    DATA8 flag1071
    DIVF F.1 F.2 tmpf1071
    CP_EQF 0.0 F.2 flag1071
    SELECTF flag1071 0.0 tmpf1071 F.0

    ADDF F.0 120.0 VLV_HUE_112
    JR endif1057
  else1057_3:
    SUBF VLV_RNORM_112 VLV_GNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1076
    DATA8 flag1076
    DIVF F.1 F.2 tmpf1076
    CP_EQF 0.0 F.2 flag1076
    SELECTF flag1076 0.0 tmpf1076 F.0

    ADDF F.0 240.0 VLV_HUE_112
  else1057_4:
  endif1057:
    JR_NEQF VLV_MAX_112 0.0 else1078_1
    MOVEF_F 0.0 VLV_SAT_112
    JR endif1078
  else1078_1:
    DATAF tmpf1079
    DATA8 flag1079
    DIVF VLV_MIN_112 VLV_MAX_112 tmpf1079
    CP_EQF 0.0 VLV_MAX_112 flag1079
    SELECTF flag1079 0.0 tmpf1079 F.0

    SUBF 1.0 F.0 VLV_SAT_112
  else1078_2:
  endif1078:
    MOVEF_F VLV_MAX_112 VLV_VALUE_112
    ADDF VLV_VALUEBLANCO_112 VLV_VALUENEGRO_112 F.0
    DATAF tmpf1082
    DATA8 flag1082
    DIVF F.0 2.0 tmpf1082
    CP_EQF 0.0 2.0 flag1082
    SELECTF flag1082 0.0 tmpf1082 VLV_RGBGREY_112

    ADDF VLV_RNORM_112 VLV_GNORM_112 F.1
    ADDF F.1 VLV_BNORM_112 F.0
    JR_GTF F.0 3.0 else1083_1
    MOVEF_F 0.0 VLV_COLOR_112
    JR endif1083
  else1083_1:
    JR_GTEQF VLV_SAT_112 0.4 else1086_1
    JR_LTEQF VLV_VALUE_112 VLV_RGBGREY_112 else1087_1
    MOVEF_F 6.0 VLV_COLOR_112
    JR endif1087
  else1087_1:
    MOVEF_F 1.0 VLV_COLOR_112
  else1087_2:
  endif1087:
    JR endif1086
  else1086_1:
    JR_LTF VLV_HUE_112 0.0 else1088_1
    JR_GTEQF VLV_HUE_112 VLV_RED_112 else1088_1
    MOVEF_F 5.0 VLV_COLOR_112
    JR endif1088
  else1088_1:
    JR_LTF VLV_HUE_112 VLV_RED_112 else1088_2
    JR_GTEQF VLV_HUE_112 VLV_YELLOW_112 else1088_2
    MOVEF_F 4.0 VLV_COLOR_112
    JR endif1088
  else1088_2:
    JR_LTF VLV_HUE_112 VLV_YELLOW_112 else1088_3
    JR_GTEQF VLV_HUE_112 VLV_GREEN_112 else1088_3
    MOVEF_F 3.0 VLV_COLOR_112
    JR endif1088
  else1088_3:
    JR_LTF VLV_HUE_112 VLV_GREEN_112 else1088_4
    JR_GTEQF VLV_HUE_112 VLV_BLUE_112 else1088_4
    MOVEF_F 2.0 VLV_COLOR_112
    JR endif1088
  else1088_4:
    MOVEF_F 5.0 VLV_COLOR_112
  else1088_5:
  endif1088:
  else1086_2:
  endif1086:
  else1083_2:
  endif1083:
    STRINGS VALUE_FORMATTED VLV_RRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_112 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1104:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer1105
	DATA8 no1105
	DATA8 mode81105
	
	MOVEF_8 4.0 no1105
	SUB8 no1105 1 no1105
	DIV8 no1105 4 layer1105
	MATH MOD8 no1105 4 no1105

	MOVEF_8 4.0 mode81105
	
	INPUT_DEVICE READY_RAW layer1105 no1105 0 mode81105 0
    MOVEF_F 15.0 VLV_RED_113
    MOVEF_F 60.0 VLV_YELLOW_113
    MOVEF_F 170.0 VLV_GREEN_113
    MOVEF_F 330.0 VLV_BLUE_113
    MOVEF_F 10.0 VLV_VALUENEGRO_113
    MOVEF_F 100.0 VLV_VALUEBLANCO_113
    MOVEF_F 147.0 VLV_RWHITE_113
    MOVEF_F 143.0 VLV_GWHITE_113
    MOVEF_F 160.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_113
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_113
  for1111:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1111
  forbody1111:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_113
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_113 VLV_RGB_113
    DATAF tmpf1116
    DATA8 flag1116
    DIVF VLV_RRAW_113 VLV_RWHITE_113 tmpf1116
    CP_EQF 0.0 VLV_RWHITE_113 flag1116
    SELECTF flag1116 0.0 tmpf1116 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    DATAF tmpf1120
    DATA8 flag1120
    DIVF VLV_GRAW_113 VLV_GWHITE_113 tmpf1120
    CP_EQF 0.0 VLV_GWHITE_113 flag1120
    SELECTF flag1120 0.0 tmpf1120 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    DATAF tmpf1124
    DATA8 flag1124
    DIVF VLV_BRAW_113 VLV_BWHITE_113 tmpf1124
    CP_EQF 0.0 VLV_BWHITE_113 flag1124
    SELECTF flag1124 0.0 tmpf1124 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_RNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.3 VLV_GNORMA_113
    DATA8 flag1130
	CP_GTF F.2 F.3 flag1130
	SELECTF flag1130 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_BNORMA_113
    DATA8 flag1132
	CP_GTF F.1 F.2 flag1132
	SELECTF flag1132 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    DATA32 milliseconds1134
	MOVEF_32 5.0 milliseconds1134
	DATA32 timer1134
	TIMER_WAIT milliseconds1134 timer1134
	TIMER_READY timer1134
    ADDF VLV_J_113 1.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1111
  endfor1111:
    MOVEF_F 1.0 VLV_J_113
  for1136:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1136
  forbody1136:
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_113
    ADDF F.0 F.1 VLV_RNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_113
    ADDF F.0 F.1 VLV_GNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_113
    ADDF F.0 F.1 VLV_BNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_113
    ADDF F.0 F.1 VLV_MAX_113
    ADDF VLV_J_113 2.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1136
  endfor1136:
    DATAF tmpf1154
    DATA8 flag1154
    DIVF VLV_RNORM_113 VLV_REPS_113 tmpf1154
    CP_EQF 0.0 VLV_REPS_113 flag1154
    SELECTF flag1154 0.0 tmpf1154 VLV_RNORM_113

    DATAF tmpf1155
    DATA8 flag1155
    DIVF VLV_GNORM_113 VLV_REPS_113 tmpf1155
    CP_EQF 0.0 VLV_REPS_113 flag1155
    SELECTF flag1155 0.0 tmpf1155 VLV_GNORM_113

    DATAF tmpf1156
    DATA8 flag1156
    DIVF VLV_BNORM_113 VLV_REPS_113 tmpf1156
    CP_EQF 0.0 VLV_REPS_113 flag1156
    SELECTF flag1156 0.0 tmpf1156 VLV_BNORM_113

    DATAF tmpf1157
    DATA8 flag1157
    DIVF VLV_MAX_113 VLV_REPS_113 tmpf1157
    CP_EQF 0.0 VLV_REPS_113 flag1157
    SELECTF flag1157 0.0 tmpf1157 VLV_MAX_113

    DATA8 flag1158
	CP_LTF VLV_RNORM_113 VLV_GNORM_113 flag1158
	SELECTF flag1158 VLV_RNORM_113 VLV_GNORM_113 F.0
    DATA8 flag1159
	CP_LTF F.0 VLV_BNORM_113 flag1159
	SELECTF flag1159 F.0 VLV_BNORM_113 VLV_MIN_113
    JR_NEQF VLV_MAX_113 VLV_MIN_113 else1160_1
    MOVEF_F 0.0 VLV_HUE_113
    JR endif1160
  else1160_1:
    JR_NEQF VLV_MAX_113 VLV_RNORM_113 else1160_2
    JR_LTF VLV_GNORM_113 VLV_BNORM_113 else1161_1
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_113 VLV_MIN_113 F.1
    DATAF tmpf1165
    DATA8 flag1165
    DIVF F.0 F.1 tmpf1165
    CP_EQF 0.0 F.1 flag1165
    SELECTF flag1165 0.0 tmpf1165 VLV_HUE_113

    JR endif1161
  else1161_1:
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1169
    DATA8 flag1169
    DIVF F.1 F.2 tmpf1169
    CP_EQF 0.0 F.2 flag1169
    SELECTF flag1169 0.0 tmpf1169 F.0

    ADDF F.0 360.0 VLV_HUE_113
  else1161_2:
  endif1161:
    JR endif1160
  else1160_2:
    JR_NEQF VLV_MAX_113 VLV_GNORM_113 else1160_3
    SUBF VLV_BNORM_113 VLV_RNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1174
    DATA8 flag1174
    DIVF F.1 F.2 tmpf1174
    CP_EQF 0.0 F.2 flag1174
    SELECTF flag1174 0.0 tmpf1174 F.0

    ADDF F.0 120.0 VLV_HUE_113
    JR endif1160
  else1160_3:
    SUBF VLV_RNORM_113 VLV_GNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1179
    DATA8 flag1179
    DIVF F.1 F.2 tmpf1179
    CP_EQF 0.0 F.2 flag1179
    SELECTF flag1179 0.0 tmpf1179 F.0

    ADDF F.0 240.0 VLV_HUE_113
  else1160_4:
  endif1160:
    JR_NEQF VLV_MAX_113 0.0 else1181_1
    MOVEF_F 0.0 VLV_SAT_113
    JR endif1181
  else1181_1:
    DATAF tmpf1182
    DATA8 flag1182
    DIVF VLV_MIN_113 VLV_MAX_113 tmpf1182
    CP_EQF 0.0 VLV_MAX_113 flag1182
    SELECTF flag1182 0.0 tmpf1182 F.0

    SUBF 1.0 F.0 VLV_SAT_113
  else1181_2:
  endif1181:
    MOVEF_F VLV_MAX_113 VLV_VALUE_113
    ADDF VLV_VALUEBLANCO_113 VLV_VALUENEGRO_113 F.0
    DATAF tmpf1185
    DATA8 flag1185
    DIVF F.0 2.0 tmpf1185
    CP_EQF 0.0 2.0 flag1185
    SELECTF flag1185 0.0 tmpf1185 VLV_RGBGREY_113

    ADDF VLV_RNORM_113 VLV_GNORM_113 F.1
    ADDF F.1 VLV_BNORM_113 F.0
    JR_GTF F.0 3.0 else1186_1
    MOVEF_F 0.0 VLV_COLOR_113
    JR endif1186
  else1186_1:
    JR_GTEQF VLV_SAT_113 0.4 else1189_1
    JR_LTEQF VLV_VALUE_113 VLV_RGBGREY_113 else1190_1
    MOVEF_F 6.0 VLV_COLOR_113
    JR endif1190
  else1190_1:
    MOVEF_F 1.0 VLV_COLOR_113
  else1190_2:
  endif1190:
    JR endif1189
  else1189_1:
    JR_LTF VLV_HUE_113 0.0 else1191_1
    JR_GTEQF VLV_HUE_113 VLV_RED_113 else1191_1
    MOVEF_F 5.0 VLV_COLOR_113
    JR endif1191
  else1191_1:
    JR_LTF VLV_HUE_113 VLV_RED_113 else1191_2
    JR_GTEQF VLV_HUE_113 VLV_YELLOW_113 else1191_2
    MOVEF_F 4.0 VLV_COLOR_113
    JR endif1191
  else1191_2:
    JR_LTF VLV_HUE_113 VLV_YELLOW_113 else1191_3
    JR_GTEQF VLV_HUE_113 VLV_GREEN_113 else1191_3
    MOVEF_F 3.0 VLV_COLOR_113
    JR endif1191
  else1191_3:
    JR_LTF VLV_HUE_113 VLV_GREEN_113 else1191_4
    JR_GTEQF VLV_HUE_113 VLV_BLUE_113 else1191_4
    MOVEF_F 2.0 VLV_COLOR_113
    JR endif1191
  else1191_4:
    MOVEF_F 5.0 VLV_COLOR_113
  else1191_5:
  endif1191:
  else1189_2:
  endif1189:
  else1186_2:
  endif1186:
    STRINGS VALUE_FORMATTED VLV_RRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_113 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1207:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_122 0.0 else1208_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1208
  else1208_1:
    JR_NEQF VLV_COLOR_122 1.0 else1208_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1208
  else1208_2:
    JR_NEQF VLV_COLOR_122 2.0 else1208_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1208
  else1208_3:
    JR_NEQF VLV_COLOR_122 3.0 else1208_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1208
  else1208_4:
    JR_NEQF VLV_COLOR_122 4.0 else1208_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1208
  else1208_5:
    JR_NEQF VLV_COLOR_122 5.0 else1208_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1208
  else1208_6:
    JR_NEQF VLV_COLOR_122 6.0 else1208_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1208
  else1208_7:
    JR_NEQF VLV_COLOR_122 7.0 else1208_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1208_8:
  endif1208:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_ABAJO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1217:
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -220.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1218:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1219:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 350.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1220:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -300.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1221:
RETSUB_F_COGER_ABAJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_0:
SUB_F_COGER_ARRIBA_0:
    MOVEF_F -20.0 VLV_VELOCIDAD_1
    MOVEF_F 5.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1222:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -670.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1223:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -200.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1224:
    MOVEF_F -10.0 VLV_VELOCIDAD_1
    MOVEF_F 0.75 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1225:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -770.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1226:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1227:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 200.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1228:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -400.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1229:
RETSUB_F_COGER_ARRIBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ARRIBA_0:
SUB_F_SOLTAR_TODO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1230:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -750.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1231:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1232:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1233:
RETSUB_F_SOLTAR_TODO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_TODO_0:
SUB_F_LECTURA_1:
    MOVEF_F 15.0 VLV_V_95
    MOVEF_F -650.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1234:
    MOVEF_F 5.0 VLV_REPS_111
    WRITE32 ENDSUB_F_RGBDETECT2_2:CALLSUB1235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RGBDETECT2_2
CALLSUB1235:
    MOVEF_F VLV_COLOR_111 VLV_READ_130
    MOVEF_F VLV_READ_130 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1236:
    MOVEF_F 15.0 VLV_V_95
    MOVEF_F -200.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1237:
RETSUB_F_LECTURA_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LECTURA_1:
SUB_F_TRASPMATVECT3X3_2:
    CALL VECTOR.INIT 9.0 0.0 VLV_S_131
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M_131
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_131
    CALL ARRAYGET_FLOAT 3.0 F.0 VLV_M_131
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_131
    CALL ARRAYGET_FLOAT 6.0 F.0 VLV_M_131
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_131
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M_131
    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_131
    CALL ARRAYGET_FLOAT 4.0 F.0 VLV_M_131
    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_131
    CALL ARRAYGET_FLOAT 7.0 F.0 VLV_M_131
    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_131
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M_131
    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_131
    CALL ARRAYGET_FLOAT 5.0 F.0 VLV_M_131
    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_131
    CALL ARRAYGET_FLOAT 8.0 F.0 VLV_M_131
    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_131
RETSUB_F_TRASPMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TRASPMATVECT3X3_2:
SUB_F_INVMATVECT3X3_2:
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_M_132
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_132
    CALL ARRAYGET_FLOAT 8.0 F.6 VLV_M_132
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 5.0 F.6 VLV_M_132
    CALL ARRAYGET_FLOAT 7.0 F.7 VLV_M_132
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_132
    CALL ARRAYGET_FLOAT 3.0 F.6 VLV_M_132
    CALL ARRAYGET_FLOAT 8.0 F.7 VLV_M_132
    MULF F.6 F.7 F.5
    CALL ARRAYGET_FLOAT 5.0 F.7 VLV_M_132
    CALL ARRAYGET_FLOAT 6.0 F.8 VLV_M_132
    MULF F.7 F.8 F.6
    SUBF F.5 F.6 F.4
    MULF F.3 F.4 F.2
    SUBF F.1 F.2 F.0
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_M_132
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_132
    CALL ARRAYGET_FLOAT 7.0 F.6 VLV_M_132
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 4.0 F.6 VLV_M_132
    CALL ARRAYGET_FLOAT 6.0 F.7 VLV_M_132
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    ADDF F.0 F.1 VLV_DETERMINANTE_132
    JR_EQF VLV_DETERMINANTE_132 0.0 else1286_1
    CALL ARRAYGET_FLOAT 4.0 F.3 VLV_M_132
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_132
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_132
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_132
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1294
    DATA8 flag1294
    DIVF F.1 VLV_DETERMINANTE_132 tmpf1294
    CP_EQF 0.0 VLV_DETERMINANTE_132 flag1294
    SELECTF flag1294 0.0 tmpf1294 F.0

    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_132
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_132
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_132
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_132
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1303
    DATA8 flag1303
    DIVF F.1 VLV_DETERMINANTE_132 tmpf1303
    CP_EQF 0.0 VLV_DETERMINANTE_132 flag1303
    SELECTF flag1303 0.0 tmpf1303 F.0

    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_132
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_132
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_132
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_132
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1312
    DATA8 flag1312
    DIVF F.1 VLV_DETERMINANTE_132 tmpf1312
    CP_EQF 0.0 VLV_DETERMINANTE_132 flag1312
    SELECTF flag1312 0.0 tmpf1312 F.0

    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_132
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_132
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_132
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_132
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1321
    DATA8 flag1321
    DIVF F.1 VLV_DETERMINANTE_132 tmpf1321
    CP_EQF 0.0 VLV_DETERMINANTE_132 flag1321
    SELECTF flag1321 0.0 tmpf1321 F.0

    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_132
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_132
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_132
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_132
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1330
    DATA8 flag1330
    DIVF F.1 VLV_DETERMINANTE_132 tmpf1330
    CP_EQF 0.0 VLV_DETERMINANTE_132 flag1330
    SELECTF flag1330 0.0 tmpf1330 F.0

    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_132
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_132
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_132
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_132
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1339
    DATA8 flag1339
    DIVF F.1 VLV_DETERMINANTE_132 tmpf1339
    CP_EQF 0.0 VLV_DETERMINANTE_132 flag1339
    SELECTF flag1339 0.0 tmpf1339 F.0

    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_132
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_132
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_132
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_132
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1348
    DATA8 flag1348
    DIVF F.1 VLV_DETERMINANTE_132 tmpf1348
    CP_EQF 0.0 VLV_DETERMINANTE_132 flag1348
    SELECTF flag1348 0.0 tmpf1348 F.0

    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_132
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_132
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_132
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_132
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1357
    DATA8 flag1357
    DIVF F.1 VLV_DETERMINANTE_132 tmpf1357
    CP_EQF 0.0 VLV_DETERMINANTE_132 flag1357
    SELECTF flag1357 0.0 tmpf1357 F.0

    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_132
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_132
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_132
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_132
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1366
    DATA8 flag1366
    DIVF F.1 VLV_DETERMINANTE_132 tmpf1366
    CP_EQF 0.0 VLV_DETERMINANTE_132 flag1366
    SELECTF flag1366 0.0 tmpf1366 F.0

    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_132
  else1286_1:
  endif1286:
RETSUB_F_INVMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_INVMATVECT3X3_2:
SUB_F_MULTIMATRIZCOEF_3:
    MOVEF_F 0.0 VLV_I_133
  while1368:
    CALL ARRAYGET_FLOAT VLV_I_133 F.0 VLV_M_133
    JR_EQF F.0 0.0 endwhile1368
  whilebody1368:
    CALL ARRAYGET_FLOAT VLV_I_133 F.1 VLV_M_133
    MULF VLV_K_133 F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_I_133 F.0 VLV_S_133
    ADDF VLV_I_133 1.0 VLV_I_133
    CALL ARRAYGET_FLOAT VLV_I_133 F.0 VLV_M_133
    JR_NEQF F.0 0.0 whilebody1368
  endwhile1368:
RETSUB_F_MULTIMATRIZCOEF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MULTIMATRIZCOEF_3:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall VECTOR.INIT       // FFA
{
	IN_F size
	IN_F value
	IN_16 a

	DATA32 size32
	MOVEF_32 size size32
	JR_LTEQ32 size32 0 empty

	ARRAY RESIZE a size32
	ARRAY FILL a value
	RETURN

empty:
    ARRAY RESIZE a 0
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
