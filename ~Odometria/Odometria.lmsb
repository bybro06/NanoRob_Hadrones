DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_DEGREES_PER_SECOND_45
DATAF VLV_DEGREES_PER_SECOND_44
DATAF VLV_OMEGAI_K1_33
DATAF VLV_OMEGAD_K1_33
DATAF VLV_V1_35
DATAF VLV_V2_35
DATAF VLV_ANGLE_35
DATAF VLV_DEGREES_PER_SECOND_42
DATAF VLV_DEGREES_42
DATAF VLV_VELOCIDAD_19
DATAF VLV_DISTANCIA_19
DATAF VLV_DEGREES_PER_SECOND_40
DATAF VLV_DEGREES_40
DATAF VLV_DEGREES_PER_SECOND_A_43
DATAF VLV_DEGREES_PER_SECOND_D_43
DATAF VLV_DEGREES_A_43
DATAF VLV_DEGREES_D_43
DATAF VLV_DEGREES_PER_SECOND_A_46
DATAF VLV_DEGREES_PER_SECOND_D_46
DATAF VLV_V0_14
DATAF VLV_VMAX_14
DATAF VLV_KP_14
DATAF VLV_KI_14
DATAF VLV_KD_14
DATAF VLV_ACCELENCODER_14
ARRAY16 VLV_M1_39 2
ARRAY16 VLV_M2_39 2
ARRAY16 VLV_M3_39 2
ARRAY16 VLV_N1_39 2
ARRAY16 VLV_N2_39 2
ARRAY16 VLV_N3_39 2
ARRAY16 VLV_S1_39 2
ARRAY16 VLV_S2_39 2
ARRAY16 VLV_S3_39 2
ARRAY16 VLV_M1_38 2
ARRAY16 VLV_M2_38 2
ARRAY16 VLV_M3_38 2
ARRAY16 VLV_S1_38 2
ARRAY16 VLV_S2_38 2
ARRAY16 VLV_S3_38 2
ARRAY16 VLV_M1_37 2
ARRAY16 VLV_M2_37 2
ARRAY16 VLV_M3_37 2
ARRAY16 VLV_N1_37 2
ARRAY16 VLV_N2_37 2
ARRAY16 VLV_N3_37 2
ARRAY16 VLV_S1_37 2
ARRAY16 VLV_S2_37 2
ARRAY16 VLV_S3_37 2
ARRAY16 VLV_U1_33 2
ARRAY16 VLV_U2_33 2
ARRAY16 VLV_U3_33 2
ARRAY16 VLV_V1_33 2
ARRAY16 VLV_V2_33 2
ARRAY16 VLV_V3_33 2
ARRAY16 VLV_W1_33 2
ARRAY16 VLV_W2_33 2
ARRAY16 VLV_W3_33 2
ARRAY16 VLV_P1_33 2
ARRAY16 VLV_P2_33 2
ARRAY16 VLV_P3_33 2
DATAF VGV_CENTRO
DATAF VGV_XTIME
DATAF VGV_YTIME
DATAF VGV_THETATIME
DATAF VGV_XTCORRECT
DATAF VGV_YTCORRECT
DATAF VGV_THETATCORRECT
DATAF VGV_SENTIDO_D
DATAF VGV_D_T
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_ANGLE_A
DATAF VGV_ANGLE_D
ARRAY16 VGV_ALPHA_L 2
ARRAY16 VGV_ALPHA_R 2
DATAF VGV_OLDB
DATAF VGV_OLDC
ARRAY16 VGV_XT 2
ARRAY16 VGV_YT 2
ARRAY16 VGV_THETAT 2
DATAF VGV_I
DATAF VGV_DW
DATAF VGV_DIAMETER
DATAF VGV_D_L
DATAF VGV_D_R
DATAF VGV_D
DATAF VGV_DELTA_THETA
DATAF VGV_KP_A
DATAF VGV_KI_A
DATAF VGV_KD_A
DATAF VGV_KP_D
DATAF VGV_KI_D
DATAF VGV_KD_D
DATAF VGV_ERROR_A
DATAF VGV_ERROR_D
DATAF VGV_ERRSUM_A
DATAF VGV_ERRSUM_D
DATAF VGV_OLDERROR_A
DATAF VGV_OLDERROR_D
DATAF VGV_U_A
DATAF VGV_U_D
DATAS VLV_I_14 252
DATAS VLV_D_14 252
DATAF VLV_U_14
DATAF VLV_ERROR_14
DATAF VLV_OLDERROR_14
DATAF VLV_ERRSUM_14
DATAF VLV_VEL_14
DATAF VLV_SENTIDO_14
DATAF VLV_DIAMETRO_19
DATAF VLV_ENC_19
DATAF VLV_START_B_19
DATAF VLV_START_C_19
DATAF VLV_ENCODER_C_19
DATAF VLV_ENCODER_B_19
DATAF VLV_ERROR_19
DATAF VLV_PROPORCIAL_19
DATAF VLV_RADIO_33
DATAF VLV_X_K_K1_33
DATAF VLV_Y_K_K1_33
DATAF VLV_THETA_K_K1_33
DATAF VLV_DELTA_T_33
DATAF VLV_OLD_T_33
ARRAY16 VLV_F_K_X_33 2
ARRAY16 VLV_F_K_Y_33 2
ARRAY16 VLV_F_K_THETA_33 2
ARRAY16 VLV_Q_X_K1_33 2
ARRAY16 VLV_Q_Y_K1_33 2
ARRAY16 VLV_Q_THETA_K1_33 2
DATAS VLV_I_35 252
DATAS VLV_D_35 252
DATAF VLV_G1_35
DATAF VLV_SIGNO_35
DATAF VLV_VMIN_35
DATAF VLV_VMAX_35
DATAF VLV_ENCODR_35
DATAF VLV_ROTATION_40
DATAF VLV_SIGN_40
DATAF VLV_PROGRESS_40
DATAF VLV_DEGREES_PER_INTERVAL_40
DATAF VLV_ROTATION_42
DATAF VLV_SIGN_42
DATAF VLV_PROGRESS_42
DATAF VLV_DEGREES_PER_INTERVAL_42
DATAF VLV_DEGREES_44
DATAF VLV_ROTATION_44
DATAF VLV_SIGN_44
DATAF VLV_PROGRESS_44
DATAF VLV_DEGREES_PER_INTERVAL_44
DATAF VLV_DEGREES_45
DATAF VLV_ROTATION_45
DATAF VLV_SIGN_45
DATAF VLV_PROGRESS_45
DATAF VLV_DEGREES_PER_INTERVAL_45
DATAF VLV_DEGREES_A_46
DATAF VLV_DEGREES_D_46
DATA32 RUNCOUNTER_F_PIDCONTROL_AD_0
DATA32 RUNCOUNTER_F_ODOMETRY_0
DATA32 RUNCOUNTER_F_DISPLAY_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_45
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_44
    MOVEF_F 0.0 VLV_OMEGAI_K1_33
    MOVEF_F 0.0 VLV_OMEGAD_K1_33
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_42
    MOVEF_F 0.0 VLV_DEGREES_42
    MOVEF_F 0.0 VLV_VELOCIDAD_19
    MOVEF_F 0.0 VLV_DISTANCIA_19
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_40
    MOVEF_F 0.0 VLV_DEGREES_40
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_A_43
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_D_43
    MOVEF_F 0.0 VLV_DEGREES_A_43
    MOVEF_F 0.0 VLV_DEGREES_D_43
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_A_46
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_D_46
    MOVEF_F 0.0 VLV_V0_14
    MOVEF_F 0.0 VLV_VMAX_14
    MOVEF_F 0.0 VLV_KP_14
    MOVEF_F 0.0 VLV_KI_14
    MOVEF_F 0.0 VLV_KD_14
    MOVEF_F 0.0 VLV_ACCELENCODER_14
    CALL ARRAYCREATE_FLOAT VLV_M1_39
    CALL ARRAYCREATE_FLOAT VLV_M2_39
    CALL ARRAYCREATE_FLOAT VLV_M3_39
    CALL ARRAYCREATE_FLOAT VLV_N1_39
    CALL ARRAYCREATE_FLOAT VLV_N2_39
    CALL ARRAYCREATE_FLOAT VLV_N3_39
    CALL ARRAYCREATE_FLOAT VLV_S1_39
    CALL ARRAYCREATE_FLOAT VLV_S2_39
    CALL ARRAYCREATE_FLOAT VLV_S3_39
    CALL ARRAYCREATE_FLOAT VLV_M1_38
    CALL ARRAYCREATE_FLOAT VLV_M2_38
    CALL ARRAYCREATE_FLOAT VLV_M3_38
    CALL ARRAYCREATE_FLOAT VLV_S1_38
    CALL ARRAYCREATE_FLOAT VLV_S2_38
    CALL ARRAYCREATE_FLOAT VLV_S3_38
    CALL ARRAYCREATE_FLOAT VLV_M1_37
    CALL ARRAYCREATE_FLOAT VLV_M2_37
    CALL ARRAYCREATE_FLOAT VLV_M3_37
    CALL ARRAYCREATE_FLOAT VLV_N1_37
    CALL ARRAYCREATE_FLOAT VLV_N2_37
    CALL ARRAYCREATE_FLOAT VLV_N3_37
    CALL ARRAYCREATE_FLOAT VLV_S1_37
    CALL ARRAYCREATE_FLOAT VLV_S2_37
    CALL ARRAYCREATE_FLOAT VLV_S3_37
    CALL ARRAYCREATE_FLOAT VLV_U1_33
    CALL ARRAYCREATE_FLOAT VLV_U2_33
    CALL ARRAYCREATE_FLOAT VLV_U3_33
    CALL ARRAYCREATE_FLOAT VLV_V1_33
    CALL ARRAYCREATE_FLOAT VLV_V2_33
    CALL ARRAYCREATE_FLOAT VLV_V3_33
    CALL ARRAYCREATE_FLOAT VLV_W1_33
    CALL ARRAYCREATE_FLOAT VLV_W2_33
    CALL ARRAYCREATE_FLOAT VLV_W3_33
    CALL ARRAYCREATE_FLOAT VLV_P1_33
    CALL ARRAYCREATE_FLOAT VLV_P2_33
    CALL ARRAYCREATE_FLOAT VLV_P3_33
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_ANGLE_A
    MOVEF_F 0.0 VGV_ANGLE_D
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_L
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYCREATE_FLOAT VGV_XT
    CALL ARRAYCREATE_FLOAT VGV_YT
    CALL ARRAYCREATE_FLOAT VGV_THETAT
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_L
    MOVEF_F 0.0 VGV_D_R
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_DELTA_THETA
    MOVEF_F 0.0 VGV_KP_A
    MOVEF_F 0.0 VGV_KI_A
    MOVEF_F 0.0 VGV_KD_A
    MOVEF_F 0.0 VGV_KP_D
    MOVEF_F 0.0 VGV_KI_D
    MOVEF_F 0.0 VGV_KD_D
    MOVEF_F 0.0 VGV_ERROR_A
    MOVEF_F 0.0 VGV_ERROR_D
    MOVEF_F 0.0 VGV_ERRSUM_A
    MOVEF_F 0.0 VGV_ERRSUM_D
    MOVEF_F 0.0 VGV_OLDERROR_A
    MOVEF_F 0.0 VGV_OLDERROR_D
    MOVEF_F 0.0 VGV_U_A
    MOVEF_F 0.0 VGV_U_D
    STRINGS DUPLICATE '' VLV_I_14
    STRINGS DUPLICATE '' VLV_D_14
    MOVEF_F 0.0 VLV_U_14
    MOVEF_F 0.0 VLV_ERROR_14
    MOVEF_F 0.0 VLV_OLDERROR_14
    MOVEF_F 0.0 VLV_ERRSUM_14
    MOVEF_F 0.0 VLV_VEL_14
    MOVEF_F 0.0 VLV_SENTIDO_14
    MOVEF_F 0.0 VLV_DIAMETRO_19
    MOVEF_F 0.0 VLV_ENC_19
    MOVEF_F 0.0 VLV_START_B_19
    MOVEF_F 0.0 VLV_START_C_19
    MOVEF_F 0.0 VLV_ENCODER_C_19
    MOVEF_F 0.0 VLV_ENCODER_B_19
    MOVEF_F 0.0 VLV_ERROR_19
    MOVEF_F 0.0 VLV_PROPORCIAL_19
    MOVEF_F 0.0 VLV_RADIO_33
    MOVEF_F 0.0 VLV_X_K_K1_33
    MOVEF_F 0.0 VLV_Y_K_K1_33
    MOVEF_F 0.0 VLV_THETA_K_K1_33
    MOVEF_F 0.0 VLV_DELTA_T_33
    MOVEF_F 0.0 VLV_OLD_T_33
    CALL ARRAYCREATE_FLOAT VLV_F_K_X_33
    CALL ARRAYCREATE_FLOAT VLV_F_K_Y_33
    CALL ARRAYCREATE_FLOAT VLV_F_K_THETA_33
    CALL ARRAYCREATE_FLOAT VLV_Q_X_K1_33
    CALL ARRAYCREATE_FLOAT VLV_Q_Y_K1_33
    CALL ARRAYCREATE_FLOAT VLV_Q_THETA_K1_33
    STRINGS DUPLICATE '' VLV_I_35
    STRINGS DUPLICATE '' VLV_D_35
    MOVEF_F 0.0 VLV_G1_35
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VMIN_35
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_ENCODR_35
    MOVEF_F 0.0 VLV_ROTATION_40
    MOVEF_F 0.0 VLV_SIGN_40
    MOVEF_F 0.0 VLV_PROGRESS_40
    MOVEF_F 0.0 VLV_DEGREES_PER_INTERVAL_40
    MOVEF_F 0.0 VLV_ROTATION_42
    MOVEF_F 0.0 VLV_SIGN_42
    MOVEF_F 0.0 VLV_PROGRESS_42
    MOVEF_F 0.0 VLV_DEGREES_PER_INTERVAL_42
    MOVEF_F 0.0 VLV_DEGREES_44
    MOVEF_F 0.0 VLV_ROTATION_44
    MOVEF_F 0.0 VLV_SIGN_44
    MOVEF_F 0.0 VLV_PROGRESS_44
    MOVEF_F 0.0 VLV_DEGREES_PER_INTERVAL_44
    MOVEF_F 0.0 VLV_DEGREES_45
    MOVEF_F 0.0 VLV_ROTATION_45
    MOVEF_F 0.0 VLV_SIGN_45
    MOVEF_F 0.0 VLV_PROGRESS_45
    MOVEF_F 0.0 VLV_DEGREES_PER_INTERVAL_45
    MOVEF_F 0.0 VLV_DEGREES_A_46
    MOVEF_F 0.0 VLV_DEGREES_D_46
    MOVE32_32 0 RUNCOUNTER_F_PIDCONTROL_AD_0
    MOVE32_32 0 RUNCOUNTER_F_ODOMETRY_0
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_PIDCONTROL_AD_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_PIDCONTROL_AD_0 0
    CALL GETANDINC32 RUNCOUNTER_F_PIDCONTROL_AD_0 -1 RUNCOUNTER_F_PIDCONTROL_AD_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ODOMETRY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ODOMETRY_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 -1 RUNCOUNTER_F_ODOMETRY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 2
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_PIDCONTROL_AD_0
subcall PROGRAM_F_ODOMETRY_0
subcall PROGRAM_F_DISPLAY_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    DATAF F.7
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch694
    WRITE32 ENDSUB_F_PIDCONTROL_AD_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PIDCONTROL_AD_0
  dispatch694:
    JR_NEQ32 SUBPROGRAM 1 dispatch695
    WRITE32 ENDSUB_F_ODOMETRY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ODOMETRY_0
  dispatch695:
    JR_NEQ32 SUBPROGRAM 2 dispatch696
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch696:
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_45
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_44
    MOVEF_F 0.0 VLV_OMEGAI_K1_33
    MOVEF_F 0.0 VLV_OMEGAD_K1_33
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_42
    MOVEF_F 0.0 VLV_DEGREES_42
    MOVEF_F 0.0 VLV_VELOCIDAD_19
    MOVEF_F 0.0 VLV_DISTANCIA_19
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_40
    MOVEF_F 0.0 VLV_DEGREES_40
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_A_43
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_D_43
    MOVEF_F 0.0 VLV_DEGREES_A_43
    MOVEF_F 0.0 VLV_DEGREES_D_43
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_A_46
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_D_46
    MOVEF_F 0.0 VLV_V0_14
    MOVEF_F 0.0 VLV_VMAX_14
    MOVEF_F 0.0 VLV_KP_14
    MOVEF_F 0.0 VLV_KI_14
    MOVEF_F 0.0 VLV_KD_14
    MOVEF_F 0.0 VLV_ACCELENCODER_14
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M1_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M2_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M3_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N1_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N2_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N3_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S1_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S2_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S3_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M1_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M2_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M3_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S1_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S2_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S3_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M1_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M2_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M3_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N1_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N2_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N3_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S1_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S2_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S3_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_U1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_U2_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_U3_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V2_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V3_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_W1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_W2_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_W3_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_P1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_P2_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_P3_33
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_ANGLE_A
    MOVEF_F 0.0 VGV_ANGLE_D
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 1.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F -1.0 VGV_SENTIDO_MOTORES
    MOVEF_F -1.0 VGV_SENTIDO_MOTORES
    DATA32 tmp36
    CALL GETANDINC32 RUNCOUNTER_F_PIDCONTROL_AD_0 1  RUNCOUNTER_F_PIDCONTROL_AD_0 tmp36
    JR_NEQ32 0 tmp36 alreadylaunched36
    OBJECT_START TF_PIDCONTROL_AD_0
  alreadylaunched36:
    DATA32 tmp37
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 1  RUNCOUNTER_F_ODOMETRY_0 tmp37
    JR_NEQ32 0 tmp37 alreadylaunched37
    OBJECT_START TF_ODOMETRY_0
  alreadylaunched37:
    DATA32 tmp38
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp38
    JR_NEQ32 0 tmp38 alreadylaunched38
    OBJECT_START TF_DISPLAY_0
  alreadylaunched38:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB39:
    DATA32 milliseconds40
	MOVEF_32 10000.0 milliseconds40
	DATA32 timer40
	TIMER_WAIT milliseconds40 timer40
	TIMER_READY timer40
ENDTHREAD:
    RETURN
SUB_F_STARTARM_0:
    MOVEF_F 0.0 VGV_ANGLE_A
    MOVEF_F 0.0 VGV_ANGLE_D
    TIMER_READ timeMC1
  while42:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 500.0 endwhile42
  whilebody42:
    ADDF VGV_ANGLE_D 1.0 VGV_ANGLE_D
    DATA32 milliseconds45
	MOVEF_32 3.0 milliseconds45
	DATA32 timer45
	TIMER_WAIT milliseconds45 timer45
	TIMER_READY timer45
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 500.0 whilebody42
  endwhile42:
    DATA32 milliseconds47
	MOVEF_32 500.0 milliseconds47
	DATA32 timer47
	TIMER_WAIT milliseconds47 timer47
	TIMER_READY timer47
    CALL MOTOR.GETCOUNT 'D' F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 60.0 else48_1
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_45
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB51:
    MOVEF_F -1.0 VGV_SENTIDO_D
    JR endif48
  else48_1:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_45
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB52:
    MOVEF_F 1.0 VGV_SENTIDO_D
  else48_2:
  endif48:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_44
    WRITE32 ENDSUB_F_BMOVEA0_1:CALLSUB53 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA0_1
CALLSUB53:
    DATA32 milliseconds54
	MOVEF_32 100.0 milliseconds54
	DATA32 timer54
	TIMER_WAIT milliseconds54 timer54
	TIMER_READY timer54
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_ODOMETRY_0:
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_L
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_XT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_YT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_THETAT
    MOVEF_F 0.0 VGV_I
  while60:
  whilebody60:
    MOVEF_F 84.5 VGV_DW
    MOVEF_F 56.0 VGV_DIAMETER
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_L
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_R
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_L
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_L
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf72
    DATA8 flag72
    DIVF F.0 2.0 tmpf72
    CP_EQF 0.0 2.0 flag72
    SELECTF flag72 0.0 tmpf72 VGV_D_L

    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_R
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_R
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf78
    DATA8 flag78
    DIVF F.0 2.0 tmpf78
    CP_EQF 0.0 2.0 flag78
    SELECTF flag78 0.0 tmpf78 VGV_D_R

    ADDF VGV_D_L VGV_D_R F.0
    DATAF tmpf80
    DATA8 flag80
    DIVF F.0 2.0 tmpf80
    CP_EQF 0.0 2.0 flag80
    SELECTF flag80 0.0 tmpf80 VGV_D

    SUBF VGV_D_R VGV_D_L F.0
    MULF 2.0 VGV_DW F.1
    DATAF tmpf83
    DATA8 flag83
    DIVF F.0 F.1 tmpf83
    CP_EQF 0.0 F.1 flag83
    SELECTF flag83 0.0 tmpf83 VGV_DELTA_THETA

    JR_EQF VGV_XTCORRECT 0.0 else84_1
    ADDF VGV_I 1.0 F.0
    CALL ARRAYSTORE_FLOAT F.0 VGV_XTCORRECT VGV_XT
    MOVEF_F 0.0 VGV_XTCORRECT
    JR endif84
  else84_1:
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.6 VGV_THETAT
    DATAF tmpf89
    DATA8 flag89
    DIVF VGV_DELTA_THETA 2.0 tmpf89
    CP_EQF 0.0 2.0 flag89
    SELECTF flag89 0.0 tmpf89 F.7

    ADDF F.6 F.7 F.5
    DATAF tmpf91
	MULF F.5 57.295779513082  tmpf91
	MATH SIN  tmpf91 F.4
    MULF VGV_D F.4 F.3
    CALL ARRAYGET_FLOAT VGV_I F.4 VGV_XT
    ADDF F.3 F.4 F.2
    MULF F.2 -1.0 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_XT
  else84_2:
  endif84:
    JR_EQF VGV_YTCORRECT 0.0 else97_1
    ADDF VGV_I 1.0 F.0
    CALL ARRAYSTORE_FLOAT F.0 VGV_YTCORRECT VGV_YT
    MOVEF_F 0.0 VGV_YTCORRECT
    JR endif97
  else97_1:
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.6 VGV_THETAT
    DATAF tmpf102
    DATA8 flag102
    DIVF VGV_DELTA_THETA 2.0 tmpf102
    CP_EQF 0.0 2.0 flag102
    SELECTF flag102 0.0 tmpf102 F.7

    ADDF F.6 F.7 F.5
    DATAF tmpf104
	MULF F.5 57.295779513082 tmpf104
	MATH COS tmpf104 F.4
    MULF VGV_D F.4 F.3
    CALL ARRAYGET_FLOAT VGV_I F.4 VGV_YT
    ADDF F.3 F.4 F.2
    MULF F.2 -1.0 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_YT
  else97_2:
  endif97:
    JR_EQF VGV_THETATCORRECT 0.0 else110_1
    ADDF VGV_I 1.0 F.0
    CALL ARRAYSTORE_FLOAT F.0 VGV_THETATCORRECT VGV_THETAT
    MOVEF_F 0.0 VGV_THETATCORRECT
    JR endif110
  else110_1:
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_THETAT
    ADDF F.2 VGV_DELTA_THETA F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_THETAT
  else110_2:
  endif110:
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_XTIME VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_YTIME VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_THETATIME VGV_THETAT
    ADDF VGV_I 1.0 VGV_I
    DATA32 milliseconds124
	MOVEF_32 10.0 milliseconds124
	DATA32 timer124
	TIMER_WAIT milliseconds124 timer124
	TIMER_READY timer124
    JR whilebody60
  endwhile60:
RETSUB_F_ODOMETRY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ODOMETRY_0:
SUB_F_PIDCONTROL_AD_0:
    MOVEF_F 0.5 VGV_KP_A
    MOVEF_F 0.0001 VGV_KI_A
    MOVEF_F 0.1 VGV_KD_A
    MOVEF_F 0.5 VGV_KP_D
    MOVEF_F 0.0001 VGV_KI_D
    MOVEF_F 0.1 VGV_KD_D
    MOVEF_F 0.0 VGV_ERROR_A
    MOVEF_F 0.0 VGV_ERROR_D
    MOVEF_F 0.0 VGV_ERRSUM_A
    MOVEF_F 0.0 VGV_ERRSUM_D
    MOVEF_F 0.0 VGV_OLDERROR_A
    MOVEF_F 0.0 VGV_OLDERROR_D
    MOVEF_F 0.0 VGV_U_A
    MOVEF_F 0.0 VGV_U_D
    MOVEF_F 0.0 VGV_ANGLE_A
    MOVEF_F 0.0 VGV_ANGLE_D
  while125:
  whilebody125:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VGV_ANGLE_A F.0 VGV_ERROR_A
    ADDF VGV_ERRSUM_A VGV_ERROR_A VGV_ERRSUM_A
    MULF VGV_ERROR_A VGV_KP_A F.1
    MULF VGV_ERRSUM_A VGV_KI_A F.3
    DATAF tmpf131
    DATA8 flag131
    DIVF F.3 1.0 tmpf131
    CP_EQF 0.0 1.0 flag131
    SELECTF flag131 0.0 tmpf131 F.2

    ADDF F.1 F.2 F.0
    SUBF VGV_ERROR_A VGV_OLDERROR_A F.2
    MULF F.2 VGV_KD_A F.1
    ADDF F.0 F.1 VGV_U_A
    MOVEF_8 VGV_U_A setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VGV_ANGLE_D F.0 VGV_ERROR_D
    ADDF VGV_ERRSUM_D VGV_ERROR_D VGV_ERRSUM_D
    MULF VGV_ERROR_D VGV_KP_D F.1
    MULF VGV_ERRSUM_D VGV_KI_D F.3
    DATAF tmpf142
    DATA8 flag142
    DIVF F.3 1.0 tmpf142
    CP_EQF 0.0 1.0 flag142
    SELECTF flag142 0.0 tmpf142 F.2

    ADDF F.1 F.2 F.0
    SUBF VGV_ERROR_D VGV_OLDERROR_D F.3
    MULF F.3 VGV_KD_D F.2
    MULF F.2 VGV_SENTIDO_D F.1
    ADDF F.0 F.1 VGV_U_D
    MOVEF_8 VGV_U_D setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR whilebody125
  endwhile125:
RETSUB_F_PIDCONTROL_AD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PIDCONTROL_AD_0:
SUB_F_DISPLAY_0:
  while149:
  whilebody149:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf155
    DATA8 flag155
    DIVF F.1 100.0 tmpf155
    CP_EQF 0.0 100.0 flag155
    SELECTF flag155 0.0 tmpf155 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'xt: ' S.1 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf162
    DATA8 flag162
    DIVF F.1 100.0 tmpf162
    CP_EQF 0.0 100.0 flag162
    SELECTF flag162 0.0 tmpf162 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'yt: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.1 VGV_THETAT
    MULF F.1 57.295779513082 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'thetat: ' S.1 S.0
    CALL LCD.WRITE 5.0 25.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    STRINGS VALUE_FORMATTED VGV_D_T '%g' 99 S.1
    CALL TEXT.APPEND 'Delta T:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Angulo de A:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    STRINGS VALUE_FORMATTED VGV_ANGLE_A '%g' 99 S.1
    CALL TEXT.APPEND 'Obj de A:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Angulo de D:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    STRINGS VALUE_FORMATTED VGV_ANGLE_D '%g' 99 S.1
    CALL TEXT.APPEND 'Obj de D:  ' S.1 S.0
    CALL LCD.WRITE 5.0 105.0 S.0
    STRINGS VALUE_FORMATTED VGV_SENTIDO_D '%g' 99 S.1
    CALL TEXT.APPEND 'Sentido de D:  ' S.1 S.0
    CALL LCD.WRITE 5.0 115.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds195
	MOVEF_32 50.0 milliseconds195
	DATA32 timer195
	TIMER_WAIT milliseconds195 timer195
	TIMER_READY timer195
    JR whilebody149
  endwhile149:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAIN_0:
    MOVEF_F 1.0 VLV_OMEGAI_K1_33
    MOVEF_F 1.0 VLV_OMEGAD_K1_33
    WRITE32 ENDSUB_F_KALMAN_FILTER_2:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KALMAN_FILTER_2
CALLSUB196:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB197:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 20.0 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMG_3:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMG_3
CALLSUB198:
    MOVEF_F 20.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMG_3:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMG_3
CALLSUB199:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_42
    MOVEF_F 140.0 VLV_DEGREES_42
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB200:
    MOVEF_F 30.0 VLV_VELOCIDAD_19
    MOVEF_F 80.0 VLV_DISTANCIA_19
    WRITE32 ENDSUB_F_ENCODERRECTOMG_2:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMG_2
CALLSUB201:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_45
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB202:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_40
    MOVEF_F 180.0 VLV_DEGREES_40
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB203:
    MOVEF_F -30.0 VLV_VELOCIDAD_19
    MOVEF_F 30.0 VLV_DISTANCIA_19
    WRITE32 ENDSUB_F_ENCODERRECTOMG_2:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMG_2
CALLSUB204:
    MOVEF_F 20.0 VLV_V1_35
    MOVEF_F -20.0 VLV_V2_35
    MOVEF_F 60.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMG_3:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMG_3
CALLSUB205:
    MOVEF_F 30.0 VLV_VELOCIDAD_19
    MOVEF_F 60.0 VLV_DISTANCIA_19
    WRITE32 ENDSUB_F_ENCODERRECTOMG_2:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMG_2
CALLSUB206:
    MOVEF_F -20.0 VLV_V1_35
    MOVEF_F 20.0 VLV_V2_35
    MOVEF_F 55.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMG_3:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMG_3
CALLSUB207:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_A_43
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_D_43
    MOVEF_F 60.0 VLV_DEGREES_A_43
    MOVEF_F 160.0 VLV_DEGREES_D_43
    WRITE32 ENDSUB_F_BMOVEAD_4:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD_4
CALLSUB208:
    DATA32 milliseconds209
	MOVEF_32 1000.0 milliseconds209
	DATA32 timer209
	TIMER_WAIT milliseconds209 timer209
	TIMER_READY timer209
    MOVEF_F -30.0 VLV_VELOCIDAD_19
    MOVEF_F 200.0 VLV_DISTANCIA_19
    WRITE32 ENDSUB_F_ENCODERRECTOMG_2:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMG_2
CALLSUB210:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_A_46
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_D_46
    WRITE32 ENDSUB_F_BMOVEAD0_2:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_2
CALLSUB211:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_14
    STRINGS DUPLICATE 'C' VLV_D_14
    MOVEF_F 3.1415926535897932384 F.2
    MULF 56.0 F.2 F.1
    DATAF tmpf214
    DATA8 flag214
    DIVF VLV_ACCELENCODER_14 F.1 tmpf214
    CP_EQF 0.0 F.1 flag214
    SELECTF flag214 0.0 tmpf214 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_14
    MOVEF_F 0.0 VLV_U_14
    MOVEF_F 0.0 VLV_ERROR_14
    MOVEF_F 0.0 VLV_OLDERROR_14
    MOVEF_F 0.0 VLV_ERRSUM_14
    CALL MOTOR.RESETCOUNT 'C'
  while217:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or218
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile217
  or218:
  whilebody217:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf222
    DATA8 flag222
    DIVF F.3 VLV_ACCELENCODER_14 tmpf222
    CP_EQF 0.0 VLV_ACCELENCODER_14 flag222
    SELECTF flag222 0.0 tmpf222 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_14 VLV_V0_14 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_14 VLV_VEL_14
    DATA8 flag227
	CP_LTF VLV_VEL_14 VLV_VMAX_14 flag227
	SELECTF flag227 VLV_VEL_14 VLV_VMAX_14 VLV_VEL_14
    MATH ABS VLV_VEL_14 F.0
    DATAF tmpf229
    DATA8 flag229
    DIVF VLV_VEL_14 F.0 tmpf229
    CP_EQF 0.0 F.0 flag229
    SELECTF flag229 0.0 tmpf229 VLV_SENTIDO_14

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_14 VLV_ERROR_14
    ADDF VLV_ERRSUM_14 VLV_ERROR_14 VLV_ERRSUM_14
    MULF VLV_ERROR_14 VLV_KP_14 F.1
    SUBF VLV_ERROR_14 VLV_OLDERROR_14 F.3
    MULF F.3 VLV_KD_14 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_14 VLV_KI_14 F.1
    ADDF F.0 F.1 VLV_U_14
    CALL TEXT.APPEND VLV_I_14 VLV_D_14 S.0
    ADDF VLV_VEL_14 VLV_U_14 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_14 VLV_U_14 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_14 VLV_OLDERROR_14
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody217
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody217
  endwhile217:
    CALL TEXT.APPEND VLV_I_14 VLV_D_14 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_ENCODERRECTOMG_2:
    MOVEF_F 56.0 VLV_DIAMETRO_19
    MULF VLV_DISTANCIA_19 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf253
    DATA8 flag253
    DIVF F.1 F.2 tmpf253
    CP_EQF 0.0 F.2 flag253
    SELECTF flag253 0.0 tmpf253 F.0

    DATAF tmpf254
    DATA8 flag254
    DIVF F.0 VLV_DIAMETRO_19 tmpf254
    CP_EQF 0.0 VLV_DIAMETRO_19 flag254
    SELECTF flag254 0.0 tmpf254 VLV_ENC_19

    CALL MOTOR.GETCOUNT 'B' VLV_START_B_19
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_19
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_19 VLV_ENCODER_C_19
  while259:
    MATH ABS VLV_ENCODER_C_19 F.0
    JR_GTEQF F.0 VLV_ENC_19 endwhile259
  whilebody259:
    CALL MOTOR.GETCOUNT 'B' F.1
    SUBF F.1 VLV_START_B_19 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ENCODER_B_19
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.1 VLV_START_C_19 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ENCODER_C_19
    SUBF VLV_ENCODER_B_19 VLV_ENCODER_C_19 VLV_ERROR_19
    MULF VLV_ERROR_19 2.0 VLV_PROPORCIAL_19
    SUBF VLV_VELOCIDAD_19 VLV_PROPORCIAL_19 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    ADDF VLV_VELOCIDAD_19 VLV_PROPORCIAL_19 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_19 F.0
    JR_LTF F.0 VLV_ENC_19 whilebody259
  endwhile259:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMG_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMG_2:
SUB_F_KALMAN_FILTER_2:
    MOVEF_F 28.0 VLV_RADIO_33
    CALL ARRAYSTORE_FLOAT 0.0 1.0 VLV_P1_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_P1_33
    CALL ARRAYSTORE_FLOAT 2.0 0.0 VLV_P1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_P2_33
    CALL ARRAYSTORE_FLOAT 1.0 1.0 VLV_P2_33
    CALL ARRAYSTORE_FLOAT 2.0 0.0 VLV_P2_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_P3_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_P3_33
    CALL ARRAYSTORE_FLOAT 2.0 1.0 VLV_P3_33
    MOVEF_F 0.0 VLV_X_K_K1_33
    MOVEF_F 0.0 VLV_Y_K_K1_33
    MOVEF_F 0.0 VLV_THETA_K_K1_33
    CALL EV3.TIME VLV_DELTA_T_33
    MOVEF_F 0.0 VLV_OLD_T_33
  while286:
  whilebody286:
    CALL EV3.TIME F.0
    SUBF F.0 VLV_OLD_T_33 VLV_DELTA_T_33
    CALL EV3.TIME VLV_OLD_T_33
    ADDF VLV_OMEGAI_K1_33 VLV_OMEGAD_K1_33 F.4
    MULF F.4 VLV_RADIO_33 F.3
    MULF F.3 VLV_DELTA_T_33 F.2
    DATAF tmpf293
    DATA8 flag293
    DIVF F.2 2.0 tmpf293
    CP_EQF 0.0 2.0 flag293
    SELECTF flag293 0.0 tmpf293 F.1

    SUBF VLV_OMEGAD_K1_33 VLV_OMEGAI_K1_33 F.7
    MULF F.7 VLV_RADIO_33 F.6
    MULF F.6 VLV_DELTA_T_33 F.5
    MULF 4.0 VGV_DW F.6
    DATAF tmpf298
    DATA8 flag298
    DIVF F.5 F.6 tmpf298
    CP_EQF 0.0 F.6 flag298
    SELECTF flag298 0.0 tmpf298 F.4

    ADDF VLV_THETA_K_K1_33 F.4 F.3
    DATAF tmpf300
	MULF F.3 57.295779513082 tmpf300
	MATH COS tmpf300 F.2
    MULF F.1 F.2 F.0
    ADDF VLV_X_K_K1_33 F.0 VLV_X_K_K1_33
    ADDF VLV_OMEGAI_K1_33 VLV_OMEGAD_K1_33 F.4
    MULF F.4 VLV_RADIO_33 F.3
    MULF F.3 VLV_DELTA_T_33 F.2
    DATAF tmpf306
    DATA8 flag306
    DIVF F.2 2.0 tmpf306
    CP_EQF 0.0 2.0 flag306
    SELECTF flag306 0.0 tmpf306 F.1

    SUBF VLV_OMEGAD_K1_33 VLV_OMEGAI_K1_33 F.7
    MULF F.7 VLV_RADIO_33 F.6
    MULF F.6 VLV_DELTA_T_33 F.5
    MULF 4.0 VGV_DW F.6
    DATAF tmpf311
    DATA8 flag311
    DIVF F.5 F.6 tmpf311
    CP_EQF 0.0 F.6 flag311
    SELECTF flag311 0.0 tmpf311 F.4

    ADDF VLV_THETA_K_K1_33 F.4 F.3
    DATAF tmpf313
	MULF F.3 57.295779513082  tmpf313
	MATH SIN  tmpf313 F.2
    MULF F.1 F.2 F.0
    ADDF VLV_Y_K_K1_33 F.0 VLV_Y_K_K1_33
    SUBF VLV_OMEGAD_K1_33 VLV_OMEGAI_K1_33 F.3
    MULF F.3 VLV_RADIO_33 F.2
    MULF F.2 VLV_DELTA_T_33 F.1
    MULF 2.0 VGV_DW F.2
    DATAF tmpf320
    DATA8 flag320
    DIVF F.1 F.2 tmpf320
    CP_EQF 0.0 F.2 flag320
    SELECTF flag320 0.0 tmpf320 F.0

    ADDF VLV_THETA_K_K1_33 F.0 VLV_THETA_K_K1_33
    CALL ARRAYSTORE_FLOAT 0.0 1.0 VLV_F_K_X_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_F_K_X_33
    ADDF VLV_OMEGAI_K1_33 VLV_OMEGAD_K1_33 F.5
    MULF F.5 VLV_RADIO_33 F.4
    MULF F.4 VLV_DELTA_T_33 F.3
    MULF -1.0 F.3 F.2
    DATAF tmpf328
    DATA8 flag328
    DIVF F.2 2.0 tmpf328
    CP_EQF 0.0 2.0 flag328
    SELECTF flag328 0.0 tmpf328 F.1

    SUBF VLV_OMEGAD_K1_33 VLV_OMEGAI_K1_33 F.7
    MULF F.7 VLV_RADIO_33 F.6
    MULF F.6 VLV_DELTA_T_33 F.5
    MULF 4.0 VGV_DW F.6
    DATAF tmpf333
    DATA8 flag333
    DIVF F.5 F.6 tmpf333
    CP_EQF 0.0 F.6 flag333
    SELECTF flag333 0.0 tmpf333 F.4

    ADDF VLV_THETA_K_K1_33 F.4 F.3
    DATAF tmpf335
	MULF F.3 57.295779513082  tmpf335
	MATH SIN  tmpf335 F.2
    MULF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_F_K_X_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_F_K_Y_33
    CALL ARRAYSTORE_FLOAT 1.0 1.0 VLV_F_K_Y_33
    ADDF VLV_OMEGAI_K1_33 VLV_OMEGAD_K1_33 F.4
    MULF F.4 VLV_RADIO_33 F.3
    MULF F.3 VLV_DELTA_T_33 F.2
    DATAF tmpf343
    DATA8 flag343
    DIVF F.2 2.0 tmpf343
    CP_EQF 0.0 2.0 flag343
    SELECTF flag343 0.0 tmpf343 F.1

    SUBF VLV_OMEGAD_K1_33 VLV_OMEGAI_K1_33 F.7
    MULF F.7 VLV_RADIO_33 F.6
    MULF F.6 VLV_DELTA_T_33 F.5
    MULF 4.0 VGV_DW F.6
    DATAF tmpf348
    DATA8 flag348
    DIVF F.5 F.6 tmpf348
    CP_EQF 0.0 F.6 flag348
    SELECTF flag348 0.0 tmpf348 F.4

    ADDF VLV_THETA_K_K1_33 F.4 F.3
    DATAF tmpf350
	MULF F.3 57.295779513082 tmpf350
	MATH COS tmpf350 F.2
    MULF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_F_K_Y_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_F_K_THETA_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_F_K_THETA_33
    CALL ARRAYSTORE_FLOAT 2.0 1.0 VLV_F_K_THETA_33
    CALL ARRAYSTORE_FLOAT 0.0 0.25 VLV_Q_X_K1_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_Q_X_K1_33
    CALL ARRAYSTORE_FLOAT 2.0 0.0 VLV_Q_X_K1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_Q_Y_K1_33
    CALL ARRAYSTORE_FLOAT 1.0 0.25 VLV_Q_Y_K1_33
    CALL ARRAYSTORE_FLOAT 2.0 0.0 VLV_Q_Y_K1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_Q_THETA_K1_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_Q_THETA_K1_33
    DIVF 3.0 57.295779513082 F.1
    DIVF 3.0 57.295779513082 F.2
    MULF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_Q_THETA_K1_33
    MOVEF_F VLV_DELTA_T_33 VGV_D_T
    ARRAY COPY VLV_F_K_X_33 VLV_M1_39
    ARRAY COPY VLV_F_K_Y_33 VLV_M2_39
    ARRAY COPY VLV_F_K_THETA_33 VLV_M3_39
    ARRAY COPY VLV_P1_33 VLV_N1_39
    ARRAY COPY VLV_P2_33 VLV_N2_39
    ARRAY COPY VLV_P3_33 VLV_N3_39
    WRITE32 ENDSUB_F_MULTIMATRICES3X3_9:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MULTIMATRICES3X3_9
CALLSUB368:
    ARRAY COPY VLV_S1_39 VLV_U1_33
    ARRAY COPY VLV_S2_39 VLV_U2_33
    ARRAY COPY VLV_S3_39 VLV_U3_33
    ARRAY COPY VLV_F_K_X_33 VLV_M1_38
    ARRAY COPY VLV_F_K_Y_33 VLV_M2_38
    ARRAY COPY VLV_F_K_THETA_33 VLV_M3_38
    WRITE32 ENDSUB_F_TRASPMATRIZ3X3_6:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TRASPMATRIZ3X3_6
CALLSUB369:
    ARRAY COPY VLV_S1_38 VLV_V1_33
    ARRAY COPY VLV_S2_38 VLV_V2_33
    ARRAY COPY VLV_S3_38 VLV_V3_33
    ARRAY COPY VLV_U1_33 VLV_M1_39
    ARRAY COPY VLV_U2_33 VLV_M2_39
    ARRAY COPY VLV_U3_33 VLV_M3_39
    ARRAY COPY VLV_V1_33 VLV_N1_39
    ARRAY COPY VLV_V2_33 VLV_N2_39
    ARRAY COPY VLV_V3_33 VLV_N3_39
    WRITE32 ENDSUB_F_MULTIMATRICES3X3_9:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MULTIMATRICES3X3_9
CALLSUB370:
    ARRAY COPY VLV_S1_39 VLV_W1_33
    ARRAY COPY VLV_S2_39 VLV_W2_33
    ARRAY COPY VLV_S3_39 VLV_W3_33
    ARRAY COPY VLV_W1_33 VLV_M1_37
    ARRAY COPY VLV_W2_33 VLV_M2_37
    ARRAY COPY VLV_W3_33 VLV_M3_37
    ARRAY COPY VLV_Q_X_K1_33 VLV_N1_37
    ARRAY COPY VLV_Q_Y_K1_33 VLV_N2_37
    ARRAY COPY VLV_Q_THETA_K1_33 VLV_N3_37
    WRITE32 ENDSUB_F_SUMAMATRICES3X3_9:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SUMAMATRICES3X3_9
CALLSUB371:
    ARRAY COPY VLV_S1_37 VLV_P1_33
    ARRAY COPY VLV_S2_37 VLV_P2_33
    ARRAY COPY VLV_S3_37 VLV_P3_33
    JR whilebody286
  endwhile286:
RETSUB_F_KALMAN_FILTER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KALMAN_FILTER_2:
SUB_F_GUNIVENCMG_3:
    STRINGS DUPLICATE 'B' VLV_I_35
    STRINGS DUPLICATE 'C' VLV_D_35
    MOVEF_F 3.05555555555556 VLV_G1_35
    DATAF tmpf372
    DATA8 flag372
    DIVF VLV_V1_35 VLV_V2_35 tmpf372
    CP_EQF 0.0 VLV_V2_35 flag372
    SELECTF flag372 0.0 tmpf372 F.0

    DATAF tmpf373
    DATA8 flag373
    DIVF VLV_V1_35 VLV_V2_35 tmpf373
    CP_EQF 0.0 VLV_V2_35 flag373
    SELECTF flag373 0.0 tmpf373 F.2

    MATH ABS F.2 F.1
    DATAF tmpf375
    DATA8 flag375
    DIVF F.0 F.1 tmpf375
    CP_EQF 0.0 F.1 flag375
    SELECTF flag375 0.0 tmpf375 VLV_SIGNO_35

    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag378
	CP_LTF F.0 F.1 flag378
	SELECTF flag378 F.0 F.1 VLV_VMIN_35
    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag381
	CP_GTF F.0 F.1 flag381
	SELECTF flag381 F.0 F.1 VLV_VMAX_35
    DATAF tmpf382
    DATA8 flag382
    DIVF VLV_VMIN_35 VLV_VMAX_35 tmpf382
    CP_EQF 0.0 VLV_VMAX_35 flag382
    SELECTF flag382 0.0 tmpf382 F.3

    MULF -8.5 F.3 F.2
    MULF F.2 VLV_SIGNO_35 F.1
    SUBF F.1 8.5 F.0
    DATAF tmpf386
    DATA8 flag386
    DIVF VLV_VMIN_35 VLV_VMAX_35 tmpf386
    CP_EQF 0.0 VLV_VMAX_35 flag386
    SELECTF flag386 0.0 tmpf386 F.3

    MULF F.3 VLV_SIGNO_35 F.2
    SUBF F.2 1.0 F.1
    DATAF tmpf389
    DATA8 flag389
    DIVF F.0 F.1 tmpf389
    CP_EQF 0.0 F.1 flag389
    SELECTF flag389 0.0 tmpf389 VGV_CENTRO

    MULF VLV_ANGLE_35 VLV_G1_35 F.0
    MULF VLV_SIGNO_35 VLV_VMIN_35 F.4
    DATAF tmpf392
    DATA8 flag392
    DIVF F.4 VLV_VMAX_35 tmpf392
    CP_EQF 0.0 VLV_VMAX_35 flag392
    SELECTF flag392 0.0 tmpf392 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf394
    DATA8 flag394
    DIVF -2.0 F.2 tmpf394
    CP_EQF 0.0 F.2 flag394
    SELECTF flag394 0.0 tmpf394 F.1

    MULF F.0 F.1 VLV_ENCODR_35
    CALL TEXT.APPEND VLV_I_35 VLV_D_35 S.0
    MATH NEGATE VLV_V1_35 F.0
    MATH NEGATE VLV_V2_35 F.1
    CALL MOTOR.SCHEDULESYNC S.0 F.0 F.1 VLV_ENCODR_35 'True'

	DATA8 layer399
	DATA8 nos399
	DATA8 busy399
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer399 nos399
	JR_EQ8 0 nos399 motornotbusy399
  motorwaiting399:
	OUTPUT_TEST layer399 nos399 busy399
	JR_EQ8 busy399 0 motornotbusy399
	SLEEP
	JR motorwaiting399
  motornotbusy399:
RETSUB_F_GUNIVENCMG_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMG_3:
SUB_F_SUMAMATRICES3X3_9:
    CALL ARRAYGET_FLOAT 0.0 F.1 VLV_M1_37
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_N1_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S1_37
    CALL ARRAYGET_FLOAT 1.0 F.1 VLV_M1_37
    CALL ARRAYGET_FLOAT 1.0 F.2 VLV_N1_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S1_37
    CALL ARRAYGET_FLOAT 2.0 F.1 VLV_M1_37
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_N1_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S1_37
    CALL ARRAYGET_FLOAT 0.0 F.1 VLV_M2_37
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_N2_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S2_37
    CALL ARRAYGET_FLOAT 1.0 F.1 VLV_M2_37
    CALL ARRAYGET_FLOAT 1.0 F.2 VLV_N2_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S2_37
    CALL ARRAYGET_FLOAT 2.0 F.1 VLV_M2_37
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_N2_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S2_37
    CALL ARRAYGET_FLOAT 0.0 F.1 VLV_M3_37
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_N3_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S3_37
    CALL ARRAYGET_FLOAT 1.0 F.1 VLV_M3_37
    CALL ARRAYGET_FLOAT 1.0 F.2 VLV_N3_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S3_37
    CALL ARRAYGET_FLOAT 2.0 F.1 VLV_M3_37
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_N3_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S3_37
RETSUB_F_SUMAMATRICES3X3_9:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SUMAMATRICES3X3_9:
SUB_F_TRASPMATRIZ3X3_6:
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M1_38
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S1_38
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M2_38
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S1_38
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M3_38
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S1_38
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M1_38
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S2_38
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M2_38
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S2_38
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M3_38
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S2_38
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M1_38
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S3_38
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M2_38
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S3_38
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M3_38
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S3_38
RETSUB_F_TRASPMATRIZ3X3_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TRASPMATRIZ3X3_6:
SUB_F_MULTIMATRICES3X3_9:
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M1_39
    CALL ARRAYGET_FLOAT 0.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S1_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M1_39
    CALL ARRAYGET_FLOAT 1.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S1_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M1_39
    CALL ARRAYGET_FLOAT 2.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S1_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M2_39
    CALL ARRAYGET_FLOAT 0.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S2_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M2_39
    CALL ARRAYGET_FLOAT 1.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S2_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M2_39
    CALL ARRAYGET_FLOAT 2.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S2_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M3_39
    CALL ARRAYGET_FLOAT 0.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S3_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M3_39
    CALL ARRAYGET_FLOAT 1.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S3_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M3_39
    CALL ARRAYGET_FLOAT 2.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S3_39
RETSUB_F_MULTIMATRICES3X3_9:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MULTIMATRICES3X3_9:
SUB_F_BMOVEA_2:
    SUBF VLV_DEGREES_40 VGV_ANGLE_A VLV_ROTATION_40
    MATH ABS VLV_ROTATION_40 F.0
    DATAF tmpf564
    DATA8 flag564
    DIVF F.0 VLV_ROTATION_40 tmpf564
    CP_EQF 0.0 VLV_ROTATION_40 flag564
    SELECTF flag564 0.0 tmpf564 VLV_SIGN_40

    MOVEF_F 0.0 VLV_PROGRESS_40
    MULF VLV_DEGREES_PER_SECOND_40 VLV_SIGN_40 F.0
    DATAF tmpf566
    DATA8 flag566
    DIVF F.0 50.0 tmpf566
    CP_EQF 0.0 50.0 flag566
    SELECTF flag566 0.0 tmpf566 VLV_DEGREES_PER_INTERVAL_40

  while567:
    SUBF VLV_ROTATION_40 VLV_PROGRESS_40 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile567
  whilebody567:
    ADDF VGV_ANGLE_A VLV_DEGREES_PER_INTERVAL_40 VGV_ANGLE_A
    ADDF VLV_PROGRESS_40 VLV_DEGREES_PER_INTERVAL_40 VLV_PROGRESS_40
    DATA32 milliseconds572
	MOVEF_32 1.0 milliseconds572
	DATA32 timer572
	TIMER_WAIT milliseconds572 timer572
	TIMER_READY timer572
    SUBF VLV_ROTATION_40 VLV_PROGRESS_40 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody567
  endwhile567:
    MOVEF_F VLV_DEGREES_40 VGV_ANGLE_A
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVED_2:
    MULF VLV_DEGREES_42 VGV_SENTIDO_D VLV_DEGREES_42
    SUBF VLV_DEGREES_42 VGV_ANGLE_D VLV_ROTATION_42
    MATH ABS VLV_ROTATION_42 F.0
    DATAF tmpf578
    DATA8 flag578
    DIVF F.0 VLV_ROTATION_42 tmpf578
    CP_EQF 0.0 VLV_ROTATION_42 flag578
    SELECTF flag578 0.0 tmpf578 VLV_SIGN_42

    MOVEF_F 0.0 VLV_PROGRESS_42
    MULF VLV_DEGREES_PER_SECOND_42 VLV_SIGN_42 F.0
    DATAF tmpf580
    DATA8 flag580
    DIVF F.0 50.0 tmpf580
    CP_EQF 0.0 50.0 flag580
    SELECTF flag580 0.0 tmpf580 VLV_DEGREES_PER_INTERVAL_42

  while581:
    SUBF VLV_ROTATION_42 VLV_PROGRESS_42 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile581
  whilebody581:
    ADDF VGV_ANGLE_D VLV_DEGREES_PER_INTERVAL_42 VGV_ANGLE_D
    ADDF VLV_PROGRESS_42 VLV_DEGREES_PER_INTERVAL_42 VLV_PROGRESS_42
    DATA32 milliseconds586
	MOVEF_32 1.0 milliseconds586
	DATA32 timer586
	TIMER_WAIT milliseconds586 timer586
	TIMER_READY timer586
    SUBF VLV_ROTATION_42 VLV_PROGRESS_42 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody581
  endwhile581:
    MOVEF_F VLV_DEGREES_42 VGV_ANGLE_D
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEAD_4:
    MULF VLV_DEGREES_D_43 VGV_SENTIDO_D VLV_DEGREES_D_43
  while590:
    JR_NEQF VGV_ANGLE_A VLV_DEGREES_A_43 or591
    JR_EQF VGV_ANGLE_D VLV_DEGREES_D_43 endwhile590
  or591:
  whilebody590:
    MATH ROUND VGV_ANGLE_A F.0
    SUBF VLV_DEGREES_A_43 5.0 F.1
    JR_GTEQF F.0 F.1 else592_1
    MATH ROUND VGV_ANGLE_A F.0
    JR_GTEQF F.0 VLV_DEGREES_A_43 else592_1
    DATAF tmpf596
    DATA8 flag596
    DIVF VLV_DEGREES_PER_SECOND_A_43 2.0 tmpf596
    CP_EQF 0.0 2.0 flag596
    SELECTF flag596 0.0 tmpf596 F.3

    SUBF VLV_DEGREES_A_43 VGV_ANGLE_A F.5
    DATAF tmpf598
    DATA8 flag598
    DIVF F.5 10.0 tmpf598
    CP_EQF 0.0 10.0 flag598
    SELECTF flag598 0.0 tmpf598 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag600
	CP_LTF VLV_DEGREES_PER_SECOND_A_43 F.2 flag600
	SELECTF flag600 VLV_DEGREES_PER_SECOND_A_43 F.2 F.1
    DATAF tmpf601
    DATA8 flag601
    DIVF F.1 50.0 tmpf601
    CP_EQF 0.0 50.0 flag601
    SELECTF flag601 0.0 tmpf601 F.0

    ADDF VGV_ANGLE_A F.0 VGV_ANGLE_A
    JR endif592
  else592_1:
    MATH ROUND VGV_ANGLE_A F.0
    ADDF VLV_DEGREES_A_43 5.0 F.1
    JR_LTEQF F.0 F.1 else592_2
    MATH ROUND VGV_ANGLE_A F.0
    JR_LTEQF F.0 VLV_DEGREES_A_43 else592_2
    DATAF tmpf606
    DATA8 flag606
    DIVF VLV_DEGREES_PER_SECOND_A_43 2.0 tmpf606
    CP_EQF 0.0 2.0 flag606
    SELECTF flag606 0.0 tmpf606 F.3

    SUBF VLV_DEGREES_A_43 VGV_ANGLE_A F.5
    DATAF tmpf608
    DATA8 flag608
    DIVF F.5 10.0 tmpf608
    CP_EQF 0.0 10.0 flag608
    SELECTF flag608 0.0 tmpf608 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag610
	CP_GTF VLV_DEGREES_PER_SECOND_A_43 F.2 flag610
	SELECTF flag610 VLV_DEGREES_PER_SECOND_A_43 F.2 F.1
    DATAF tmpf611
    DATA8 flag611
    DIVF F.1 50.0 tmpf611
    CP_EQF 0.0 50.0 flag611
    SELECTF flag611 0.0 tmpf611 F.0

    SUBF VGV_ANGLE_A F.0 VGV_ANGLE_A
    JR endif592
  else592_2:
    MOVEF_F VLV_DEGREES_A_43 VGV_ANGLE_A
  else592_3:
  endif592:
    MATH ROUND VGV_ANGLE_D F.0
    JR_GTEQF F.0 VLV_DEGREES_D_43 else613_1
    DATAF tmpf615
    DATA8 flag615
    DIVF VLV_DEGREES_PER_SECOND_D_43 2.0 tmpf615
    CP_EQF 0.0 2.0 flag615
    SELECTF flag615 0.0 tmpf615 F.3

    SUBF VLV_DEGREES_D_43 VGV_ANGLE_D F.5
    DATAF tmpf617
    DATA8 flag617
    DIVF F.5 10.0 tmpf617
    CP_EQF 0.0 10.0 flag617
    SELECTF flag617 0.0 tmpf617 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag619
	CP_LTF VLV_DEGREES_PER_SECOND_D_43 F.2 flag619
	SELECTF flag619 VLV_DEGREES_PER_SECOND_D_43 F.2 F.1
    DATAF tmpf620
    DATA8 flag620
    DIVF F.1 50.0 tmpf620
    CP_EQF 0.0 50.0 flag620
    SELECTF flag620 0.0 tmpf620 F.0

    ADDF VGV_ANGLE_D F.0 VGV_ANGLE_D
    JR endif613
  else613_1:
    MATH ROUND VGV_ANGLE_D F.0
    JR_LTEQF F.0 VLV_DEGREES_D_43 else613_2
    DATAF tmpf623
    DATA8 flag623
    DIVF VLV_DEGREES_PER_SECOND_D_43 2.0 tmpf623
    CP_EQF 0.0 2.0 flag623
    SELECTF flag623 0.0 tmpf623 F.3

    SUBF VLV_DEGREES_D_43 VGV_ANGLE_D F.5
    DATAF tmpf625
    DATA8 flag625
    DIVF F.5 10.0 tmpf625
    CP_EQF 0.0 10.0 flag625
    SELECTF flag625 0.0 tmpf625 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag627
	CP_GTF VLV_DEGREES_PER_SECOND_D_43 F.2 flag627
	SELECTF flag627 VLV_DEGREES_PER_SECOND_D_43 F.2 F.1
    DATAF tmpf628
    DATA8 flag628
    DIVF F.1 50.0 tmpf628
    CP_EQF 0.0 50.0 flag628
    SELECTF flag628 0.0 tmpf628 F.0

    SUBF VGV_ANGLE_D F.0 VGV_ANGLE_D
    JR endif613
  else613_2:
    MOVEF_F VLV_DEGREES_D_43 VGV_ANGLE_D
  else613_3:
  endif613:
    DATA32 milliseconds630
	MOVEF_32 1.0 milliseconds630
	DATA32 timer630
	TIMER_WAIT milliseconds630 timer630
	TIMER_READY timer630
    JR_NEQF VGV_ANGLE_A VLV_DEGREES_A_43 whilebody590
    JR_NEQF VGV_ANGLE_D VLV_DEGREES_D_43 whilebody590
  endwhile590:
    MOVEF_F VLV_DEGREES_A_43 VGV_ANGLE_A
    MOVEF_F VLV_DEGREES_D_43 VGV_ANGLE_D
RETSUB_F_BMOVEAD_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD_4:
SUB_F_BMOVEA0_1:
    MOVEF_F 0.0 VLV_DEGREES_44
    SUBF VLV_DEGREES_44 VGV_ANGLE_A VLV_ROTATION_44
    MATH ABS VLV_ROTATION_44 F.0
    DATAF tmpf633
    DATA8 flag633
    DIVF F.0 VLV_ROTATION_44 tmpf633
    CP_EQF 0.0 VLV_ROTATION_44 flag633
    SELECTF flag633 0.0 tmpf633 VLV_SIGN_44

    MOVEF_F 0.0 VLV_PROGRESS_44
    MULF VLV_DEGREES_PER_SECOND_44 VLV_SIGN_44 F.0
    DATAF tmpf635
    DATA8 flag635
    DIVF F.0 50.0 tmpf635
    CP_EQF 0.0 50.0 flag635
    SELECTF flag635 0.0 tmpf635 VLV_DEGREES_PER_INTERVAL_44

  while636:
    SUBF VLV_ROTATION_44 VLV_PROGRESS_44 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile636
  whilebody636:
    ADDF VGV_ANGLE_A VLV_DEGREES_PER_INTERVAL_44 VGV_ANGLE_A
    ADDF VLV_PROGRESS_44 VLV_DEGREES_PER_INTERVAL_44 VLV_PROGRESS_44
    DATA32 milliseconds641
	MOVEF_32 1.0 milliseconds641
	DATA32 timer641
	TIMER_WAIT milliseconds641 timer641
	TIMER_READY timer641
    SUBF VLV_ROTATION_44 VLV_PROGRESS_44 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody636
  endwhile636:
    MOVEF_F VLV_DEGREES_44 VGV_ANGLE_A
RETSUB_F_BMOVEA0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA0_1:
SUB_F_BMOVED0_1:
    MOVEF_F 0.0 VLV_DEGREES_45
    SUBF VLV_DEGREES_45 VGV_ANGLE_D VLV_ROTATION_45
    MATH ABS VLV_ROTATION_45 F.0
    DATAF tmpf646
    DATA8 flag646
    DIVF F.0 VLV_ROTATION_45 tmpf646
    CP_EQF 0.0 VLV_ROTATION_45 flag646
    SELECTF flag646 0.0 tmpf646 VLV_SIGN_45

    MOVEF_F 0.0 VLV_PROGRESS_45
    MULF VLV_DEGREES_PER_SECOND_45 VLV_SIGN_45 F.0
    DATAF tmpf648
    DATA8 flag648
    DIVF F.0 50.0 tmpf648
    CP_EQF 0.0 50.0 flag648
    SELECTF flag648 0.0 tmpf648 VLV_DEGREES_PER_INTERVAL_45

  while649:
    SUBF VLV_ROTATION_45 VLV_PROGRESS_45 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile649
  whilebody649:
    ADDF VGV_ANGLE_D VLV_DEGREES_PER_INTERVAL_45 VGV_ANGLE_D
    ADDF VLV_PROGRESS_45 VLV_DEGREES_PER_INTERVAL_45 VLV_PROGRESS_45
    DATA32 milliseconds654
	MOVEF_32 1.0 milliseconds654
	DATA32 timer654
	TIMER_WAIT milliseconds654 timer654
	TIMER_READY timer654
    SUBF VLV_ROTATION_45 VLV_PROGRESS_45 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody649
  endwhile649:
    MOVEF_F VLV_DEGREES_45 VGV_ANGLE_D
RETSUB_F_BMOVED0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED0_1:
SUB_F_BMOVEAD0_2:
    MOVEF_F 0.0 VLV_DEGREES_A_46
    MOVEF_F 0.0 VLV_DEGREES_D_46
  while657:
    JR_NEQF VGV_ANGLE_A VLV_DEGREES_A_46 or658
    JR_EQF VGV_ANGLE_D VLV_DEGREES_D_46 endwhile657
  or658:
  whilebody657:
    MATH ROUND VGV_ANGLE_A F.0
    JR_GTEQF F.0 VLV_DEGREES_A_46 else659_1
    DATAF tmpf661
    DATA8 flag661
    DIVF VLV_DEGREES_PER_SECOND_A_46 2.0 tmpf661
    CP_EQF 0.0 2.0 flag661
    SELECTF flag661 0.0 tmpf661 F.3

    SUBF VLV_DEGREES_A_46 VGV_ANGLE_A F.5
    DATAF tmpf663
    DATA8 flag663
    DIVF F.5 10.0 tmpf663
    CP_EQF 0.0 10.0 flag663
    SELECTF flag663 0.0 tmpf663 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag665
	CP_LTF VLV_DEGREES_PER_SECOND_A_46 F.2 flag665
	SELECTF flag665 VLV_DEGREES_PER_SECOND_A_46 F.2 F.1
    DATAF tmpf666
    DATA8 flag666
    DIVF F.1 50.0 tmpf666
    CP_EQF 0.0 50.0 flag666
    SELECTF flag666 0.0 tmpf666 F.0

    ADDF VGV_ANGLE_A F.0 VGV_ANGLE_A
    JR endif659
  else659_1:
    MATH ROUND VGV_ANGLE_A F.0
    JR_LTEQF F.0 VLV_DEGREES_A_46 else659_2
    DATAF tmpf669
    DATA8 flag669
    DIVF VLV_DEGREES_PER_SECOND_A_46 2.0 tmpf669
    CP_EQF 0.0 2.0 flag669
    SELECTF flag669 0.0 tmpf669 F.3

    SUBF VLV_DEGREES_A_46 VGV_ANGLE_A F.5
    DATAF tmpf671
    DATA8 flag671
    DIVF F.5 10.0 tmpf671
    CP_EQF 0.0 10.0 flag671
    SELECTF flag671 0.0 tmpf671 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag673
	CP_GTF VLV_DEGREES_PER_SECOND_A_46 F.2 flag673
	SELECTF flag673 VLV_DEGREES_PER_SECOND_A_46 F.2 F.1
    DATAF tmpf674
    DATA8 flag674
    DIVF F.1 50.0 tmpf674
    CP_EQF 0.0 50.0 flag674
    SELECTF flag674 0.0 tmpf674 F.0

    SUBF VGV_ANGLE_A F.0 VGV_ANGLE_A
    JR endif659
  else659_2:
    MOVEF_F VLV_DEGREES_A_46 VGV_ANGLE_A
  else659_3:
  endif659:
    MATH ROUND VGV_ANGLE_D F.0
    JR_GTEQF F.0 VLV_DEGREES_D_46 else676_1
    DATAF tmpf678
    DATA8 flag678
    DIVF VLV_DEGREES_PER_SECOND_D_46 2.0 tmpf678
    CP_EQF 0.0 2.0 flag678
    SELECTF flag678 0.0 tmpf678 F.3

    SUBF VLV_DEGREES_D_46 VGV_ANGLE_D F.5
    DATAF tmpf680
    DATA8 flag680
    DIVF F.5 10.0 tmpf680
    CP_EQF 0.0 10.0 flag680
    SELECTF flag680 0.0 tmpf680 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag682
	CP_LTF VLV_DEGREES_PER_SECOND_D_46 F.2 flag682
	SELECTF flag682 VLV_DEGREES_PER_SECOND_D_46 F.2 F.1
    DATAF tmpf683
    DATA8 flag683
    DIVF F.1 50.0 tmpf683
    CP_EQF 0.0 50.0 flag683
    SELECTF flag683 0.0 tmpf683 F.0

    ADDF VGV_ANGLE_D F.0 VGV_ANGLE_D
    JR endif676
  else676_1:
    MATH ROUND VGV_ANGLE_D F.0
    JR_LTEQF F.0 VLV_DEGREES_D_46 else676_2
    DATAF tmpf686
    DATA8 flag686
    DIVF VLV_DEGREES_PER_SECOND_D_46 2.0 tmpf686
    CP_EQF 0.0 2.0 flag686
    SELECTF flag686 0.0 tmpf686 F.3

    SUBF VLV_DEGREES_D_46 VGV_ANGLE_D F.5
    DATAF tmpf688
    DATA8 flag688
    DIVF F.5 10.0 tmpf688
    CP_EQF 0.0 10.0 flag688
    SELECTF flag688 0.0 tmpf688 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag690
	CP_GTF VLV_DEGREES_PER_SECOND_D_46 F.2 flag690
	SELECTF flag690 VLV_DEGREES_PER_SECOND_D_46 F.2 F.1
    DATAF tmpf691
    DATA8 flag691
    DIVF F.1 50.0 tmpf691
    CP_EQF 0.0 50.0 flag691
    SELECTF flag691 0.0 tmpf691 F.0

    SUBF VGV_ANGLE_D F.0 VGV_ANGLE_D
    JR endif676
  else676_2:
    MOVEF_F VLV_DEGREES_D_46 VGV_ANGLE_D
  else676_3:
  endif676:
    DATA32 milliseconds693
	MOVEF_32 1.0 milliseconds693
	DATA32 timer693
	TIMER_WAIT milliseconds693 timer693
	TIMER_READY timer693
    JR_NEQF VGV_ANGLE_A VLV_DEGREES_A_46 whilebody657
    JR_NEQF VGV_ANGLE_D VLV_DEGREES_D_46 whilebody657
  endwhile657:
    MOVEF_F VLV_DEGREES_A_46 VGV_ANGLE_A
    MOVEF_F VLV_DEGREES_D_46 VGV_ANGLE_D
RETSUB_F_BMOVEAD0_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD0_2:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3.TIME  // F
{
	OUT_F time
	
	DATA32 ms
	DATAF thousand
	
	TIMER_READ ms
	MOVE32_F ms time	
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
