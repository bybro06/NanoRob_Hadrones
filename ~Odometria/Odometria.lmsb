DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_105
DATAF VLV_AENC_105
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_VELOCIDAD_39
DATAF VLV_VELOCIDAD_2
DATAF VLV_DISTANCIA_2
DATAF VLV_REPS_110
DATAF VLV_COLOR_110
DATAF VLV_COLOR_122
DATAF VLV_V1_35
DATAF VLV_V2_35
DATAF VLV_ANGLE_35
DATAF VLV_VELOCIDAD1_15
DATAF VLV_VELOCIDAD2_15
DATAF VLV_ENCODER_15
DATAF VLV_VELOCIDAD_3
DATAF VLV_SENS_3
DATAF VLV_V_95
DATAF VLV_AENC_95
DATAF VLV_V_104
DATAF VLV_GRADOS_104
DATAF VLV_V0_56
DATAF VLV_VMAX_56
DATAF VLV_KP_56
DATAF VLV_KI_56
DATAF VLV_KD_56
DATAF VLV_ACCELENCODER_56
DATAF VLV_VELOCIDAD_72
DATAF VLV_KP_72
DATAF VLV_KI_72
DATAF VLV_KD_72
DATAF VLV_VELOCIDAD_76
DATAF VLV_KP_76
DATAF VLV_KI_76
DATAF VLV_KD_76
DATAF VLV_ENCODER_76
DATAF VLV_VMAX_88
DATAF VLV_KP_88
DATAF VLV_KI_88
DATAF VLV_KD_88
DATAF VLV_REPS_111
DATAF VLV_COLOR_111
DATAF VLV_REPS_112
DATAF VLV_COLOR_112
DATAF VLV_REPS_113
DATAF VLV_COLOR_113
ARRAY16 VLV_M_134 2
DATAF VLV_K_134
ARRAY16 VLV_S_134 2
ARRAY16 VLV_M_132 2
ARRAY16 VLV_S_132 2
ARRAY16 VLV_M_133 2
ARRAY16 VLV_S_133 2
DATAF VLV_V_108
DATAF VLV_T_108
DATAF VLV_V_109
DATAF VLV_AENC_109
DATAF VGV_CASO
DATAF VLV_COLOR_114
DATAF VLV_COLOR_115
DATAF VLV_COLOR_116
DATAF VLV_COLOR_117
ARRAY16 VLV_VELI_123 2
ARRAY16 VLV_VELD_123 2
ARRAY16 VLV_OMEGAI_K1_123 2
ARRAY16 VLV_OMEGAD_K1_123 2
ARRAY16 VLV_V_123 2
ARRAY16 VLV_DH_T_123 2
ARRAY16 VLV_S_INV_123 2
DATAF VLV_READ_131
DATAF VGV_CENTRO
DATAF VGV_XTIME
DATAF VGV_YTIME
DATAF VGV_THETATIME
DATAF VGV_XTCORRECT
DATAF VGV_YTCORRECT
DATAF VGV_THETATCORRECT
DATAF VGV_SENTIDO_D
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DW
DATAF VGV_DIAMETER
DATAF VGV_D_T
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_G1
DATAF VGV_ROJOS
DATAF VGV_AMARILLOS
DATAF VGV_VERDES
DATAF VGV_AZULES
ARRAY16 VGV_ALPHA_L 2
ARRAY16 VGV_ALPHA_R 2
DATAF VGV_OLDB
DATAF VGV_OLDC
ARRAY16 VGV_XT 2
ARRAY16 VGV_YT 2
ARRAY16 VGV_THETAT 2
DATAF VGV_I
DATAF VGV_D_L
DATAF VGV_D_R
DATAF VGV_D
DATAF VGV_DELTA_THETA
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAF VLV_DIAMETRO_2
DATAF VLV_ENC_2
DATAF VLV_START_B_2
DATAF VLV_START_C_2
DATAF VLV_ENCODER_C_2
DATAF VLV_ENCODER_B_2
DATAF VLV_ERROR_2
DATAF VLV_PROPORCIAL_2
DATAF VLV_START_B_3
DATAF VLV_START_C_3
DATAF VLV_ENCODER_B_3
DATAF VLV_ENCODER_C_3
DATAF VLV_ERROR_3
DATAF VLV_PROPORCIAL_3
DATAF VLV_DIAMETRO_15
DATAF VLV_DISTANCIA_15
DATAS VLV_I_35 252
DATAS VLV_D_35 252
DATAF VLV_SIGNO_35
DATAF VLV_VMIN_35
DATAF VLV_VMAX_35
DATAF VLV_ENCODR_35
DATAS VLV_I_39 252
DATAS VLV_D_39 252
DATAF VLV_ENCODR_39
DATAF VLV_ANGLE_39
DATAS VLV_I_56 252
DATAS VLV_D_56 252
DATAF VLV_U_56
DATAF VLV_ERROR_56
DATAF VLV_OLDERROR_56
DATAF VLV_ERRSUM_56
DATAF VLV_VEL_56
DATAF VLV_SENTIDO_56
DATAS VLV_I_72 252
DATAS VLV_D_72 252
DATAF VLV_ERROR_72
DATAF VLV_OLDERROR_72
DATAF VLV_ERRSUM_72
DATAF VLV_U_72
DATAF VLV_SENTIDO_72
DATAS VLV_I_76 252
DATAS VLV_D_76 252
DATAF VLV_ERROR_76
DATAF VLV_OLDERROR_76
DATAF VLV_ERRSUM_76
DATAF VLV_U_76
DATAF VLV_SENTIDO_76
DATAF VLV_START_C_76
DATAF VLV_ENCODER_C_76
DATAS VLV_I_88 252
DATAS VLV_D_88 252
DATAF VLV_V0_88
DATAF VLV_ACCELENCODER_88
DATAF VLV_U_88
DATAF VLV_ERRSUM_88
DATAF VLV_OLDERROR_88
DATAF VLV_VEL_88
DATAF VLV_SENTIDO_88
DATAF VLV_ERROR_88
DATAF VLV_ENCDIFF_95
DATAF VLV_SIGNO_95
DATAF VLV_DIFFA_104
DATAF VLV_DIFFD_104
DATAF VLV_SAFETYTIMER_104
DATAF VLV_SIGNOA_104
DATAF VLV_SIGNOD_104
DATAF VLV_VELA_104
DATAF VLV_VELD_104
DATAF VLV_ENCDIFF_105
DATAF VLV_SIGNO_105
DATAF VLV_ENCDIFF_109
DATAF VLV_SIGNO_109
DATAF VLV_SAFETYTIMER_109
DATAF VLV_RED_110
DATAF VLV_YELLOW_110
DATAF VLV_GREEN_110
DATAF VLV_BLUE_110
DATAF VLV_VALUENEGRO_110
DATAF VLV_VALUEBLANCO_110
DATAF VLV_RWHITE_110
DATAF VLV_GWHITE_110
DATAF VLV_BWHITE_110
DATAF VLV_HUE_110
DATAF VLV_SAT_110
DATAF VLV_VALUE_110
ARRAY16 VLV_RNORMA_110 2
ARRAY16 VLV_GNORMA_110 2
ARRAY16 VLV_BNORMA_110 2
ARRAY16 VLV_MAXA_110 2
DATAF VLV_J_110
ARRAY16 VLV_RGB_110 2
DATAF VLV_RRAW_110
DATAF VLV_GRAW_110
DATAF VLV_BRAW_110
DATAF VLV_RNORM_110
DATAF VLV_GNORM_110
DATAF VLV_BNORM_110
DATAF VLV_MAX_110
DATAF VLV_MIN_110
DATAF VLV_RGBGREY_110
DATAF VLV_RED_111
DATAF VLV_YELLOW_111
DATAF VLV_GREEN_111
DATAF VLV_BLUE_111
DATAF VLV_VALUENEGRO_111
DATAF VLV_VALUEBLANCO_111
DATAF VLV_RWHITE_111
DATAF VLV_GWHITE_111
DATAF VLV_BWHITE_111
DATAF VLV_HUE_111
DATAF VLV_SAT_111
DATAF VLV_VALUE_111
ARRAY16 VLV_RNORMA_111 2
ARRAY16 VLV_GNORMA_111 2
ARRAY16 VLV_BNORMA_111 2
ARRAY16 VLV_MAXA_111 2
DATAF VLV_J_111
ARRAY16 VLV_RGB_111 2
DATAF VLV_RRAW_111
DATAF VLV_GRAW_111
DATAF VLV_BRAW_111
DATAF VLV_RNORM_111
DATAF VLV_GNORM_111
DATAF VLV_BNORM_111
DATAF VLV_MAX_111
DATAF VLV_MIN_111
DATAF VLV_RGBGREY_111
DATAF VLV_RED_112
DATAF VLV_YELLOW_112
DATAF VLV_GREEN_112
DATAF VLV_BLUE_112
DATAF VLV_VALUENEGRO_112
DATAF VLV_VALUEBLANCO_112
DATAF VLV_RWHITE_112
DATAF VLV_GWHITE_112
DATAF VLV_BWHITE_112
DATAF VLV_HUE_112
DATAF VLV_SAT_112
DATAF VLV_VALUE_112
ARRAY16 VLV_RNORMA_112 2
ARRAY16 VLV_GNORMA_112 2
ARRAY16 VLV_BNORMA_112 2
ARRAY16 VLV_MAXA_112 2
DATAF VLV_J_112
ARRAY16 VLV_RGB_112 2
DATAF VLV_RRAW_112
DATAF VLV_GRAW_112
DATAF VLV_BRAW_112
DATAF VLV_RNORM_112
DATAF VLV_GNORM_112
DATAF VLV_BNORM_112
DATAF VLV_MAX_112
DATAF VLV_MIN_112
DATAF VLV_RGBGREY_112
DATAF VLV_RED_113
DATAF VLV_YELLOW_113
DATAF VLV_GREEN_113
DATAF VLV_BLUE_113
DATAF VLV_VALUENEGRO_113
DATAF VLV_VALUEBLANCO_113
DATAF VLV_RWHITE_113
DATAF VLV_GWHITE_113
DATAF VLV_BWHITE_113
DATAF VLV_HUE_113
DATAF VLV_SAT_113
DATAF VLV_VALUE_113
ARRAY16 VLV_RNORMA_113 2
ARRAY16 VLV_GNORMA_113 2
ARRAY16 VLV_BNORMA_113 2
ARRAY16 VLV_MAXA_113 2
DATAF VLV_J_113
ARRAY16 VLV_RGB_113 2
DATAF VLV_RRAW_113
DATAF VLV_GRAW_113
DATAF VLV_BRAW_113
DATAF VLV_RNORM_113
DATAF VLV_GNORM_113
DATAF VLV_BNORM_113
DATAF VLV_MAX_113
DATAF VLV_MIN_113
DATAF VLV_RGBGREY_113
DATAF VLV_DETERMINANTE_133
DATAF VLV_I_134
DATA32 RUNCOUNTER_F_ODOMETRY_0
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYCREATE_FLOAT VLV_M_134
    MOVEF_F 0.0 VLV_K_134
    CALL ARRAYCREATE_FLOAT VLV_S_134
    CALL ARRAYCREATE_FLOAT VLV_M_132
    CALL ARRAYCREATE_FLOAT VLV_S_132
    CALL ARRAYCREATE_FLOAT VLV_M_133
    CALL ARRAYCREATE_FLOAT VLV_S_133
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VGV_CASO
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYCREATE_FLOAT VLV_VELI_123
    CALL ARRAYCREATE_FLOAT VLV_VELD_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAI_K1_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAD_K1_123
    CALL ARRAYCREATE_FLOAT VLV_V_123
    CALL ARRAYCREATE_FLOAT VLV_DH_T_123
    CALL ARRAYCREATE_FLOAT VLV_S_INV_123
    MOVEF_F 0.0 VLV_READ_131
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_L
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYCREATE_FLOAT VGV_XT
    CALL ARRAYCREATE_FLOAT VGV_YT
    CALL ARRAYCREATE_FLOAT VGV_THETAT
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_D_L
    MOVEF_F 0.0 VGV_D_R
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_DELTA_THETA
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    MOVEF_F 0.0 VLV_DIAMETRO_2
    MOVEF_F 0.0 VLV_ENC_2
    MOVEF_F 0.0 VLV_START_B_2
    MOVEF_F 0.0 VLV_START_C_2
    MOVEF_F 0.0 VLV_ENCODER_C_2
    MOVEF_F 0.0 VLV_ENCODER_B_2
    MOVEF_F 0.0 VLV_ERROR_2
    MOVEF_F 0.0 VLV_PROPORCIAL_2
    MOVEF_F 0.0 VLV_START_B_3
    MOVEF_F 0.0 VLV_START_C_3
    MOVEF_F 0.0 VLV_ENCODER_B_3
    MOVEF_F 0.0 VLV_ENCODER_C_3
    MOVEF_F 0.0 VLV_ERROR_3
    MOVEF_F 0.0 VLV_PROPORCIAL_3
    MOVEF_F 0.0 VLV_DIAMETRO_15
    MOVEF_F 0.0 VLV_DISTANCIA_15
    STRINGS DUPLICATE '' VLV_I_35
    STRINGS DUPLICATE '' VLV_D_35
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VMIN_35
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_ENCODR_35
    STRINGS DUPLICATE '' VLV_I_39
    STRINGS DUPLICATE '' VLV_D_39
    MOVEF_F 0.0 VLV_ENCODR_39
    MOVEF_F 0.0 VLV_ANGLE_39
    STRINGS DUPLICATE '' VLV_I_56
    STRINGS DUPLICATE '' VLV_D_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    MOVEF_F 0.0 VLV_VEL_56
    MOVEF_F 0.0 VLV_SENTIDO_56
    STRINGS DUPLICATE '' VLV_I_72
    STRINGS DUPLICATE '' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MOVEF_F 0.0 VLV_SENTIDO_72
    STRINGS DUPLICATE '' VLV_I_76
    STRINGS DUPLICATE '' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MOVEF_F 0.0 VLV_SENTIDO_76
    MOVEF_F 0.0 VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
    STRINGS DUPLICATE '' VLV_I_88
    STRINGS DUPLICATE '' VLV_D_88
    MOVEF_F 0.0 VLV_V0_88
    MOVEF_F 0.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    MOVEF_F 0.0 VLV_VEL_88
    MOVEF_F 0.0 VLV_SENTIDO_88
    MOVEF_F 0.0 VLV_ERROR_88
    MOVEF_F 0.0 VLV_ENCDIFF_95
    MOVEF_F 0.0 VLV_SIGNO_95
    MOVEF_F 0.0 VLV_DIFFA_104
    MOVEF_F 0.0 VLV_DIFFD_104
    MOVEF_F 0.0 VLV_SAFETYTIMER_104
    MOVEF_F 0.0 VLV_SIGNOA_104
    MOVEF_F 0.0 VLV_SIGNOD_104
    MOVEF_F 0.0 VLV_VELA_104
    MOVEF_F 0.0 VLV_VELD_104
    MOVEF_F 0.0 VLV_ENCDIFF_105
    MOVEF_F 0.0 VLV_SIGNO_105
    MOVEF_F 0.0 VLV_ENCDIFF_109
    MOVEF_F 0.0 VLV_SIGNO_109
    MOVEF_F 0.0 VLV_SAFETYTIMER_109
    MOVEF_F 0.0 VLV_RED_110
    MOVEF_F 0.0 VLV_YELLOW_110
    MOVEF_F 0.0 VLV_GREEN_110
    MOVEF_F 0.0 VLV_BLUE_110
    MOVEF_F 0.0 VLV_VALUENEGRO_110
    MOVEF_F 0.0 VLV_VALUEBLANCO_110
    MOVEF_F 0.0 VLV_RWHITE_110
    MOVEF_F 0.0 VLV_GWHITE_110
    MOVEF_F 0.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_MAXA_110
    MOVEF_F 0.0 VLV_J_110
    CALL ARRAYCREATE_FLOAT VLV_RGB_110
    MOVEF_F 0.0 VLV_RRAW_110
    MOVEF_F 0.0 VLV_GRAW_110
    MOVEF_F 0.0 VLV_BRAW_110
    MOVEF_F 0.0 VLV_RNORM_110
    MOVEF_F 0.0 VLV_GNORM_110
    MOVEF_F 0.0 VLV_BNORM_110
    MOVEF_F 0.0 VLV_MAX_110
    MOVEF_F 0.0 VLV_MIN_110
    MOVEF_F 0.0 VLV_RGBGREY_110
    MOVEF_F 0.0 VLV_RED_111
    MOVEF_F 0.0 VLV_YELLOW_111
    MOVEF_F 0.0 VLV_GREEN_111
    MOVEF_F 0.0 VLV_BLUE_111
    MOVEF_F 0.0 VLV_VALUENEGRO_111
    MOVEF_F 0.0 VLV_VALUEBLANCO_111
    MOVEF_F 0.0 VLV_RWHITE_111
    MOVEF_F 0.0 VLV_GWHITE_111
    MOVEF_F 0.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_MAXA_111
    MOVEF_F 0.0 VLV_J_111
    CALL ARRAYCREATE_FLOAT VLV_RGB_111
    MOVEF_F 0.0 VLV_RRAW_111
    MOVEF_F 0.0 VLV_GRAW_111
    MOVEF_F 0.0 VLV_BRAW_111
    MOVEF_F 0.0 VLV_RNORM_111
    MOVEF_F 0.0 VLV_GNORM_111
    MOVEF_F 0.0 VLV_BNORM_111
    MOVEF_F 0.0 VLV_MAX_111
    MOVEF_F 0.0 VLV_MIN_111
    MOVEF_F 0.0 VLV_RGBGREY_111
    MOVEF_F 0.0 VLV_RED_112
    MOVEF_F 0.0 VLV_YELLOW_112
    MOVEF_F 0.0 VLV_GREEN_112
    MOVEF_F 0.0 VLV_BLUE_112
    MOVEF_F 0.0 VLV_VALUENEGRO_112
    MOVEF_F 0.0 VLV_VALUEBLANCO_112
    MOVEF_F 0.0 VLV_RWHITE_112
    MOVEF_F 0.0 VLV_GWHITE_112
    MOVEF_F 0.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_MAXA_112
    MOVEF_F 0.0 VLV_J_112
    CALL ARRAYCREATE_FLOAT VLV_RGB_112
    MOVEF_F 0.0 VLV_RRAW_112
    MOVEF_F 0.0 VLV_GRAW_112
    MOVEF_F 0.0 VLV_BRAW_112
    MOVEF_F 0.0 VLV_RNORM_112
    MOVEF_F 0.0 VLV_GNORM_112
    MOVEF_F 0.0 VLV_BNORM_112
    MOVEF_F 0.0 VLV_MAX_112
    MOVEF_F 0.0 VLV_MIN_112
    MOVEF_F 0.0 VLV_RGBGREY_112
    MOVEF_F 0.0 VLV_RED_113
    MOVEF_F 0.0 VLV_YELLOW_113
    MOVEF_F 0.0 VLV_GREEN_113
    MOVEF_F 0.0 VLV_BLUE_113
    MOVEF_F 0.0 VLV_VALUENEGRO_113
    MOVEF_F 0.0 VLV_VALUEBLANCO_113
    MOVEF_F 0.0 VLV_RWHITE_113
    MOVEF_F 0.0 VLV_GWHITE_113
    MOVEF_F 0.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_MAXA_113
    MOVEF_F 0.0 VLV_J_113
    CALL ARRAYCREATE_FLOAT VLV_RGB_113
    MOVEF_F 0.0 VLV_RRAW_113
    MOVEF_F 0.0 VLV_GRAW_113
    MOVEF_F 0.0 VLV_BRAW_113
    MOVEF_F 0.0 VLV_RNORM_113
    MOVEF_F 0.0 VLV_GNORM_113
    MOVEF_F 0.0 VLV_BNORM_113
    MOVEF_F 0.0 VLV_MAX_113
    MOVEF_F 0.0 VLV_MIN_113
    MOVEF_F 0.0 VLV_RGBGREY_113
    MOVEF_F 0.0 VLV_DETERMINANTE_133
    MOVEF_F 0.0 VLV_I_134
    MOVE32_32 0 RUNCOUNTER_F_ODOMETRY_0
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_ODOMETRY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ODOMETRY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 -1 RUNCOUNTER_F_ODOMETRY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_ODOMETRY_0
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    DATAF F.7
    DATAF F.8
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1114
    WRITE32 ENDSUB_F_ODOMETRY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ODOMETRY_0
  dispatch1114:
    JR_NEQ32 SUBPROGRAM 1 dispatch1115
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1115:
    JR_NEQ32 SUBPROGRAM 2 dispatch1116
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1116:
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_134
    MOVEF_F 0.0 VLV_K_134
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_134
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_132
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_133
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_133
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VGV_CASO
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELI_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELD_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAI_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAD_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_DH_T_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_INV_123
    MOVEF_F 0.0 VLV_READ_131
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 1.0 VGV_SENTIDO_D
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0001 VGV_KI
    MOVEF_F 1.0 VGV_KD
    MOVEF_F 102.0 VGV_DW
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.47222222222222 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB13 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB13:
    DATA32 tmp14
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 1  RUNCOUNTER_F_ODOMETRY_0 tmp14
    JR_NEQ32 0 tmp14 alreadylaunched14
    OBJECT_START TF_ODOMETRY_0
  alreadylaunched14:
    DATA32 tmp15
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp15
    JR_NEQ32 0 tmp15 alreadylaunched15
    OBJECT_START TF_DISPLAY_0
  alreadylaunched15:
    DATA32 tmp16
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp16
    JR_NEQ32 0 tmp16 alreadylaunched16
    OBJECT_START TF_STOP_0
  alreadylaunched16:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB17 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB17:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer18
	DATA8 no18
	DATA8 mode818
	
	MOVEF_8 1.0 no18
	SUB8 no18 1 no18
	DIV8 no18 4 layer18
	MATH MOD8 no18 4 no18

	MOVEF_8 0.0 mode818
	
	INPUT_DEVICE READY_RAW layer18 no18 0 mode818 0
    DATA8 layer19
	DATA8 no19
	DATA8 mode819
	
	MOVEF_8 2.0 no19
	SUB8 no19 1 no19
	DIV8 no19 4 layer19
	MATH MOD8 no19 4 no19

	MOVEF_8 4.0 mode819
	
	INPUT_DEVICE READY_RAW layer19 no19 0 mode819 0
    DATA8 layer20
	DATA8 no20
	DATA8 mode820
	
	MOVEF_8 3.0 no20
	SUB8 no20 1 no20
	DIV8 no20 4 layer20
	MATH MOD8 no20 4 no20

	MOVEF_8 4.0 mode820
	
	INPUT_DEVICE READY_RAW layer20 no20 0 mode820 0
    DATA8 layer21
	DATA8 no21
	DATA8 mode821
	
	MOVEF_8 4.0 no21
	SUB8 no21 1 no21
	DIV8 no21 4 layer21
	MATH MOD8 no21 4 no21

	MOVEF_8 0.0 mode821
	
	INPUT_DEVICE READY_RAW layer21 no21 0 mode821 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while23:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 850.0 endwhile23
  whilebody23:
    MOVEF_8 30.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 30.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 850.0 whilebody23
  endwhile23:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -360.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB31 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB31:
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds33
	MOVEF_32 100.0 milliseconds33
	DATA32 timer33
	TIMER_WAIT milliseconds33 timer33
	TIMER_READY timer33
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_ODOMETRY_0:
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_L
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_XT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_YT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_THETAT
    MOVEF_F 0.0 VGV_I
  while39:
  whilebody39:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.2
    MULF F.2 -1.0 F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_L
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_R
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_L
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_L
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf52
    DATA8 flag52
    DIVF F.0 2.0 tmpf52
    CP_EQF 0.0 2.0 flag52
    SELECTF flag52 0.0 tmpf52 VGV_D_L

    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_R
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_R
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf58
    DATA8 flag58
    DIVF F.0 2.0 tmpf58
    CP_EQF 0.0 2.0 flag58
    SELECTF flag58 0.0 tmpf58 VGV_D_R

    ADDF VGV_D_L VGV_D_R F.0
    DATAF tmpf60
    DATA8 flag60
    DIVF F.0 2.0 tmpf60
    CP_EQF 0.0 2.0 flag60
    SELECTF flag60 0.0 tmpf60 VGV_D

    SUBF VGV_D_R VGV_D_L F.0
    MULF 2.0 VGV_DW F.1
    DATAF tmpf63
    DATA8 flag63
    DIVF F.0 F.1 tmpf63
    CP_EQF 0.0 F.1 flag63
    SELECTF flag63 0.0 tmpf63 VGV_DELTA_THETA

    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf66
    DATA8 flag66
    DIVF VGV_DELTA_THETA 2.0 tmpf66
    CP_EQF 0.0 2.0 flag66
    SELECTF flag66 0.0 tmpf66 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf68
	MULF F.4 57.295779513082  tmpf68
	MATH SIN  tmpf68 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf75
    DATA8 flag75
    DIVF VGV_DELTA_THETA 2.0 tmpf75
    CP_EQF 0.0 2.0 flag75
    SELECTF flag75 0.0 tmpf75 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf77
	MULF F.4 57.295779513082 tmpf77
	MATH COS tmpf77 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_THETAT
    ADDF F.2 VGV_DELTA_THETA F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_THETAT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_XTIME VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_YTIME VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_THETATIME VGV_THETAT
    ADDF VGV_I 1.0 VGV_I
    DATA32 milliseconds93
	MOVEF_32 10.0 milliseconds93
	DATA32 timer93
	TIMER_WAIT milliseconds93 timer93
	TIMER_READY timer93
    JR whilebody39
  endwhile39:
RETSUB_F_ODOMETRY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ODOMETRY_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while94:
  whilebody94:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf100
    DATA8 flag100
    DIVF F.1 100.0 tmpf100
    CP_EQF 0.0 100.0 flag100
    SELECTF flag100 0.0 tmpf100 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'xt: ' S.1 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf107
    DATA8 flag107
    DIVF F.1 100.0 tmpf107
    CP_EQF 0.0 100.0 flag107
    SELECTF flag107 0.0 tmpf107 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'yt: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.1 VGV_THETAT
    MULF F.1 57.295779513082 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'thetat: ' S.1 S.0
    CALL LCD.WRITE 5.0 25.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf131
    DATA8 flag131
    DIVF F.2 0.05 tmpf131
    CP_EQF 0.0 0.05 flag131
    SELECTF flag131 0.0 tmpf131 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf139
    DATA8 flag139
    DIVF F.1 0.05 tmpf139
    CP_EQF 0.0 0.05 flag139
    SELECTF flag139 0.0 tmpf139 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    STRINGS VALUE_FORMATTED VGV_D_T '%g' 99 S.1
    CALL TEXT.APPEND 'Delta T:  ' S.1 S.0
    CALL LCD.WRITE 5.0 105.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds156
	MOVEF_32 50.0 milliseconds156
	DATA32 timer156
	TIMER_WAIT milliseconds156 timer156
	TIMER_READY timer156
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody94
  endwhile94:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB159:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 35.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB161:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB163:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_2
    MOVEF_F 10.0 VLV_DISTANCIA_2
    WRITE32 ENDSUB_F_ENCODERRECTOMMF_2:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMMF_2
CALLSUB165:
    MOVEF_F 5.0 VLV_REPS_110
    WRITE32 ENDSUB_F_RGBDETECT1_2:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RGBDETECT1_2
CALLSUB166:
    MOVEF_F VLV_COLOR_110 VGV_CASO
    MOVEF_F VGV_CASO VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB167:
    DATA8 layer168
	DATA8 no168
	DATA8 mode8168
	
	MOVEF_8 1.0 no168
	SUB8 no168 1 no168
	DIV8 no168 4 layer168
	MATH MOD8 no168 4 no168

	MOVEF_8 0.0 mode8168
	
	INPUT_DEVICE READY_RAW layer168 no168 0 mode8168 0
    JR_NEQF VGV_CASO 3.0 else169_1
    WRITE32 ENDSUB_F_CASO_ARRIBA_0:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASO_ARRIBA_0
CALLSUB170:
    JR endif169
  else169_1:
    WRITE32 ENDSUB_F_CASO_ABAJO_0:CALLSUB171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASO_ABAJO_0
CALLSUB171:
  else169_2:
  endif169:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_CASO_ARRIBA_0:
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 175.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB174:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.5 VLV_VELOCIDAD2_15
    MOVEF_F 34.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB177:
    MULF VGV_VELOCIDAD 0.5 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD2_15
    MOVEF_F 32.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB180:
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB182:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB184:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -300.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB185:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -760.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB186:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_35
    MULF VGV_VELOCIDAD 0.2 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB189:
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB191:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -620.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB192:
    MOVEF_F 20.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB193:
RETSUB_F_CASO_ARRIBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASO_ARRIBA_0:
SUB_F_CASO_ABAJO_0:
RETSUB_F_CASO_ABAJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASO_ABAJO_0:
SUB_F_STOP_0:
  while194:
  whilebody194:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else195_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    WRITE32 ENDSUB_F_BMOVEADSAFE_2:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEADSAFE_2
CALLSUB200:
    PROGRAM_STOP -1
  else195_1:
  endif195:
    JR whilebody194
  endwhile194:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf205
    DATA8 flag205
    DIVF F.1 F.2 tmpf205
    CP_EQF 0.0 F.2 flag205
    SELECTF flag205 0.0 tmpf205 F.0

    DATAF tmpf206
    DATA8 flag206
    DIVF F.0 VLV_DIAMETRO_1 tmpf206
    CP_EQF 0.0 VLV_DIAMETRO_1 flag206
    SELECTF flag206 0.0 tmpf206 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while212:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile212
  whilebody212:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 2.0 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody212
  endwhile212:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_ENCODERRECTOMMF_2:
    MULF VLV_VELOCIDAD_2 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_2
    MOVEF_F 5.6 VLV_DIAMETRO_2
    MULF VLV_DISTANCIA_2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf231
    DATA8 flag231
    DIVF F.1 F.2 tmpf231
    CP_EQF 0.0 F.2 flag231
    SELECTF flag231 0.0 tmpf231 F.0

    DATAF tmpf232
    DATA8 flag232
    DIVF F.0 VLV_DIAMETRO_2 tmpf232
    CP_EQF 0.0 VLV_DIAMETRO_2 flag232
    SELECTF flag232 0.0 tmpf232 VLV_ENC_2

    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_2
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
  while238:
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_GTEQF F.0 VLV_ENC_2 endwhile238
  whilebody238:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_2 VLV_ENCODER_B_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
    SUBF VLV_ENCODER_B_2 VLV_ENCODER_C_2 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_2
    MULF VLV_ERROR_2 2.0 VLV_PROPORCIAL_2
    SUBF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_LTF F.0 VLV_ENC_2 whilebody238
  endwhile238:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMMF_2:
SUB_F_1NEGRORECTOMM_2:
    MULF VLV_VELOCIDAD_3 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_3
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_3
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_3
  while258:
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_LTEQF F.0 10.0 endwhile258
  whilebody258:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_3 VLV_ENCODER_B_3
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_3 VLV_ENCODER_C_3
    SUBF VLV_ENCODER_B_3 VLV_ENCODER_C_3 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_3
    MULF VLV_ERROR_3 2.0 VLV_PROPORCIAL_3
    SUBF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_GTF F.0 10.0 whilebody258
  endwhile258:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGRORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMM_2:
SUB_F_ENCODERGIROMM_3:
    MULF VLV_VELOCIDAD1_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_15
    MULF VLV_VELOCIDAD2_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_15
    MOVEF_F 5.6 VLV_DIAMETRO_15
    MOVEF_F 3.1415926535897932384 F.2
    MULF VLV_DIAMETRO_15 F.2 F.1
    DATAF tmpf278
    DATA8 flag278
    DIVF VLV_ENCODER_15 F.1 tmpf278
    CP_EQF 0.0 F.1 flag278
    SELECTF flag278 0.0 tmpf278 F.0

    MULF F.0 360.0 VLV_DISTANCIA_15
    MATH NEGATE VLV_VELOCIDAD1_15 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_15 VLV_DISTANCIA_15 'True'

	DATA8 layer281
	DATA8 nos281
	DATA8 busy281
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer281 nos281
	JR_EQ8 0 nos281 motornotbusy281
  motorwaiting281:
	OUTPUT_TEST layer281 nos281 busy281
	JR_EQ8 busy281 0 motornotbusy281
	SLEEP
	JR motorwaiting281
  motornotbusy281:
RETSUB_F_ENCODERGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERGIROMM_3:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_35
    STRINGS DUPLICATE 'C' VLV_D_35
    DATAF tmpf282
    DATA8 flag282
    DIVF VLV_V1_35 VLV_V2_35 tmpf282
    CP_EQF 0.0 VLV_V2_35 flag282
    SELECTF flag282 0.0 tmpf282 F.0

    DATAF tmpf283
    DATA8 flag283
    DIVF VLV_V1_35 VLV_V2_35 tmpf283
    CP_EQF 0.0 VLV_V2_35 flag283
    SELECTF flag283 0.0 tmpf283 F.2

    MATH ABS F.2 F.1
    DATAF tmpf285
    DATA8 flag285
    DIVF F.0 F.1 tmpf285
    CP_EQF 0.0 F.1 flag285
    SELECTF flag285 0.0 tmpf285 VLV_SIGNO_35

    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag288
	CP_LTF F.0 F.1 flag288
	SELECTF flag288 F.0 F.1 VLV_VMIN_35
    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag291
	CP_GTF F.0 F.1 flag291
	SELECTF flag291 F.0 F.1 VLV_VMAX_35
    MULF VLV_ANGLE_35 VGV_G1 F.0
    MULF VLV_SIGNO_35 VLV_VMIN_35 F.4
    DATAF tmpf294
    DATA8 flag294
    DIVF F.4 VLV_VMAX_35 tmpf294
    CP_EQF 0.0 VLV_VMAX_35 flag294
    SELECTF flag294 0.0 tmpf294 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf296
    DATA8 flag296
    DIVF -2.0 F.2 tmpf296
    CP_EQF 0.0 F.2 flag296
    SELECTF flag296 0.0 tmpf296 F.1

    MULF F.0 F.1 VLV_ENCODR_35
    CALL TEXT.APPEND VLV_I_35 VLV_D_35 S.0
    MATH NEGATE VLV_V1_35 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_35 VLV_ENCODR_35 'True'

	DATA8 layer300
	DATA8 nos300
	DATA8 busy300
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer300 nos300
	JR_EQ8 0 nos300 motornotbusy300
  motorwaiting300:
	OUTPUT_TEST layer300 nos300 busy300
	JR_EQ8 busy300 0 motornotbusy300
	SLEEP
	JR motorwaiting300
  motornotbusy300:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_SPIN90_1:
    STRINGS DUPLICATE 'B' VLV_I_39
    STRINGS DUPLICATE 'C' VLV_D_39
    MULF 84.0 VGV_G1 VLV_ENCODR_39
    CALL TEXT.APPEND VLV_I_39 VLV_D_39 S.0
    MATH NEGATE VLV_VELOCIDAD_39 F.0
    CALL MOTOR.SCHEDULE S.0 F.0 0.0 VLV_ENCODR_39 0.0 'True' 

	DATA8 layer304
	DATA8 nos304
	DATA8 busy304
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer304 nos304
	JR_EQ8 0 nos304 motornotbusy304
  motorwaiting304:
	OUTPUT_TEST layer304 nos304 busy304
	JR_EQ8 busy304 0 motornotbusy304
	SLEEP
	JR motorwaiting304
  motornotbusy304:
    MOVEF_F 0.0 VLV_ANGLE_39
RETSUB_F_SPIN90_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN90_1:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_56
    STRINGS DUPLICATE 'C' VLV_D_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf307
    DATA8 flag307
    DIVF VLV_ACCELENCODER_56 F.1 tmpf307
    CP_EQF 0.0 F.1 flag307
    SELECTF flag307 0.0 tmpf307 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    CALL MOTOR.RESETCOUNT 'C'
  while310:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or311
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile310
  or311:
  whilebody310:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf315
    DATA8 flag315
    DIVF F.3 VLV_ACCELENCODER_56 tmpf315
    CP_EQF 0.0 VLV_ACCELENCODER_56 flag315
    SELECTF flag315 0.0 tmpf315 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_56 VLV_V0_56 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_56 VLV_VEL_56
    DATA8 flag320
	CP_LTF VLV_VEL_56 VLV_VMAX_56 flag320
	SELECTF flag320 VLV_VEL_56 VLV_VMAX_56 VLV_VEL_56
    MATH ABS VLV_VEL_56 F.0
    DATAF tmpf322
    DATA8 flag322
    DIVF VLV_VEL_56 F.0 tmpf322
    CP_EQF 0.0 F.0 flag322
    SELECTF flag322 0.0 tmpf322 VLV_SENTIDO_56

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_56 VLV_ERROR_56
    ADDF VLV_ERRSUM_56 VLV_ERROR_56 VLV_ERRSUM_56
    MULF VLV_ERROR_56 VLV_KP_56 F.1
    SUBF VLV_ERROR_56 VLV_OLDERROR_56 F.3
    MULF F.3 VLV_KD_56 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_56 VLV_KI_56 F.1
    ADDF F.0 F.1 VLV_U_56
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    ADDF VLV_VEL_56 VLV_U_56 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_56 VLV_U_56 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_56 VLV_OLDERROR_56
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody310
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody310
  endwhile310:
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_72 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_72
    STRINGS DUPLICATE 'B' VLV_I_72
    STRINGS DUPLICATE 'C' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MATH ABS VLV_VELOCIDAD_72 F.0
    DATAF tmpf347
    DATA8 flag347
    DIVF VLV_VELOCIDAD_72 F.0 tmpf347
    CP_EQF 0.0 F.0 flag347
    SELECTF flag347 0.0 tmpf347 VLV_SENTIDO_72

  while348:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or349
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile348
  or349:
  whilebody348:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_72 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_72
    ADDF VLV_ERRSUM_72 VLV_ERROR_72 VLV_ERRSUM_72
    MULF VLV_ERROR_72 VLV_KP_72 F.1
    SUBF VLV_ERROR_72 VLV_OLDERROR_72 F.3
    MULF F.3 VLV_KD_72 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_72 VLV_KI_72 F.1
    ADDF F.0 F.1 VLV_U_72
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    ADDF VLV_VELOCIDAD_72 VLV_U_72 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_72 VLV_U_72 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_72 VLV_OLDERROR_72
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody348
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody348
  endwhile348:
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_76 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_76
    STRINGS DUPLICATE 'B' VLV_I_76
    STRINGS DUPLICATE 'C' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MATH ABS VLV_VELOCIDAD_76 F.0
    DATAF tmpf375
    DATA8 flag375
    DIVF VLV_VELOCIDAD_76 F.0 tmpf375
    CP_EQF 0.0 F.0 flag375
    SELECTF flag375 0.0 tmpf375 VLV_SENTIDO_76

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf378
    DATA8 flag378
    DIVF VLV_ENCODER_76 F.1 tmpf378
    CP_EQF 0.0 F.1 flag378
    SELECTF flag378 0.0 tmpf378 F.0

    MULF F.0 360.0 VLV_ENCODER_76
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
  while381:
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_GTEQF F.0 VLV_ENCODER_76 endwhile381
  whilebody381:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_76 VLV_ENCODER_C_76
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_76 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_76
    ADDF VLV_ERRSUM_76 VLV_ERROR_76 VLV_ERRSUM_76
    MULF VLV_ERROR_76 VLV_KP_76 F.1
    SUBF VLV_ERROR_76 VLV_OLDERROR_76 F.3
    MULF F.3 VLV_KD_76 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_76 VLV_KI_76 F.1
    ADDF F.0 F.1 VLV_U_76
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    ADDF VLV_VELOCIDAD_76 VLV_U_76 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_76 VLV_U_76 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_76 VLV_OLDERROR_76
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_LTF F.0 VLV_ENCODER_76 whilebody381
  endwhile381:
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_88 VGV_SENTIDO_MOTORES VLV_VMAX_88
    STRINGS DUPLICATE 'B' VLV_I_88
    STRINGS DUPLICATE 'C' VLV_D_88
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_88
    MOVEF_F 150.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    CALL MOTOR.RESETCOUNT 'C'
  while408:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or409
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile408
  or409:
  whilebody408:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf413
    DATA8 flag413
    DIVF F.2 VLV_ACCELENCODER_88 tmpf413
    CP_EQF 0.0 VLV_ACCELENCODER_88 flag413
    SELECTF flag413 0.0 tmpf413 F.1

    ADDF VLV_VMAX_88 VLV_V0_88 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_88 VLV_VEL_88
    DATA8 flag417
	CP_LTF VLV_VEL_88 VLV_VMAX_88 flag417
	SELECTF flag417 VLV_VEL_88 VLV_VMAX_88 VLV_VEL_88
    MATH ABS VLV_VEL_88 F.0
    DATAF tmpf419
    DATA8 flag419
    DIVF VLV_VEL_88 F.0 tmpf419
    CP_EQF 0.0 F.0 flag419
    SELECTF flag419 0.0 tmpf419 VLV_SENTIDO_88

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_88 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_88
    MULF VLV_ERRSUM_88 0.9 F.0
    ADDF F.0 VLV_ERROR_88 VLV_ERRSUM_88
    MULF VLV_ERROR_88 VLV_KP_88 F.1
    SUBF VLV_ERROR_88 VLV_OLDERROR_88 F.3
    MULF F.3 VLV_KD_88 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_88 VLV_KI_88 F.1
    ADDF F.0 F.1 VLV_U_88
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    ADDF VLV_VEL_88 VLV_U_88 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_88 VLV_U_88 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_88 VLV_OLDERROR_88
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody408
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody408
  endwhile408:
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_95 F.0 VLV_ENCDIFF_95
    MATH ABS VLV_ENCDIFF_95 F.0
    DATAF tmpf445
    DATA8 flag445
    DIVF VLV_ENCDIFF_95 F.0 tmpf445
    CP_EQF 0.0 F.0 flag445
    SELECTF flag445 0.0 tmpf445 VLV_SIGNO_95

    JR_EQF VLV_ENCDIFF_95 0.0 else446_1
  while447:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile447
  whilebody447:
    MULF VLV_SIGNO_95 VLV_V_95 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody447
  endwhile447:
    CALL MOTOR.STOP 'A' 'True'
  else446_1:
  endif446:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEADSAFE_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    MATH ABS VLV_DIFFA_104 F.5
    MATH ABS VLV_DIFFD_104 F.6
    DATA8 flag463
	CP_GTF F.5 F.6 flag463
	SELECTF flag463 F.5 F.6 F.4
    DATAF tmpf464
    DATA8 flag464
    DIVF F.4 100.0 tmpf464
    CP_EQF 0.0 100.0 flag464
    SELECTF flag464 0.0 tmpf464 F.3

    DATAF tmpf465
    DATA8 flag465
    DIVF VLV_V_104 20.0 tmpf465
    CP_EQF 0.0 20.0 flag465
    SELECTF flag465 0.0 tmpf465 F.4

    DATAF tmpf466
    DATA8 flag466
    DIVF F.3 F.4 tmpf466
    CP_EQF 0.0 F.4 flag466
    SELECTF flag466 0.0 tmpf466 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag469
	CP_GTF F.0 400.0 flag469
	SELECTF flag469 F.0 400.0 VLV_SAFETYTIMER_104
    MATH ABS VLV_DIFFA_104 F.0
    DATAF tmpf471
    DATA8 flag471
    DIVF VLV_DIFFA_104 F.0 tmpf471
    CP_EQF 0.0 F.0 flag471
    SELECTF flag471 0.0 tmpf471 VLV_SIGNOA_104

    MATH ABS VLV_DIFFD_104 F.0
    DATAF tmpf473
    DATA8 flag473
    DIVF VLV_DIFFD_104 F.0 tmpf473
    CP_EQF 0.0 F.0 flag473
    SELECTF flag473 0.0 tmpf473 VLV_SIGNOD_104

    MULF VLV_V_104 VLV_SIGNOA_104 VLV_VELA_104
    MULF VLV_V_104 VLV_SIGNOD_104 VLV_VELD_104
    CALL MOTOR.SCHEDULESYNC 'AD' VLV_VELA_104 VLV_VELD_104 5.0 'False'

	DATA8 layer476
	DATA8 nos476
	DATA8 busy476
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer476 nos476
	JR_EQ8 0 nos476 motornotbusy476
  motorwaiting476:
	OUTPUT_TEST layer476 nos476 busy476
	JR_EQ8 busy476 0 motornotbusy476
	SLEEP
	JR motorwaiting476
  motornotbusy476:
    CALL LCD.CLEAR
    TIMER_READ timeMC3
  while479:
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 or480
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_EQF F.0 0.0 endwhile479
  or480:
  whilebody479:
    MULF VLV_DIFFA_104 VLV_SIGNOA_104 F.0
    JR_LTEQF F.0 0.0 else483_1
    MOVEF_8 VLV_VELA_104 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif483
  else483_1:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else483_2:
  endif483:
    MULF VLV_DIFFD_104 VLV_SIGNOD_104 F.0
    JR_LTEQF F.0 0.0 else487_1
    MOVEF_8 VLV_VELD_104 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif487
  else487_1:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else487_2:
  endif487:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTEQF F.0 VLV_SAFETYTIMER_104 else491_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
  else491_1:
  endif491:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_104 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 whilebody479
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_NEQF F.0 0.0 whilebody479
  endwhile479:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEADSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEADSAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_105 F.0 VLV_ENCDIFF_105
    MATH ABS VLV_ENCDIFF_105 F.0
    DATAF tmpf508
    DATA8 flag508
    DIVF VLV_ENCDIFF_105 F.0 tmpf508
    CP_EQF 0.0 F.0 flag508
    SELECTF flag508 0.0 tmpf508 VLV_SIGNO_105

    JR_EQF VLV_ENCDIFF_105 0.0 else509_1
    MULF VLV_SIGNO_105 VLV_V_105 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while512:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile512
  whilebody512:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody512
  endwhile512:
    CALL MOTOR.STOP 'D' 'True'
  else509_1:
  endif509:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while521:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_108 endwhile521
  whilebody521:
    MOVEF_8 VLV_V_108 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_108 whilebody521
  endwhile521:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_109 F.0 VLV_ENCDIFF_109
    MATH ABS VLV_ENCDIFF_109 F.0
    DATAF tmpf529
    DATA8 flag529
    DIVF VLV_ENCDIFF_109 F.0 tmpf529
    CP_EQF 0.0 F.0 flag529
    SELECTF flag529 0.0 tmpf529 VLV_SIGNO_109

    MATH ABS VLV_ENCDIFF_109 F.4
    DATAF tmpf531
    DATA8 flag531
    DIVF F.4 100.0 tmpf531
    CP_EQF 0.0 100.0 flag531
    SELECTF flag531 0.0 tmpf531 F.3

    DATAF tmpf532
    DATA8 flag532
    DIVF VLV_V_109 20.0 tmpf532
    CP_EQF 0.0 20.0 flag532
    SELECTF flag532 0.0 tmpf532 F.4

    DATAF tmpf533
    DATA8 flag533
    DIVF F.3 F.4 tmpf533
    CP_EQF 0.0 F.4 flag533
    SELECTF flag533 0.0 tmpf533 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag536
	CP_GTF F.0 400.0 flag536
	SELECTF flag536 F.0 400.0 VLV_SAFETYTIMER_109
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_109 0.0 else538_1
  while539:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile539
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_109 endwhile539
  whilebody539:
    MULF VLV_SIGNO_109 VLV_V_109 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_109 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and550
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_109 whilebody539
  and550:
  endwhile539:
    CALL MOTOR.STOP 'D' 'True'
  else538_1:
  endif538:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer556
	DATA8 no556
	DATA8 mode8556
	
	MOVEF_8 1.0 no556
	SUB8 no556 1 no556
	DIV8 no556 4 layer556
	MATH MOD8 no556 4 no556

	MOVEF_8 4.0 mode8556
	
	INPUT_DEVICE READY_RAW layer556 no556 0 mode8556 0
    MOVEF_F 15.0 VLV_RED_110
    MOVEF_F 60.0 VLV_YELLOW_110
    MOVEF_F 170.0 VLV_GREEN_110
    MOVEF_F 330.0 VLV_BLUE_110
    MOVEF_F 10.0 VLV_VALUENEGRO_110
    MOVEF_F 100.0 VLV_VALUEBLANCO_110
    MOVEF_F 147.0 VLV_RWHITE_110
    MOVEF_F 143.0 VLV_GWHITE_110
    MOVEF_F 160.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    MOVEF_F 0.0 VLV_COLOR_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_110
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_110
  for562:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor562
  forbody562:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_110
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_110 VLV_RGB_110
    DATAF tmpf567
    DATA8 flag567
    DIVF VLV_RRAW_110 VLV_RWHITE_110 tmpf567
    CP_EQF 0.0 VLV_RWHITE_110 flag567
    SELECTF flag567 0.0 tmpf567 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    DATAF tmpf571
    DATA8 flag571
    DIVF VLV_GRAW_110 VLV_GWHITE_110 tmpf571
    CP_EQF 0.0 VLV_GWHITE_110 flag571
    SELECTF flag571 0.0 tmpf571 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    DATAF tmpf575
    DATA8 flag575
    DIVF VLV_BRAW_110 VLV_BWHITE_110 tmpf575
    CP_EQF 0.0 VLV_BWHITE_110 flag575
    SELECTF flag575 0.0 tmpf575 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_RNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.3 VLV_GNORMA_110
    DATA8 flag581
	CP_GTF F.2 F.3 flag581
	SELECTF flag581 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_BNORMA_110
    DATA8 flag583
	CP_GTF F.1 F.2 flag583
	SELECTF flag583 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    DATA32 milliseconds585
	MOVEF_32 5.0 milliseconds585
	DATA32 timer585
	TIMER_WAIT milliseconds585 timer585
	TIMER_READY timer585
    ADDF VLV_J_110 1.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody562
  endfor562:
    MOVEF_F 1.0 VLV_J_110
  for587:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor587
  forbody587:
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_110
    ADDF F.0 F.1 VLV_RNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_110
    ADDF F.0 F.1 VLV_GNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_110
    ADDF F.0 F.1 VLV_BNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_110
    ADDF F.0 F.1 VLV_MAX_110
    ADDF VLV_J_110 2.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody587
  endfor587:
    DATAF tmpf605
    DATA8 flag605
    DIVF VLV_RNORM_110 VLV_REPS_110 tmpf605
    CP_EQF 0.0 VLV_REPS_110 flag605
    SELECTF flag605 0.0 tmpf605 VLV_RNORM_110

    DATAF tmpf606
    DATA8 flag606
    DIVF VLV_GNORM_110 VLV_REPS_110 tmpf606
    CP_EQF 0.0 VLV_REPS_110 flag606
    SELECTF flag606 0.0 tmpf606 VLV_GNORM_110

    DATAF tmpf607
    DATA8 flag607
    DIVF VLV_BNORM_110 VLV_REPS_110 tmpf607
    CP_EQF 0.0 VLV_REPS_110 flag607
    SELECTF flag607 0.0 tmpf607 VLV_BNORM_110

    DATAF tmpf608
    DATA8 flag608
    DIVF VLV_MAX_110 VLV_REPS_110 tmpf608
    CP_EQF 0.0 VLV_REPS_110 flag608
    SELECTF flag608 0.0 tmpf608 VLV_MAX_110

    DATA8 flag609
	CP_LTF VLV_RNORM_110 VLV_GNORM_110 flag609
	SELECTF flag609 VLV_RNORM_110 VLV_GNORM_110 F.0
    DATA8 flag610
	CP_LTF F.0 VLV_BNORM_110 flag610
	SELECTF flag610 F.0 VLV_BNORM_110 VLV_MIN_110
    JR_NEQF VLV_MAX_110 VLV_MIN_110 else611_1
    MOVEF_F 0.0 VLV_HUE_110
    JR endif611
  else611_1:
    JR_NEQF VLV_MAX_110 VLV_RNORM_110 else611_2
    JR_LTF VLV_GNORM_110 VLV_BNORM_110 else612_1
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_110 VLV_MIN_110 F.1
    DATAF tmpf616
    DATA8 flag616
    DIVF F.0 F.1 tmpf616
    CP_EQF 0.0 F.1 flag616
    SELECTF flag616 0.0 tmpf616 VLV_HUE_110

    JR endif612
  else612_1:
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf620
    DATA8 flag620
    DIVF F.1 F.2 tmpf620
    CP_EQF 0.0 F.2 flag620
    SELECTF flag620 0.0 tmpf620 F.0

    ADDF F.0 360.0 VLV_HUE_110
  else612_2:
  endif612:
    JR endif611
  else611_2:
    JR_NEQF VLV_MAX_110 VLV_GNORM_110 else611_3
    SUBF VLV_BNORM_110 VLV_RNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf625
    DATA8 flag625
    DIVF F.1 F.2 tmpf625
    CP_EQF 0.0 F.2 flag625
    SELECTF flag625 0.0 tmpf625 F.0

    ADDF F.0 120.0 VLV_HUE_110
    JR endif611
  else611_3:
    SUBF VLV_RNORM_110 VLV_GNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf630
    DATA8 flag630
    DIVF F.1 F.2 tmpf630
    CP_EQF 0.0 F.2 flag630
    SELECTF flag630 0.0 tmpf630 F.0

    ADDF F.0 240.0 VLV_HUE_110
  else611_4:
  endif611:
    JR_NEQF VLV_MAX_110 0.0 else632_1
    MOVEF_F 0.0 VLV_SAT_110
    JR endif632
  else632_1:
    DATAF tmpf633
    DATA8 flag633
    DIVF VLV_MIN_110 VLV_MAX_110 tmpf633
    CP_EQF 0.0 VLV_MAX_110 flag633
    SELECTF flag633 0.0 tmpf633 F.0

    SUBF 1.0 F.0 VLV_SAT_110
  else632_2:
  endif632:
    MOVEF_F VLV_MAX_110 VLV_VALUE_110
    ADDF VLV_VALUEBLANCO_110 VLV_VALUENEGRO_110 F.0
    DATAF tmpf636
    DATA8 flag636
    DIVF F.0 2.0 tmpf636
    CP_EQF 0.0 2.0 flag636
    SELECTF flag636 0.0 tmpf636 VLV_RGBGREY_110

    ADDF VLV_RNORM_110 VLV_GNORM_110 F.1
    ADDF F.1 VLV_BNORM_110 F.0
    JR_GTF F.0 3.0 else637_1
    MOVEF_F 0.0 VLV_COLOR_110
    JR endif637
  else637_1:
    JR_GTEQF VLV_SAT_110 0.4 else640_1
    JR_LTEQF VLV_VALUE_110 VLV_RGBGREY_110 else641_1
    MOVEF_F 6.0 VLV_COLOR_110
    JR endif641
  else641_1:
    MOVEF_F 1.0 VLV_COLOR_110
  else641_2:
  endif641:
    JR endif640
  else640_1:
    JR_LTF VLV_HUE_110 0.0 else642_1
    JR_GTEQF VLV_HUE_110 VLV_RED_110 else642_1
    MOVEF_F 5.0 VLV_COLOR_110
    JR endif642
  else642_1:
    JR_LTF VLV_HUE_110 VLV_RED_110 else642_2
    JR_GTEQF VLV_HUE_110 VLV_YELLOW_110 else642_2
    MOVEF_F 4.0 VLV_COLOR_110
    JR endif642
  else642_2:
    JR_LTF VLV_HUE_110 VLV_YELLOW_110 else642_3
    JR_GTEQF VLV_HUE_110 VLV_GREEN_110 else642_3
    MOVEF_F 3.0 VLV_COLOR_110
    JR endif642
  else642_3:
    JR_LTF VLV_HUE_110 VLV_GREEN_110 else642_4
    JR_GTEQF VLV_HUE_110 VLV_BLUE_110 else642_4
    MOVEF_F 2.0 VLV_COLOR_110
    JR endif642
  else642_4:
    MOVEF_F 5.0 VLV_COLOR_110
  else642_5:
  endif642:
  else640_2:
  endif640:
  else637_2:
  endif637:
    STRINGS VALUE_FORMATTED VLV_RRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_110 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB658:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer659
	DATA8 no659
	DATA8 mode8659
	
	MOVEF_8 2.0 no659
	SUB8 no659 1 no659
	DIV8 no659 4 layer659
	MATH MOD8 no659 4 no659

	MOVEF_8 4.0 mode8659
	
	INPUT_DEVICE READY_RAW layer659 no659 0 mode8659 0
    MOVEF_F 15.0 VLV_RED_111
    MOVEF_F 60.0 VLV_YELLOW_111
    MOVEF_F 170.0 VLV_GREEN_111
    MOVEF_F 330.0 VLV_BLUE_111
    MOVEF_F 10.0 VLV_VALUENEGRO_111
    MOVEF_F 100.0 VLV_VALUEBLANCO_111
    MOVEF_F 147.0 VLV_RWHITE_111
    MOVEF_F 143.0 VLV_GWHITE_111
    MOVEF_F 160.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    MOVEF_F 0.0 VLV_COLOR_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_111
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_111
  for665:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor665
  forbody665:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_111
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_111 VLV_RGB_111
    DATAF tmpf670
    DATA8 flag670
    DIVF VLV_RRAW_111 VLV_RWHITE_111 tmpf670
    CP_EQF 0.0 VLV_RWHITE_111 flag670
    SELECTF flag670 0.0 tmpf670 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    DATAF tmpf674
    DATA8 flag674
    DIVF VLV_GRAW_111 VLV_GWHITE_111 tmpf674
    CP_EQF 0.0 VLV_GWHITE_111 flag674
    SELECTF flag674 0.0 tmpf674 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    DATAF tmpf678
    DATA8 flag678
    DIVF VLV_BRAW_111 VLV_BWHITE_111 tmpf678
    CP_EQF 0.0 VLV_BWHITE_111 flag678
    SELECTF flag678 0.0 tmpf678 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_RNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.3 VLV_GNORMA_111
    DATA8 flag684
	CP_GTF F.2 F.3 flag684
	SELECTF flag684 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_BNORMA_111
    DATA8 flag686
	CP_GTF F.1 F.2 flag686
	SELECTF flag686 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    DATA32 milliseconds688
	MOVEF_32 5.0 milliseconds688
	DATA32 timer688
	TIMER_WAIT milliseconds688 timer688
	TIMER_READY timer688
    ADDF VLV_J_111 1.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody665
  endfor665:
    MOVEF_F 1.0 VLV_J_111
  for690:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor690
  forbody690:
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_111
    ADDF F.0 F.1 VLV_RNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_111
    ADDF F.0 F.1 VLV_GNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_111
    ADDF F.0 F.1 VLV_BNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_111
    ADDF F.0 F.1 VLV_MAX_111
    ADDF VLV_J_111 2.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody690
  endfor690:
    DATAF tmpf708
    DATA8 flag708
    DIVF VLV_RNORM_111 VLV_REPS_111 tmpf708
    CP_EQF 0.0 VLV_REPS_111 flag708
    SELECTF flag708 0.0 tmpf708 VLV_RNORM_111

    DATAF tmpf709
    DATA8 flag709
    DIVF VLV_GNORM_111 VLV_REPS_111 tmpf709
    CP_EQF 0.0 VLV_REPS_111 flag709
    SELECTF flag709 0.0 tmpf709 VLV_GNORM_111

    DATAF tmpf710
    DATA8 flag710
    DIVF VLV_BNORM_111 VLV_REPS_111 tmpf710
    CP_EQF 0.0 VLV_REPS_111 flag710
    SELECTF flag710 0.0 tmpf710 VLV_BNORM_111

    DATAF tmpf711
    DATA8 flag711
    DIVF VLV_MAX_111 VLV_REPS_111 tmpf711
    CP_EQF 0.0 VLV_REPS_111 flag711
    SELECTF flag711 0.0 tmpf711 VLV_MAX_111

    DATA8 flag712
	CP_LTF VLV_RNORM_111 VLV_GNORM_111 flag712
	SELECTF flag712 VLV_RNORM_111 VLV_GNORM_111 F.0
    DATA8 flag713
	CP_LTF F.0 VLV_BNORM_111 flag713
	SELECTF flag713 F.0 VLV_BNORM_111 VLV_MIN_111
    JR_NEQF VLV_MAX_111 VLV_MIN_111 else714_1
    MOVEF_F 0.0 VLV_HUE_111
    JR endif714
  else714_1:
    JR_NEQF VLV_MAX_111 VLV_RNORM_111 else714_2
    JR_LTF VLV_GNORM_111 VLV_BNORM_111 else715_1
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_111 VLV_MIN_111 F.1
    DATAF tmpf719
    DATA8 flag719
    DIVF F.0 F.1 tmpf719
    CP_EQF 0.0 F.1 flag719
    SELECTF flag719 0.0 tmpf719 VLV_HUE_111

    JR endif715
  else715_1:
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf723
    DATA8 flag723
    DIVF F.1 F.2 tmpf723
    CP_EQF 0.0 F.2 flag723
    SELECTF flag723 0.0 tmpf723 F.0

    ADDF F.0 360.0 VLV_HUE_111
  else715_2:
  endif715:
    JR endif714
  else714_2:
    JR_NEQF VLV_MAX_111 VLV_GNORM_111 else714_3
    SUBF VLV_BNORM_111 VLV_RNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf728
    DATA8 flag728
    DIVF F.1 F.2 tmpf728
    CP_EQF 0.0 F.2 flag728
    SELECTF flag728 0.0 tmpf728 F.0

    ADDF F.0 120.0 VLV_HUE_111
    JR endif714
  else714_3:
    SUBF VLV_RNORM_111 VLV_GNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf733
    DATA8 flag733
    DIVF F.1 F.2 tmpf733
    CP_EQF 0.0 F.2 flag733
    SELECTF flag733 0.0 tmpf733 F.0

    ADDF F.0 240.0 VLV_HUE_111
  else714_4:
  endif714:
    JR_NEQF VLV_MAX_111 0.0 else735_1
    MOVEF_F 0.0 VLV_SAT_111
    JR endif735
  else735_1:
    DATAF tmpf736
    DATA8 flag736
    DIVF VLV_MIN_111 VLV_MAX_111 tmpf736
    CP_EQF 0.0 VLV_MAX_111 flag736
    SELECTF flag736 0.0 tmpf736 F.0

    SUBF 1.0 F.0 VLV_SAT_111
  else735_2:
  endif735:
    MOVEF_F VLV_MAX_111 VLV_VALUE_111
    ADDF VLV_VALUEBLANCO_111 VLV_VALUENEGRO_111 F.0
    DATAF tmpf739
    DATA8 flag739
    DIVF F.0 2.0 tmpf739
    CP_EQF 0.0 2.0 flag739
    SELECTF flag739 0.0 tmpf739 VLV_RGBGREY_111

    ADDF VLV_RNORM_111 VLV_GNORM_111 F.1
    ADDF F.1 VLV_BNORM_111 F.0
    JR_GTF F.0 3.0 else740_1
    MOVEF_F 0.0 VLV_COLOR_111
    JR endif740
  else740_1:
    JR_GTEQF VLV_SAT_111 0.4 else743_1
    JR_LTEQF VLV_VALUE_111 VLV_RGBGREY_111 else744_1
    MOVEF_F 6.0 VLV_COLOR_111
    JR endif744
  else744_1:
    MOVEF_F 1.0 VLV_COLOR_111
  else744_2:
  endif744:
    JR endif743
  else743_1:
    JR_LTF VLV_HUE_111 0.0 else745_1
    JR_GTEQF VLV_HUE_111 VLV_RED_111 else745_1
    MOVEF_F 5.0 VLV_COLOR_111
    JR endif745
  else745_1:
    JR_LTF VLV_HUE_111 VLV_RED_111 else745_2
    JR_GTEQF VLV_HUE_111 VLV_YELLOW_111 else745_2
    MOVEF_F 4.0 VLV_COLOR_111
    JR endif745
  else745_2:
    JR_LTF VLV_HUE_111 VLV_YELLOW_111 else745_3
    JR_GTEQF VLV_HUE_111 VLV_GREEN_111 else745_3
    MOVEF_F 3.0 VLV_COLOR_111
    JR endif745
  else745_3:
    JR_LTF VLV_HUE_111 VLV_GREEN_111 else745_4
    JR_GTEQF VLV_HUE_111 VLV_BLUE_111 else745_4
    MOVEF_F 2.0 VLV_COLOR_111
    JR endif745
  else745_4:
    MOVEF_F 5.0 VLV_COLOR_111
  else745_5:
  endif745:
  else743_2:
  endif743:
  else740_2:
  endif740:
    STRINGS VALUE_FORMATTED VLV_RRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_111 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB761:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer762
	DATA8 no762
	DATA8 mode8762
	
	MOVEF_8 3.0 no762
	SUB8 no762 1 no762
	DIV8 no762 4 layer762
	MATH MOD8 no762 4 no762

	MOVEF_8 4.0 mode8762
	
	INPUT_DEVICE READY_RAW layer762 no762 0 mode8762 0
    MOVEF_F 15.0 VLV_RED_112
    MOVEF_F 60.0 VLV_YELLOW_112
    MOVEF_F 170.0 VLV_GREEN_112
    MOVEF_F 330.0 VLV_BLUE_112
    MOVEF_F 10.0 VLV_VALUENEGRO_112
    MOVEF_F 100.0 VLV_VALUEBLANCO_112
    MOVEF_F 147.0 VLV_RWHITE_112
    MOVEF_F 143.0 VLV_GWHITE_112
    MOVEF_F 160.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    MOVEF_F 0.0 VLV_COLOR_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_112
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_112
  for768:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor768
  forbody768:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_112
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_112 VLV_RGB_112
    DATAF tmpf773
    DATA8 flag773
    DIVF VLV_RRAW_112 VLV_RWHITE_112 tmpf773
    CP_EQF 0.0 VLV_RWHITE_112 flag773
    SELECTF flag773 0.0 tmpf773 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    DATAF tmpf777
    DATA8 flag777
    DIVF VLV_GRAW_112 VLV_GWHITE_112 tmpf777
    CP_EQF 0.0 VLV_GWHITE_112 flag777
    SELECTF flag777 0.0 tmpf777 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    DATAF tmpf781
    DATA8 flag781
    DIVF VLV_BRAW_112 VLV_BWHITE_112 tmpf781
    CP_EQF 0.0 VLV_BWHITE_112 flag781
    SELECTF flag781 0.0 tmpf781 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_RNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.3 VLV_GNORMA_112
    DATA8 flag787
	CP_GTF F.2 F.3 flag787
	SELECTF flag787 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_BNORMA_112
    DATA8 flag789
	CP_GTF F.1 F.2 flag789
	SELECTF flag789 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    DATA32 milliseconds791
	MOVEF_32 5.0 milliseconds791
	DATA32 timer791
	TIMER_WAIT milliseconds791 timer791
	TIMER_READY timer791
    ADDF VLV_J_112 1.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody768
  endfor768:
    MOVEF_F 1.0 VLV_J_112
  for793:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor793
  forbody793:
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_112
    ADDF F.0 F.1 VLV_RNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_112
    ADDF F.0 F.1 VLV_GNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_112
    ADDF F.0 F.1 VLV_BNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_112
    ADDF F.0 F.1 VLV_MAX_112
    ADDF VLV_J_112 2.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody793
  endfor793:
    DATAF tmpf811
    DATA8 flag811
    DIVF VLV_RNORM_112 VLV_REPS_112 tmpf811
    CP_EQF 0.0 VLV_REPS_112 flag811
    SELECTF flag811 0.0 tmpf811 VLV_RNORM_112

    DATAF tmpf812
    DATA8 flag812
    DIVF VLV_GNORM_112 VLV_REPS_112 tmpf812
    CP_EQF 0.0 VLV_REPS_112 flag812
    SELECTF flag812 0.0 tmpf812 VLV_GNORM_112

    DATAF tmpf813
    DATA8 flag813
    DIVF VLV_BNORM_112 VLV_REPS_112 tmpf813
    CP_EQF 0.0 VLV_REPS_112 flag813
    SELECTF flag813 0.0 tmpf813 VLV_BNORM_112

    DATAF tmpf814
    DATA8 flag814
    DIVF VLV_MAX_112 VLV_REPS_112 tmpf814
    CP_EQF 0.0 VLV_REPS_112 flag814
    SELECTF flag814 0.0 tmpf814 VLV_MAX_112

    DATA8 flag815
	CP_LTF VLV_RNORM_112 VLV_GNORM_112 flag815
	SELECTF flag815 VLV_RNORM_112 VLV_GNORM_112 F.0
    DATA8 flag816
	CP_LTF F.0 VLV_BNORM_112 flag816
	SELECTF flag816 F.0 VLV_BNORM_112 VLV_MIN_112
    JR_NEQF VLV_MAX_112 VLV_MIN_112 else817_1
    MOVEF_F 0.0 VLV_HUE_112
    JR endif817
  else817_1:
    JR_NEQF VLV_MAX_112 VLV_RNORM_112 else817_2
    JR_LTF VLV_GNORM_112 VLV_BNORM_112 else818_1
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_112 VLV_MIN_112 F.1
    DATAF tmpf822
    DATA8 flag822
    DIVF F.0 F.1 tmpf822
    CP_EQF 0.0 F.1 flag822
    SELECTF flag822 0.0 tmpf822 VLV_HUE_112

    JR endif818
  else818_1:
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf826
    DATA8 flag826
    DIVF F.1 F.2 tmpf826
    CP_EQF 0.0 F.2 flag826
    SELECTF flag826 0.0 tmpf826 F.0

    ADDF F.0 360.0 VLV_HUE_112
  else818_2:
  endif818:
    JR endif817
  else817_2:
    JR_NEQF VLV_MAX_112 VLV_GNORM_112 else817_3
    SUBF VLV_BNORM_112 VLV_RNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf831
    DATA8 flag831
    DIVF F.1 F.2 tmpf831
    CP_EQF 0.0 F.2 flag831
    SELECTF flag831 0.0 tmpf831 F.0

    ADDF F.0 120.0 VLV_HUE_112
    JR endif817
  else817_3:
    SUBF VLV_RNORM_112 VLV_GNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf836
    DATA8 flag836
    DIVF F.1 F.2 tmpf836
    CP_EQF 0.0 F.2 flag836
    SELECTF flag836 0.0 tmpf836 F.0

    ADDF F.0 240.0 VLV_HUE_112
  else817_4:
  endif817:
    JR_NEQF VLV_MAX_112 0.0 else838_1
    MOVEF_F 0.0 VLV_SAT_112
    JR endif838
  else838_1:
    DATAF tmpf839
    DATA8 flag839
    DIVF VLV_MIN_112 VLV_MAX_112 tmpf839
    CP_EQF 0.0 VLV_MAX_112 flag839
    SELECTF flag839 0.0 tmpf839 F.0

    SUBF 1.0 F.0 VLV_SAT_112
  else838_2:
  endif838:
    MOVEF_F VLV_MAX_112 VLV_VALUE_112
    ADDF VLV_VALUEBLANCO_112 VLV_VALUENEGRO_112 F.0
    DATAF tmpf842
    DATA8 flag842
    DIVF F.0 2.0 tmpf842
    CP_EQF 0.0 2.0 flag842
    SELECTF flag842 0.0 tmpf842 VLV_RGBGREY_112

    ADDF VLV_RNORM_112 VLV_GNORM_112 F.1
    ADDF F.1 VLV_BNORM_112 F.0
    JR_GTF F.0 3.0 else843_1
    MOVEF_F 0.0 VLV_COLOR_112
    JR endif843
  else843_1:
    JR_GTEQF VLV_SAT_112 0.4 else846_1
    JR_LTEQF VLV_VALUE_112 VLV_RGBGREY_112 else847_1
    MOVEF_F 6.0 VLV_COLOR_112
    JR endif847
  else847_1:
    MOVEF_F 1.0 VLV_COLOR_112
  else847_2:
  endif847:
    JR endif846
  else846_1:
    JR_LTF VLV_HUE_112 0.0 else848_1
    JR_GTEQF VLV_HUE_112 VLV_RED_112 else848_1
    MOVEF_F 5.0 VLV_COLOR_112
    JR endif848
  else848_1:
    JR_LTF VLV_HUE_112 VLV_RED_112 else848_2
    JR_GTEQF VLV_HUE_112 VLV_YELLOW_112 else848_2
    MOVEF_F 4.0 VLV_COLOR_112
    JR endif848
  else848_2:
    JR_LTF VLV_HUE_112 VLV_YELLOW_112 else848_3
    JR_GTEQF VLV_HUE_112 VLV_GREEN_112 else848_3
    MOVEF_F 3.0 VLV_COLOR_112
    JR endif848
  else848_3:
    JR_LTF VLV_HUE_112 VLV_GREEN_112 else848_4
    JR_GTEQF VLV_HUE_112 VLV_BLUE_112 else848_4
    MOVEF_F 2.0 VLV_COLOR_112
    JR endif848
  else848_4:
    MOVEF_F 5.0 VLV_COLOR_112
  else848_5:
  endif848:
  else846_2:
  endif846:
  else843_2:
  endif843:
    STRINGS VALUE_FORMATTED VLV_RRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_112 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB864:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer865
	DATA8 no865
	DATA8 mode8865
	
	MOVEF_8 4.0 no865
	SUB8 no865 1 no865
	DIV8 no865 4 layer865
	MATH MOD8 no865 4 no865

	MOVEF_8 4.0 mode8865
	
	INPUT_DEVICE READY_RAW layer865 no865 0 mode8865 0
    MOVEF_F 15.0 VLV_RED_113
    MOVEF_F 60.0 VLV_YELLOW_113
    MOVEF_F 170.0 VLV_GREEN_113
    MOVEF_F 330.0 VLV_BLUE_113
    MOVEF_F 10.0 VLV_VALUENEGRO_113
    MOVEF_F 100.0 VLV_VALUEBLANCO_113
    MOVEF_F 147.0 VLV_RWHITE_113
    MOVEF_F 143.0 VLV_GWHITE_113
    MOVEF_F 160.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_113
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_113
  for871:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor871
  forbody871:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_113
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_113 VLV_RGB_113
    DATAF tmpf876
    DATA8 flag876
    DIVF VLV_RRAW_113 VLV_RWHITE_113 tmpf876
    CP_EQF 0.0 VLV_RWHITE_113 flag876
    SELECTF flag876 0.0 tmpf876 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    DATAF tmpf880
    DATA8 flag880
    DIVF VLV_GRAW_113 VLV_GWHITE_113 tmpf880
    CP_EQF 0.0 VLV_GWHITE_113 flag880
    SELECTF flag880 0.0 tmpf880 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    DATAF tmpf884
    DATA8 flag884
    DIVF VLV_BRAW_113 VLV_BWHITE_113 tmpf884
    CP_EQF 0.0 VLV_BWHITE_113 flag884
    SELECTF flag884 0.0 tmpf884 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_RNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.3 VLV_GNORMA_113
    DATA8 flag890
	CP_GTF F.2 F.3 flag890
	SELECTF flag890 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_BNORMA_113
    DATA8 flag892
	CP_GTF F.1 F.2 flag892
	SELECTF flag892 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    DATA32 milliseconds894
	MOVEF_32 5.0 milliseconds894
	DATA32 timer894
	TIMER_WAIT milliseconds894 timer894
	TIMER_READY timer894
    ADDF VLV_J_113 1.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody871
  endfor871:
    MOVEF_F 1.0 VLV_J_113
  for896:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor896
  forbody896:
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_113
    ADDF F.0 F.1 VLV_RNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_113
    ADDF F.0 F.1 VLV_GNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_113
    ADDF F.0 F.1 VLV_BNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_113
    ADDF F.0 F.1 VLV_MAX_113
    ADDF VLV_J_113 2.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody896
  endfor896:
    DATAF tmpf914
    DATA8 flag914
    DIVF VLV_RNORM_113 VLV_REPS_113 tmpf914
    CP_EQF 0.0 VLV_REPS_113 flag914
    SELECTF flag914 0.0 tmpf914 VLV_RNORM_113

    DATAF tmpf915
    DATA8 flag915
    DIVF VLV_GNORM_113 VLV_REPS_113 tmpf915
    CP_EQF 0.0 VLV_REPS_113 flag915
    SELECTF flag915 0.0 tmpf915 VLV_GNORM_113

    DATAF tmpf916
    DATA8 flag916
    DIVF VLV_BNORM_113 VLV_REPS_113 tmpf916
    CP_EQF 0.0 VLV_REPS_113 flag916
    SELECTF flag916 0.0 tmpf916 VLV_BNORM_113

    DATAF tmpf917
    DATA8 flag917
    DIVF VLV_MAX_113 VLV_REPS_113 tmpf917
    CP_EQF 0.0 VLV_REPS_113 flag917
    SELECTF flag917 0.0 tmpf917 VLV_MAX_113

    DATA8 flag918
	CP_LTF VLV_RNORM_113 VLV_GNORM_113 flag918
	SELECTF flag918 VLV_RNORM_113 VLV_GNORM_113 F.0
    DATA8 flag919
	CP_LTF F.0 VLV_BNORM_113 flag919
	SELECTF flag919 F.0 VLV_BNORM_113 VLV_MIN_113
    JR_NEQF VLV_MAX_113 VLV_MIN_113 else920_1
    MOVEF_F 0.0 VLV_HUE_113
    JR endif920
  else920_1:
    JR_NEQF VLV_MAX_113 VLV_RNORM_113 else920_2
    JR_LTF VLV_GNORM_113 VLV_BNORM_113 else921_1
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_113 VLV_MIN_113 F.1
    DATAF tmpf925
    DATA8 flag925
    DIVF F.0 F.1 tmpf925
    CP_EQF 0.0 F.1 flag925
    SELECTF flag925 0.0 tmpf925 VLV_HUE_113

    JR endif921
  else921_1:
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf929
    DATA8 flag929
    DIVF F.1 F.2 tmpf929
    CP_EQF 0.0 F.2 flag929
    SELECTF flag929 0.0 tmpf929 F.0

    ADDF F.0 360.0 VLV_HUE_113
  else921_2:
  endif921:
    JR endif920
  else920_2:
    JR_NEQF VLV_MAX_113 VLV_GNORM_113 else920_3
    SUBF VLV_BNORM_113 VLV_RNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf934
    DATA8 flag934
    DIVF F.1 F.2 tmpf934
    CP_EQF 0.0 F.2 flag934
    SELECTF flag934 0.0 tmpf934 F.0

    ADDF F.0 120.0 VLV_HUE_113
    JR endif920
  else920_3:
    SUBF VLV_RNORM_113 VLV_GNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf939
    DATA8 flag939
    DIVF F.1 F.2 tmpf939
    CP_EQF 0.0 F.2 flag939
    SELECTF flag939 0.0 tmpf939 F.0

    ADDF F.0 240.0 VLV_HUE_113
  else920_4:
  endif920:
    JR_NEQF VLV_MAX_113 0.0 else941_1
    MOVEF_F 0.0 VLV_SAT_113
    JR endif941
  else941_1:
    DATAF tmpf942
    DATA8 flag942
    DIVF VLV_MIN_113 VLV_MAX_113 tmpf942
    CP_EQF 0.0 VLV_MAX_113 flag942
    SELECTF flag942 0.0 tmpf942 F.0

    SUBF 1.0 F.0 VLV_SAT_113
  else941_2:
  endif941:
    MOVEF_F VLV_MAX_113 VLV_VALUE_113
    ADDF VLV_VALUEBLANCO_113 VLV_VALUENEGRO_113 F.0
    DATAF tmpf945
    DATA8 flag945
    DIVF F.0 2.0 tmpf945
    CP_EQF 0.0 2.0 flag945
    SELECTF flag945 0.0 tmpf945 VLV_RGBGREY_113

    ADDF VLV_RNORM_113 VLV_GNORM_113 F.1
    ADDF F.1 VLV_BNORM_113 F.0
    JR_GTF F.0 3.0 else946_1
    MOVEF_F 0.0 VLV_COLOR_113
    JR endif946
  else946_1:
    JR_GTEQF VLV_SAT_113 0.4 else949_1
    JR_LTEQF VLV_VALUE_113 VLV_RGBGREY_113 else950_1
    MOVEF_F 6.0 VLV_COLOR_113
    JR endif950
  else950_1:
    MOVEF_F 1.0 VLV_COLOR_113
  else950_2:
  endif950:
    JR endif949
  else949_1:
    JR_LTF VLV_HUE_113 0.0 else951_1
    JR_GTEQF VLV_HUE_113 VLV_RED_113 else951_1
    MOVEF_F 5.0 VLV_COLOR_113
    JR endif951
  else951_1:
    JR_LTF VLV_HUE_113 VLV_RED_113 else951_2
    JR_GTEQF VLV_HUE_113 VLV_YELLOW_113 else951_2
    MOVEF_F 4.0 VLV_COLOR_113
    JR endif951
  else951_2:
    JR_LTF VLV_HUE_113 VLV_YELLOW_113 else951_3
    JR_GTEQF VLV_HUE_113 VLV_GREEN_113 else951_3
    MOVEF_F 3.0 VLV_COLOR_113
    JR endif951
  else951_3:
    JR_LTF VLV_HUE_113 VLV_GREEN_113 else951_4
    JR_GTEQF VLV_HUE_113 VLV_BLUE_113 else951_4
    MOVEF_F 2.0 VLV_COLOR_113
    JR endif951
  else951_4:
    MOVEF_F 5.0 VLV_COLOR_113
  else951_5:
  endif951:
  else949_2:
  endif949:
  else946_2:
  endif946:
    STRINGS VALUE_FORMATTED VLV_RRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_113 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB967:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_122 0.0 else968_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif968
  else968_1:
    JR_NEQF VLV_COLOR_122 1.0 else968_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif968
  else968_2:
    JR_NEQF VLV_COLOR_122 2.0 else968_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif968
  else968_3:
    JR_NEQF VLV_COLOR_122 3.0 else968_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif968
  else968_4:
    JR_NEQF VLV_COLOR_122 4.0 else968_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif968
  else968_5:
    JR_NEQF VLV_COLOR_122 5.0 else968_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif968
  else968_6:
    JR_NEQF VLV_COLOR_122 6.0 else968_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif968
  else968_7:
    JR_NEQF VLV_COLOR_122 7.0 else968_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else968_8:
  endif968:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_TRASPMATVECT3X3_2:
    CALL VECTOR.INIT 9.0 0.0 VLV_S_132
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 3.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 6.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 4.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 7.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 5.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 8.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_132
RETSUB_F_TRASPMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TRASPMATVECT3X3_2:
SUB_F_INVMATVECT3X3_2:
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.6 VLV_M_133
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 5.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    CALL ARRAYGET_FLOAT 5.0 F.7 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.8 VLV_M_133
    MULF F.7 F.8 F.6
    SUBF F.5 F.6 F.4
    MULF F.3 F.4 F.2
    SUBF F.1 F.2 F.0
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.6 VLV_M_133
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 4.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    ADDF F.0 F.1 VLV_DETERMINANTE_133
    JR_EQF VLV_DETERMINANTE_133 0.0 else1025_1
    CALL ARRAYGET_FLOAT 4.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1033
    DATA8 flag1033
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1033
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1033
    SELECTF flag1033 0.0 tmpf1033 F.0

    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1042
    DATA8 flag1042
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1042
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1042
    SELECTF flag1042 0.0 tmpf1042 F.0

    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1051
    DATA8 flag1051
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1051
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1051
    SELECTF flag1051 0.0 tmpf1051 F.0

    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1060
    DATA8 flag1060
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1060
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1060
    SELECTF flag1060 0.0 tmpf1060 F.0

    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1069
    DATA8 flag1069
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1069
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1069
    SELECTF flag1069 0.0 tmpf1069 F.0

    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1078
    DATA8 flag1078
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1078
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1078
    SELECTF flag1078 0.0 tmpf1078 F.0

    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1087
    DATA8 flag1087
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1087
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1087
    SELECTF flag1087 0.0 tmpf1087 F.0

    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1096
    DATA8 flag1096
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1096
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1096
    SELECTF flag1096 0.0 tmpf1096 F.0

    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1105
    DATA8 flag1105
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1105
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1105
    SELECTF flag1105 0.0 tmpf1105 F.0

    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_133
  else1025_1:
  endif1025:
RETSUB_F_INVMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_INVMATVECT3X3_2:
SUB_F_MULTIMATRIZCOEF_3:
    MOVEF_F 0.0 VLV_I_134
  while1107:
    CALL ARRAYGET_FLOAT VLV_I_134 F.0 VLV_M_134
    JR_EQF F.0 0.0 endwhile1107
  whilebody1107:
    CALL ARRAYGET_FLOAT VLV_I_134 F.1 VLV_M_134
    MULF VLV_K_134 F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_I_134 F.0 VLV_S_134
    ADDF VLV_I_134 1.0 VLV_I_134
    CALL ARRAYGET_FLOAT VLV_I_134 F.0 VLV_M_134
    JR_NEQF F.0 0.0 whilebody1107
  endwhile1107:
RETSUB_F_MULTIMATRIZCOEF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MULTIMATRIZCOEF_3:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall VECTOR.INIT       // FFA
{
	IN_F size
	IN_F value
	IN_16 a

	DATA32 size32
	MOVEF_32 size size32
	JR_LTEQ32 size32 0 empty

	ARRAY RESIZE a size32
	ARRAY FILL a value
	RETURN

empty:
    ARRAY RESIZE a 0
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
