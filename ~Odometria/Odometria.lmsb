DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_DEGREES_PER_SECOND_46
DATAF VLV_DEGREES_PER_SECOND_45
DATAF VLV_OMEGAI_K1_33
DATAF VLV_OMEGAD_K1_33
DATAF VLV_V1_35
DATAF VLV_V2_35
DATAF VLV_ANGLE_35
DATAF VLV_DEGREES_PER_SECOND_43
DATAF VLV_DEGREES_43
DATAF VLV_VELOCIDAD_19
DATAF VLV_DISTANCIA_19
DATAF VLV_DEGREES_PER_SECOND_41
DATAF VLV_DEGREES_41
DATAF VLV_DEGREES_PER_SECOND_A_44
DATAF VLV_DEGREES_PER_SECOND_D_44
DATAF VLV_DEGREES_A_44
DATAF VLV_DEGREES_D_44
DATAF VLV_DEGREES_PER_SECOND_A_47
DATAF VLV_DEGREES_PER_SECOND_D_47
DATAF VLV_V0_14
DATAF VLV_VMAX_14
DATAF VLV_KP_14
DATAF VLV_KI_14
DATAF VLV_KD_14
DATAF VLV_ACCELENCODER_14
ARRAY16 VLV_M1_39 2
ARRAY16 VLV_M2_39 2
ARRAY16 VLV_M3_39 2
ARRAY16 VLV_N1_39 2
ARRAY16 VLV_N2_39 2
ARRAY16 VLV_N3_39 2
ARRAY16 VLV_S1_39 2
ARRAY16 VLV_S2_39 2
ARRAY16 VLV_S3_39 2
ARRAY16 VLV_M1_38 2
ARRAY16 VLV_M2_38 2
ARRAY16 VLV_M3_38 2
ARRAY16 VLV_S1_38 2
ARRAY16 VLV_S2_38 2
ARRAY16 VLV_S3_38 2
ARRAY16 VLV_M1_37 2
ARRAY16 VLV_M2_37 2
ARRAY16 VLV_M3_37 2
ARRAY16 VLV_N1_37 2
ARRAY16 VLV_N2_37 2
ARRAY16 VLV_N3_37 2
ARRAY16 VLV_S1_37 2
ARRAY16 VLV_S2_37 2
ARRAY16 VLV_S3_37 2
ARRAY16 VLV_U1_33 2
ARRAY16 VLV_U2_33 2
ARRAY16 VLV_U3_33 2
ARRAY16 VLV_V1_33 2
ARRAY16 VLV_V2_33 2
ARRAY16 VLV_V3_33 2
ARRAY16 VLV_W1_33 2
ARRAY16 VLV_W2_33 2
ARRAY16 VLV_W3_33 2
ARRAY16 VLV_P1_33 2
ARRAY16 VLV_P2_33 2
ARRAY16 VLV_P3_33 2
DATAF VGV_CENTRO
DATAF VGV_XTIME
DATAF VGV_YTIME
DATAF VGV_THETATIME
DATAF VGV_XTCORRECT
DATAF VGV_YTCORRECT
DATAF VGV_THETATCORRECT
DATAF VGV_SENTIDO_D
DATAF VGV_D_T
DATAF VGV_S1
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_ANGLE_A
DATAF VGV_ANGLE_D
ARRAY16 VGV_ALPHA_L 2
ARRAY16 VGV_ALPHA_R 2
DATAF VGV_OLDB
DATAF VGV_OLDC
ARRAY16 VGV_XT 2
ARRAY16 VGV_YT 2
ARRAY16 VGV_THETAT 2
DATAF VGV_I
DATAF VGV_DW
DATAF VGV_DIAMETER
DATAF VGV_D_L
DATAF VGV_D_R
DATAF VGV_D
DATAF VGV_DELTA_THETA
DATAF VGV_KP_A
DATAF VGV_KI_A
DATAF VGV_KD_A
DATAF VGV_KP_D
DATAF VGV_KI_D
DATAF VGV_KD_D
DATAF VGV_ERROR_A
DATAF VGV_ERROR_D
DATAF VGV_ERRSUM_A
DATAF VGV_ERRSUM_D
DATAF VGV_OLDERROR_A
DATAF VGV_OLDERROR_D
DATAF VGV_U_A
DATAF VGV_U_D
DATAS VLV_I_14 252
DATAS VLV_D_14 252
DATAF VLV_U_14
DATAF VLV_ERROR_14
DATAF VLV_OLDERROR_14
DATAF VLV_ERRSUM_14
DATAF VLV_VEL_14
DATAF VLV_SENTIDO_14
DATAF VLV_DIAMETRO_19
DATAF VLV_ENC_19
DATAF VLV_START_B_19
DATAF VLV_START_C_19
DATAF VLV_ENCODER_C_19
DATAF VLV_ENCODER_B_19
DATAF VLV_ERROR_19
DATAF VLV_PROPORCIAL_19
DATAF VLV_RADIO_33
DATAF VLV_X_K_K1_33
DATAF VLV_Y_K_K1_33
DATAF VLV_THETA_K_K1_33
DATAF VLV_DELTA_T_33
DATAF VLV_OLD_T_33
ARRAY16 VLV_F_K_X_33 2
ARRAY16 VLV_F_K_Y_33 2
ARRAY16 VLV_F_K_THETA_33 2
ARRAY16 VLV_Q_X_K1_33 2
ARRAY16 VLV_Q_Y_K1_33 2
ARRAY16 VLV_Q_THETA_K1_33 2
DATAS VLV_I_35 252
DATAS VLV_D_35 252
DATAF VLV_G1_35
DATAF VLV_SIGNO_35
DATAF VLV_VMIN_35
DATAF VLV_VMAX_35
DATAF VLV_ENCODR_35
DATAF VLV_ROTATION_41
DATAF VLV_SIGN_41
DATAF VLV_PROGRESS_41
DATAF VLV_DEGREES_PER_INTERVAL_41
DATAF VLV_ROTATION_43
DATAF VLV_SIGN_43
DATAF VLV_PROGRESS_43
DATAF VLV_DEGREES_PER_INTERVAL_43
DATAF VLV_DEGREES_45
DATAF VLV_ROTATION_45
DATAF VLV_SIGN_45
DATAF VLV_PROGRESS_45
DATAF VLV_DEGREES_PER_INTERVAL_45
DATAF VLV_DEGREES_46
DATAF VLV_ROTATION_46
DATAF VLV_SIGN_46
DATAF VLV_PROGRESS_46
DATAF VLV_DEGREES_PER_INTERVAL_46
DATAF VLV_DEGREES_A_47
DATAF VLV_DEGREES_D_47
DATA32 RUNCOUNTER_F_PIDCONTROL_AD_0
DATA32 RUNCOUNTER_F_ODOMETRY_0
DATA32 RUNCOUNTER_F_DISPLAY_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_46
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_45
    MOVEF_F 0.0 VLV_OMEGAI_K1_33
    MOVEF_F 0.0 VLV_OMEGAD_K1_33
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_43
    MOVEF_F 0.0 VLV_DEGREES_43
    MOVEF_F 0.0 VLV_VELOCIDAD_19
    MOVEF_F 0.0 VLV_DISTANCIA_19
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_41
    MOVEF_F 0.0 VLV_DEGREES_41
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_A_44
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_D_44
    MOVEF_F 0.0 VLV_DEGREES_A_44
    MOVEF_F 0.0 VLV_DEGREES_D_44
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_A_47
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_D_47
    MOVEF_F 0.0 VLV_V0_14
    MOVEF_F 0.0 VLV_VMAX_14
    MOVEF_F 0.0 VLV_KP_14
    MOVEF_F 0.0 VLV_KI_14
    MOVEF_F 0.0 VLV_KD_14
    MOVEF_F 0.0 VLV_ACCELENCODER_14
    CALL ARRAYCREATE_FLOAT VLV_M1_39
    CALL ARRAYCREATE_FLOAT VLV_M2_39
    CALL ARRAYCREATE_FLOAT VLV_M3_39
    CALL ARRAYCREATE_FLOAT VLV_N1_39
    CALL ARRAYCREATE_FLOAT VLV_N2_39
    CALL ARRAYCREATE_FLOAT VLV_N3_39
    CALL ARRAYCREATE_FLOAT VLV_S1_39
    CALL ARRAYCREATE_FLOAT VLV_S2_39
    CALL ARRAYCREATE_FLOAT VLV_S3_39
    CALL ARRAYCREATE_FLOAT VLV_M1_38
    CALL ARRAYCREATE_FLOAT VLV_M2_38
    CALL ARRAYCREATE_FLOAT VLV_M3_38
    CALL ARRAYCREATE_FLOAT VLV_S1_38
    CALL ARRAYCREATE_FLOAT VLV_S2_38
    CALL ARRAYCREATE_FLOAT VLV_S3_38
    CALL ARRAYCREATE_FLOAT VLV_M1_37
    CALL ARRAYCREATE_FLOAT VLV_M2_37
    CALL ARRAYCREATE_FLOAT VLV_M3_37
    CALL ARRAYCREATE_FLOAT VLV_N1_37
    CALL ARRAYCREATE_FLOAT VLV_N2_37
    CALL ARRAYCREATE_FLOAT VLV_N3_37
    CALL ARRAYCREATE_FLOAT VLV_S1_37
    CALL ARRAYCREATE_FLOAT VLV_S2_37
    CALL ARRAYCREATE_FLOAT VLV_S3_37
    CALL ARRAYCREATE_FLOAT VLV_U1_33
    CALL ARRAYCREATE_FLOAT VLV_U2_33
    CALL ARRAYCREATE_FLOAT VLV_U3_33
    CALL ARRAYCREATE_FLOAT VLV_V1_33
    CALL ARRAYCREATE_FLOAT VLV_V2_33
    CALL ARRAYCREATE_FLOAT VLV_V3_33
    CALL ARRAYCREATE_FLOAT VLV_W1_33
    CALL ARRAYCREATE_FLOAT VLV_W2_33
    CALL ARRAYCREATE_FLOAT VLV_W3_33
    CALL ARRAYCREATE_FLOAT VLV_P1_33
    CALL ARRAYCREATE_FLOAT VLV_P2_33
    CALL ARRAYCREATE_FLOAT VLV_P3_33
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_S1
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_ANGLE_A
    MOVEF_F 0.0 VGV_ANGLE_D
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_L
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYCREATE_FLOAT VGV_XT
    CALL ARRAYCREATE_FLOAT VGV_YT
    CALL ARRAYCREATE_FLOAT VGV_THETAT
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_L
    MOVEF_F 0.0 VGV_D_R
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_DELTA_THETA
    MOVEF_F 0.0 VGV_KP_A
    MOVEF_F 0.0 VGV_KI_A
    MOVEF_F 0.0 VGV_KD_A
    MOVEF_F 0.0 VGV_KP_D
    MOVEF_F 0.0 VGV_KI_D
    MOVEF_F 0.0 VGV_KD_D
    MOVEF_F 0.0 VGV_ERROR_A
    MOVEF_F 0.0 VGV_ERROR_D
    MOVEF_F 0.0 VGV_ERRSUM_A
    MOVEF_F 0.0 VGV_ERRSUM_D
    MOVEF_F 0.0 VGV_OLDERROR_A
    MOVEF_F 0.0 VGV_OLDERROR_D
    MOVEF_F 0.0 VGV_U_A
    MOVEF_F 0.0 VGV_U_D
    STRINGS DUPLICATE '' VLV_I_14
    STRINGS DUPLICATE '' VLV_D_14
    MOVEF_F 0.0 VLV_U_14
    MOVEF_F 0.0 VLV_ERROR_14
    MOVEF_F 0.0 VLV_OLDERROR_14
    MOVEF_F 0.0 VLV_ERRSUM_14
    MOVEF_F 0.0 VLV_VEL_14
    MOVEF_F 0.0 VLV_SENTIDO_14
    MOVEF_F 0.0 VLV_DIAMETRO_19
    MOVEF_F 0.0 VLV_ENC_19
    MOVEF_F 0.0 VLV_START_B_19
    MOVEF_F 0.0 VLV_START_C_19
    MOVEF_F 0.0 VLV_ENCODER_C_19
    MOVEF_F 0.0 VLV_ENCODER_B_19
    MOVEF_F 0.0 VLV_ERROR_19
    MOVEF_F 0.0 VLV_PROPORCIAL_19
    MOVEF_F 0.0 VLV_RADIO_33
    MOVEF_F 0.0 VLV_X_K_K1_33
    MOVEF_F 0.0 VLV_Y_K_K1_33
    MOVEF_F 0.0 VLV_THETA_K_K1_33
    MOVEF_F 0.0 VLV_DELTA_T_33
    MOVEF_F 0.0 VLV_OLD_T_33
    CALL ARRAYCREATE_FLOAT VLV_F_K_X_33
    CALL ARRAYCREATE_FLOAT VLV_F_K_Y_33
    CALL ARRAYCREATE_FLOAT VLV_F_K_THETA_33
    CALL ARRAYCREATE_FLOAT VLV_Q_X_K1_33
    CALL ARRAYCREATE_FLOAT VLV_Q_Y_K1_33
    CALL ARRAYCREATE_FLOAT VLV_Q_THETA_K1_33
    STRINGS DUPLICATE '' VLV_I_35
    STRINGS DUPLICATE '' VLV_D_35
    MOVEF_F 0.0 VLV_G1_35
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VMIN_35
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_ENCODR_35
    MOVEF_F 0.0 VLV_ROTATION_41
    MOVEF_F 0.0 VLV_SIGN_41
    MOVEF_F 0.0 VLV_PROGRESS_41
    MOVEF_F 0.0 VLV_DEGREES_PER_INTERVAL_41
    MOVEF_F 0.0 VLV_ROTATION_43
    MOVEF_F 0.0 VLV_SIGN_43
    MOVEF_F 0.0 VLV_PROGRESS_43
    MOVEF_F 0.0 VLV_DEGREES_PER_INTERVAL_43
    MOVEF_F 0.0 VLV_DEGREES_45
    MOVEF_F 0.0 VLV_ROTATION_45
    MOVEF_F 0.0 VLV_SIGN_45
    MOVEF_F 0.0 VLV_PROGRESS_45
    MOVEF_F 0.0 VLV_DEGREES_PER_INTERVAL_45
    MOVEF_F 0.0 VLV_DEGREES_46
    MOVEF_F 0.0 VLV_ROTATION_46
    MOVEF_F 0.0 VLV_SIGN_46
    MOVEF_F 0.0 VLV_PROGRESS_46
    MOVEF_F 0.0 VLV_DEGREES_PER_INTERVAL_46
    MOVEF_F 0.0 VLV_DEGREES_A_47
    MOVEF_F 0.0 VLV_DEGREES_D_47
    MOVE32_32 0 RUNCOUNTER_F_PIDCONTROL_AD_0
    MOVE32_32 0 RUNCOUNTER_F_ODOMETRY_0
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_PIDCONTROL_AD_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_PIDCONTROL_AD_0 0
    CALL GETANDINC32 RUNCOUNTER_F_PIDCONTROL_AD_0 -1 RUNCOUNTER_F_PIDCONTROL_AD_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_ODOMETRY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ODOMETRY_0 1
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 -1 RUNCOUNTER_F_ODOMETRY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 2
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_PIDCONTROL_AD_0
subcall PROGRAM_F_ODOMETRY_0
subcall PROGRAM_F_DISPLAY_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    DATAF F.7
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch695
    WRITE32 ENDSUB_F_PIDCONTROL_AD_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PIDCONTROL_AD_0
  dispatch695:
    JR_NEQ32 SUBPROGRAM 1 dispatch696
    WRITE32 ENDSUB_F_ODOMETRY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ODOMETRY_0
  dispatch696:
    JR_NEQ32 SUBPROGRAM 2 dispatch697
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch697:
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_46
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_45
    MOVEF_F 0.0 VLV_OMEGAI_K1_33
    MOVEF_F 0.0 VLV_OMEGAD_K1_33
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_43
    MOVEF_F 0.0 VLV_DEGREES_43
    MOVEF_F 0.0 VLV_VELOCIDAD_19
    MOVEF_F 0.0 VLV_DISTANCIA_19
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_41
    MOVEF_F 0.0 VLV_DEGREES_41
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_A_44
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_D_44
    MOVEF_F 0.0 VLV_DEGREES_A_44
    MOVEF_F 0.0 VLV_DEGREES_D_44
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_A_47
    MOVEF_F 0.0 VLV_DEGREES_PER_SECOND_D_47
    MOVEF_F 0.0 VLV_V0_14
    MOVEF_F 0.0 VLV_VMAX_14
    MOVEF_F 0.0 VLV_KP_14
    MOVEF_F 0.0 VLV_KI_14
    MOVEF_F 0.0 VLV_KD_14
    MOVEF_F 0.0 VLV_ACCELENCODER_14
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M1_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M2_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M3_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N1_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N2_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N3_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S1_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S2_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S3_39
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M1_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M2_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M3_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S1_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S2_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S3_38
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M1_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M2_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M3_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N1_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N2_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_N3_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S1_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S2_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S3_37
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_U1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_U2_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_U3_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V2_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V3_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_W1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_W2_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_W3_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_P1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_P2_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_P3_33
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_S1
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_ANGLE_A
    MOVEF_F 0.0 VGV_ANGLE_D
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 1.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_D_T
    MOVEF_32 5.0 newSize1d
	ARRAY CREATEF newSize1d newArray1d
	ARRAY FILL newArray1d 6.0
	MOVE16_F newArray1d VGV_S1
    MOVEF_F -1.0 VGV_SENTIDO_MOTORES
    MOVEF_F -1.0 VGV_SENTIDO_MOTORES
    DATA32 tmp37
    CALL GETANDINC32 RUNCOUNTER_F_PIDCONTROL_AD_0 1  RUNCOUNTER_F_PIDCONTROL_AD_0 tmp37
    JR_NEQ32 0 tmp37 alreadylaunched37
    OBJECT_START TF_PIDCONTROL_AD_0
  alreadylaunched37:
    DATA32 tmp38
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 1  RUNCOUNTER_F_ODOMETRY_0 tmp38
    JR_NEQ32 0 tmp38 alreadylaunched38
    OBJECT_START TF_ODOMETRY_0
  alreadylaunched38:
    DATA32 tmp39
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp39
    JR_NEQ32 0 tmp39 alreadylaunched39
    OBJECT_START TF_DISPLAY_0
  alreadylaunched39:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB40 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB40:
    DATA32 milliseconds41
	MOVEF_32 10000.0 milliseconds41
	DATA32 timer41
	TIMER_WAIT milliseconds41 timer41
	TIMER_READY timer41
ENDTHREAD:
    RETURN
SUB_F_STARTARM_0:
    MOVEF_F 0.0 VGV_ANGLE_A
    MOVEF_F 0.0 VGV_ANGLE_D
    TIMER_READ timeMC1
  while43:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 500.0 endwhile43
  whilebody43:
    ADDF VGV_ANGLE_D 1.0 VGV_ANGLE_D
    DATA32 milliseconds46
	MOVEF_32 3.0 milliseconds46
	DATA32 timer46
	TIMER_WAIT milliseconds46 timer46
	TIMER_READY timer46
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 500.0 whilebody43
  endwhile43:
    DATA32 milliseconds48
	MOVEF_32 500.0 milliseconds48
	DATA32 timer48
	TIMER_WAIT milliseconds48 timer48
	TIMER_READY timer48
    CALL MOTOR.GETCOUNT 'D' F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 60.0 else49_1
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_46
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB52:
    MOVEF_F -1.0 VGV_SENTIDO_D
    JR endif49
  else49_1:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_46
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB53 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB53:
    MOVEF_F 1.0 VGV_SENTIDO_D
  else49_2:
  endif49:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_45
    WRITE32 ENDSUB_F_BMOVEA0_1:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA0_1
CALLSUB54:
    DATA32 milliseconds55
	MOVEF_32 100.0 milliseconds55
	DATA32 timer55
	TIMER_WAIT milliseconds55 timer55
	TIMER_READY timer55
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_ODOMETRY_0:
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_L
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_XT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_YT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_THETAT
    MOVEF_F 0.0 VGV_I
  while61:
  whilebody61:
    MOVEF_F 84.5 VGV_DW
    MOVEF_F 56.0 VGV_DIAMETER
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_L
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_R
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_L
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_L
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf73
    DATA8 flag73
    DIVF F.0 2.0 tmpf73
    CP_EQF 0.0 2.0 flag73
    SELECTF flag73 0.0 tmpf73 VGV_D_L

    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_R
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_R
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf79
    DATA8 flag79
    DIVF F.0 2.0 tmpf79
    CP_EQF 0.0 2.0 flag79
    SELECTF flag79 0.0 tmpf79 VGV_D_R

    ADDF VGV_D_L VGV_D_R F.0
    DATAF tmpf81
    DATA8 flag81
    DIVF F.0 2.0 tmpf81
    CP_EQF 0.0 2.0 flag81
    SELECTF flag81 0.0 tmpf81 VGV_D

    SUBF VGV_D_R VGV_D_L F.0
    MULF 2.0 VGV_DW F.1
    DATAF tmpf84
    DATA8 flag84
    DIVF F.0 F.1 tmpf84
    CP_EQF 0.0 F.1 flag84
    SELECTF flag84 0.0 tmpf84 VGV_DELTA_THETA

    JR_EQF VGV_XTCORRECT 0.0 else85_1
    ADDF VGV_I 1.0 F.0
    CALL ARRAYSTORE_FLOAT F.0 VGV_XTCORRECT VGV_XT
    MOVEF_F 0.0 VGV_XTCORRECT
    JR endif85
  else85_1:
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.6 VGV_THETAT
    DATAF tmpf90
    DATA8 flag90
    DIVF VGV_DELTA_THETA 2.0 tmpf90
    CP_EQF 0.0 2.0 flag90
    SELECTF flag90 0.0 tmpf90 F.7

    ADDF F.6 F.7 F.5
    DATAF tmpf92
	MULF F.5 57.295779513082  tmpf92
	MATH SIN  tmpf92 F.4
    MULF VGV_D F.4 F.3
    CALL ARRAYGET_FLOAT VGV_I F.4 VGV_XT
    ADDF F.3 F.4 F.2
    MULF F.2 -1.0 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_XT
  else85_2:
  endif85:
    JR_EQF VGV_YTCORRECT 0.0 else98_1
    ADDF VGV_I 1.0 F.0
    CALL ARRAYSTORE_FLOAT F.0 VGV_YTCORRECT VGV_YT
    MOVEF_F 0.0 VGV_YTCORRECT
    JR endif98
  else98_1:
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.6 VGV_THETAT
    DATAF tmpf103
    DATA8 flag103
    DIVF VGV_DELTA_THETA 2.0 tmpf103
    CP_EQF 0.0 2.0 flag103
    SELECTF flag103 0.0 tmpf103 F.7

    ADDF F.6 F.7 F.5
    DATAF tmpf105
	MULF F.5 57.295779513082 tmpf105
	MATH COS tmpf105 F.4
    MULF VGV_D F.4 F.3
    CALL ARRAYGET_FLOAT VGV_I F.4 VGV_YT
    ADDF F.3 F.4 F.2
    MULF F.2 -1.0 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_YT
  else98_2:
  endif98:
    JR_EQF VGV_THETATCORRECT 0.0 else111_1
    ADDF VGV_I 1.0 F.0
    CALL ARRAYSTORE_FLOAT F.0 VGV_THETATCORRECT VGV_THETAT
    MOVEF_F 0.0 VGV_THETATCORRECT
    JR endif111
  else111_1:
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_THETAT
    ADDF F.2 VGV_DELTA_THETA F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_THETAT
  else111_2:
  endif111:
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_XTIME VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_YTIME VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_THETATIME VGV_THETAT
    ADDF VGV_I 1.0 VGV_I
    DATA32 milliseconds125
	MOVEF_32 10.0 milliseconds125
	DATA32 timer125
	TIMER_WAIT milliseconds125 timer125
	TIMER_READY timer125
    JR whilebody61
  endwhile61:
RETSUB_F_ODOMETRY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ODOMETRY_0:
SUB_F_PIDCONTROL_AD_0:
    MOVEF_F 0.5 VGV_KP_A
    MOVEF_F 0.0001 VGV_KI_A
    MOVEF_F 0.1 VGV_KD_A
    MOVEF_F 0.5 VGV_KP_D
    MOVEF_F 0.0001 VGV_KI_D
    MOVEF_F 0.1 VGV_KD_D
    MOVEF_F 0.0 VGV_ERROR_A
    MOVEF_F 0.0 VGV_ERROR_D
    MOVEF_F 0.0 VGV_ERRSUM_A
    MOVEF_F 0.0 VGV_ERRSUM_D
    MOVEF_F 0.0 VGV_OLDERROR_A
    MOVEF_F 0.0 VGV_OLDERROR_D
    MOVEF_F 0.0 VGV_U_A
    MOVEF_F 0.0 VGV_U_D
    MOVEF_F 0.0 VGV_ANGLE_A
    MOVEF_F 0.0 VGV_ANGLE_D
  while126:
  whilebody126:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VGV_ANGLE_A F.0 VGV_ERROR_A
    ADDF VGV_ERRSUM_A VGV_ERROR_A VGV_ERRSUM_A
    MULF VGV_ERROR_A VGV_KP_A F.1
    MULF VGV_ERRSUM_A VGV_KI_A F.3
    DATAF tmpf132
    DATA8 flag132
    DIVF F.3 1.0 tmpf132
    CP_EQF 0.0 1.0 flag132
    SELECTF flag132 0.0 tmpf132 F.2

    ADDF F.1 F.2 F.0
    SUBF VGV_ERROR_A VGV_OLDERROR_A F.2
    MULF F.2 VGV_KD_A F.1
    ADDF F.0 F.1 VGV_U_A
    MOVEF_8 VGV_U_A setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VGV_ANGLE_D F.0 VGV_ERROR_D
    ADDF VGV_ERRSUM_D VGV_ERROR_D VGV_ERRSUM_D
    MULF VGV_ERROR_D VGV_KP_D F.1
    MULF VGV_ERRSUM_D VGV_KI_D F.3
    DATAF tmpf143
    DATA8 flag143
    DIVF F.3 1.0 tmpf143
    CP_EQF 0.0 1.0 flag143
    SELECTF flag143 0.0 tmpf143 F.2

    ADDF F.1 F.2 F.0
    SUBF VGV_ERROR_D VGV_OLDERROR_D F.3
    MULF F.3 VGV_KD_D F.2
    MULF F.2 VGV_SENTIDO_D F.1
    ADDF F.0 F.1 VGV_U_D
    MOVEF_8 VGV_U_D setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR whilebody126
  endwhile126:
RETSUB_F_PIDCONTROL_AD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PIDCONTROL_AD_0:
SUB_F_DISPLAY_0:
  while150:
  whilebody150:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf156
    DATA8 flag156
    DIVF F.1 100.0 tmpf156
    CP_EQF 0.0 100.0 flag156
    SELECTF flag156 0.0 tmpf156 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'xt: ' S.1 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf163
    DATA8 flag163
    DIVF F.1 100.0 tmpf163
    CP_EQF 0.0 100.0 flag163
    SELECTF flag163 0.0 tmpf163 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'yt: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.1 VGV_THETAT
    MULF F.1 57.295779513082 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'thetat: ' S.1 S.0
    CALL LCD.WRITE 5.0 25.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    STRINGS VALUE_FORMATTED VGV_D_T '%g' 99 S.1
    CALL TEXT.APPEND 'Delta T:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Angulo de A:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    STRINGS VALUE_FORMATTED VGV_ANGLE_A '%g' 99 S.1
    CALL TEXT.APPEND 'Obj de A:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Angulo de D:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    STRINGS VALUE_FORMATTED VGV_ANGLE_D '%g' 99 S.1
    CALL TEXT.APPEND 'Obj de D:  ' S.1 S.0
    CALL LCD.WRITE 5.0 105.0 S.0
    STRINGS VALUE_FORMATTED VGV_SENTIDO_D '%g' 99 S.1
    CALL TEXT.APPEND 'Sentido de D:  ' S.1 S.0
    CALL LCD.WRITE 5.0 115.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds196
	MOVEF_32 50.0 milliseconds196
	DATA32 timer196
	TIMER_WAIT milliseconds196 timer196
	TIMER_READY timer196
    JR whilebody150
  endwhile150:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAIN_0:
    MOVEF_F 1.0 VLV_OMEGAI_K1_33
    MOVEF_F 1.0 VLV_OMEGAD_K1_33
    WRITE32 ENDSUB_F_KALMAN_FILTER_2:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KALMAN_FILTER_2
CALLSUB197:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB198:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 20.0 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMG_3:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMG_3
CALLSUB199:
    MOVEF_F 20.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMG_3:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMG_3
CALLSUB200:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_43
    MOVEF_F 140.0 VLV_DEGREES_43
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB201:
    MOVEF_F 30.0 VLV_VELOCIDAD_19
    MOVEF_F 80.0 VLV_DISTANCIA_19
    WRITE32 ENDSUB_F_ENCODERRECTOMG_2:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMG_2
CALLSUB202:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_46
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB203:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_41
    MOVEF_F 180.0 VLV_DEGREES_41
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB204:
    MOVEF_F -30.0 VLV_VELOCIDAD_19
    MOVEF_F 30.0 VLV_DISTANCIA_19
    WRITE32 ENDSUB_F_ENCODERRECTOMG_2:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMG_2
CALLSUB205:
    MOVEF_F 20.0 VLV_V1_35
    MOVEF_F -20.0 VLV_V2_35
    MOVEF_F 60.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMG_3:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMG_3
CALLSUB206:
    MOVEF_F 30.0 VLV_VELOCIDAD_19
    MOVEF_F 60.0 VLV_DISTANCIA_19
    WRITE32 ENDSUB_F_ENCODERRECTOMG_2:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMG_2
CALLSUB207:
    MOVEF_F -20.0 VLV_V1_35
    MOVEF_F 20.0 VLV_V2_35
    MOVEF_F 55.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMG_3:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMG_3
CALLSUB208:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_A_44
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_D_44
    MOVEF_F 60.0 VLV_DEGREES_A_44
    MOVEF_F 160.0 VLV_DEGREES_D_44
    WRITE32 ENDSUB_F_BMOVEAD_4:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD_4
CALLSUB209:
    DATA32 milliseconds210
	MOVEF_32 1000.0 milliseconds210
	DATA32 timer210
	TIMER_WAIT milliseconds210 timer210
	TIMER_READY timer210
    MOVEF_F -30.0 VLV_VELOCIDAD_19
    MOVEF_F 200.0 VLV_DISTANCIA_19
    WRITE32 ENDSUB_F_ENCODERRECTOMG_2:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMG_2
CALLSUB211:
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_A_47
    MOVEF_F 90.0 VLV_DEGREES_PER_SECOND_D_47
    WRITE32 ENDSUB_F_BMOVEAD0_2:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_2
CALLSUB212:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_14
    STRINGS DUPLICATE 'C' VLV_D_14
    MOVEF_F 3.1415926535897932384 F.2
    MULF 56.0 F.2 F.1
    DATAF tmpf215
    DATA8 flag215
    DIVF VLV_ACCELENCODER_14 F.1 tmpf215
    CP_EQF 0.0 F.1 flag215
    SELECTF flag215 0.0 tmpf215 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_14
    MOVEF_F 0.0 VLV_U_14
    MOVEF_F 0.0 VLV_ERROR_14
    MOVEF_F 0.0 VLV_OLDERROR_14
    MOVEF_F 0.0 VLV_ERRSUM_14
    CALL MOTOR.RESETCOUNT 'C'
  while218:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or219
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile218
  or219:
  whilebody218:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf223
    DATA8 flag223
    DIVF F.3 VLV_ACCELENCODER_14 tmpf223
    CP_EQF 0.0 VLV_ACCELENCODER_14 flag223
    SELECTF flag223 0.0 tmpf223 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_14 VLV_V0_14 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_14 VLV_VEL_14
    DATA8 flag228
	CP_LTF VLV_VEL_14 VLV_VMAX_14 flag228
	SELECTF flag228 VLV_VEL_14 VLV_VMAX_14 VLV_VEL_14
    MATH ABS VLV_VEL_14 F.0
    DATAF tmpf230
    DATA8 flag230
    DIVF VLV_VEL_14 F.0 tmpf230
    CP_EQF 0.0 F.0 flag230
    SELECTF flag230 0.0 tmpf230 VLV_SENTIDO_14

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_14 VLV_ERROR_14
    ADDF VLV_ERRSUM_14 VLV_ERROR_14 VLV_ERRSUM_14
    MULF VLV_ERROR_14 VLV_KP_14 F.1
    SUBF VLV_ERROR_14 VLV_OLDERROR_14 F.3
    MULF F.3 VLV_KD_14 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_14 VLV_KI_14 F.1
    ADDF F.0 F.1 VLV_U_14
    CALL TEXT.APPEND VLV_I_14 VLV_D_14 S.0
    ADDF VLV_VEL_14 VLV_U_14 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_14 VLV_U_14 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_14 VLV_OLDERROR_14
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody218
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody218
  endwhile218:
    CALL TEXT.APPEND VLV_I_14 VLV_D_14 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_ENCODERRECTOMG_2:
    MOVEF_F 56.0 VLV_DIAMETRO_19
    MULF VLV_DISTANCIA_19 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf254
    DATA8 flag254
    DIVF F.1 F.2 tmpf254
    CP_EQF 0.0 F.2 flag254
    SELECTF flag254 0.0 tmpf254 F.0

    DATAF tmpf255
    DATA8 flag255
    DIVF F.0 VLV_DIAMETRO_19 tmpf255
    CP_EQF 0.0 VLV_DIAMETRO_19 flag255
    SELECTF flag255 0.0 tmpf255 VLV_ENC_19

    CALL MOTOR.GETCOUNT 'B' VLV_START_B_19
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_19
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_19 VLV_ENCODER_C_19
  while260:
    MATH ABS VLV_ENCODER_C_19 F.0
    JR_GTEQF F.0 VLV_ENC_19 endwhile260
  whilebody260:
    CALL MOTOR.GETCOUNT 'B' F.1
    SUBF F.1 VLV_START_B_19 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ENCODER_B_19
    CALL MOTOR.GETCOUNT 'C' F.1
    SUBF F.1 VLV_START_C_19 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ENCODER_C_19
    SUBF VLV_ENCODER_B_19 VLV_ENCODER_C_19 VLV_ERROR_19
    MULF VLV_ERROR_19 2.0 VLV_PROPORCIAL_19
    SUBF VLV_VELOCIDAD_19 VLV_PROPORCIAL_19 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    ADDF VLV_VELOCIDAD_19 VLV_PROPORCIAL_19 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_19 F.0
    JR_LTF F.0 VLV_ENC_19 whilebody260
  endwhile260:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMG_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMG_2:
SUB_F_KALMAN_FILTER_2:
    MOVEF_F 28.0 VLV_RADIO_33
    CALL ARRAYSTORE_FLOAT 0.0 1.0 VLV_P1_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_P1_33
    CALL ARRAYSTORE_FLOAT 2.0 0.0 VLV_P1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_P2_33
    CALL ARRAYSTORE_FLOAT 1.0 1.0 VLV_P2_33
    CALL ARRAYSTORE_FLOAT 2.0 0.0 VLV_P2_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_P3_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_P3_33
    CALL ARRAYSTORE_FLOAT 2.0 1.0 VLV_P3_33
    MOVEF_F 0.0 VLV_X_K_K1_33
    MOVEF_F 0.0 VLV_Y_K_K1_33
    MOVEF_F 0.0 VLV_THETA_K_K1_33
    CALL EV3.TIME VLV_DELTA_T_33
    MOVEF_F 0.0 VLV_OLD_T_33
  while287:
  whilebody287:
    CALL EV3.TIME F.0
    SUBF F.0 VLV_OLD_T_33 VLV_DELTA_T_33
    CALL EV3.TIME VLV_OLD_T_33
    ADDF VLV_OMEGAI_K1_33 VLV_OMEGAD_K1_33 F.4
    MULF F.4 VLV_RADIO_33 F.3
    MULF F.3 VLV_DELTA_T_33 F.2
    DATAF tmpf294
    DATA8 flag294
    DIVF F.2 2.0 tmpf294
    CP_EQF 0.0 2.0 flag294
    SELECTF flag294 0.0 tmpf294 F.1

    SUBF VLV_OMEGAD_K1_33 VLV_OMEGAI_K1_33 F.7
    MULF F.7 VLV_RADIO_33 F.6
    MULF F.6 VLV_DELTA_T_33 F.5
    MULF 4.0 VGV_DW F.6
    DATAF tmpf299
    DATA8 flag299
    DIVF F.5 F.6 tmpf299
    CP_EQF 0.0 F.6 flag299
    SELECTF flag299 0.0 tmpf299 F.4

    ADDF VLV_THETA_K_K1_33 F.4 F.3
    DATAF tmpf301
	MULF F.3 57.295779513082 tmpf301
	MATH COS tmpf301 F.2
    MULF F.1 F.2 F.0
    ADDF VLV_X_K_K1_33 F.0 VLV_X_K_K1_33
    ADDF VLV_OMEGAI_K1_33 VLV_OMEGAD_K1_33 F.4
    MULF F.4 VLV_RADIO_33 F.3
    MULF F.3 VLV_DELTA_T_33 F.2
    DATAF tmpf307
    DATA8 flag307
    DIVF F.2 2.0 tmpf307
    CP_EQF 0.0 2.0 flag307
    SELECTF flag307 0.0 tmpf307 F.1

    SUBF VLV_OMEGAD_K1_33 VLV_OMEGAI_K1_33 F.7
    MULF F.7 VLV_RADIO_33 F.6
    MULF F.6 VLV_DELTA_T_33 F.5
    MULF 4.0 VGV_DW F.6
    DATAF tmpf312
    DATA8 flag312
    DIVF F.5 F.6 tmpf312
    CP_EQF 0.0 F.6 flag312
    SELECTF flag312 0.0 tmpf312 F.4

    ADDF VLV_THETA_K_K1_33 F.4 F.3
    DATAF tmpf314
	MULF F.3 57.295779513082  tmpf314
	MATH SIN  tmpf314 F.2
    MULF F.1 F.2 F.0
    ADDF VLV_Y_K_K1_33 F.0 VLV_Y_K_K1_33
    SUBF VLV_OMEGAD_K1_33 VLV_OMEGAI_K1_33 F.3
    MULF F.3 VLV_RADIO_33 F.2
    MULF F.2 VLV_DELTA_T_33 F.1
    MULF 2.0 VGV_DW F.2
    DATAF tmpf321
    DATA8 flag321
    DIVF F.1 F.2 tmpf321
    CP_EQF 0.0 F.2 flag321
    SELECTF flag321 0.0 tmpf321 F.0

    ADDF VLV_THETA_K_K1_33 F.0 VLV_THETA_K_K1_33
    CALL ARRAYSTORE_FLOAT 0.0 1.0 VLV_F_K_X_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_F_K_X_33
    ADDF VLV_OMEGAI_K1_33 VLV_OMEGAD_K1_33 F.5
    MULF F.5 VLV_RADIO_33 F.4
    MULF F.4 VLV_DELTA_T_33 F.3
    MULF -1.0 F.3 F.2
    DATAF tmpf329
    DATA8 flag329
    DIVF F.2 2.0 tmpf329
    CP_EQF 0.0 2.0 flag329
    SELECTF flag329 0.0 tmpf329 F.1

    SUBF VLV_OMEGAD_K1_33 VLV_OMEGAI_K1_33 F.7
    MULF F.7 VLV_RADIO_33 F.6
    MULF F.6 VLV_DELTA_T_33 F.5
    MULF 4.0 VGV_DW F.6
    DATAF tmpf334
    DATA8 flag334
    DIVF F.5 F.6 tmpf334
    CP_EQF 0.0 F.6 flag334
    SELECTF flag334 0.0 tmpf334 F.4

    ADDF VLV_THETA_K_K1_33 F.4 F.3
    DATAF tmpf336
	MULF F.3 57.295779513082  tmpf336
	MATH SIN  tmpf336 F.2
    MULF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_F_K_X_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_F_K_Y_33
    CALL ARRAYSTORE_FLOAT 1.0 1.0 VLV_F_K_Y_33
    ADDF VLV_OMEGAI_K1_33 VLV_OMEGAD_K1_33 F.4
    MULF F.4 VLV_RADIO_33 F.3
    MULF F.3 VLV_DELTA_T_33 F.2
    DATAF tmpf344
    DATA8 flag344
    DIVF F.2 2.0 tmpf344
    CP_EQF 0.0 2.0 flag344
    SELECTF flag344 0.0 tmpf344 F.1

    SUBF VLV_OMEGAD_K1_33 VLV_OMEGAI_K1_33 F.7
    MULF F.7 VLV_RADIO_33 F.6
    MULF F.6 VLV_DELTA_T_33 F.5
    MULF 4.0 VGV_DW F.6
    DATAF tmpf349
    DATA8 flag349
    DIVF F.5 F.6 tmpf349
    CP_EQF 0.0 F.6 flag349
    SELECTF flag349 0.0 tmpf349 F.4

    ADDF VLV_THETA_K_K1_33 F.4 F.3
    DATAF tmpf351
	MULF F.3 57.295779513082 tmpf351
	MATH COS tmpf351 F.2
    MULF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_F_K_Y_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_F_K_THETA_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_F_K_THETA_33
    CALL ARRAYSTORE_FLOAT 2.0 1.0 VLV_F_K_THETA_33
    CALL ARRAYSTORE_FLOAT 0.0 0.25 VLV_Q_X_K1_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_Q_X_K1_33
    CALL ARRAYSTORE_FLOAT 2.0 0.0 VLV_Q_X_K1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_Q_Y_K1_33
    CALL ARRAYSTORE_FLOAT 1.0 0.25 VLV_Q_Y_K1_33
    CALL ARRAYSTORE_FLOAT 2.0 0.0 VLV_Q_Y_K1_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_Q_THETA_K1_33
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VLV_Q_THETA_K1_33
    DIVF 3.0 57.295779513082 F.1
    DIVF 3.0 57.295779513082 F.2
    MULF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_Q_THETA_K1_33
    MOVEF_F VLV_DELTA_T_33 VGV_D_T
    ARRAY COPY VLV_F_K_X_33 VLV_M1_39
    ARRAY COPY VLV_F_K_Y_33 VLV_M2_39
    ARRAY COPY VLV_F_K_THETA_33 VLV_M3_39
    ARRAY COPY VLV_P1_33 VLV_N1_39
    ARRAY COPY VLV_P2_33 VLV_N2_39
    ARRAY COPY VLV_P3_33 VLV_N3_39
    WRITE32 ENDSUB_F_MULTIMATRICES3X3_9:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MULTIMATRICES3X3_9
CALLSUB369:
    ARRAY COPY VLV_S1_39 VLV_U1_33
    ARRAY COPY VLV_S2_39 VLV_U2_33
    ARRAY COPY VLV_S3_39 VLV_U3_33
    ARRAY COPY VLV_F_K_X_33 VLV_M1_38
    ARRAY COPY VLV_F_K_Y_33 VLV_M2_38
    ARRAY COPY VLV_F_K_THETA_33 VLV_M3_38
    WRITE32 ENDSUB_F_TRASPMATRIZ3X3_6:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TRASPMATRIZ3X3_6
CALLSUB370:
    ARRAY COPY VLV_S1_38 VLV_V1_33
    ARRAY COPY VLV_S2_38 VLV_V2_33
    ARRAY COPY VLV_S3_38 VLV_V3_33
    ARRAY COPY VLV_U1_33 VLV_M1_39
    ARRAY COPY VLV_U2_33 VLV_M2_39
    ARRAY COPY VLV_U3_33 VLV_M3_39
    ARRAY COPY VLV_V1_33 VLV_N1_39
    ARRAY COPY VLV_V2_33 VLV_N2_39
    ARRAY COPY VLV_V3_33 VLV_N3_39
    WRITE32 ENDSUB_F_MULTIMATRICES3X3_9:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MULTIMATRICES3X3_9
CALLSUB371:
    ARRAY COPY VLV_S1_39 VLV_W1_33
    ARRAY COPY VLV_S2_39 VLV_W2_33
    ARRAY COPY VLV_S3_39 VLV_W3_33
    ARRAY COPY VLV_W1_33 VLV_M1_37
    ARRAY COPY VLV_W2_33 VLV_M2_37
    ARRAY COPY VLV_W3_33 VLV_M3_37
    ARRAY COPY VLV_Q_X_K1_33 VLV_N1_37
    ARRAY COPY VLV_Q_Y_K1_33 VLV_N2_37
    ARRAY COPY VLV_Q_THETA_K1_33 VLV_N3_37
    WRITE32 ENDSUB_F_SUMAMATRICES3X3_9:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SUMAMATRICES3X3_9
CALLSUB372:
    ARRAY COPY VLV_S1_37 VLV_P1_33
    ARRAY COPY VLV_S2_37 VLV_P2_33
    ARRAY COPY VLV_S3_37 VLV_P3_33
    JR whilebody287
  endwhile287:
RETSUB_F_KALMAN_FILTER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KALMAN_FILTER_2:
SUB_F_GUNIVENCMG_3:
    STRINGS DUPLICATE 'B' VLV_I_35
    STRINGS DUPLICATE 'C' VLV_D_35
    MOVEF_F 3.05555555555556 VLV_G1_35
    DATAF tmpf373
    DATA8 flag373
    DIVF VLV_V1_35 VLV_V2_35 tmpf373
    CP_EQF 0.0 VLV_V2_35 flag373
    SELECTF flag373 0.0 tmpf373 F.0

    DATAF tmpf374
    DATA8 flag374
    DIVF VLV_V1_35 VLV_V2_35 tmpf374
    CP_EQF 0.0 VLV_V2_35 flag374
    SELECTF flag374 0.0 tmpf374 F.2

    MATH ABS F.2 F.1
    DATAF tmpf376
    DATA8 flag376
    DIVF F.0 F.1 tmpf376
    CP_EQF 0.0 F.1 flag376
    SELECTF flag376 0.0 tmpf376 VLV_SIGNO_35

    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag379
	CP_LTF F.0 F.1 flag379
	SELECTF flag379 F.0 F.1 VLV_VMIN_35
    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag382
	CP_GTF F.0 F.1 flag382
	SELECTF flag382 F.0 F.1 VLV_VMAX_35
    DATAF tmpf383
    DATA8 flag383
    DIVF VLV_VMIN_35 VLV_VMAX_35 tmpf383
    CP_EQF 0.0 VLV_VMAX_35 flag383
    SELECTF flag383 0.0 tmpf383 F.3

    MULF -8.5 F.3 F.2
    MULF F.2 VLV_SIGNO_35 F.1
    SUBF F.1 8.5 F.0
    DATAF tmpf387
    DATA8 flag387
    DIVF VLV_VMIN_35 VLV_VMAX_35 tmpf387
    CP_EQF 0.0 VLV_VMAX_35 flag387
    SELECTF flag387 0.0 tmpf387 F.3

    MULF F.3 VLV_SIGNO_35 F.2
    SUBF F.2 1.0 F.1
    DATAF tmpf390
    DATA8 flag390
    DIVF F.0 F.1 tmpf390
    CP_EQF 0.0 F.1 flag390
    SELECTF flag390 0.0 tmpf390 VGV_CENTRO

    MULF VLV_ANGLE_35 VLV_G1_35 F.0
    MULF VLV_SIGNO_35 VLV_VMIN_35 F.4
    DATAF tmpf393
    DATA8 flag393
    DIVF F.4 VLV_VMAX_35 tmpf393
    CP_EQF 0.0 VLV_VMAX_35 flag393
    SELECTF flag393 0.0 tmpf393 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf395
    DATA8 flag395
    DIVF -2.0 F.2 tmpf395
    CP_EQF 0.0 F.2 flag395
    SELECTF flag395 0.0 tmpf395 F.1

    MULF F.0 F.1 VLV_ENCODR_35
    CALL TEXT.APPEND VLV_I_35 VLV_D_35 S.0
    MATH NEGATE VLV_V1_35 F.0
    MATH NEGATE VLV_V2_35 F.1
    CALL MOTOR.SCHEDULESYNC S.0 F.0 F.1 VLV_ENCODR_35 'True'

	DATA8 layer400
	DATA8 nos400
	DATA8 busy400
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer400 nos400
	JR_EQ8 0 nos400 motornotbusy400
  motorwaiting400:
	OUTPUT_TEST layer400 nos400 busy400
	JR_EQ8 busy400 0 motornotbusy400
	SLEEP
	JR motorwaiting400
  motornotbusy400:
RETSUB_F_GUNIVENCMG_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMG_3:
SUB_F_SUMAMATRICES3X3_9:
    CALL ARRAYGET_FLOAT 0.0 F.1 VLV_M1_37
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_N1_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S1_37
    CALL ARRAYGET_FLOAT 1.0 F.1 VLV_M1_37
    CALL ARRAYGET_FLOAT 1.0 F.2 VLV_N1_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S1_37
    CALL ARRAYGET_FLOAT 2.0 F.1 VLV_M1_37
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_N1_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S1_37
    CALL ARRAYGET_FLOAT 0.0 F.1 VLV_M2_37
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_N2_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S2_37
    CALL ARRAYGET_FLOAT 1.0 F.1 VLV_M2_37
    CALL ARRAYGET_FLOAT 1.0 F.2 VLV_N2_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S2_37
    CALL ARRAYGET_FLOAT 2.0 F.1 VLV_M2_37
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_N2_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S2_37
    CALL ARRAYGET_FLOAT 0.0 F.1 VLV_M3_37
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_N3_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S3_37
    CALL ARRAYGET_FLOAT 1.0 F.1 VLV_M3_37
    CALL ARRAYGET_FLOAT 1.0 F.2 VLV_N3_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S3_37
    CALL ARRAYGET_FLOAT 2.0 F.1 VLV_M3_37
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_N3_37
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S3_37
RETSUB_F_SUMAMATRICES3X3_9:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SUMAMATRICES3X3_9:
SUB_F_TRASPMATRIZ3X3_6:
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M1_38
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S1_38
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M2_38
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S1_38
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M3_38
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S1_38
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M1_38
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S2_38
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M2_38
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S2_38
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M3_38
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S2_38
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M1_38
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S3_38
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M2_38
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S3_38
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M3_38
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S3_38
RETSUB_F_TRASPMATRIZ3X3_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TRASPMATRIZ3X3_6:
SUB_F_MULTIMATRICES3X3_9:
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M1_39
    CALL ARRAYGET_FLOAT 0.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S1_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M1_39
    CALL ARRAYGET_FLOAT 1.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S1_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M1_39
    CALL ARRAYGET_FLOAT 2.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M1_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S1_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M2_39
    CALL ARRAYGET_FLOAT 0.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S2_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M2_39
    CALL ARRAYGET_FLOAT 1.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S2_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M2_39
    CALL ARRAYGET_FLOAT 2.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M2_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S2_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M3_39
    CALL ARRAYGET_FLOAT 0.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 0.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S3_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M3_39
    CALL ARRAYGET_FLOAT 1.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S3_39
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N1_39
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M3_39
    CALL ARRAYGET_FLOAT 2.0 F.5 VLV_N2_39
    MULF F.4 F.5 F.3
    ADDF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 2.0 F.3 VLV_M3_39
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_N3_39
    MULF F.3 F.4 F.2
    ADDF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S3_39
RETSUB_F_MULTIMATRICES3X3_9:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MULTIMATRICES3X3_9:
SUB_F_BMOVEA_2:
    SUBF VLV_DEGREES_41 VGV_ANGLE_A VLV_ROTATION_41
    MATH ABS VLV_ROTATION_41 F.0
    DATAF tmpf565
    DATA8 flag565
    DIVF F.0 VLV_ROTATION_41 tmpf565
    CP_EQF 0.0 VLV_ROTATION_41 flag565
    SELECTF flag565 0.0 tmpf565 VLV_SIGN_41

    MOVEF_F 0.0 VLV_PROGRESS_41
    MULF VLV_DEGREES_PER_SECOND_41 VLV_SIGN_41 F.0
    DATAF tmpf567
    DATA8 flag567
    DIVF F.0 50.0 tmpf567
    CP_EQF 0.0 50.0 flag567
    SELECTF flag567 0.0 tmpf567 VLV_DEGREES_PER_INTERVAL_41

  while568:
    SUBF VLV_ROTATION_41 VLV_PROGRESS_41 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile568
  whilebody568:
    ADDF VGV_ANGLE_A VLV_DEGREES_PER_INTERVAL_41 VGV_ANGLE_A
    ADDF VLV_PROGRESS_41 VLV_DEGREES_PER_INTERVAL_41 VLV_PROGRESS_41
    DATA32 milliseconds573
	MOVEF_32 1.0 milliseconds573
	DATA32 timer573
	TIMER_WAIT milliseconds573 timer573
	TIMER_READY timer573
    SUBF VLV_ROTATION_41 VLV_PROGRESS_41 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody568
  endwhile568:
    MOVEF_F VLV_DEGREES_41 VGV_ANGLE_A
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVED_2:
    MULF VLV_DEGREES_43 VGV_SENTIDO_D VLV_DEGREES_43
    SUBF VLV_DEGREES_43 VGV_ANGLE_D VLV_ROTATION_43
    MATH ABS VLV_ROTATION_43 F.0
    DATAF tmpf579
    DATA8 flag579
    DIVF F.0 VLV_ROTATION_43 tmpf579
    CP_EQF 0.0 VLV_ROTATION_43 flag579
    SELECTF flag579 0.0 tmpf579 VLV_SIGN_43

    MOVEF_F 0.0 VLV_PROGRESS_43
    MULF VLV_DEGREES_PER_SECOND_43 VLV_SIGN_43 F.0
    DATAF tmpf581
    DATA8 flag581
    DIVF F.0 50.0 tmpf581
    CP_EQF 0.0 50.0 flag581
    SELECTF flag581 0.0 tmpf581 VLV_DEGREES_PER_INTERVAL_43

  while582:
    SUBF VLV_ROTATION_43 VLV_PROGRESS_43 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile582
  whilebody582:
    ADDF VGV_ANGLE_D VLV_DEGREES_PER_INTERVAL_43 VGV_ANGLE_D
    ADDF VLV_PROGRESS_43 VLV_DEGREES_PER_INTERVAL_43 VLV_PROGRESS_43
    DATA32 milliseconds587
	MOVEF_32 1.0 milliseconds587
	DATA32 timer587
	TIMER_WAIT milliseconds587 timer587
	TIMER_READY timer587
    SUBF VLV_ROTATION_43 VLV_PROGRESS_43 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody582
  endwhile582:
    MOVEF_F VLV_DEGREES_43 VGV_ANGLE_D
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEAD_4:
    MULF VLV_DEGREES_D_44 VGV_SENTIDO_D VLV_DEGREES_D_44
  while591:
    JR_NEQF VGV_ANGLE_A VLV_DEGREES_A_44 or592
    JR_EQF VGV_ANGLE_D VLV_DEGREES_D_44 endwhile591
  or592:
  whilebody591:
    MATH ROUND VGV_ANGLE_A F.0
    SUBF VLV_DEGREES_A_44 5.0 F.1
    JR_GTEQF F.0 F.1 else593_1
    MATH ROUND VGV_ANGLE_A F.0
    JR_GTEQF F.0 VLV_DEGREES_A_44 else593_1
    DATAF tmpf597
    DATA8 flag597
    DIVF VLV_DEGREES_PER_SECOND_A_44 2.0 tmpf597
    CP_EQF 0.0 2.0 flag597
    SELECTF flag597 0.0 tmpf597 F.3

    SUBF VLV_DEGREES_A_44 VGV_ANGLE_A F.5
    DATAF tmpf599
    DATA8 flag599
    DIVF F.5 10.0 tmpf599
    CP_EQF 0.0 10.0 flag599
    SELECTF flag599 0.0 tmpf599 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag601
	CP_LTF VLV_DEGREES_PER_SECOND_A_44 F.2 flag601
	SELECTF flag601 VLV_DEGREES_PER_SECOND_A_44 F.2 F.1
    DATAF tmpf602
    DATA8 flag602
    DIVF F.1 50.0 tmpf602
    CP_EQF 0.0 50.0 flag602
    SELECTF flag602 0.0 tmpf602 F.0

    ADDF VGV_ANGLE_A F.0 VGV_ANGLE_A
    JR endif593
  else593_1:
    MATH ROUND VGV_ANGLE_A F.0
    ADDF VLV_DEGREES_A_44 5.0 F.1
    JR_LTEQF F.0 F.1 else593_2
    MATH ROUND VGV_ANGLE_A F.0
    JR_LTEQF F.0 VLV_DEGREES_A_44 else593_2
    DATAF tmpf607
    DATA8 flag607
    DIVF VLV_DEGREES_PER_SECOND_A_44 2.0 tmpf607
    CP_EQF 0.0 2.0 flag607
    SELECTF flag607 0.0 tmpf607 F.3

    SUBF VLV_DEGREES_A_44 VGV_ANGLE_A F.5
    DATAF tmpf609
    DATA8 flag609
    DIVF F.5 10.0 tmpf609
    CP_EQF 0.0 10.0 flag609
    SELECTF flag609 0.0 tmpf609 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag611
	CP_GTF VLV_DEGREES_PER_SECOND_A_44 F.2 flag611
	SELECTF flag611 VLV_DEGREES_PER_SECOND_A_44 F.2 F.1
    DATAF tmpf612
    DATA8 flag612
    DIVF F.1 50.0 tmpf612
    CP_EQF 0.0 50.0 flag612
    SELECTF flag612 0.0 tmpf612 F.0

    SUBF VGV_ANGLE_A F.0 VGV_ANGLE_A
    JR endif593
  else593_2:
    MOVEF_F VLV_DEGREES_A_44 VGV_ANGLE_A
  else593_3:
  endif593:
    MATH ROUND VGV_ANGLE_D F.0
    JR_GTEQF F.0 VLV_DEGREES_D_44 else614_1
    DATAF tmpf616
    DATA8 flag616
    DIVF VLV_DEGREES_PER_SECOND_D_44 2.0 tmpf616
    CP_EQF 0.0 2.0 flag616
    SELECTF flag616 0.0 tmpf616 F.3

    SUBF VLV_DEGREES_D_44 VGV_ANGLE_D F.5
    DATAF tmpf618
    DATA8 flag618
    DIVF F.5 10.0 tmpf618
    CP_EQF 0.0 10.0 flag618
    SELECTF flag618 0.0 tmpf618 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag620
	CP_LTF VLV_DEGREES_PER_SECOND_D_44 F.2 flag620
	SELECTF flag620 VLV_DEGREES_PER_SECOND_D_44 F.2 F.1
    DATAF tmpf621
    DATA8 flag621
    DIVF F.1 50.0 tmpf621
    CP_EQF 0.0 50.0 flag621
    SELECTF flag621 0.0 tmpf621 F.0

    ADDF VGV_ANGLE_D F.0 VGV_ANGLE_D
    JR endif614
  else614_1:
    MATH ROUND VGV_ANGLE_D F.0
    JR_LTEQF F.0 VLV_DEGREES_D_44 else614_2
    DATAF tmpf624
    DATA8 flag624
    DIVF VLV_DEGREES_PER_SECOND_D_44 2.0 tmpf624
    CP_EQF 0.0 2.0 flag624
    SELECTF flag624 0.0 tmpf624 F.3

    SUBF VLV_DEGREES_D_44 VGV_ANGLE_D F.5
    DATAF tmpf626
    DATA8 flag626
    DIVF F.5 10.0 tmpf626
    CP_EQF 0.0 10.0 flag626
    SELECTF flag626 0.0 tmpf626 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag628
	CP_GTF VLV_DEGREES_PER_SECOND_D_44 F.2 flag628
	SELECTF flag628 VLV_DEGREES_PER_SECOND_D_44 F.2 F.1
    DATAF tmpf629
    DATA8 flag629
    DIVF F.1 50.0 tmpf629
    CP_EQF 0.0 50.0 flag629
    SELECTF flag629 0.0 tmpf629 F.0

    SUBF VGV_ANGLE_D F.0 VGV_ANGLE_D
    JR endif614
  else614_2:
    MOVEF_F VLV_DEGREES_D_44 VGV_ANGLE_D
  else614_3:
  endif614:
    DATA32 milliseconds631
	MOVEF_32 1.0 milliseconds631
	DATA32 timer631
	TIMER_WAIT milliseconds631 timer631
	TIMER_READY timer631
    JR_NEQF VGV_ANGLE_A VLV_DEGREES_A_44 whilebody591
    JR_NEQF VGV_ANGLE_D VLV_DEGREES_D_44 whilebody591
  endwhile591:
    MOVEF_F VLV_DEGREES_A_44 VGV_ANGLE_A
    MOVEF_F VLV_DEGREES_D_44 VGV_ANGLE_D
RETSUB_F_BMOVEAD_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD_4:
SUB_F_BMOVEA0_1:
    MOVEF_F 0.0 VLV_DEGREES_45
    SUBF VLV_DEGREES_45 VGV_ANGLE_A VLV_ROTATION_45
    MATH ABS VLV_ROTATION_45 F.0
    DATAF tmpf634
    DATA8 flag634
    DIVF F.0 VLV_ROTATION_45 tmpf634
    CP_EQF 0.0 VLV_ROTATION_45 flag634
    SELECTF flag634 0.0 tmpf634 VLV_SIGN_45

    MOVEF_F 0.0 VLV_PROGRESS_45
    MULF VLV_DEGREES_PER_SECOND_45 VLV_SIGN_45 F.0
    DATAF tmpf636
    DATA8 flag636
    DIVF F.0 50.0 tmpf636
    CP_EQF 0.0 50.0 flag636
    SELECTF flag636 0.0 tmpf636 VLV_DEGREES_PER_INTERVAL_45

  while637:
    SUBF VLV_ROTATION_45 VLV_PROGRESS_45 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile637
  whilebody637:
    ADDF VGV_ANGLE_A VLV_DEGREES_PER_INTERVAL_45 VGV_ANGLE_A
    ADDF VLV_PROGRESS_45 VLV_DEGREES_PER_INTERVAL_45 VLV_PROGRESS_45
    DATA32 milliseconds642
	MOVEF_32 1.0 milliseconds642
	DATA32 timer642
	TIMER_WAIT milliseconds642 timer642
	TIMER_READY timer642
    SUBF VLV_ROTATION_45 VLV_PROGRESS_45 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody637
  endwhile637:
    MOVEF_F VLV_DEGREES_45 VGV_ANGLE_A
RETSUB_F_BMOVEA0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA0_1:
SUB_F_BMOVED0_1:
    MOVEF_F 0.0 VLV_DEGREES_46
    SUBF VLV_DEGREES_46 VGV_ANGLE_D VLV_ROTATION_46
    MATH ABS VLV_ROTATION_46 F.0
    DATAF tmpf647
    DATA8 flag647
    DIVF F.0 VLV_ROTATION_46 tmpf647
    CP_EQF 0.0 VLV_ROTATION_46 flag647
    SELECTF flag647 0.0 tmpf647 VLV_SIGN_46

    MOVEF_F 0.0 VLV_PROGRESS_46
    MULF VLV_DEGREES_PER_SECOND_46 VLV_SIGN_46 F.0
    DATAF tmpf649
    DATA8 flag649
    DIVF F.0 50.0 tmpf649
    CP_EQF 0.0 50.0 flag649
    SELECTF flag649 0.0 tmpf649 VLV_DEGREES_PER_INTERVAL_46

  while650:
    SUBF VLV_ROTATION_46 VLV_PROGRESS_46 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile650
  whilebody650:
    ADDF VGV_ANGLE_D VLV_DEGREES_PER_INTERVAL_46 VGV_ANGLE_D
    ADDF VLV_PROGRESS_46 VLV_DEGREES_PER_INTERVAL_46 VLV_PROGRESS_46
    DATA32 milliseconds655
	MOVEF_32 1.0 milliseconds655
	DATA32 timer655
	TIMER_WAIT milliseconds655 timer655
	TIMER_READY timer655
    SUBF VLV_ROTATION_46 VLV_PROGRESS_46 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody650
  endwhile650:
    MOVEF_F VLV_DEGREES_46 VGV_ANGLE_D
RETSUB_F_BMOVED0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED0_1:
SUB_F_BMOVEAD0_2:
    MOVEF_F 0.0 VLV_DEGREES_A_47
    MOVEF_F 0.0 VLV_DEGREES_D_47
  while658:
    JR_NEQF VGV_ANGLE_A VLV_DEGREES_A_47 or659
    JR_EQF VGV_ANGLE_D VLV_DEGREES_D_47 endwhile658
  or659:
  whilebody658:
    MATH ROUND VGV_ANGLE_A F.0
    JR_GTEQF F.0 VLV_DEGREES_A_47 else660_1
    DATAF tmpf662
    DATA8 flag662
    DIVF VLV_DEGREES_PER_SECOND_A_47 2.0 tmpf662
    CP_EQF 0.0 2.0 flag662
    SELECTF flag662 0.0 tmpf662 F.3

    SUBF VLV_DEGREES_A_47 VGV_ANGLE_A F.5
    DATAF tmpf664
    DATA8 flag664
    DIVF F.5 10.0 tmpf664
    CP_EQF 0.0 10.0 flag664
    SELECTF flag664 0.0 tmpf664 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag666
	CP_LTF VLV_DEGREES_PER_SECOND_A_47 F.2 flag666
	SELECTF flag666 VLV_DEGREES_PER_SECOND_A_47 F.2 F.1
    DATAF tmpf667
    DATA8 flag667
    DIVF F.1 50.0 tmpf667
    CP_EQF 0.0 50.0 flag667
    SELECTF flag667 0.0 tmpf667 F.0

    ADDF VGV_ANGLE_A F.0 VGV_ANGLE_A
    JR endif660
  else660_1:
    MATH ROUND VGV_ANGLE_A F.0
    JR_LTEQF F.0 VLV_DEGREES_A_47 else660_2
    DATAF tmpf670
    DATA8 flag670
    DIVF VLV_DEGREES_PER_SECOND_A_47 2.0 tmpf670
    CP_EQF 0.0 2.0 flag670
    SELECTF flag670 0.0 tmpf670 F.3

    SUBF VLV_DEGREES_A_47 VGV_ANGLE_A F.5
    DATAF tmpf672
    DATA8 flag672
    DIVF F.5 10.0 tmpf672
    CP_EQF 0.0 10.0 flag672
    SELECTF flag672 0.0 tmpf672 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag674
	CP_GTF VLV_DEGREES_PER_SECOND_A_47 F.2 flag674
	SELECTF flag674 VLV_DEGREES_PER_SECOND_A_47 F.2 F.1
    DATAF tmpf675
    DATA8 flag675
    DIVF F.1 50.0 tmpf675
    CP_EQF 0.0 50.0 flag675
    SELECTF flag675 0.0 tmpf675 F.0

    SUBF VGV_ANGLE_A F.0 VGV_ANGLE_A
    JR endif660
  else660_2:
    MOVEF_F VLV_DEGREES_A_47 VGV_ANGLE_A
  else660_3:
  endif660:
    MATH ROUND VGV_ANGLE_D F.0
    JR_GTEQF F.0 VLV_DEGREES_D_47 else677_1
    DATAF tmpf679
    DATA8 flag679
    DIVF VLV_DEGREES_PER_SECOND_D_47 2.0 tmpf679
    CP_EQF 0.0 2.0 flag679
    SELECTF flag679 0.0 tmpf679 F.3

    SUBF VLV_DEGREES_D_47 VGV_ANGLE_D F.5
    DATAF tmpf681
    DATA8 flag681
    DIVF F.5 10.0 tmpf681
    CP_EQF 0.0 10.0 flag681
    SELECTF flag681 0.0 tmpf681 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag683
	CP_LTF VLV_DEGREES_PER_SECOND_D_47 F.2 flag683
	SELECTF flag683 VLV_DEGREES_PER_SECOND_D_47 F.2 F.1
    DATAF tmpf684
    DATA8 flag684
    DIVF F.1 50.0 tmpf684
    CP_EQF 0.0 50.0 flag684
    SELECTF flag684 0.0 tmpf684 F.0

    ADDF VGV_ANGLE_D F.0 VGV_ANGLE_D
    JR endif677
  else677_1:
    MATH ROUND VGV_ANGLE_D F.0
    JR_LTEQF F.0 VLV_DEGREES_D_47 else677_2
    DATAF tmpf687
    DATA8 flag687
    DIVF VLV_DEGREES_PER_SECOND_D_47 2.0 tmpf687
    CP_EQF 0.0 2.0 flag687
    SELECTF flag687 0.0 tmpf687 F.3

    SUBF VLV_DEGREES_D_47 VGV_ANGLE_D F.5
    DATAF tmpf689
    DATA8 flag689
    DIVF F.5 10.0 tmpf689
    CP_EQF 0.0 10.0 flag689
    SELECTF flag689 0.0 tmpf689 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag691
	CP_GTF VLV_DEGREES_PER_SECOND_D_47 F.2 flag691
	SELECTF flag691 VLV_DEGREES_PER_SECOND_D_47 F.2 F.1
    DATAF tmpf692
    DATA8 flag692
    DIVF F.1 50.0 tmpf692
    CP_EQF 0.0 50.0 flag692
    SELECTF flag692 0.0 tmpf692 F.0

    SUBF VGV_ANGLE_D F.0 VGV_ANGLE_D
    JR endif677
  else677_2:
    MOVEF_F VLV_DEGREES_D_47 VGV_ANGLE_D
  else677_3:
  endif677:
    DATA32 milliseconds694
	MOVEF_32 1.0 milliseconds694
	DATA32 timer694
	TIMER_WAIT milliseconds694 timer694
	TIMER_READY timer694
    JR_NEQF VGV_ANGLE_A VLV_DEGREES_A_47 whilebody658
    JR_NEQF VGV_ANGLE_D VLV_DEGREES_D_47 whilebody658
  endwhile658:
    MOVEF_F VLV_DEGREES_A_47 VGV_ANGLE_A
    MOVEF_F VLV_DEGREES_D_47 VGV_ANGLE_D
RETSUB_F_BMOVEAD0_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD0_2:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EV3.TIME  // F
{
	OUT_F time
	
	DATA32 ms
	DATAF thousand
	
	TIMER_READ ms
	MOVE32_F ms time	
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
