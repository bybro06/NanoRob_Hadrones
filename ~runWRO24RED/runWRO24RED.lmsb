DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_105
DATAF VLV_AENC_105
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V1_35
DATAF VLV_V2_35
DATAF VLV_ANGLE_35
DATAF VLV_V_95
DATAF VLV_AENC_95
DATAF VLV_VELOCIDAD1_25
DATAF VLV_VELOCIDAD2_25
DATAF VLV_TIEMPO_25
DATAF VLV_V_101
DATAF VLV_VELOCIDAD_6
DATAF VLV_SENS_6
DATAF VLV_VELOCIDAD_4
DATAF VLV_SENS_4
DATAF VLV_VEL_33
DATAF VLV_VELOCIDAD_75
DATAF VLV_KP_75
DATAF VLV_KI_75
DATAF VLV_KD_75
DATAF VLV_ENCODER_75
DATAF VLV_VELOCIDAD_81
DATAF VLV_KP_81
DATAF VLV_KI_81
DATAF VLV_KD_81
DATAF VLV_LADO_81
DATAF VLV_SENS_81
DATAF VLV_VELOCIDAD1_15
DATAF VLV_VELOCIDAD2_15
DATAF VLV_ENCODER_15
DATAF VLV_VELOCIDAD_39
DATAF VLV_VELOCIDAD_13
DATAF VLV_TIEMPO_13
DATAF VLV_VELOCIDAD_5
DATAF VLV_SENS_5
DATAF VLV_V_106
DATAF VLV_VELOCIDAD_71
DATAF VLV_KP_71
DATAF VLV_KI_71
DATAF VLV_KD_71
DATAF VLV_VELOCIDAD_3
DATAF VLV_SENS_3
DATAF VLV_VELOCIDAD_37
DATAF VLV_V_104
DATAF VLV_GRADOS_104
DATAF VLV_V1_36
DATAF VLV_V2_36
DATAF VLV_ANGLE_36
DATAF VLV_V0_56
DATAF VLV_VMAX_56
DATAF VLV_KP_56
DATAF VLV_KI_56
DATAF VLV_KD_56
DATAF VLV_ACCELENCODER_56
DATAF VLV_VELOCIDAD_72
DATAF VLV_KP_72
DATAF VLV_KI_72
DATAF VLV_KD_72
DATAF VLV_VELOCIDAD_76
DATAF VLV_KP_76
DATAF VLV_KI_76
DATAF VLV_KD_76
DATAF VLV_ENCODER_76
DATAF VLV_VMAX_88
DATAF VLV_KP_88
DATAF VLV_KI_88
DATAF VLV_KD_88
DATAF VLV_COLOR_122
DATAF VLV_REPS_110
DATAF VLV_COLOR_110
DATAF VLV_REPS_111
DATAF VLV_COLOR_111
DATAF VLV_REPS_112
DATAF VLV_COLOR_112
DATAF VLV_REPS_113
DATAF VLV_COLOR_113
DATAF VLV_V_108
DATAF VLV_T_108
DATAF VLV_V_109
DATAF VLV_AENC_109
DATAF VLV_COLOR_114
DATAF VLV_COLOR_115
DATAF VLV_COLOR_116
DATAF VLV_COLOR_117
DATAF VLV_READ_128
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DIAMETER
DATAF VGV_CENTRO
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_CORRECCION
DATAF VGV_G1
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAF VLV_START_B_3
DATAF VLV_START_C_3
DATAF VLV_ENCODER_B_3
DATAF VLV_ENCODER_C_3
DATAF VLV_ERROR_3
DATAF VLV_PROPORCIAL_3
DATAF VLV_START_B_4
DATAF VLV_START_C_4
DATAF VLV_ENCODER_B_4
DATAF VLV_ENCODER_C_4
DATAF VLV_ERROR_4
DATAF VLV_PROPORCIAL_4
DATAF VLV_START_B_5
DATAF VLV_START_C_5
DATAF VLV_ENCODER_B_5
DATAF VLV_ENCODER_C_5
DATAF VLV_ERROR_5
DATAF VLV_PROPORCIAL_5
DATAF VLV_START_B_6
DATAF VLV_START_C_6
DATAF VLV_ENCODER_B_6
DATAF VLV_ENCODER_C_6
DATAF VLV_ERROR_6
DATAF VLV_PROPORCIAL_6
DATAF VLV_START_B_13
DATAF VLV_START_C_13
DATAF VLV_ENCODER_B_13
DATAF VLV_ENCODER_C_13
DATAF VLV_ERROR_13
DATAF VLV_PROPORCIAL_13
DATAF VLV_DIAMETRO_15
DATAF VLV_DISTANCIA_15
DATAF VLV_AVANCE_33
DATAF VLV_GINICIO_33
DATAF VLV_AJUSTE_33
DATAS VLV_I_35 252
DATAS VLV_D_35 252
DATAF VLV_SIGNO_35
DATAF VLV_VMIN_35
DATAF VLV_VMAX_35
DATAF VLV_ENCODR_35
DATAS VLV_I_36 252
DATAS VLV_D_36 252
DATAF VLV_SIGNO_36
DATAF VLV_VMIN_36
DATAF VLV_VMAX_36
DATAF VLV_ENCODR_36
DATAS VLV_I_37 252
DATAS VLV_D_37 252
DATAF VLV_ANGLE_37
DATAS VLV_I_39 252
DATAS VLV_D_39 252
DATAF VLV_ANGLE_39
DATAS VLV_I_56 252
DATAS VLV_D_56 252
DATAF VLV_U_56
DATAF VLV_ERROR_56
DATAF VLV_OLDERROR_56
DATAF VLV_ERRSUM_56
DATAF VLV_VEL_56
DATAF VLV_SENTIDO_56
DATAS VLV_I_71 252
DATAS VLV_D_71 252
DATAF VLV_ERROR_71
DATAF VLV_OLDERROR_71
DATAF VLV_ERRSUM_71
DATAF VLV_U_71
DATAF VLV_SENTIDO_71
DATAS VLV_I_72 252
DATAS VLV_D_72 252
DATAF VLV_ERROR_72
DATAF VLV_OLDERROR_72
DATAF VLV_ERRSUM_72
DATAF VLV_U_72
DATAF VLV_SENTIDO_72
DATAS VLV_I_75 252
DATAS VLV_D_75 252
DATAF VLV_ERROR_75
DATAF VLV_OLDERROR_75
DATAF VLV_ERRSUM_75
DATAF VLV_U_75
DATAF VLV_SENTIDO_75
DATAF VLV_START_C_75
DATAF VLV_ENCODER_C_75
DATAS VLV_I_76 252
DATAS VLV_D_76 252
DATAF VLV_ERROR_76
DATAF VLV_OLDERROR_76
DATAF VLV_ERRSUM_76
DATAF VLV_U_76
DATAF VLV_SENTIDO_76
DATAF VLV_START_C_76
DATAF VLV_ENCODER_C_76
DATAS VLV_I_81 252
DATAS VLV_D_81 252
DATAF VLV_ERROR_81
DATAF VLV_OLDERROR_81
DATAF VLV_ERRSUM_81
DATAF VLV_U_81
DATAF VLV_SENTIDO_81
DATAF VLV_READER_81
DATAS VLV_I_88 252
DATAS VLV_D_88 252
DATAF VLV_V0_88
DATAF VLV_ACCELENCODER_88
DATAF VLV_U_88
DATAF VLV_ERRSUM_88
DATAF VLV_OLDERROR_88
DATAF VLV_VEL_88
DATAF VLV_SENTIDO_88
DATAF VLV_ERROR_88
DATAF VLV_ENCDIFF_95
DATAF VLV_SIGNO_95
DATAF VLV_AENC_101
DATAF VLV_ENCDIFF_101
DATAF VLV_SIGNO_101
DATAF VLV_SAFETYTIMER_101
DATAF VLV_DIFFA_104
DATAF VLV_DIFFD_104
DATAF VLV_SAFETYTIMER_104
DATAF VLV_SIGNOA_104
DATAF VLV_SIGNOD_104
DATAF VLV_VELA_104
DATAF VLV_VELD_104
DATAF VLV_ENCDIFF_105
DATAF VLV_SIGNO_105
DATAF VLV_ENCDIFF_109
DATAF VLV_SIGNO_109
DATAF VLV_SAFETYTIMER_109
DATAF VLV_RED_110
DATAF VLV_YELLOW_110
DATAF VLV_GREEN_110
DATAF VLV_BLUE_110
DATAF VLV_VALUENEGRO_110
DATAF VLV_VALUEBLANCO_110
DATAF VLV_RWHITE_110
DATAF VLV_GWHITE_110
DATAF VLV_BWHITE_110
DATAF VLV_HUE_110
DATAF VLV_SAT_110
DATAF VLV_VALUE_110
ARRAY16 VLV_RNORMA_110 2
ARRAY16 VLV_GNORMA_110 2
ARRAY16 VLV_BNORMA_110 2
ARRAY16 VLV_MAXA_110 2
DATAF VLV_J_110
ARRAY16 VLV_RGB_110 2
DATAF VLV_RRAW_110
DATAF VLV_GRAW_110
DATAF VLV_BRAW_110
DATAF VLV_RNORM_110
DATAF VLV_GNORM_110
DATAF VLV_BNORM_110
DATAF VLV_MAX_110
DATAF VLV_MIN_110
DATAF VLV_RGBGREY_110
DATAF VLV_RED_111
DATAF VLV_YELLOW_111
DATAF VLV_GREEN_111
DATAF VLV_BLUE_111
DATAF VLV_VALUENEGRO_111
DATAF VLV_VALUEBLANCO_111
DATAF VLV_RWHITE_111
DATAF VLV_GWHITE_111
DATAF VLV_BWHITE_111
DATAF VLV_HUE_111
DATAF VLV_SAT_111
DATAF VLV_VALUE_111
ARRAY16 VLV_RNORMA_111 2
ARRAY16 VLV_GNORMA_111 2
ARRAY16 VLV_BNORMA_111 2
ARRAY16 VLV_MAXA_111 2
DATAF VLV_J_111
ARRAY16 VLV_RGB_111 2
DATAF VLV_RRAW_111
DATAF VLV_GRAW_111
DATAF VLV_BRAW_111
DATAF VLV_RNORM_111
DATAF VLV_GNORM_111
DATAF VLV_BNORM_111
DATAF VLV_MAX_111
DATAF VLV_MIN_111
DATAF VLV_RGBGREY_111
DATAF VLV_RED_112
DATAF VLV_YELLOW_112
DATAF VLV_GREEN_112
DATAF VLV_BLUE_112
DATAF VLV_VALUENEGRO_112
DATAF VLV_VALUEBLANCO_112
DATAF VLV_RWHITE_112
DATAF VLV_GWHITE_112
DATAF VLV_BWHITE_112
DATAF VLV_HUE_112
DATAF VLV_SAT_112
DATAF VLV_VALUE_112
ARRAY16 VLV_RNORMA_112 2
ARRAY16 VLV_GNORMA_112 2
ARRAY16 VLV_BNORMA_112 2
ARRAY16 VLV_MAXA_112 2
DATAF VLV_J_112
ARRAY16 VLV_RGB_112 2
DATAF VLV_RRAW_112
DATAF VLV_GRAW_112
DATAF VLV_BRAW_112
DATAF VLV_RNORM_112
DATAF VLV_GNORM_112
DATAF VLV_BNORM_112
DATAF VLV_MAX_112
DATAF VLV_MIN_112
DATAF VLV_RGBGREY_112
DATAF VLV_RED_113
DATAF VLV_YELLOW_113
DATAF VLV_GREEN_113
DATAF VLV_BLUE_113
DATAF VLV_VALUENEGRO_113
DATAF VLV_VALUEBLANCO_113
DATAF VLV_RWHITE_113
DATAF VLV_GWHITE_113
DATAF VLV_BWHITE_113
DATAF VLV_HUE_113
DATAF VLV_SAT_113
DATAF VLV_VALUE_113
ARRAY16 VLV_RNORMA_113 2
ARRAY16 VLV_GNORMA_113 2
ARRAY16 VLV_BNORMA_113 2
ARRAY16 VLV_MAXA_113 2
DATAF VLV_J_113
ARRAY16 VLV_RGB_113 2
DATAF VLV_RRAW_113
DATAF VLV_GRAW_113
DATAF VLV_BRAW_113
DATAF VLV_RNORM_113
DATAF VLV_GNORM_113
DATAF VLV_BNORM_113
DATAF VLV_MAX_113
DATAF VLV_MIN_113
DATAF VLV_RGBGREY_113
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_VELOCIDAD1_25
    MOVEF_F 0.0 VLV_VELOCIDAD2_25
    MOVEF_F 0.0 VLV_TIEMPO_25
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_SENS_6
    MOVEF_F 0.0 VLV_VELOCIDAD_4
    MOVEF_F 0.0 VLV_SENS_4
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_81
    MOVEF_F 0.0 VLV_KP_81
    MOVEF_F 0.0 VLV_KI_81
    MOVEF_F 0.0 VLV_KD_81
    MOVEF_F 0.0 VLV_LADO_81
    MOVEF_F 0.0 VLV_SENS_81
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_VELOCIDAD_71
    MOVEF_F 0.0 VLV_KP_71
    MOVEF_F 0.0 VLV_KI_71
    MOVEF_F 0.0 VLV_KD_71
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VELOCIDAD_37
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    MOVEF_F 0.0 VLV_READ_128
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    MOVEF_F 0.0 VLV_START_B_3
    MOVEF_F 0.0 VLV_START_C_3
    MOVEF_F 0.0 VLV_ENCODER_B_3
    MOVEF_F 0.0 VLV_ENCODER_C_3
    MOVEF_F 0.0 VLV_ERROR_3
    MOVEF_F 0.0 VLV_PROPORCIAL_3
    MOVEF_F 0.0 VLV_START_B_4
    MOVEF_F 0.0 VLV_START_C_4
    MOVEF_F 0.0 VLV_ENCODER_B_4
    MOVEF_F 0.0 VLV_ENCODER_C_4
    MOVEF_F 0.0 VLV_ERROR_4
    MOVEF_F 0.0 VLV_PROPORCIAL_4
    MOVEF_F 0.0 VLV_START_B_5
    MOVEF_F 0.0 VLV_START_C_5
    MOVEF_F 0.0 VLV_ENCODER_B_5
    MOVEF_F 0.0 VLV_ENCODER_C_5
    MOVEF_F 0.0 VLV_ERROR_5
    MOVEF_F 0.0 VLV_PROPORCIAL_5
    MOVEF_F 0.0 VLV_START_B_6
    MOVEF_F 0.0 VLV_START_C_6
    MOVEF_F 0.0 VLV_ENCODER_B_6
    MOVEF_F 0.0 VLV_ENCODER_C_6
    MOVEF_F 0.0 VLV_ERROR_6
    MOVEF_F 0.0 VLV_PROPORCIAL_6
    MOVEF_F 0.0 VLV_START_B_13
    MOVEF_F 0.0 VLV_START_C_13
    MOVEF_F 0.0 VLV_ENCODER_B_13
    MOVEF_F 0.0 VLV_ENCODER_C_13
    MOVEF_F 0.0 VLV_ERROR_13
    MOVEF_F 0.0 VLV_PROPORCIAL_13
    MOVEF_F 0.0 VLV_DIAMETRO_15
    MOVEF_F 0.0 VLV_DISTANCIA_15
    MOVEF_F 0.0 VLV_AVANCE_33
    MOVEF_F 0.0 VLV_GINICIO_33
    MOVEF_F 0.0 VLV_AJUSTE_33
    STRINGS DUPLICATE '' VLV_I_35
    STRINGS DUPLICATE '' VLV_D_35
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VMIN_35
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_ENCODR_35
    STRINGS DUPLICATE '' VLV_I_36
    STRINGS DUPLICATE '' VLV_D_36
    MOVEF_F 0.0 VLV_SIGNO_36
    MOVEF_F 0.0 VLV_VMIN_36
    MOVEF_F 0.0 VLV_VMAX_36
    MOVEF_F 0.0 VLV_ENCODR_36
    STRINGS DUPLICATE '' VLV_I_37
    STRINGS DUPLICATE '' VLV_D_37
    MOVEF_F 0.0 VLV_ANGLE_37
    STRINGS DUPLICATE '' VLV_I_39
    STRINGS DUPLICATE '' VLV_D_39
    MOVEF_F 0.0 VLV_ANGLE_39
    STRINGS DUPLICATE '' VLV_I_56
    STRINGS DUPLICATE '' VLV_D_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    MOVEF_F 0.0 VLV_VEL_56
    MOVEF_F 0.0 VLV_SENTIDO_56
    STRINGS DUPLICATE '' VLV_I_71
    STRINGS DUPLICATE '' VLV_D_71
    MOVEF_F 0.0 VLV_ERROR_71
    MOVEF_F 0.0 VLV_OLDERROR_71
    MOVEF_F 0.0 VLV_ERRSUM_71
    MOVEF_F 0.0 VLV_U_71
    MOVEF_F 0.0 VLV_SENTIDO_71
    STRINGS DUPLICATE '' VLV_I_72
    STRINGS DUPLICATE '' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MOVEF_F 0.0 VLV_SENTIDO_72
    STRINGS DUPLICATE '' VLV_I_75
    STRINGS DUPLICATE '' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MOVEF_F 0.0 VLV_SENTIDO_75
    MOVEF_F 0.0 VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
    STRINGS DUPLICATE '' VLV_I_76
    STRINGS DUPLICATE '' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MOVEF_F 0.0 VLV_SENTIDO_76
    MOVEF_F 0.0 VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
    STRINGS DUPLICATE '' VLV_I_81
    STRINGS DUPLICATE '' VLV_D_81
    MOVEF_F 0.0 VLV_ERROR_81
    MOVEF_F 0.0 VLV_OLDERROR_81
    MOVEF_F 0.0 VLV_ERRSUM_81
    MOVEF_F 0.0 VLV_U_81
    MOVEF_F 0.0 VLV_SENTIDO_81
    MOVEF_F 0.0 VLV_READER_81
    STRINGS DUPLICATE '' VLV_I_88
    STRINGS DUPLICATE '' VLV_D_88
    MOVEF_F 0.0 VLV_V0_88
    MOVEF_F 0.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    MOVEF_F 0.0 VLV_VEL_88
    MOVEF_F 0.0 VLV_SENTIDO_88
    MOVEF_F 0.0 VLV_ERROR_88
    MOVEF_F 0.0 VLV_ENCDIFF_95
    MOVEF_F 0.0 VLV_SIGNO_95
    MOVEF_F 0.0 VLV_AENC_101
    MOVEF_F 0.0 VLV_ENCDIFF_101
    MOVEF_F 0.0 VLV_SIGNO_101
    MOVEF_F 0.0 VLV_SAFETYTIMER_101
    MOVEF_F 0.0 VLV_DIFFA_104
    MOVEF_F 0.0 VLV_DIFFD_104
    MOVEF_F 0.0 VLV_SAFETYTIMER_104
    MOVEF_F 0.0 VLV_SIGNOA_104
    MOVEF_F 0.0 VLV_SIGNOD_104
    MOVEF_F 0.0 VLV_VELA_104
    MOVEF_F 0.0 VLV_VELD_104
    MOVEF_F 0.0 VLV_ENCDIFF_105
    MOVEF_F 0.0 VLV_SIGNO_105
    MOVEF_F 0.0 VLV_ENCDIFF_109
    MOVEF_F 0.0 VLV_SIGNO_109
    MOVEF_F 0.0 VLV_SAFETYTIMER_109
    MOVEF_F 0.0 VLV_RED_110
    MOVEF_F 0.0 VLV_YELLOW_110
    MOVEF_F 0.0 VLV_GREEN_110
    MOVEF_F 0.0 VLV_BLUE_110
    MOVEF_F 0.0 VLV_VALUENEGRO_110
    MOVEF_F 0.0 VLV_VALUEBLANCO_110
    MOVEF_F 0.0 VLV_RWHITE_110
    MOVEF_F 0.0 VLV_GWHITE_110
    MOVEF_F 0.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_MAXA_110
    MOVEF_F 0.0 VLV_J_110
    CALL ARRAYCREATE_FLOAT VLV_RGB_110
    MOVEF_F 0.0 VLV_RRAW_110
    MOVEF_F 0.0 VLV_GRAW_110
    MOVEF_F 0.0 VLV_BRAW_110
    MOVEF_F 0.0 VLV_RNORM_110
    MOVEF_F 0.0 VLV_GNORM_110
    MOVEF_F 0.0 VLV_BNORM_110
    MOVEF_F 0.0 VLV_MAX_110
    MOVEF_F 0.0 VLV_MIN_110
    MOVEF_F 0.0 VLV_RGBGREY_110
    MOVEF_F 0.0 VLV_RED_111
    MOVEF_F 0.0 VLV_YELLOW_111
    MOVEF_F 0.0 VLV_GREEN_111
    MOVEF_F 0.0 VLV_BLUE_111
    MOVEF_F 0.0 VLV_VALUENEGRO_111
    MOVEF_F 0.0 VLV_VALUEBLANCO_111
    MOVEF_F 0.0 VLV_RWHITE_111
    MOVEF_F 0.0 VLV_GWHITE_111
    MOVEF_F 0.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_MAXA_111
    MOVEF_F 0.0 VLV_J_111
    CALL ARRAYCREATE_FLOAT VLV_RGB_111
    MOVEF_F 0.0 VLV_RRAW_111
    MOVEF_F 0.0 VLV_GRAW_111
    MOVEF_F 0.0 VLV_BRAW_111
    MOVEF_F 0.0 VLV_RNORM_111
    MOVEF_F 0.0 VLV_GNORM_111
    MOVEF_F 0.0 VLV_BNORM_111
    MOVEF_F 0.0 VLV_MAX_111
    MOVEF_F 0.0 VLV_MIN_111
    MOVEF_F 0.0 VLV_RGBGREY_111
    MOVEF_F 0.0 VLV_RED_112
    MOVEF_F 0.0 VLV_YELLOW_112
    MOVEF_F 0.0 VLV_GREEN_112
    MOVEF_F 0.0 VLV_BLUE_112
    MOVEF_F 0.0 VLV_VALUENEGRO_112
    MOVEF_F 0.0 VLV_VALUEBLANCO_112
    MOVEF_F 0.0 VLV_RWHITE_112
    MOVEF_F 0.0 VLV_GWHITE_112
    MOVEF_F 0.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_MAXA_112
    MOVEF_F 0.0 VLV_J_112
    CALL ARRAYCREATE_FLOAT VLV_RGB_112
    MOVEF_F 0.0 VLV_RRAW_112
    MOVEF_F 0.0 VLV_GRAW_112
    MOVEF_F 0.0 VLV_BRAW_112
    MOVEF_F 0.0 VLV_RNORM_112
    MOVEF_F 0.0 VLV_GNORM_112
    MOVEF_F 0.0 VLV_BNORM_112
    MOVEF_F 0.0 VLV_MAX_112
    MOVEF_F 0.0 VLV_MIN_112
    MOVEF_F 0.0 VLV_RGBGREY_112
    MOVEF_F 0.0 VLV_RED_113
    MOVEF_F 0.0 VLV_YELLOW_113
    MOVEF_F 0.0 VLV_GREEN_113
    MOVEF_F 0.0 VLV_BLUE_113
    MOVEF_F 0.0 VLV_VALUENEGRO_113
    MOVEF_F 0.0 VLV_VALUEBLANCO_113
    MOVEF_F 0.0 VLV_RWHITE_113
    MOVEF_F 0.0 VLV_GWHITE_113
    MOVEF_F 0.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_MAXA_113
    MOVEF_F 0.0 VLV_J_113
    CALL ARRAYCREATE_FLOAT VLV_RGB_113
    MOVEF_F 0.0 VLV_RRAW_113
    MOVEF_F 0.0 VLV_GRAW_113
    MOVEF_F 0.0 VLV_BRAW_113
    MOVEF_F 0.0 VLV_RNORM_113
    MOVEF_F 0.0 VLV_GNORM_113
    MOVEF_F 0.0 VLV_BNORM_113
    MOVEF_F 0.0 VLV_MAX_113
    MOVEF_F 0.0 VLV_MIN_113
    MOVEF_F 0.0 VLV_RGBGREY_113
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 1
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1329
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1329:
    JR_NEQ32 SUBPROGRAM 1 dispatch1330
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1330:
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_VELOCIDAD1_25
    MOVEF_F 0.0 VLV_VELOCIDAD2_25
    MOVEF_F 0.0 VLV_TIEMPO_25
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_SENS_6
    MOVEF_F 0.0 VLV_VELOCIDAD_4
    MOVEF_F 0.0 VLV_SENS_4
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_81
    MOVEF_F 0.0 VLV_KP_81
    MOVEF_F 0.0 VLV_KI_81
    MOVEF_F 0.0 VLV_KD_81
    MOVEF_F 0.0 VLV_LADO_81
    MOVEF_F 0.0 VLV_SENS_81
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_VELOCIDAD_71
    MOVEF_F 0.0 VLV_KP_71
    MOVEF_F 0.0 VLV_KI_71
    MOVEF_F 0.0 VLV_KD_71
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VELOCIDAD_37
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    MOVEF_F 0.0 VLV_READ_128
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 90.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0001 VGV_KI
    MOVEF_F 3.0 VGV_KD
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.44444444444444 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB0 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB0:
    DATA32 tmp1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp1
    JR_NEQ32 0 tmp1 alreadylaunched1
    OBJECT_START TF_DISPLAY_0
  alreadylaunched1:
    DATA32 tmp2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp2
    JR_NEQ32 0 tmp2 alreadylaunched2
    OBJECT_START TF_STOP_0
  alreadylaunched2:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB3 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB3:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 1.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 4.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 4.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    DATA8 layer7
	DATA8 no7
	DATA8 mode87
	
	MOVEF_8 4.0 no7
	SUB8 no7 1 no7
	DIV8 no7 4 layer7
	MATH MOD8 no7 4 no7

	MOVEF_8 0.0 mode87
	
	INPUT_DEVICE READY_RAW layer7 no7 0 mode87 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while9:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 850.0 endwhile9
  whilebody9:
    MOVEF_8 30.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 30.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 850.0 whilebody9
  endwhile9:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -360.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB17 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB17:
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds19
	MOVEF_32 100.0 milliseconds19
	DATA32 timer19
	TIMER_WAIT milliseconds19 timer19
	TIMER_READY timer19
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while20:
  whilebody20:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf38
    DATA8 flag38
    DIVF F.2 0.05 tmpf38
    CP_EQF 0.0 0.05 flag38
    SELECTF flag38 0.0 tmpf38 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf46
    DATA8 flag46
    DIVF F.1 0.05 tmpf46
    CP_EQF 0.0 0.05 flag46
    SELECTF flag46 0.0 tmpf46 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds60
	MOVEF_32 50.0 milliseconds60
	DATA32 timer60
	TIMER_WAIT milliseconds60 timer60
	TIMER_READY timer60
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody20
  endwhile20:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB63:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_1
    MOVEF_F 20.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB65:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_35
    MULF VGV_VELOCIDAD 0.2 VLV_V2_35
    MOVEF_F 92.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB68 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB68:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_1
    MOVEF_F 39.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB70 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB70:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -300.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB71:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -770.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB72:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 30.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB75:
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 8.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB77:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -740.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB78:
    MULF VGV_VELOCIDAD 0.1 VLV_VELOCIDAD1_25
    MULF VGV_VELOCIDAD -0.1 VLV_VELOCIDAD2_25
    MOVEF_F 1000.0 VLV_TIEMPO_25
    WRITE32 ENDSUB_F_TIEMPOGIROMM_3:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPOGIROMM_3
CALLSUB81:
    DATA32 milliseconds82
	MOVEF_32 500.0 milliseconds82
	DATA32 timer82
	TIMER_WAIT milliseconds82 timer82
	TIMER_READY timer82
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 6.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB85:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -580.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB86:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 70.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB89:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 70.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB92:
    MOVEF_F 30.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB93:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 40.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB95:
    MOVEF_F 30.0 VLV_V_95
    MOVEF_F -300.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB96:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 100.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB99:
    MULF VGV_VELOCIDAD 0.6 VLV_VELOCIDAD_1
    MOVEF_F 25.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB101:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_6
    MOVEF_F 4.0 VLV_SENS_6
    WRITE32 ENDSUB_F_1BLANCORECTOMMF_2:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMMF_2
CALLSUB103:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_4
    MOVEF_F 4.0 VLV_SENS_4
    WRITE32 ENDSUB_F_1NEGRORECTOMMF_2:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMMF_2
CALLSUB105:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB107:
    MULF VGV_VELOCIDAD 0.3 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB109:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_75
    MULF VGV_KP 0.95 VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 20.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB112:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_81
    MOVEF_F VGV_KP VLV_KP_81
    MOVEF_F VGV_KI VLV_KI_81
    MOVEF_F VGV_KD VLV_KD_81
    MOVEF_F 4.0 VLV_LADO_81
    MOVEF_F 1.0 VLV_SENS_81
    WRITE32 ENDSUB_F_SL1SPIDCROSS_6:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_6
CALLSUB114:
    MULF VGV_VELOCIDAD 0.7 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 36.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB116:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD2_15
    MOVEF_F 22.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB119:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD2_15
    MOVEF_F 25.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB122:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 23.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB124:
    WRITE32 ENDSUB_F_COGER_ABAJO_BASURA_0:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_BASURA_0
CALLSUB125:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB127:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 85.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB130:
    DATA32 milliseconds131
	MOVEF_32 250.0 milliseconds131
	DATA32 timer131
	TIMER_WAIT milliseconds131 timer131
	TIMER_READY timer131
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 13.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB133:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 85.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB136:
    DATA32 milliseconds137
	MOVEF_32 250.0 milliseconds137
	DATA32 timer137
	TIMER_WAIT milliseconds137 timer137
	TIMER_READY timer137
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB139:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -820.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB140:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 30.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB143:
    DATA32 milliseconds144
	MOVEF_32 1000.0 milliseconds144
	DATA32 timer144
	TIMER_WAIT milliseconds144 timer144
	TIMER_READY timer144
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB146:
    MULF VGV_VELOCIDAD 0.1 VLV_VELOCIDAD1_25
    MULF VGV_VELOCIDAD -0.1 VLV_VELOCIDAD2_25
    MOVEF_F 1500.0 VLV_TIEMPO_25
    WRITE32 ENDSUB_F_TIEMPOGIROMM_3:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPOGIROMM_3
CALLSUB149:
    DATA32 milliseconds150
	MOVEF_32 500.0 milliseconds150
	DATA32 timer150
	TIMER_WAIT milliseconds150 timer150
	TIMER_READY timer150
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 6.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB153:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -580.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB154:
    DATA32 milliseconds155
	MOVEF_32 1000.0 milliseconds155
	DATA32 timer155
	TIMER_WAIT milliseconds155 timer155
	TIMER_READY timer155
    MOVEF_F 10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB156:
    MOVEF_F -10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB157:
    MOVEF_F 30.0 VLV_V_95
    MOVEF_F -300.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB158:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 165.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB161:
    DATA32 milliseconds162
	MOVEF_32 250.0 milliseconds162
	DATA32 timer162
	TIMER_WAIT milliseconds162 timer162
	TIMER_READY timer162
    MULF VGV_VELOCIDAD 0.9 VLV_VELOCIDAD_1
    MOVEF_F 120.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB164:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.23 VLV_VELOCIDAD2_15
    MOVEF_F 20.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB167:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB170:
    MULF VGV_VELOCIDAD -0.55 VLV_VELOCIDAD_13
    MOVEF_F 2000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB172:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB174:
    MULF VGV_VELOCIDAD -0.55 VLV_VELOCIDAD_13
    MOVEF_F 1000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB176:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 8.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB178:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB181:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB183:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB185:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 20.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB188:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB189:
    MOVEF_F 20.0 VLV_V_106
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB190:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB192:
    MULF VGV_VELOCIDAD -0.2 VLV_VELOCIDAD_1
    MOVEF_F 20.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB194:
    MOVEF_F 30.0 VLV_V_95
    MOVEF_F -300.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB195:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 115.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB198:
    MULF VGV_VELOCIDAD -0.55 VLV_VELOCIDAD_13
    MOVEF_F 2000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB200:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB202:
    MULF VGV_VELOCIDAD -0.55 VLV_VELOCIDAD_13
    MOVEF_F 1000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB204:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 33.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB206:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 85.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB209:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 44.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB211:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB213:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_4
    MOVEF_F 1.0 VLV_SENS_4
    WRITE32 ENDSUB_F_1NEGRORECTOMMF_2:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMMF_2
CALLSUB215:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB217:
    MULF VGV_VELOCIDAD 0.3 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB219:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_71
    MOVEF_F VGV_KP VLV_KP_71
    MOVEF_F VGV_KI VLV_KI_71
    MOVEF_F VGV_KD VLV_KD_71
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB221:
    CALL MOTOR.STOP 'ABCD' 'True'
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 17.3 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB224:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB225:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB227:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB229:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB231:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 89.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB234:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MULF VGV_KP 1.5 VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 13.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB237:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 87.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB240:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 11.2 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB242:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB243:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_37
    WRITE32 ENDSUB_F_SPIN180_1:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN180_1
CALLSUB245:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_13
    MOVEF_F 1000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB247:
    MULF VGV_VELOCIDAD 0.24 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD2_15
    MOVEF_F 37.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB250:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB251:
    MOVEF_F 20.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB252:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_STOP_0:
  while253:
  whilebody253:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else254_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    WRITE32 ENDSUB_F_BMOVEADSAFE_2:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEADSAFE_2
CALLSUB259:
    PROGRAM_STOP -1
  else254_1:
  endif254:
    JR whilebody253
  endwhile253:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf264
    DATA8 flag264
    DIVF F.1 F.2 tmpf264
    CP_EQF 0.0 F.2 flag264
    SELECTF flag264 0.0 tmpf264 F.0

    DATAF tmpf265
    DATA8 flag265
    DIVF F.0 VLV_DIAMETRO_1 tmpf265
    CP_EQF 0.0 VLV_DIAMETRO_1 flag265
    SELECTF flag265 0.0 tmpf265 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    DATAF tmpf268
    DATA8 flag268
    DIVF VGV_CORRECCION 30.0 tmpf268
    CP_EQF 0.0 30.0 flag268
    SELECTF flag268 0.0 tmpf268 F.2

    MULF F.2 VLV_VELOCIDAD_1 F.1
    ADDF F.0 F.1 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while274:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile274
  whilebody274:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 1.2 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody274
  endwhile274:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_1NEGRORECTOMM_2:
    MULF VLV_VELOCIDAD_3 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_3
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_3
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_3
  while295:
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_LTEQF F.0 10.0 endwhile295
  whilebody295:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_3 VLV_ENCODER_B_3
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_3 VLV_ENCODER_C_3
    SUBF VLV_ENCODER_B_3 VLV_ENCODER_C_3 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_3
    MULF VLV_ERROR_3 1.2 VLV_PROPORCIAL_3
    SUBF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_GTF F.0 10.0 whilebody295
  endwhile295:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGRORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMM_2:
SUB_F_1NEGRORECTOMMF_2:
    MULF VLV_VELOCIDAD_4 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_4
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_4
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_4
  while316:
    CALL SENSOR.READPERCENT VLV_SENS_4 F.0
    JR_LTEQF F.0 10.0 endwhile316
  whilebody316:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_4 VLV_ENCODER_B_4
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_4 VLV_ENCODER_C_4
    SUBF VLV_ENCODER_B_4 VLV_ENCODER_C_4 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_4
    MULF VLV_ERROR_4 1.2 VLV_PROPORCIAL_4
    SUBF VLV_VELOCIDAD_4 VLV_PROPORCIAL_4 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_4 VLV_PROPORCIAL_4 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_4 F.0
    JR_GTF F.0 10.0 whilebody316
  endwhile316:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_F_1NEGRORECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMMF_2:
SUB_F_1BLANCORECTOMM_2:
    MULF VLV_VELOCIDAD_5 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_5
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_5
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_5
  while337:
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_GTEQF F.0 40.0 endwhile337
  whilebody337:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_5 VLV_ENCODER_B_5
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_5 VLV_ENCODER_C_5
    SUBF VLV_ENCODER_B_5 VLV_ENCODER_C_5 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_5
    MULF VLV_ERROR_5 1.2 VLV_PROPORCIAL_5
    SUBF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_LTF F.0 40.0 whilebody337
  endwhile337:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1BLANCORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMM_2:
SUB_F_1BLANCORECTOMMF_2:
    MULF VLV_VELOCIDAD_6 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_6
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_6
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_6
  while358:
    CALL SENSOR.READPERCENT VLV_SENS_6 F.0
    JR_GTEQF F.0 40.0 endwhile358
  whilebody358:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_6 VLV_ENCODER_B_6
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_6 VLV_ENCODER_C_6
    SUBF VLV_ENCODER_B_6 VLV_ENCODER_C_6 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_6
    MULF VLV_ERROR_6 1.2 VLV_PROPORCIAL_6
    SUBF VLV_VELOCIDAD_6 VLV_PROPORCIAL_6 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_6 VLV_PROPORCIAL_6 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_6 F.0
    JR_LTF F.0 40.0 whilebody358
  endwhile358:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_F_1BLANCORECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMMF_2:
SUB_F_TIEMPORECTOMM_2:
    MULF VLV_VELOCIDAD_13 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_13
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_13
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_13
    TIMER_READ timeMC3
  while380:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_13 endwhile380
  whilebody380:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_13 VLV_ENCODER_B_13
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_13 VLV_ENCODER_C_13
    SUBF VLV_ENCODER_B_13 VLV_ENCODER_C_13 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_13
    MULF VLV_ERROR_13 1.2 VLV_PROPORCIAL_13
    SUBF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_13 whilebody380
  endwhile380:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPORECTOMM_2:
SUB_F_ENCODERGIROMM_3:
    MULF VLV_VELOCIDAD1_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_15
    MULF VLV_VELOCIDAD2_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_15
    MOVEF_F 5.6 VLV_DIAMETRO_15
    MOVEF_F 3.1415926535897932384 F.2
    MULF VLV_DIAMETRO_15 F.2 F.1
    DATAF tmpf400
    DATA8 flag400
    DIVF VLV_ENCODER_15 F.1 tmpf400
    CP_EQF 0.0 F.1 flag400
    SELECTF flag400 0.0 tmpf400 F.0

    MULF F.0 360.0 VLV_DISTANCIA_15
    MATH NEGATE VLV_VELOCIDAD1_15 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_15 VLV_DISTANCIA_15 'True'

	DATA8 layer403
	DATA8 nos403
	DATA8 busy403
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer403 nos403
	JR_EQ8 0 nos403 motornotbusy403
  motorwaiting403:
	OUTPUT_TEST layer403 nos403 busy403
	JR_EQ8 busy403 0 motornotbusy403
	SLEEP
	JR motorwaiting403
  motornotbusy403:
RETSUB_F_ENCODERGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERGIROMM_3:
SUB_F_TIEMPOGIROMM_3:
    TIMER_READ timeMC3
    MULF VLV_VELOCIDAD1_25 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_25
    MULF VLV_VELOCIDAD2_25 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_25
  while407:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_25 endwhile407
  whilebody407:
    MATH NEGATE VLV_VELOCIDAD1_25 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_25
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_25 whilebody407
  endwhile407:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPOGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPOGIROMM_3:
SUB_F_GPERFDDEFINITIVOMM_1:
    MOVEF_F 100.0 VLV_AVANCE_33
    MOVEF_F 200.0 VLV_GINICIO_33
    MOVEF_F 70.0 VLV_AJUSTE_33
    DATA8 flag413
	CP_LTF 40.0 VLV_VEL_33 flag413
	SELECTF flag413 40.0 VLV_VEL_33 VLV_VEL_33
    MULF VLV_VEL_33 0.75 VLV_VEL_33
    MULF VLV_VEL_33 VGV_SENTIDO_MOTORES VLV_VEL_33
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VEL_33 VLV_AVANCE_33 'True'

	DATA8 layer417
	DATA8 nos417
	DATA8 busy417
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer417 nos417
	JR_EQ8 0 nos417 motornotbusy417
  motorwaiting417:
	OUTPUT_TEST layer417 nos417 busy417
	JR_EQ8 busy417 0 motornotbusy417
	SLEEP
	JR motorwaiting417
  motornotbusy417:
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_GINICIO_33 0.0 'False' 

	DATA8 layer419
	DATA8 nos419
	DATA8 busy419
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer419 nos419
	JR_EQ8 0 nos419 motornotbusy419
  motorwaiting419:
	OUTPUT_TEST layer419 nos419 busy419
	JR_EQ8 busy419 0 motornotbusy419
	SLEEP
	JR motorwaiting419
  motornotbusy419:
  while420:
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 10.0 endwhile420
  whilebody420:
    MATH NEGATE VLV_VEL_33 F.0
    MATH NEGATE VLV_VEL_33 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 10.0 whilebody420
  endwhile420:
    CALL MOTOR.STOP 'BC' 'False'
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_AJUSTE_33 0.0 'True' 

	DATA8 layer428
	DATA8 nos428
	DATA8 busy428
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer428 nos428
	JR_EQ8 0 nos428 motornotbusy428
  motorwaiting428:
	OUTPUT_TEST layer428 nos428 busy428
	JR_EQ8 busy428 0 motornotbusy428
	SLEEP
	JR motorwaiting428
  motornotbusy428:
RETSUB_F_GPERFDDEFINITIVOMM_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GPERFDDEFINITIVOMM_1:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_35
    STRINGS DUPLICATE 'C' VLV_D_35
    DATAF tmpf429
    DATA8 flag429
    DIVF VLV_V1_35 VLV_V2_35 tmpf429
    CP_EQF 0.0 VLV_V2_35 flag429
    SELECTF flag429 0.0 tmpf429 F.0

    DATAF tmpf430
    DATA8 flag430
    DIVF VLV_V1_35 VLV_V2_35 tmpf430
    CP_EQF 0.0 VLV_V2_35 flag430
    SELECTF flag430 0.0 tmpf430 F.2

    MATH ABS F.2 F.1
    DATAF tmpf432
    DATA8 flag432
    DIVF F.0 F.1 tmpf432
    CP_EQF 0.0 F.1 flag432
    SELECTF flag432 0.0 tmpf432 VLV_SIGNO_35

    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag435
	CP_LTF F.0 F.1 flag435
	SELECTF flag435 F.0 F.1 VLV_VMIN_35
    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag438
	CP_GTF F.0 F.1 flag438
	SELECTF flag438 F.0 F.1 VLV_VMAX_35
    MULF VLV_ANGLE_35 VGV_G1 F.0
    MULF VLV_SIGNO_35 VLV_VMIN_35 F.4
    DATAF tmpf441
    DATA8 flag441
    DIVF F.4 VLV_VMAX_35 tmpf441
    CP_EQF 0.0 VLV_VMAX_35 flag441
    SELECTF flag441 0.0 tmpf441 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf443
    DATA8 flag443
    DIVF -2.0 F.2 tmpf443
    CP_EQF 0.0 F.2 flag443
    SELECTF flag443 0.0 tmpf443 F.1

    MULF F.0 F.1 VLV_ENCODR_35
    CALL TEXT.APPEND VLV_I_35 VLV_D_35 S.0
    MATH NEGATE VLV_V1_35 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_35 VLV_ENCODR_35 'True'

	DATA8 layer447
	DATA8 nos447
	DATA8 busy447
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer447 nos447
	JR_EQ8 0 nos447 motornotbusy447
  motorwaiting447:
	OUTPUT_TEST layer447 nos447 busy447
	JR_EQ8 busy447 0 motornotbusy447
	SLEEP
	JR motorwaiting447
  motornotbusy447:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    DATA32 milliseconds448
	MOVEF_32 200.0 milliseconds448
	DATA32 timer448
	TIMER_WAIT milliseconds448 timer448
	TIMER_READY timer448
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_GUNIVENCMMF_3:
    STRINGS DUPLICATE 'B' VLV_I_36
    STRINGS DUPLICATE 'C' VLV_D_36
    DATAF tmpf449
    DATA8 flag449
    DIVF VLV_V1_36 VLV_V2_36 tmpf449
    CP_EQF 0.0 VLV_V2_36 flag449
    SELECTF flag449 0.0 tmpf449 F.0

    DATAF tmpf450
    DATA8 flag450
    DIVF VLV_V1_36 VLV_V2_36 tmpf450
    CP_EQF 0.0 VLV_V2_36 flag450
    SELECTF flag450 0.0 tmpf450 F.2

    MATH ABS F.2 F.1
    DATAF tmpf452
    DATA8 flag452
    DIVF F.0 F.1 tmpf452
    CP_EQF 0.0 F.1 flag452
    SELECTF flag452 0.0 tmpf452 VLV_SIGNO_36

    MATH ABS VLV_V1_36 F.0
    MATH ABS VLV_V2_36 F.1
    DATA8 flag455
	CP_LTF F.0 F.1 flag455
	SELECTF flag455 F.0 F.1 VLV_VMIN_36
    MATH ABS VLV_V1_36 F.0
    MATH ABS VLV_V2_36 F.1
    DATA8 flag458
	CP_GTF F.0 F.1 flag458
	SELECTF flag458 F.0 F.1 VLV_VMAX_36
    MULF VLV_ANGLE_36 VGV_G1 F.0
    MULF VLV_SIGNO_36 VLV_VMIN_36 F.4
    DATAF tmpf461
    DATA8 flag461
    DIVF F.4 VLV_VMAX_36 tmpf461
    CP_EQF 0.0 VLV_VMAX_36 flag461
    SELECTF flag461 0.0 tmpf461 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf463
    DATA8 flag463
    DIVF -2.0 F.2 tmpf463
    CP_EQF 0.0 F.2 flag463
    SELECTF flag463 0.0 tmpf463 F.1

    MULF F.0 F.1 VLV_ENCODR_36
    CALL TEXT.APPEND VLV_I_36 VLV_D_36 S.0
    MATH NEGATE VLV_V1_36 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_36 VLV_ENCODR_36 'False'

	DATA8 layer467
	DATA8 nos467
	DATA8 busy467
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer467 nos467
	JR_EQ8 0 nos467 motornotbusy467
  motorwaiting467:
	OUTPUT_TEST layer467 nos467 busy467
	JR_EQ8 busy467 0 motornotbusy467
	SLEEP
	JR motorwaiting467
  motornotbusy467:
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
RETSUB_F_GUNIVENCMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMMF_3:
SUB_F_SPIN180_1:
    STRINGS DUPLICATE 'B' VLV_I_37
    STRINGS DUPLICATE 'C' VLV_D_37
    MOVEF_F VLV_VELOCIDAD_37 VLV_V1_35
    MULF VLV_VELOCIDAD_37 -1.0 VLV_V2_35
    MOVEF_F 176.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB469:
    MOVEF_F 0.0 VLV_ANGLE_37
RETSUB_F_SPIN180_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN180_1:
SUB_F_SPIN90_1:
    STRINGS DUPLICATE 'B' VLV_I_39
    STRINGS DUPLICATE 'C' VLV_D_39
    MOVEF_F VLV_VELOCIDAD_39 VLV_V1_35
    MULF VLV_VELOCIDAD_39 -1.0 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB471:
    MOVEF_F 0.0 VLV_ANGLE_39
RETSUB_F_SPIN90_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN90_1:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_56
    STRINGS DUPLICATE 'C' VLV_D_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf474
    DATA8 flag474
    DIVF VLV_ACCELENCODER_56 F.1 tmpf474
    CP_EQF 0.0 F.1 flag474
    SELECTF flag474 0.0 tmpf474 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    CALL MOTOR.RESETCOUNT 'C'
  while477:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or478
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile477
  or478:
  whilebody477:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf482
    DATA8 flag482
    DIVF F.3 VLV_ACCELENCODER_56 tmpf482
    CP_EQF 0.0 VLV_ACCELENCODER_56 flag482
    SELECTF flag482 0.0 tmpf482 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_56 VLV_V0_56 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_56 VLV_VEL_56
    DATA8 flag487
	CP_LTF VLV_VEL_56 VLV_VMAX_56 flag487
	SELECTF flag487 VLV_VEL_56 VLV_VMAX_56 VLV_VEL_56
    MATH ABS VLV_VEL_56 F.0
    DATAF tmpf489
    DATA8 flag489
    DIVF VLV_VEL_56 F.0 tmpf489
    CP_EQF 0.0 F.0 flag489
    SELECTF flag489 0.0 tmpf489 VLV_SENTIDO_56

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_56 VLV_ERROR_56
    ADDF VLV_ERRSUM_56 VLV_ERROR_56 VLV_ERRSUM_56
    MULF VLV_ERROR_56 VLV_KP_56 F.1
    SUBF VLV_ERROR_56 VLV_OLDERROR_56 F.3
    MULF F.3 VLV_KD_56 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_56 VLV_KI_56 F.1
    ADDF F.0 F.1 VLV_U_56
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    ADDF VLV_VEL_56 VLV_U_56 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_56 VLV_U_56 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_56 VLV_OLDERROR_56
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody477
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody477
  endwhile477:
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PID_4:
    MULF VLV_VELOCIDAD_71 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_71
    STRINGS DUPLICATE 'B' VLV_I_71
    STRINGS DUPLICATE 'C' VLV_D_71
    MOVEF_F 0.0 VLV_ERROR_71
    MOVEF_F 0.0 VLV_OLDERROR_71
    MOVEF_F 0.0 VLV_ERRSUM_71
    MOVEF_F 0.0 VLV_U_71
    MATH ABS VLV_VELOCIDAD_71 F.0
    DATAF tmpf514
    DATA8 flag514
    DIVF VLV_VELOCIDAD_71 F.0 tmpf514
    CP_EQF 0.0 F.0 flag514
    SELECTF flag514 0.0 tmpf514 VLV_SENTIDO_71

  while515:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or516
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile515
  or516:
  whilebody515:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_71 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_71
    ADDF VLV_ERRSUM_71 VLV_ERROR_71 VLV_ERRSUM_71
    MULF VLV_ERROR_71 VLV_KP_71 F.1
    SUBF VLV_ERROR_71 VLV_OLDERROR_71 F.3
    MULF F.3 VLV_KD_71 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_71 VLV_KI_71 F.1
    ADDF F.0 F.1 VLV_U_71
    CALL TEXT.APPEND VLV_I_71 VLV_D_71 S.0
    ADDF VLV_VELOCIDAD_71 VLV_U_71 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_71 VLV_U_71 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_71 VLV_OLDERROR_71
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody515
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody515
  endwhile515:
    CALL TEXT.APPEND VLV_I_71 VLV_D_71 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PID_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PID_4:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_72 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_72
    STRINGS DUPLICATE 'B' VLV_I_72
    STRINGS DUPLICATE 'C' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MATH ABS VLV_VELOCIDAD_72 F.0
    DATAF tmpf542
    DATA8 flag542
    DIVF VLV_VELOCIDAD_72 F.0 tmpf542
    CP_EQF 0.0 F.0 flag542
    SELECTF flag542 0.0 tmpf542 VLV_SENTIDO_72

  while543:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or544
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile543
  or544:
  whilebody543:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_72 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_72
    ADDF VLV_ERRSUM_72 VLV_ERROR_72 VLV_ERRSUM_72
    MULF VLV_ERROR_72 VLV_KP_72 F.1
    SUBF VLV_ERROR_72 VLV_OLDERROR_72 F.3
    MULF F.3 VLV_KD_72 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_72 VLV_KI_72 F.1
    ADDF F.0 F.1 VLV_U_72
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    ADDF VLV_VELOCIDAD_72 VLV_U_72 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_72 VLV_U_72 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_72 VLV_OLDERROR_72
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody543
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody543
  endwhile543:
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_75 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_75
    STRINGS DUPLICATE 'B' VLV_I_75
    STRINGS DUPLICATE 'C' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MATH ABS VLV_VELOCIDAD_75 F.0
    DATAF tmpf570
    DATA8 flag570
    DIVF VLV_VELOCIDAD_75 F.0 tmpf570
    CP_EQF 0.0 F.0 flag570
    SELECTF flag570 0.0 tmpf570 VLV_SENTIDO_75

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf573
    DATA8 flag573
    DIVF VLV_ENCODER_75 F.1 tmpf573
    CP_EQF 0.0 F.1 flag573
    SELECTF flag573 0.0 tmpf573 F.0

    MULF F.0 360.0 VLV_ENCODER_75
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
  while576:
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_GTEQF F.0 VLV_ENCODER_75 endwhile576
  whilebody576:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_75 VLV_ENCODER_C_75
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_75 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_75
    ADDF VLV_ERRSUM_75 VLV_ERROR_75 VLV_ERRSUM_75
    MULF VLV_ERROR_75 VLV_KP_75 F.1
    SUBF VLV_ERROR_75 VLV_OLDERROR_75 F.3
    MULF F.3 VLV_KD_75 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_75 VLV_KI_75 F.1
    ADDF F.0 F.1 VLV_U_75
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    ADDF VLV_VELOCIDAD_75 VLV_U_75 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_75 VLV_U_75 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_75 VLV_OLDERROR_75
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_LTF F.0 VLV_ENCODER_75 whilebody576
  endwhile576:
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_76 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_76
    STRINGS DUPLICATE 'B' VLV_I_76
    STRINGS DUPLICATE 'C' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MATH ABS VLV_VELOCIDAD_76 F.0
    DATAF tmpf602
    DATA8 flag602
    DIVF VLV_VELOCIDAD_76 F.0 tmpf602
    CP_EQF 0.0 F.0 flag602
    SELECTF flag602 0.0 tmpf602 VLV_SENTIDO_76

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf605
    DATA8 flag605
    DIVF VLV_ENCODER_76 F.1 tmpf605
    CP_EQF 0.0 F.1 flag605
    SELECTF flag605 0.0 tmpf605 F.0

    MULF F.0 360.0 VLV_ENCODER_76
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
  while608:
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_GTEQF F.0 VLV_ENCODER_76 endwhile608
  whilebody608:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_76 VLV_ENCODER_C_76
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_76 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_76
    ADDF VLV_ERRSUM_76 VLV_ERROR_76 VLV_ERRSUM_76
    MULF VLV_ERROR_76 VLV_KP_76 F.1
    SUBF VLV_ERROR_76 VLV_OLDERROR_76 F.3
    MULF F.3 VLV_KD_76 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_76 VLV_KI_76 F.1
    ADDF F.0 F.1 VLV_U_76
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    ADDF VLV_VELOCIDAD_76 VLV_U_76 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_76 VLV_U_76 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_76 VLV_OLDERROR_76
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_LTF F.0 VLV_ENCODER_76 whilebody608
  endwhile608:
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL1SPIDCROSS_6:
    MULF VLV_VELOCIDAD_81 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_81
    STRINGS DUPLICATE 'B' VLV_I_81
    STRINGS DUPLICATE 'C' VLV_D_81
    MOVEF_F 0.0 VLV_ERROR_81
    MOVEF_F 0.0 VLV_OLDERROR_81
    MOVEF_F 0.0 VLV_ERRSUM_81
    MOVEF_F 0.0 VLV_U_81
    MATH ABS VLV_VELOCIDAD_81 F.0
    DATAF tmpf634
    DATA8 flag634
    DIVF VLV_VELOCIDAD_81 F.0 tmpf634
    CP_EQF 0.0 F.0 flag634
    SELECTF flag634 0.0 tmpf634 VLV_SENTIDO_81

    JR_NEQF VLV_SENS_81 1.0 else635_1
    MOVEF_F 4.0 VLV_READER_81
    JR endif635
  else635_1:
    MOVEF_F 1.0 VLV_READER_81
  else635_2:
  endif635:
  while636:
    CALL SENSOR.READPERCENT VLV_READER_81 F.0
    JR_LTEQF F.0 15.0 endwhile636
  whilebody636:
    CALL SENSOR.READPERCENT VLV_SENS_81 F.3
    SUBF F.3 50.0 F.2
    MULF F.2 VLV_SENTIDO_81 F.1
    MULF F.1 VLV_LADO_81 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_81
    ADDF VLV_ERRSUM_81 VLV_ERROR_81 VLV_ERRSUM_81
    MULF VLV_ERROR_81 VLV_KP_81 F.1
    SUBF VLV_ERROR_81 VLV_OLDERROR_81 F.3
    MULF F.3 VLV_KD_81 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_81 VLV_KI_81 F.1
    ADDF F.0 F.1 VLV_U_81
    CALL TEXT.APPEND VLV_I_81 VLV_D_81 S.0
    ADDF VLV_VELOCIDAD_81 VLV_U_81 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_81 VLV_U_81 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_81 VLV_OLDERROR_81
    CALL SENSOR.READPERCENT VLV_READER_81 F.0
    JR_GTF F.0 15.0 whilebody636
  endwhile636:
    CALL TEXT.APPEND VLV_I_81 VLV_D_81 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL1SPIDCROSS_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSS_6:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_88 VGV_SENTIDO_MOTORES VLV_VMAX_88
    STRINGS DUPLICATE 'B' VLV_I_88
    STRINGS DUPLICATE 'C' VLV_D_88
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_88
    MOVEF_F 150.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    CALL MOTOR.RESETCOUNT 'C'
  while661:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or662
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile661
  or662:
  whilebody661:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf666
    DATA8 flag666
    DIVF F.2 VLV_ACCELENCODER_88 tmpf666
    CP_EQF 0.0 VLV_ACCELENCODER_88 flag666
    SELECTF flag666 0.0 tmpf666 F.1

    ADDF VLV_VMAX_88 VLV_V0_88 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_88 VLV_VEL_88
    DATA8 flag670
	CP_LTF VLV_VEL_88 VLV_VMAX_88 flag670
	SELECTF flag670 VLV_VEL_88 VLV_VMAX_88 VLV_VEL_88
    MATH ABS VLV_VEL_88 F.0
    DATAF tmpf672
    DATA8 flag672
    DIVF VLV_VEL_88 F.0 tmpf672
    CP_EQF 0.0 F.0 flag672
    SELECTF flag672 0.0 tmpf672 VLV_SENTIDO_88

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_88 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_88
    MULF VLV_ERRSUM_88 0.9 F.0
    ADDF F.0 VLV_ERROR_88 VLV_ERRSUM_88
    MULF VLV_ERROR_88 VLV_KP_88 F.1
    SUBF VLV_ERROR_88 VLV_OLDERROR_88 F.3
    MULF F.3 VLV_KD_88 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_88 VLV_KI_88 F.1
    ADDF F.0 F.1 VLV_U_88
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    ADDF VLV_VEL_88 VLV_U_88 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_88 VLV_U_88 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_88 VLV_OLDERROR_88
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody661
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody661
  endwhile661:
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_95 F.0 VLV_ENCDIFF_95
    MATH ABS VLV_ENCDIFF_95 F.0
    DATAF tmpf698
    DATA8 flag698
    DIVF VLV_ENCDIFF_95 F.0 tmpf698
    CP_EQF 0.0 F.0 flag698
    SELECTF flag698 0.0 tmpf698 VLV_SIGNO_95

    JR_EQF VLV_ENCDIFF_95 0.0 else699_1
  while700:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile700
  whilebody700:
    MULF VLV_SIGNO_95 VLV_V_95 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody700
  endwhile700:
    CALL MOTOR.STOP 'A' 'True'
  else699_1:
  endif699:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEAD0_1:
    MOVEF_F 0.0 VLV_AENC_101
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_101 F.0 VLV_ENCDIFF_101
    MATH ABS VLV_ENCDIFF_101 F.0
    DATAF tmpf713
    DATA8 flag713
    DIVF VLV_ENCDIFF_101 F.0 tmpf713
    CP_EQF 0.0 F.0 flag713
    SELECTF flag713 0.0 tmpf713 VLV_SIGNO_101

    MATH ABS VLV_ENCDIFF_101 F.6
    DATAF tmpf715
    DATA8 flag715
    DIVF F.6 100.0 tmpf715
    CP_EQF 0.0 100.0 flag715
    SELECTF flag715 0.0 tmpf715 F.5

    DATAF tmpf716
    DATA8 flag716
    DIVF VLV_V_101 20.0 tmpf716
    CP_EQF 0.0 20.0 flag716
    SELECTF flag716 0.0 tmpf716 F.6

    DATAF tmpf717
    DATA8 flag717
    DIVF F.5 F.6 tmpf717
    CP_EQF 0.0 F.6 flag717
    SELECTF flag717 0.0 tmpf717 F.4

    MULF F.4 650.0 F.3
    MULF F.3 2.0 F.2
    MULF F.2 2.0 F.1
    DATAF tmpf721
    DATA8 flag721
    DIVF F.1 3.0 tmpf721
    CP_EQF 0.0 3.0 flag721
    SELECTF flag721 0.0 tmpf721 F.0

    DATA8 flag722
	CP_GTF F.0 400.0 flag722
	SELECTF flag722 F.0 400.0 VLV_SAFETYTIMER_101
    TIMER_READ timeMC3
  while724:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 or725
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENC_101 endwhile724
  or725:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_101 endwhile724
  whilebody724:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_GTEQF F.0 VLV_AENC_101 else729_1
    DATAF tmpf731
    DATA8 flag731
    DIVF VLV_V_101 2.0 tmpf731
    CP_EQF 0.0 2.0 flag731
    SELECTF flag731 0.0 tmpf731 F.2

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf734
    DATA8 flag734
    DIVF F.4 10.0 tmpf734
    CP_EQF 0.0 10.0 flag734
    SELECTF flag734 0.0 tmpf734 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag736
	CP_LTF VLV_V_101 F.1 flag736
	SELECTF flag736 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif729
  else729_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_LTEQF F.0 VLV_AENC_101 else729_2
    DATAF tmpf739
    DATA8 flag739
    DIVF VLV_V_101 2.0 tmpf739
    CP_EQF 0.0 2.0 flag739
    SELECTF flag739 0.0 tmpf739 F.3

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf742
    DATA8 flag742
    DIVF F.5 10.0 tmpf742
    CP_EQF 0.0 10.0 flag742
    SELECTF flag742 0.0 tmpf742 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag744
	CP_LTF VLV_V_101 F.2 flag744
	SELECTF flag744 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif729
  else729_2:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else729_3:
  endif729:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_GTEQF F.0 VLV_AENC_101 else748_1
    DATAF tmpf750
    DATA8 flag750
    DIVF VLV_V_101 2.0 tmpf750
    CP_EQF 0.0 2.0 flag750
    SELECTF flag750 0.0 tmpf750 F.2

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf753
    DATA8 flag753
    DIVF F.4 10.0 tmpf753
    CP_EQF 0.0 10.0 flag753
    SELECTF flag753 0.0 tmpf753 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag755
	CP_LTF VLV_V_101 F.1 flag755
	SELECTF flag755 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif748
  else748_1:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_LTEQF F.0 VLV_AENC_101 else748_2
    DATAF tmpf758
    DATA8 flag758
    DIVF VLV_V_101 2.0 tmpf758
    CP_EQF 0.0 2.0 flag758
    SELECTF flag758 0.0 tmpf758 F.3

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf761
    DATA8 flag761
    DIVF F.5 10.0 tmpf761
    CP_EQF 0.0 10.0 flag761
    SELECTF flag761 0.0 tmpf761 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag763
	CP_LTF VLV_V_101 F.2 flag763
	SELECTF flag763 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif748
  else748_2:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else748_3:
  endif748:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 or768
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENC_101 and767
  or768:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_101 whilebody724
  and767:
  endwhile724:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEAD0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD0_1:
SUB_F_BMOVEADSAFE_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    MATH ABS VLV_DIFFA_104 F.5
    MATH ABS VLV_DIFFD_104 F.6
    DATA8 flag779
	CP_GTF F.5 F.6 flag779
	SELECTF flag779 F.5 F.6 F.4
    DATAF tmpf780
    DATA8 flag780
    DIVF F.4 100.0 tmpf780
    CP_EQF 0.0 100.0 flag780
    SELECTF flag780 0.0 tmpf780 F.3

    DATAF tmpf781
    DATA8 flag781
    DIVF VLV_V_104 20.0 tmpf781
    CP_EQF 0.0 20.0 flag781
    SELECTF flag781 0.0 tmpf781 F.4

    DATAF tmpf782
    DATA8 flag782
    DIVF F.3 F.4 tmpf782
    CP_EQF 0.0 F.4 flag782
    SELECTF flag782 0.0 tmpf782 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag785
	CP_GTF F.0 400.0 flag785
	SELECTF flag785 F.0 400.0 VLV_SAFETYTIMER_104
    MATH ABS VLV_DIFFA_104 F.0
    DATAF tmpf787
    DATA8 flag787
    DIVF VLV_DIFFA_104 F.0 tmpf787
    CP_EQF 0.0 F.0 flag787
    SELECTF flag787 0.0 tmpf787 VLV_SIGNOA_104

    MATH ABS VLV_DIFFD_104 F.0
    DATAF tmpf789
    DATA8 flag789
    DIVF VLV_DIFFD_104 F.0 tmpf789
    CP_EQF 0.0 F.0 flag789
    SELECTF flag789 0.0 tmpf789 VLV_SIGNOD_104

    MULF VLV_V_104 VLV_SIGNOA_104 VLV_VELA_104
    MULF VLV_V_104 VLV_SIGNOD_104 VLV_VELD_104
    CALL MOTOR.SCHEDULESYNC 'AD' VLV_VELA_104 VLV_VELD_104 5.0 'False'

	DATA8 layer792
	DATA8 nos792
	DATA8 busy792
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer792 nos792
	JR_EQ8 0 nos792 motornotbusy792
  motorwaiting792:
	OUTPUT_TEST layer792 nos792 busy792
	JR_EQ8 busy792 0 motornotbusy792
	SLEEP
	JR motorwaiting792
  motornotbusy792:
    CALL LCD.CLEAR
    TIMER_READ timeMC3
  while795:
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 or796
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_EQF F.0 0.0 endwhile795
  or796:
  whilebody795:
    MULF VLV_DIFFA_104 VLV_SIGNOA_104 F.0
    JR_LTEQF F.0 0.0 else799_1
    MOVEF_8 VLV_VELA_104 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif799
  else799_1:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else799_2:
  endif799:
    MULF VLV_DIFFD_104 VLV_SIGNOD_104 F.0
    JR_LTEQF F.0 0.0 else803_1
    MOVEF_8 VLV_VELD_104 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif803
  else803_1:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else803_2:
  endif803:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTEQF F.0 VLV_SAFETYTIMER_104 else807_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
  else807_1:
  endif807:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_104 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 whilebody795
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_NEQF F.0 0.0 whilebody795
  endwhile795:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEADSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEADSAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_105 F.0 VLV_ENCDIFF_105
    MATH ABS VLV_ENCDIFF_105 F.0
    DATAF tmpf824
    DATA8 flag824
    DIVF VLV_ENCDIFF_105 F.0 tmpf824
    CP_EQF 0.0 F.0 flag824
    SELECTF flag824 0.0 tmpf824 VLV_SIGNO_105

    JR_EQF VLV_ENCDIFF_105 0.0 else825_1
    MULF VLV_SIGNO_105 VLV_V_105 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while828:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile828
  whilebody828:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody828
  endwhile828:
    CALL MOTOR.STOP 'D' 'True'
  else825_1:
  endif825:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVED0_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 else836_1
  while838:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 endwhile838
  whilebody838:
    MATH NEGATE VLV_V_106 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTF F.0 -10.0 whilebody838
  endwhile838:
    CALL MOTOR.STOP 'D' 'True'
    JR endif836
  else836_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 else836_2
  while845:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 endwhile845
  whilebody845:
    MOVEF_8 VLV_V_106 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTF F.0 -10.0 whilebody845
  endwhile845:
    CALL MOTOR.STOP 'D' 'True'
    JR endif836
  else836_2:
    CALL MOTOR.STOP 'D' 'True'
  else836_3:
  endif836:
RETSUB_F_BMOVED0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED0_1:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while852:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_108 endwhile852
  whilebody852:
    MOVEF_8 VLV_V_108 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_108 whilebody852
  endwhile852:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_109 F.0 VLV_ENCDIFF_109
    MATH ABS VLV_ENCDIFF_109 F.0
    DATAF tmpf860
    DATA8 flag860
    DIVF VLV_ENCDIFF_109 F.0 tmpf860
    CP_EQF 0.0 F.0 flag860
    SELECTF flag860 0.0 tmpf860 VLV_SIGNO_109

    MATH ABS VLV_ENCDIFF_109 F.4
    DATAF tmpf862
    DATA8 flag862
    DIVF F.4 100.0 tmpf862
    CP_EQF 0.0 100.0 flag862
    SELECTF flag862 0.0 tmpf862 F.3

    DATAF tmpf863
    DATA8 flag863
    DIVF VLV_V_109 20.0 tmpf863
    CP_EQF 0.0 20.0 flag863
    SELECTF flag863 0.0 tmpf863 F.4

    DATAF tmpf864
    DATA8 flag864
    DIVF F.3 F.4 tmpf864
    CP_EQF 0.0 F.4 flag864
    SELECTF flag864 0.0 tmpf864 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag867
	CP_GTF F.0 400.0 flag867
	SELECTF flag867 F.0 400.0 VLV_SAFETYTIMER_109
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_109 0.0 else869_1
  while870:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile870
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_109 endwhile870
  whilebody870:
    MULF VLV_SIGNO_109 VLV_V_109 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_109 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and881
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_109 whilebody870
  and881:
  endwhile870:
    CALL MOTOR.STOP 'D' 'True'
  else869_1:
  endif869:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer887
	DATA8 no887
	DATA8 mode8887
	
	MOVEF_8 1.0 no887
	SUB8 no887 1 no887
	DIV8 no887 4 layer887
	MATH MOD8 no887 4 no887

	MOVEF_8 4.0 mode8887
	
	INPUT_DEVICE READY_RAW layer887 no887 0 mode8887 0
    MOVEF_F 15.0 VLV_RED_110
    MOVEF_F 60.0 VLV_YELLOW_110
    MOVEF_F 170.0 VLV_GREEN_110
    MOVEF_F 330.0 VLV_BLUE_110
    MOVEF_F 10.0 VLV_VALUENEGRO_110
    MOVEF_F 100.0 VLV_VALUEBLANCO_110
    MOVEF_F 147.0 VLV_RWHITE_110
    MOVEF_F 143.0 VLV_GWHITE_110
    MOVEF_F 160.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    MOVEF_F 0.0 VLV_COLOR_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_110
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_110
  for893:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor893
  forbody893:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_110
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_110 VLV_RGB_110
    DATAF tmpf898
    DATA8 flag898
    DIVF VLV_RRAW_110 VLV_RWHITE_110 tmpf898
    CP_EQF 0.0 VLV_RWHITE_110 flag898
    SELECTF flag898 0.0 tmpf898 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    DATAF tmpf902
    DATA8 flag902
    DIVF VLV_GRAW_110 VLV_GWHITE_110 tmpf902
    CP_EQF 0.0 VLV_GWHITE_110 flag902
    SELECTF flag902 0.0 tmpf902 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    DATAF tmpf906
    DATA8 flag906
    DIVF VLV_BRAW_110 VLV_BWHITE_110 tmpf906
    CP_EQF 0.0 VLV_BWHITE_110 flag906
    SELECTF flag906 0.0 tmpf906 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_RNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.3 VLV_GNORMA_110
    DATA8 flag912
	CP_GTF F.2 F.3 flag912
	SELECTF flag912 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_BNORMA_110
    DATA8 flag914
	CP_GTF F.1 F.2 flag914
	SELECTF flag914 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    DATA32 milliseconds916
	MOVEF_32 5.0 milliseconds916
	DATA32 timer916
	TIMER_WAIT milliseconds916 timer916
	TIMER_READY timer916
    ADDF VLV_J_110 1.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody893
  endfor893:
    MOVEF_F 1.0 VLV_J_110
  for918:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor918
  forbody918:
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_110
    ADDF F.0 F.1 VLV_RNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_110
    ADDF F.0 F.1 VLV_GNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_110
    ADDF F.0 F.1 VLV_BNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_110
    ADDF F.0 F.1 VLV_MAX_110
    ADDF VLV_J_110 2.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody918
  endfor918:
    DATAF tmpf936
    DATA8 flag936
    DIVF VLV_RNORM_110 VLV_REPS_110 tmpf936
    CP_EQF 0.0 VLV_REPS_110 flag936
    SELECTF flag936 0.0 tmpf936 VLV_RNORM_110

    DATAF tmpf937
    DATA8 flag937
    DIVF VLV_GNORM_110 VLV_REPS_110 tmpf937
    CP_EQF 0.0 VLV_REPS_110 flag937
    SELECTF flag937 0.0 tmpf937 VLV_GNORM_110

    DATAF tmpf938
    DATA8 flag938
    DIVF VLV_BNORM_110 VLV_REPS_110 tmpf938
    CP_EQF 0.0 VLV_REPS_110 flag938
    SELECTF flag938 0.0 tmpf938 VLV_BNORM_110

    DATAF tmpf939
    DATA8 flag939
    DIVF VLV_MAX_110 VLV_REPS_110 tmpf939
    CP_EQF 0.0 VLV_REPS_110 flag939
    SELECTF flag939 0.0 tmpf939 VLV_MAX_110

    DATA8 flag940
	CP_LTF VLV_RNORM_110 VLV_GNORM_110 flag940
	SELECTF flag940 VLV_RNORM_110 VLV_GNORM_110 F.0
    DATA8 flag941
	CP_LTF F.0 VLV_BNORM_110 flag941
	SELECTF flag941 F.0 VLV_BNORM_110 VLV_MIN_110
    JR_NEQF VLV_MAX_110 VLV_MIN_110 else942_1
    MOVEF_F 0.0 VLV_HUE_110
    JR endif942
  else942_1:
    JR_NEQF VLV_MAX_110 VLV_RNORM_110 else942_2
    JR_LTF VLV_GNORM_110 VLV_BNORM_110 else943_1
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_110 VLV_MIN_110 F.1
    DATAF tmpf947
    DATA8 flag947
    DIVF F.0 F.1 tmpf947
    CP_EQF 0.0 F.1 flag947
    SELECTF flag947 0.0 tmpf947 VLV_HUE_110

    JR endif943
  else943_1:
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf951
    DATA8 flag951
    DIVF F.1 F.2 tmpf951
    CP_EQF 0.0 F.2 flag951
    SELECTF flag951 0.0 tmpf951 F.0

    ADDF F.0 360.0 VLV_HUE_110
  else943_2:
  endif943:
    JR endif942
  else942_2:
    JR_NEQF VLV_MAX_110 VLV_GNORM_110 else942_3
    SUBF VLV_BNORM_110 VLV_RNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf956
    DATA8 flag956
    DIVF F.1 F.2 tmpf956
    CP_EQF 0.0 F.2 flag956
    SELECTF flag956 0.0 tmpf956 F.0

    ADDF F.0 120.0 VLV_HUE_110
    JR endif942
  else942_3:
    SUBF VLV_RNORM_110 VLV_GNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf961
    DATA8 flag961
    DIVF F.1 F.2 tmpf961
    CP_EQF 0.0 F.2 flag961
    SELECTF flag961 0.0 tmpf961 F.0

    ADDF F.0 240.0 VLV_HUE_110
  else942_4:
  endif942:
    JR_NEQF VLV_MAX_110 0.0 else963_1
    MOVEF_F 0.0 VLV_SAT_110
    JR endif963
  else963_1:
    DATAF tmpf964
    DATA8 flag964
    DIVF VLV_MIN_110 VLV_MAX_110 tmpf964
    CP_EQF 0.0 VLV_MAX_110 flag964
    SELECTF flag964 0.0 tmpf964 F.0

    SUBF 1.0 F.0 VLV_SAT_110
  else963_2:
  endif963:
    MOVEF_F VLV_MAX_110 VLV_VALUE_110
    ADDF VLV_VALUEBLANCO_110 VLV_VALUENEGRO_110 F.0
    DATAF tmpf967
    DATA8 flag967
    DIVF F.0 2.0 tmpf967
    CP_EQF 0.0 2.0 flag967
    SELECTF flag967 0.0 tmpf967 VLV_RGBGREY_110

    ADDF VLV_RNORM_110 VLV_GNORM_110 F.1
    ADDF F.1 VLV_BNORM_110 F.0
    JR_GTF F.0 3.0 else968_1
    MOVEF_F 0.0 VLV_COLOR_110
    JR endif968
  else968_1:
    JR_GTEQF VLV_SAT_110 0.4 else971_1
    JR_LTEQF VLV_VALUE_110 VLV_RGBGREY_110 else972_1
    MOVEF_F 6.0 VLV_COLOR_110
    JR endif972
  else972_1:
    MOVEF_F 1.0 VLV_COLOR_110
  else972_2:
  endif972:
    JR endif971
  else971_1:
    JR_LTF VLV_HUE_110 0.0 else973_1
    JR_GTEQF VLV_HUE_110 VLV_RED_110 else973_1
    MOVEF_F 5.0 VLV_COLOR_110
    JR endif973
  else973_1:
    JR_LTF VLV_HUE_110 VLV_RED_110 else973_2
    JR_GTEQF VLV_HUE_110 VLV_YELLOW_110 else973_2
    MOVEF_F 4.0 VLV_COLOR_110
    JR endif973
  else973_2:
    JR_LTF VLV_HUE_110 VLV_YELLOW_110 else973_3
    JR_GTEQF VLV_HUE_110 VLV_GREEN_110 else973_3
    MOVEF_F 3.0 VLV_COLOR_110
    JR endif973
  else973_3:
    JR_LTF VLV_HUE_110 VLV_GREEN_110 else973_4
    JR_GTEQF VLV_HUE_110 VLV_BLUE_110 else973_4
    MOVEF_F 2.0 VLV_COLOR_110
    JR endif973
  else973_4:
    MOVEF_F 5.0 VLV_COLOR_110
  else973_5:
  endif973:
  else971_2:
  endif971:
  else968_2:
  endif968:
    STRINGS VALUE_FORMATTED VLV_RRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_110 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB989 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB989:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer990
	DATA8 no990
	DATA8 mode8990
	
	MOVEF_8 2.0 no990
	SUB8 no990 1 no990
	DIV8 no990 4 layer990
	MATH MOD8 no990 4 no990

	MOVEF_8 4.0 mode8990
	
	INPUT_DEVICE READY_RAW layer990 no990 0 mode8990 0
    MOVEF_F 15.0 VLV_RED_111
    MOVEF_F 60.0 VLV_YELLOW_111
    MOVEF_F 170.0 VLV_GREEN_111
    MOVEF_F 330.0 VLV_BLUE_111
    MOVEF_F 10.0 VLV_VALUENEGRO_111
    MOVEF_F 100.0 VLV_VALUEBLANCO_111
    MOVEF_F 147.0 VLV_RWHITE_111
    MOVEF_F 143.0 VLV_GWHITE_111
    MOVEF_F 160.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    MOVEF_F 0.0 VLV_COLOR_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_111
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_111
  for996:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor996
  forbody996:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_111
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_111 VLV_RGB_111
    DATAF tmpf1001
    DATA8 flag1001
    DIVF VLV_RRAW_111 VLV_RWHITE_111 tmpf1001
    CP_EQF 0.0 VLV_RWHITE_111 flag1001
    SELECTF flag1001 0.0 tmpf1001 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    DATAF tmpf1005
    DATA8 flag1005
    DIVF VLV_GRAW_111 VLV_GWHITE_111 tmpf1005
    CP_EQF 0.0 VLV_GWHITE_111 flag1005
    SELECTF flag1005 0.0 tmpf1005 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    DATAF tmpf1009
    DATA8 flag1009
    DIVF VLV_BRAW_111 VLV_BWHITE_111 tmpf1009
    CP_EQF 0.0 VLV_BWHITE_111 flag1009
    SELECTF flag1009 0.0 tmpf1009 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_RNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.3 VLV_GNORMA_111
    DATA8 flag1015
	CP_GTF F.2 F.3 flag1015
	SELECTF flag1015 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_BNORMA_111
    DATA8 flag1017
	CP_GTF F.1 F.2 flag1017
	SELECTF flag1017 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    DATA32 milliseconds1019
	MOVEF_32 5.0 milliseconds1019
	DATA32 timer1019
	TIMER_WAIT milliseconds1019 timer1019
	TIMER_READY timer1019
    ADDF VLV_J_111 1.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody996
  endfor996:
    MOVEF_F 1.0 VLV_J_111
  for1021:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor1021
  forbody1021:
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_111
    ADDF F.0 F.1 VLV_RNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_111
    ADDF F.0 F.1 VLV_GNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_111
    ADDF F.0 F.1 VLV_BNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_111
    ADDF F.0 F.1 VLV_MAX_111
    ADDF VLV_J_111 2.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody1021
  endfor1021:
    DATAF tmpf1039
    DATA8 flag1039
    DIVF VLV_RNORM_111 VLV_REPS_111 tmpf1039
    CP_EQF 0.0 VLV_REPS_111 flag1039
    SELECTF flag1039 0.0 tmpf1039 VLV_RNORM_111

    DATAF tmpf1040
    DATA8 flag1040
    DIVF VLV_GNORM_111 VLV_REPS_111 tmpf1040
    CP_EQF 0.0 VLV_REPS_111 flag1040
    SELECTF flag1040 0.0 tmpf1040 VLV_GNORM_111

    DATAF tmpf1041
    DATA8 flag1041
    DIVF VLV_BNORM_111 VLV_REPS_111 tmpf1041
    CP_EQF 0.0 VLV_REPS_111 flag1041
    SELECTF flag1041 0.0 tmpf1041 VLV_BNORM_111

    DATAF tmpf1042
    DATA8 flag1042
    DIVF VLV_MAX_111 VLV_REPS_111 tmpf1042
    CP_EQF 0.0 VLV_REPS_111 flag1042
    SELECTF flag1042 0.0 tmpf1042 VLV_MAX_111

    DATA8 flag1043
	CP_LTF VLV_RNORM_111 VLV_GNORM_111 flag1043
	SELECTF flag1043 VLV_RNORM_111 VLV_GNORM_111 F.0
    DATA8 flag1044
	CP_LTF F.0 VLV_BNORM_111 flag1044
	SELECTF flag1044 F.0 VLV_BNORM_111 VLV_MIN_111
    JR_NEQF VLV_MAX_111 VLV_MIN_111 else1045_1
    MOVEF_F 0.0 VLV_HUE_111
    JR endif1045
  else1045_1:
    JR_NEQF VLV_MAX_111 VLV_RNORM_111 else1045_2
    JR_LTF VLV_GNORM_111 VLV_BNORM_111 else1046_1
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_111 VLV_MIN_111 F.1
    DATAF tmpf1050
    DATA8 flag1050
    DIVF F.0 F.1 tmpf1050
    CP_EQF 0.0 F.1 flag1050
    SELECTF flag1050 0.0 tmpf1050 VLV_HUE_111

    JR endif1046
  else1046_1:
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1054
    DATA8 flag1054
    DIVF F.1 F.2 tmpf1054
    CP_EQF 0.0 F.2 flag1054
    SELECTF flag1054 0.0 tmpf1054 F.0

    ADDF F.0 360.0 VLV_HUE_111
  else1046_2:
  endif1046:
    JR endif1045
  else1045_2:
    JR_NEQF VLV_MAX_111 VLV_GNORM_111 else1045_3
    SUBF VLV_BNORM_111 VLV_RNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1059
    DATA8 flag1059
    DIVF F.1 F.2 tmpf1059
    CP_EQF 0.0 F.2 flag1059
    SELECTF flag1059 0.0 tmpf1059 F.0

    ADDF F.0 120.0 VLV_HUE_111
    JR endif1045
  else1045_3:
    SUBF VLV_RNORM_111 VLV_GNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1064
    DATA8 flag1064
    DIVF F.1 F.2 tmpf1064
    CP_EQF 0.0 F.2 flag1064
    SELECTF flag1064 0.0 tmpf1064 F.0

    ADDF F.0 240.0 VLV_HUE_111
  else1045_4:
  endif1045:
    JR_NEQF VLV_MAX_111 0.0 else1066_1
    MOVEF_F 0.0 VLV_SAT_111
    JR endif1066
  else1066_1:
    DATAF tmpf1067
    DATA8 flag1067
    DIVF VLV_MIN_111 VLV_MAX_111 tmpf1067
    CP_EQF 0.0 VLV_MAX_111 flag1067
    SELECTF flag1067 0.0 tmpf1067 F.0

    SUBF 1.0 F.0 VLV_SAT_111
  else1066_2:
  endif1066:
    MOVEF_F VLV_MAX_111 VLV_VALUE_111
    ADDF VLV_VALUEBLANCO_111 VLV_VALUENEGRO_111 F.0
    DATAF tmpf1070
    DATA8 flag1070
    DIVF F.0 2.0 tmpf1070
    CP_EQF 0.0 2.0 flag1070
    SELECTF flag1070 0.0 tmpf1070 VLV_RGBGREY_111

    ADDF VLV_RNORM_111 VLV_GNORM_111 F.1
    ADDF F.1 VLV_BNORM_111 F.0
    JR_GTF F.0 3.0 else1071_1
    MOVEF_F 0.0 VLV_COLOR_111
    JR endif1071
  else1071_1:
    JR_GTEQF VLV_SAT_111 0.4 else1074_1
    JR_LTEQF VLV_VALUE_111 VLV_RGBGREY_111 else1075_1
    MOVEF_F 6.0 VLV_COLOR_111
    JR endif1075
  else1075_1:
    MOVEF_F 1.0 VLV_COLOR_111
  else1075_2:
  endif1075:
    JR endif1074
  else1074_1:
    JR_LTF VLV_HUE_111 0.0 else1076_1
    JR_GTEQF VLV_HUE_111 VLV_RED_111 else1076_1
    MOVEF_F 5.0 VLV_COLOR_111
    JR endif1076
  else1076_1:
    JR_LTF VLV_HUE_111 VLV_RED_111 else1076_2
    JR_GTEQF VLV_HUE_111 VLV_YELLOW_111 else1076_2
    MOVEF_F 4.0 VLV_COLOR_111
    JR endif1076
  else1076_2:
    JR_LTF VLV_HUE_111 VLV_YELLOW_111 else1076_3
    JR_GTEQF VLV_HUE_111 VLV_GREEN_111 else1076_3
    MOVEF_F 3.0 VLV_COLOR_111
    JR endif1076
  else1076_3:
    JR_LTF VLV_HUE_111 VLV_GREEN_111 else1076_4
    JR_GTEQF VLV_HUE_111 VLV_BLUE_111 else1076_4
    MOVEF_F 2.0 VLV_COLOR_111
    JR endif1076
  else1076_4:
    MOVEF_F 5.0 VLV_COLOR_111
  else1076_5:
  endif1076:
  else1074_2:
  endif1074:
  else1071_2:
  endif1071:
    STRINGS VALUE_FORMATTED VLV_RRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_111 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1092 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1092:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer1093
	DATA8 no1093
	DATA8 mode81093
	
	MOVEF_8 3.0 no1093
	SUB8 no1093 1 no1093
	DIV8 no1093 4 layer1093
	MATH MOD8 no1093 4 no1093

	MOVEF_8 4.0 mode81093
	
	INPUT_DEVICE READY_RAW layer1093 no1093 0 mode81093 0
    MOVEF_F 15.0 VLV_RED_112
    MOVEF_F 60.0 VLV_YELLOW_112
    MOVEF_F 170.0 VLV_GREEN_112
    MOVEF_F 330.0 VLV_BLUE_112
    MOVEF_F 10.0 VLV_VALUENEGRO_112
    MOVEF_F 100.0 VLV_VALUEBLANCO_112
    MOVEF_F 147.0 VLV_RWHITE_112
    MOVEF_F 143.0 VLV_GWHITE_112
    MOVEF_F 160.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    MOVEF_F 0.0 VLV_COLOR_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_112
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_112
  for1099:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1099
  forbody1099:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_112
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_112 VLV_RGB_112
    DATAF tmpf1104
    DATA8 flag1104
    DIVF VLV_RRAW_112 VLV_RWHITE_112 tmpf1104
    CP_EQF 0.0 VLV_RWHITE_112 flag1104
    SELECTF flag1104 0.0 tmpf1104 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    DATAF tmpf1108
    DATA8 flag1108
    DIVF VLV_GRAW_112 VLV_GWHITE_112 tmpf1108
    CP_EQF 0.0 VLV_GWHITE_112 flag1108
    SELECTF flag1108 0.0 tmpf1108 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    DATAF tmpf1112
    DATA8 flag1112
    DIVF VLV_BRAW_112 VLV_BWHITE_112 tmpf1112
    CP_EQF 0.0 VLV_BWHITE_112 flag1112
    SELECTF flag1112 0.0 tmpf1112 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_RNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.3 VLV_GNORMA_112
    DATA8 flag1118
	CP_GTF F.2 F.3 flag1118
	SELECTF flag1118 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_BNORMA_112
    DATA8 flag1120
	CP_GTF F.1 F.2 flag1120
	SELECTF flag1120 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    DATA32 milliseconds1122
	MOVEF_32 5.0 milliseconds1122
	DATA32 timer1122
	TIMER_WAIT milliseconds1122 timer1122
	TIMER_READY timer1122
    ADDF VLV_J_112 1.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1099
  endfor1099:
    MOVEF_F 1.0 VLV_J_112
  for1124:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1124
  forbody1124:
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_112
    ADDF F.0 F.1 VLV_RNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_112
    ADDF F.0 F.1 VLV_GNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_112
    ADDF F.0 F.1 VLV_BNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_112
    ADDF F.0 F.1 VLV_MAX_112
    ADDF VLV_J_112 2.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1124
  endfor1124:
    DATAF tmpf1142
    DATA8 flag1142
    DIVF VLV_RNORM_112 VLV_REPS_112 tmpf1142
    CP_EQF 0.0 VLV_REPS_112 flag1142
    SELECTF flag1142 0.0 tmpf1142 VLV_RNORM_112

    DATAF tmpf1143
    DATA8 flag1143
    DIVF VLV_GNORM_112 VLV_REPS_112 tmpf1143
    CP_EQF 0.0 VLV_REPS_112 flag1143
    SELECTF flag1143 0.0 tmpf1143 VLV_GNORM_112

    DATAF tmpf1144
    DATA8 flag1144
    DIVF VLV_BNORM_112 VLV_REPS_112 tmpf1144
    CP_EQF 0.0 VLV_REPS_112 flag1144
    SELECTF flag1144 0.0 tmpf1144 VLV_BNORM_112

    DATAF tmpf1145
    DATA8 flag1145
    DIVF VLV_MAX_112 VLV_REPS_112 tmpf1145
    CP_EQF 0.0 VLV_REPS_112 flag1145
    SELECTF flag1145 0.0 tmpf1145 VLV_MAX_112

    DATA8 flag1146
	CP_LTF VLV_RNORM_112 VLV_GNORM_112 flag1146
	SELECTF flag1146 VLV_RNORM_112 VLV_GNORM_112 F.0
    DATA8 flag1147
	CP_LTF F.0 VLV_BNORM_112 flag1147
	SELECTF flag1147 F.0 VLV_BNORM_112 VLV_MIN_112
    JR_NEQF VLV_MAX_112 VLV_MIN_112 else1148_1
    MOVEF_F 0.0 VLV_HUE_112
    JR endif1148
  else1148_1:
    JR_NEQF VLV_MAX_112 VLV_RNORM_112 else1148_2
    JR_LTF VLV_GNORM_112 VLV_BNORM_112 else1149_1
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_112 VLV_MIN_112 F.1
    DATAF tmpf1153
    DATA8 flag1153
    DIVF F.0 F.1 tmpf1153
    CP_EQF 0.0 F.1 flag1153
    SELECTF flag1153 0.0 tmpf1153 VLV_HUE_112

    JR endif1149
  else1149_1:
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1157
    DATA8 flag1157
    DIVF F.1 F.2 tmpf1157
    CP_EQF 0.0 F.2 flag1157
    SELECTF flag1157 0.0 tmpf1157 F.0

    ADDF F.0 360.0 VLV_HUE_112
  else1149_2:
  endif1149:
    JR endif1148
  else1148_2:
    JR_NEQF VLV_MAX_112 VLV_GNORM_112 else1148_3
    SUBF VLV_BNORM_112 VLV_RNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1162
    DATA8 flag1162
    DIVF F.1 F.2 tmpf1162
    CP_EQF 0.0 F.2 flag1162
    SELECTF flag1162 0.0 tmpf1162 F.0

    ADDF F.0 120.0 VLV_HUE_112
    JR endif1148
  else1148_3:
    SUBF VLV_RNORM_112 VLV_GNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1167
    DATA8 flag1167
    DIVF F.1 F.2 tmpf1167
    CP_EQF 0.0 F.2 flag1167
    SELECTF flag1167 0.0 tmpf1167 F.0

    ADDF F.0 240.0 VLV_HUE_112
  else1148_4:
  endif1148:
    JR_NEQF VLV_MAX_112 0.0 else1169_1
    MOVEF_F 0.0 VLV_SAT_112
    JR endif1169
  else1169_1:
    DATAF tmpf1170
    DATA8 flag1170
    DIVF VLV_MIN_112 VLV_MAX_112 tmpf1170
    CP_EQF 0.0 VLV_MAX_112 flag1170
    SELECTF flag1170 0.0 tmpf1170 F.0

    SUBF 1.0 F.0 VLV_SAT_112
  else1169_2:
  endif1169:
    MOVEF_F VLV_MAX_112 VLV_VALUE_112
    ADDF VLV_VALUEBLANCO_112 VLV_VALUENEGRO_112 F.0
    DATAF tmpf1173
    DATA8 flag1173
    DIVF F.0 2.0 tmpf1173
    CP_EQF 0.0 2.0 flag1173
    SELECTF flag1173 0.0 tmpf1173 VLV_RGBGREY_112

    ADDF VLV_RNORM_112 VLV_GNORM_112 F.1
    ADDF F.1 VLV_BNORM_112 F.0
    JR_GTF F.0 3.0 else1174_1
    MOVEF_F 0.0 VLV_COLOR_112
    JR endif1174
  else1174_1:
    JR_GTEQF VLV_SAT_112 0.4 else1177_1
    JR_LTEQF VLV_VALUE_112 VLV_RGBGREY_112 else1178_1
    MOVEF_F 6.0 VLV_COLOR_112
    JR endif1178
  else1178_1:
    MOVEF_F 1.0 VLV_COLOR_112
  else1178_2:
  endif1178:
    JR endif1177
  else1177_1:
    JR_LTF VLV_HUE_112 0.0 else1179_1
    JR_GTEQF VLV_HUE_112 VLV_RED_112 else1179_1
    MOVEF_F 5.0 VLV_COLOR_112
    JR endif1179
  else1179_1:
    JR_LTF VLV_HUE_112 VLV_RED_112 else1179_2
    JR_GTEQF VLV_HUE_112 VLV_YELLOW_112 else1179_2
    MOVEF_F 4.0 VLV_COLOR_112
    JR endif1179
  else1179_2:
    JR_LTF VLV_HUE_112 VLV_YELLOW_112 else1179_3
    JR_GTEQF VLV_HUE_112 VLV_GREEN_112 else1179_3
    MOVEF_F 3.0 VLV_COLOR_112
    JR endif1179
  else1179_3:
    JR_LTF VLV_HUE_112 VLV_GREEN_112 else1179_4
    JR_GTEQF VLV_HUE_112 VLV_BLUE_112 else1179_4
    MOVEF_F 2.0 VLV_COLOR_112
    JR endif1179
  else1179_4:
    MOVEF_F 5.0 VLV_COLOR_112
  else1179_5:
  endif1179:
  else1177_2:
  endif1177:
  else1174_2:
  endif1174:
    STRINGS VALUE_FORMATTED VLV_RRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_112 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1195:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer1196
	DATA8 no1196
	DATA8 mode81196
	
	MOVEF_8 4.0 no1196
	SUB8 no1196 1 no1196
	DIV8 no1196 4 layer1196
	MATH MOD8 no1196 4 no1196

	MOVEF_8 4.0 mode81196
	
	INPUT_DEVICE READY_RAW layer1196 no1196 0 mode81196 0
    MOVEF_F 15.0 VLV_RED_113
    MOVEF_F 60.0 VLV_YELLOW_113
    MOVEF_F 170.0 VLV_GREEN_113
    MOVEF_F 330.0 VLV_BLUE_113
    MOVEF_F 10.0 VLV_VALUENEGRO_113
    MOVEF_F 100.0 VLV_VALUEBLANCO_113
    MOVEF_F 147.0 VLV_RWHITE_113
    MOVEF_F 143.0 VLV_GWHITE_113
    MOVEF_F 160.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_113
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_113
  for1202:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1202
  forbody1202:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_113
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_113 VLV_RGB_113
    DATAF tmpf1207
    DATA8 flag1207
    DIVF VLV_RRAW_113 VLV_RWHITE_113 tmpf1207
    CP_EQF 0.0 VLV_RWHITE_113 flag1207
    SELECTF flag1207 0.0 tmpf1207 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    DATAF tmpf1211
    DATA8 flag1211
    DIVF VLV_GRAW_113 VLV_GWHITE_113 tmpf1211
    CP_EQF 0.0 VLV_GWHITE_113 flag1211
    SELECTF flag1211 0.0 tmpf1211 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    DATAF tmpf1215
    DATA8 flag1215
    DIVF VLV_BRAW_113 VLV_BWHITE_113 tmpf1215
    CP_EQF 0.0 VLV_BWHITE_113 flag1215
    SELECTF flag1215 0.0 tmpf1215 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_RNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.3 VLV_GNORMA_113
    DATA8 flag1221
	CP_GTF F.2 F.3 flag1221
	SELECTF flag1221 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_BNORMA_113
    DATA8 flag1223
	CP_GTF F.1 F.2 flag1223
	SELECTF flag1223 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    DATA32 milliseconds1225
	MOVEF_32 5.0 milliseconds1225
	DATA32 timer1225
	TIMER_WAIT milliseconds1225 timer1225
	TIMER_READY timer1225
    ADDF VLV_J_113 1.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1202
  endfor1202:
    MOVEF_F 1.0 VLV_J_113
  for1227:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1227
  forbody1227:
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_113
    ADDF F.0 F.1 VLV_RNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_113
    ADDF F.0 F.1 VLV_GNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_113
    ADDF F.0 F.1 VLV_BNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_113
    ADDF F.0 F.1 VLV_MAX_113
    ADDF VLV_J_113 2.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1227
  endfor1227:
    DATAF tmpf1245
    DATA8 flag1245
    DIVF VLV_RNORM_113 VLV_REPS_113 tmpf1245
    CP_EQF 0.0 VLV_REPS_113 flag1245
    SELECTF flag1245 0.0 tmpf1245 VLV_RNORM_113

    DATAF tmpf1246
    DATA8 flag1246
    DIVF VLV_GNORM_113 VLV_REPS_113 tmpf1246
    CP_EQF 0.0 VLV_REPS_113 flag1246
    SELECTF flag1246 0.0 tmpf1246 VLV_GNORM_113

    DATAF tmpf1247
    DATA8 flag1247
    DIVF VLV_BNORM_113 VLV_REPS_113 tmpf1247
    CP_EQF 0.0 VLV_REPS_113 flag1247
    SELECTF flag1247 0.0 tmpf1247 VLV_BNORM_113

    DATAF tmpf1248
    DATA8 flag1248
    DIVF VLV_MAX_113 VLV_REPS_113 tmpf1248
    CP_EQF 0.0 VLV_REPS_113 flag1248
    SELECTF flag1248 0.0 tmpf1248 VLV_MAX_113

    DATA8 flag1249
	CP_LTF VLV_RNORM_113 VLV_GNORM_113 flag1249
	SELECTF flag1249 VLV_RNORM_113 VLV_GNORM_113 F.0
    DATA8 flag1250
	CP_LTF F.0 VLV_BNORM_113 flag1250
	SELECTF flag1250 F.0 VLV_BNORM_113 VLV_MIN_113
    JR_NEQF VLV_MAX_113 VLV_MIN_113 else1251_1
    MOVEF_F 0.0 VLV_HUE_113
    JR endif1251
  else1251_1:
    JR_NEQF VLV_MAX_113 VLV_RNORM_113 else1251_2
    JR_LTF VLV_GNORM_113 VLV_BNORM_113 else1252_1
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_113 VLV_MIN_113 F.1
    DATAF tmpf1256
    DATA8 flag1256
    DIVF F.0 F.1 tmpf1256
    CP_EQF 0.0 F.1 flag1256
    SELECTF flag1256 0.0 tmpf1256 VLV_HUE_113

    JR endif1252
  else1252_1:
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1260
    DATA8 flag1260
    DIVF F.1 F.2 tmpf1260
    CP_EQF 0.0 F.2 flag1260
    SELECTF flag1260 0.0 tmpf1260 F.0

    ADDF F.0 360.0 VLV_HUE_113
  else1252_2:
  endif1252:
    JR endif1251
  else1251_2:
    JR_NEQF VLV_MAX_113 VLV_GNORM_113 else1251_3
    SUBF VLV_BNORM_113 VLV_RNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1265
    DATA8 flag1265
    DIVF F.1 F.2 tmpf1265
    CP_EQF 0.0 F.2 flag1265
    SELECTF flag1265 0.0 tmpf1265 F.0

    ADDF F.0 120.0 VLV_HUE_113
    JR endif1251
  else1251_3:
    SUBF VLV_RNORM_113 VLV_GNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1270
    DATA8 flag1270
    DIVF F.1 F.2 tmpf1270
    CP_EQF 0.0 F.2 flag1270
    SELECTF flag1270 0.0 tmpf1270 F.0

    ADDF F.0 240.0 VLV_HUE_113
  else1251_4:
  endif1251:
    JR_NEQF VLV_MAX_113 0.0 else1272_1
    MOVEF_F 0.0 VLV_SAT_113
    JR endif1272
  else1272_1:
    DATAF tmpf1273
    DATA8 flag1273
    DIVF VLV_MIN_113 VLV_MAX_113 tmpf1273
    CP_EQF 0.0 VLV_MAX_113 flag1273
    SELECTF flag1273 0.0 tmpf1273 F.0

    SUBF 1.0 F.0 VLV_SAT_113
  else1272_2:
  endif1272:
    MOVEF_F VLV_MAX_113 VLV_VALUE_113
    ADDF VLV_VALUEBLANCO_113 VLV_VALUENEGRO_113 F.0
    DATAF tmpf1276
    DATA8 flag1276
    DIVF F.0 2.0 tmpf1276
    CP_EQF 0.0 2.0 flag1276
    SELECTF flag1276 0.0 tmpf1276 VLV_RGBGREY_113

    ADDF VLV_RNORM_113 VLV_GNORM_113 F.1
    ADDF F.1 VLV_BNORM_113 F.0
    JR_GTF F.0 3.0 else1277_1
    MOVEF_F 0.0 VLV_COLOR_113
    JR endif1277
  else1277_1:
    JR_GTEQF VLV_SAT_113 0.4 else1280_1
    JR_LTEQF VLV_VALUE_113 VLV_RGBGREY_113 else1281_1
    MOVEF_F 6.0 VLV_COLOR_113
    JR endif1281
  else1281_1:
    MOVEF_F 1.0 VLV_COLOR_113
  else1281_2:
  endif1281:
    JR endif1280
  else1280_1:
    JR_LTF VLV_HUE_113 0.0 else1282_1
    JR_GTEQF VLV_HUE_113 VLV_RED_113 else1282_1
    MOVEF_F 5.0 VLV_COLOR_113
    JR endif1282
  else1282_1:
    JR_LTF VLV_HUE_113 VLV_RED_113 else1282_2
    JR_GTEQF VLV_HUE_113 VLV_YELLOW_113 else1282_2
    MOVEF_F 4.0 VLV_COLOR_113
    JR endif1282
  else1282_2:
    JR_LTF VLV_HUE_113 VLV_YELLOW_113 else1282_3
    JR_GTEQF VLV_HUE_113 VLV_GREEN_113 else1282_3
    MOVEF_F 3.0 VLV_COLOR_113
    JR endif1282
  else1282_3:
    JR_LTF VLV_HUE_113 VLV_GREEN_113 else1282_4
    JR_GTEQF VLV_HUE_113 VLV_BLUE_113 else1282_4
    MOVEF_F 2.0 VLV_COLOR_113
    JR endif1282
  else1282_4:
    MOVEF_F 5.0 VLV_COLOR_113
  else1282_5:
  endif1282:
  else1280_2:
  endif1280:
  else1277_2:
  endif1277:
    STRINGS VALUE_FORMATTED VLV_RRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_113 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1298:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_122 0.0 else1299_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1299
  else1299_1:
    JR_NEQF VLV_COLOR_122 1.0 else1299_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1299
  else1299_2:
    JR_NEQF VLV_COLOR_122 2.0 else1299_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1299
  else1299_3:
    JR_NEQF VLV_COLOR_122 3.0 else1299_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1299
  else1299_4:
    JR_NEQF VLV_COLOR_122 4.0 else1299_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1299
  else1299_5:
    JR_NEQF VLV_COLOR_122 5.0 else1299_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1299
  else1299_6:
    JR_NEQF VLV_COLOR_122 6.0 else1299_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1299
  else1299_7:
    JR_NEQF VLV_COLOR_122 7.0 else1299_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1299_8:
  endif1299:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_ABAJO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1308:
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -220.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1309:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1310:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 350.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1311:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -300.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1312:
RETSUB_F_COGER_ABAJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_0:
SUB_F_COGER_ABAJO_BASURA_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1313:
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -130.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1314:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1315:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 500.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1316:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1317:
RETSUB_F_COGER_ABAJO_BASURA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_BASURA_0:
SUB_F_COGER_ARRIBA_0:
    MOVEF_F -20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1318:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -670.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1319:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -200.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1320:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1321:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1322:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 400.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1323:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -400.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1324:
RETSUB_F_COGER_ARRIBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ARRIBA_0:
SUB_F_SOLTAR_TODO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1325:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -750.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1326:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1327:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1328:
RETSUB_F_SOLTAR_TODO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_TODO_0:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
