DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_107
DATAF VLV_AENC_107
DATAF VLV_V_98
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V1_35
DATAF VLV_V2_35
DATAF VLV_ANGLE_35
DATAF VLV_V_97
DATAF VLV_AENC_97
DATAF VLV_VELOCIDAD1_25
DATAF VLV_VELOCIDAD2_25
DATAF VLV_TIEMPO_25
DATAF VLV_V_108
DATAF VLV_VELOCIDAD_6
DATAF VLV_SENS_6
DATAF VLV_VELOCIDAD_4
DATAF VLV_SENS_4
DATAF VLV_VELOCIDAD_81
DATAF VLV_KP_81
DATAF VLV_KI_81
DATAF VLV_KD_81
DATAF VLV_READER_81
DATAF VLV_VELOCIDAD_88
DATAF VLV_VELOCIDAD_75
DATAF VLV_KP_75
DATAF VLV_KI_75
DATAF VLV_KD_75
DATAF VLV_ENCODER_75
DATAF VLV_VELOCIDAD1_15
DATAF VLV_VELOCIDAD2_15
DATAF VLV_ENCODER_15
DATAF VLV_VELOCIDAD_39
DATAF VLV_VELOCIDAD_13
DATAF VLV_TIEMPO_13
DATAF VLV_VELOCIDAD_5
DATAF VLV_SENS_5
DATAF VLV_VEL_33
DATAF VLV_VELOCIDAD_71
DATAF VLV_KP_71
DATAF VLV_KI_71
DATAF VLV_KD_71
DATAF VLV_VELOCIDAD_3
DATAF VLV_SENS_3
DATAF VLV_VELOCIDAD_37
DATAF VLV_V_103
DATAF VLV_V_106
DATAF VLV_GRADOS_106
DATAF VLV_V1_36
DATAF VLV_V2_36
DATAF VLV_ANGLE_36
DATAF VLV_V0_56
DATAF VLV_VMAX_56
DATAF VLV_KP_56
DATAF VLV_KI_56
DATAF VLV_KD_56
DATAF VLV_ACCELENCODER_56
DATAF VLV_VELOCIDAD_72
DATAF VLV_KP_72
DATAF VLV_KI_72
DATAF VLV_KD_72
DATAF VLV_VELOCIDAD_76
DATAF VLV_KP_76
DATAF VLV_KI_76
DATAF VLV_KD_76
DATAF VLV_ENCODER_76
DATAF VLV_VMAX_90
DATAF VLV_KP_90
DATAF VLV_KI_90
DATAF VLV_KD_90
DATAF VLV_COLOR_124
DATAF VLV_REPS_112
DATAF VLV_COLOR_112
DATAF VLV_REPS_113
DATAF VLV_COLOR_113
DATAF VLV_REPS_114
DATAF VLV_COLOR_114
DATAF VLV_REPS_115
DATAF VLV_COLOR_115
DATAF VLV_V_110
DATAF VLV_T_110
DATAF VLV_V_111
DATAF VLV_AENC_111
DATAF VLV_COLOR_116
DATAF VLV_COLOR_117
DATAF VLV_COLOR_118
DATAF VLV_COLOR_119
DATAF VLV_READ_132
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DIAMETER
DATAF VGV_CENTRO
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_CORRECCION
DATAF VGV_G1
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAF VLV_START_B_3
DATAF VLV_START_C_3
DATAF VLV_ENCODER_B_3
DATAF VLV_ENCODER_C_3
DATAF VLV_ERROR_3
DATAF VLV_PROPORCIAL_3
DATAF VLV_START_B_4
DATAF VLV_START_C_4
DATAF VLV_ENCODER_B_4
DATAF VLV_ENCODER_C_4
DATAF VLV_ERROR_4
DATAF VLV_PROPORCIAL_4
DATAF VLV_START_B_5
DATAF VLV_START_C_5
DATAF VLV_ENCODER_B_5
DATAF VLV_ENCODER_C_5
DATAF VLV_ERROR_5
DATAF VLV_PROPORCIAL_5
DATAF VLV_START_B_6
DATAF VLV_START_C_6
DATAF VLV_ENCODER_B_6
DATAF VLV_ENCODER_C_6
DATAF VLV_ERROR_6
DATAF VLV_PROPORCIAL_6
DATAF VLV_START_B_13
DATAF VLV_START_C_13
DATAF VLV_ENCODER_B_13
DATAF VLV_ENCODER_C_13
DATAF VLV_ERROR_13
DATAF VLV_PROPORCIAL_13
DATAF VLV_DIAMETRO_15
DATAF VLV_DISTANCIA_15
DATAF VLV_AVANCE_33
DATAF VLV_GINICIO_33
DATAF VLV_AJUSTE_33
DATAS VLV_I_35 252
DATAS VLV_D_35 252
DATAF VLV_SIGNO_35
DATAF VLV_VMIN_35
DATAF VLV_VMAX_35
DATAF VLV_ENCODR_35
DATAS VLV_I_36 252
DATAS VLV_D_36 252
DATAF VLV_SIGNO_36
DATAF VLV_VMIN_36
DATAF VLV_VMAX_36
DATAF VLV_ENCODR_36
DATAS VLV_I_37 252
DATAS VLV_D_37 252
DATAF VLV_ANGLE_37
DATAS VLV_I_39 252
DATAS VLV_D_39 252
DATAF VLV_ANGLE_39
DATAS VLV_I_56 252
DATAS VLV_D_56 252
DATAF VLV_U_56
DATAF VLV_ERROR_56
DATAF VLV_OLDERROR_56
DATAF VLV_ERRSUM_56
DATAF VLV_VEL_56
DATAF VLV_SENTIDO_56
DATAS VLV_I_71 252
DATAS VLV_D_71 252
DATAF VLV_ERROR_71
DATAF VLV_OLDERROR_71
DATAF VLV_ERRSUM_71
DATAF VLV_U_71
DATAF VLV_SENTIDO_71
DATAS VLV_I_72 252
DATAS VLV_D_72 252
DATAF VLV_ERROR_72
DATAF VLV_OLDERROR_72
DATAF VLV_ERRSUM_72
DATAF VLV_U_72
DATAF VLV_SENTIDO_72
DATAS VLV_I_75 252
DATAS VLV_D_75 252
DATAF VLV_ERROR_75
DATAF VLV_OLDERROR_75
DATAF VLV_ERRSUM_75
DATAF VLV_U_75
DATAF VLV_SENTIDO_75
DATAF VLV_START_C_75
DATAF VLV_ENCODER_C_75
DATAS VLV_I_76 252
DATAS VLV_D_76 252
DATAF VLV_ERROR_76
DATAF VLV_OLDERROR_76
DATAF VLV_ERRSUM_76
DATAF VLV_U_76
DATAF VLV_SENTIDO_76
DATAF VLV_START_C_76
DATAF VLV_ENCODER_C_76
DATAS VLV_I_81 252
DATAS VLV_D_81 252
DATAF VLV_ERROR_81
DATAF VLV_OLDERROR_81
DATAF VLV_ERRSUM_81
DATAF VLV_U_81
DATAF VLV_SENTIDO_81
DATAF VLV_READER1_81
DATAF VLV_READER2_81
DATAS VLV_I_90 252
DATAS VLV_D_90 252
DATAF VLV_V0_90
DATAF VLV_ACCELENCODER_90
DATAF VLV_U_90
DATAF VLV_ERRSUM_90
DATAF VLV_OLDERROR_90
DATAF VLV_VEL_90
DATAF VLV_SENTIDO_90
DATAF VLV_ERROR_90
DATAF VLV_ENCDIFF_97
DATAF VLV_SIGNO_97
DATAF VLV_ENCDIFF_98
DATAF VLV_SIGNO_98
DATAF VLV_AENCA_103
DATAF VLV_AENCD_103
DATAF VLV_ENCDIFFA_103
DATAF VLV_ENCDIFFD_103
DATAF VLV_SIGNOA_103
DATAF VLV_SIGNOD_103
DATAF VLV_SAFETYTIMER_103
DATAF VLV_DIFFA_106
DATAF VLV_DIFFD_106
DATAF VLV_SAFETYTIMER_106
DATAF VLV_SIGNOA_106
DATAF VLV_SIGNOD_106
DATAF VLV_VELA_106
DATAF VLV_VELD_106
DATAF VLV_ENCDIFF_107
DATAF VLV_SIGNO_107
DATAF VLV_ENCDIFF_111
DATAF VLV_SIGNO_111
DATAF VLV_SAFETYTIMER_111
DATAF VLV_RED_112
DATAF VLV_YELLOW_112
DATAF VLV_GREEN_112
DATAF VLV_BLUE_112
DATAF VLV_VALUENEGRO_112
DATAF VLV_VALUEBLANCO_112
DATAF VLV_RWHITE_112
DATAF VLV_GWHITE_112
DATAF VLV_BWHITE_112
DATAF VLV_HUE_112
DATAF VLV_SAT_112
DATAF VLV_VALUE_112
ARRAY16 VLV_RNORMA_112 2
ARRAY16 VLV_GNORMA_112 2
ARRAY16 VLV_BNORMA_112 2
ARRAY16 VLV_MAXA_112 2
DATAF VLV_J_112
ARRAY16 VLV_RGB_112 2
DATAF VLV_RRAW_112
DATAF VLV_GRAW_112
DATAF VLV_BRAW_112
DATAF VLV_RNORM_112
DATAF VLV_GNORM_112
DATAF VLV_BNORM_112
DATAF VLV_MAX_112
DATAF VLV_MIN_112
DATAF VLV_RGBGREY_112
DATAF VLV_RED_113
DATAF VLV_YELLOW_113
DATAF VLV_GREEN_113
DATAF VLV_BLUE_113
DATAF VLV_VALUENEGRO_113
DATAF VLV_VALUEBLANCO_113
DATAF VLV_RWHITE_113
DATAF VLV_GWHITE_113
DATAF VLV_BWHITE_113
DATAF VLV_HUE_113
DATAF VLV_SAT_113
DATAF VLV_VALUE_113
ARRAY16 VLV_RNORMA_113 2
ARRAY16 VLV_GNORMA_113 2
ARRAY16 VLV_BNORMA_113 2
ARRAY16 VLV_MAXA_113 2
DATAF VLV_J_113
ARRAY16 VLV_RGB_113 2
DATAF VLV_RRAW_113
DATAF VLV_GRAW_113
DATAF VLV_BRAW_113
DATAF VLV_RNORM_113
DATAF VLV_GNORM_113
DATAF VLV_BNORM_113
DATAF VLV_MAX_113
DATAF VLV_MIN_113
DATAF VLV_RGBGREY_113
DATAF VLV_RED_114
DATAF VLV_YELLOW_114
DATAF VLV_GREEN_114
DATAF VLV_BLUE_114
DATAF VLV_VALUENEGRO_114
DATAF VLV_VALUEBLANCO_114
DATAF VLV_RWHITE_114
DATAF VLV_GWHITE_114
DATAF VLV_BWHITE_114
DATAF VLV_HUE_114
DATAF VLV_SAT_114
DATAF VLV_VALUE_114
ARRAY16 VLV_RNORMA_114 2
ARRAY16 VLV_GNORMA_114 2
ARRAY16 VLV_BNORMA_114 2
ARRAY16 VLV_MAXA_114 2
DATAF VLV_J_114
ARRAY16 VLV_RGB_114 2
DATAF VLV_RRAW_114
DATAF VLV_GRAW_114
DATAF VLV_BRAW_114
DATAF VLV_RNORM_114
DATAF VLV_GNORM_114
DATAF VLV_BNORM_114
DATAF VLV_MAX_114
DATAF VLV_MIN_114
DATAF VLV_RGBGREY_114
DATAF VLV_RED_115
DATAF VLV_YELLOW_115
DATAF VLV_GREEN_115
DATAF VLV_BLUE_115
DATAF VLV_VALUENEGRO_115
DATAF VLV_VALUEBLANCO_115
DATAF VLV_RWHITE_115
DATAF VLV_GWHITE_115
DATAF VLV_BWHITE_115
DATAF VLV_HUE_115
DATAF VLV_SAT_115
DATAF VLV_VALUE_115
ARRAY16 VLV_RNORMA_115 2
ARRAY16 VLV_GNORMA_115 2
ARRAY16 VLV_BNORMA_115 2
ARRAY16 VLV_MAXA_115 2
DATAF VLV_J_115
ARRAY16 VLV_RGB_115 2
DATAF VLV_RRAW_115
DATAF VLV_GRAW_115
DATAF VLV_BRAW_115
DATAF VLV_RNORM_115
DATAF VLV_GNORM_115
DATAF VLV_BNORM_115
DATAF VLV_MAX_115
DATAF VLV_MIN_115
DATAF VLV_RGBGREY_115
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_V_98
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_97
    MOVEF_F 0.0 VLV_AENC_97
    MOVEF_F 0.0 VLV_VELOCIDAD1_25
    MOVEF_F 0.0 VLV_VELOCIDAD2_25
    MOVEF_F 0.0 VLV_TIEMPO_25
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_SENS_6
    MOVEF_F 0.0 VLV_VELOCIDAD_4
    MOVEF_F 0.0 VLV_SENS_4
    MOVEF_F 0.0 VLV_VELOCIDAD_81
    MOVEF_F 0.0 VLV_KP_81
    MOVEF_F 0.0 VLV_KI_81
    MOVEF_F 0.0 VLV_KD_81
    MOVEF_F 0.0 VLV_READER_81
    MOVEF_F 0.0 VLV_VELOCIDAD_88
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_71
    MOVEF_F 0.0 VLV_KP_71
    MOVEF_F 0.0 VLV_KI_71
    MOVEF_F 0.0 VLV_KD_71
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VELOCIDAD_37
    MOVEF_F 0.0 VLV_V_103
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_GRADOS_106
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_90
    MOVEF_F 0.0 VLV_KP_90
    MOVEF_F 0.0 VLV_KI_90
    MOVEF_F 0.0 VLV_KD_90
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    MOVEF_F 0.0 VLV_REPS_114
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_REPS_115
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_V_110
    MOVEF_F 0.0 VLV_T_110
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    MOVEF_F 0.0 VLV_COLOR_118
    MOVEF_F 0.0 VLV_COLOR_119
    MOVEF_F 0.0 VLV_READ_132
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    MOVEF_F 0.0 VLV_START_B_3
    MOVEF_F 0.0 VLV_START_C_3
    MOVEF_F 0.0 VLV_ENCODER_B_3
    MOVEF_F 0.0 VLV_ENCODER_C_3
    MOVEF_F 0.0 VLV_ERROR_3
    MOVEF_F 0.0 VLV_PROPORCIAL_3
    MOVEF_F 0.0 VLV_START_B_4
    MOVEF_F 0.0 VLV_START_C_4
    MOVEF_F 0.0 VLV_ENCODER_B_4
    MOVEF_F 0.0 VLV_ENCODER_C_4
    MOVEF_F 0.0 VLV_ERROR_4
    MOVEF_F 0.0 VLV_PROPORCIAL_4
    MOVEF_F 0.0 VLV_START_B_5
    MOVEF_F 0.0 VLV_START_C_5
    MOVEF_F 0.0 VLV_ENCODER_B_5
    MOVEF_F 0.0 VLV_ENCODER_C_5
    MOVEF_F 0.0 VLV_ERROR_5
    MOVEF_F 0.0 VLV_PROPORCIAL_5
    MOVEF_F 0.0 VLV_START_B_6
    MOVEF_F 0.0 VLV_START_C_6
    MOVEF_F 0.0 VLV_ENCODER_B_6
    MOVEF_F 0.0 VLV_ENCODER_C_6
    MOVEF_F 0.0 VLV_ERROR_6
    MOVEF_F 0.0 VLV_PROPORCIAL_6
    MOVEF_F 0.0 VLV_START_B_13
    MOVEF_F 0.0 VLV_START_C_13
    MOVEF_F 0.0 VLV_ENCODER_B_13
    MOVEF_F 0.0 VLV_ENCODER_C_13
    MOVEF_F 0.0 VLV_ERROR_13
    MOVEF_F 0.0 VLV_PROPORCIAL_13
    MOVEF_F 0.0 VLV_DIAMETRO_15
    MOVEF_F 0.0 VLV_DISTANCIA_15
    MOVEF_F 0.0 VLV_AVANCE_33
    MOVEF_F 0.0 VLV_GINICIO_33
    MOVEF_F 0.0 VLV_AJUSTE_33
    STRINGS DUPLICATE '' VLV_I_35
    STRINGS DUPLICATE '' VLV_D_35
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VMIN_35
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_ENCODR_35
    STRINGS DUPLICATE '' VLV_I_36
    STRINGS DUPLICATE '' VLV_D_36
    MOVEF_F 0.0 VLV_SIGNO_36
    MOVEF_F 0.0 VLV_VMIN_36
    MOVEF_F 0.0 VLV_VMAX_36
    MOVEF_F 0.0 VLV_ENCODR_36
    STRINGS DUPLICATE '' VLV_I_37
    STRINGS DUPLICATE '' VLV_D_37
    MOVEF_F 0.0 VLV_ANGLE_37
    STRINGS DUPLICATE '' VLV_I_39
    STRINGS DUPLICATE '' VLV_D_39
    MOVEF_F 0.0 VLV_ANGLE_39
    STRINGS DUPLICATE '' VLV_I_56
    STRINGS DUPLICATE '' VLV_D_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    MOVEF_F 0.0 VLV_VEL_56
    MOVEF_F 0.0 VLV_SENTIDO_56
    STRINGS DUPLICATE '' VLV_I_71
    STRINGS DUPLICATE '' VLV_D_71
    MOVEF_F 0.0 VLV_ERROR_71
    MOVEF_F 0.0 VLV_OLDERROR_71
    MOVEF_F 0.0 VLV_ERRSUM_71
    MOVEF_F 0.0 VLV_U_71
    MOVEF_F 0.0 VLV_SENTIDO_71
    STRINGS DUPLICATE '' VLV_I_72
    STRINGS DUPLICATE '' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MOVEF_F 0.0 VLV_SENTIDO_72
    STRINGS DUPLICATE '' VLV_I_75
    STRINGS DUPLICATE '' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MOVEF_F 0.0 VLV_SENTIDO_75
    MOVEF_F 0.0 VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
    STRINGS DUPLICATE '' VLV_I_76
    STRINGS DUPLICATE '' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MOVEF_F 0.0 VLV_SENTIDO_76
    MOVEF_F 0.0 VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
    STRINGS DUPLICATE '' VLV_I_81
    STRINGS DUPLICATE '' VLV_D_81
    MOVEF_F 0.0 VLV_ERROR_81
    MOVEF_F 0.0 VLV_OLDERROR_81
    MOVEF_F 0.0 VLV_ERRSUM_81
    MOVEF_F 0.0 VLV_U_81
    MOVEF_F 0.0 VLV_SENTIDO_81
    MOVEF_F 0.0 VLV_READER1_81
    MOVEF_F 0.0 VLV_READER2_81
    STRINGS DUPLICATE '' VLV_I_90
    STRINGS DUPLICATE '' VLV_D_90
    MOVEF_F 0.0 VLV_V0_90
    MOVEF_F 0.0 VLV_ACCELENCODER_90
    MOVEF_F 0.0 VLV_U_90
    MOVEF_F 0.0 VLV_ERRSUM_90
    MOVEF_F 0.0 VLV_OLDERROR_90
    MOVEF_F 0.0 VLV_VEL_90
    MOVEF_F 0.0 VLV_SENTIDO_90
    MOVEF_F 0.0 VLV_ERROR_90
    MOVEF_F 0.0 VLV_ENCDIFF_97
    MOVEF_F 0.0 VLV_SIGNO_97
    MOVEF_F 0.0 VLV_ENCDIFF_98
    MOVEF_F 0.0 VLV_SIGNO_98
    MOVEF_F 0.0 VLV_AENCA_103
    MOVEF_F 0.0 VLV_AENCD_103
    MOVEF_F 0.0 VLV_ENCDIFFA_103
    MOVEF_F 0.0 VLV_ENCDIFFD_103
    MOVEF_F 0.0 VLV_SIGNOA_103
    MOVEF_F 0.0 VLV_SIGNOD_103
    MOVEF_F 0.0 VLV_SAFETYTIMER_103
    MOVEF_F 0.0 VLV_DIFFA_106
    MOVEF_F 0.0 VLV_DIFFD_106
    MOVEF_F 0.0 VLV_SAFETYTIMER_106
    MOVEF_F 0.0 VLV_SIGNOA_106
    MOVEF_F 0.0 VLV_SIGNOD_106
    MOVEF_F 0.0 VLV_VELA_106
    MOVEF_F 0.0 VLV_VELD_106
    MOVEF_F 0.0 VLV_ENCDIFF_107
    MOVEF_F 0.0 VLV_SIGNO_107
    MOVEF_F 0.0 VLV_ENCDIFF_111
    MOVEF_F 0.0 VLV_SIGNO_111
    MOVEF_F 0.0 VLV_SAFETYTIMER_111
    MOVEF_F 0.0 VLV_RED_112
    MOVEF_F 0.0 VLV_YELLOW_112
    MOVEF_F 0.0 VLV_GREEN_112
    MOVEF_F 0.0 VLV_BLUE_112
    MOVEF_F 0.0 VLV_VALUENEGRO_112
    MOVEF_F 0.0 VLV_VALUEBLANCO_112
    MOVEF_F 0.0 VLV_RWHITE_112
    MOVEF_F 0.0 VLV_GWHITE_112
    MOVEF_F 0.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_MAXA_112
    MOVEF_F 0.0 VLV_J_112
    CALL ARRAYCREATE_FLOAT VLV_RGB_112
    MOVEF_F 0.0 VLV_RRAW_112
    MOVEF_F 0.0 VLV_GRAW_112
    MOVEF_F 0.0 VLV_BRAW_112
    MOVEF_F 0.0 VLV_RNORM_112
    MOVEF_F 0.0 VLV_GNORM_112
    MOVEF_F 0.0 VLV_BNORM_112
    MOVEF_F 0.0 VLV_MAX_112
    MOVEF_F 0.0 VLV_MIN_112
    MOVEF_F 0.0 VLV_RGBGREY_112
    MOVEF_F 0.0 VLV_RED_113
    MOVEF_F 0.0 VLV_YELLOW_113
    MOVEF_F 0.0 VLV_GREEN_113
    MOVEF_F 0.0 VLV_BLUE_113
    MOVEF_F 0.0 VLV_VALUENEGRO_113
    MOVEF_F 0.0 VLV_VALUEBLANCO_113
    MOVEF_F 0.0 VLV_RWHITE_113
    MOVEF_F 0.0 VLV_GWHITE_113
    MOVEF_F 0.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_MAXA_113
    MOVEF_F 0.0 VLV_J_113
    CALL ARRAYCREATE_FLOAT VLV_RGB_113
    MOVEF_F 0.0 VLV_RRAW_113
    MOVEF_F 0.0 VLV_GRAW_113
    MOVEF_F 0.0 VLV_BRAW_113
    MOVEF_F 0.0 VLV_RNORM_113
    MOVEF_F 0.0 VLV_GNORM_113
    MOVEF_F 0.0 VLV_BNORM_113
    MOVEF_F 0.0 VLV_MAX_113
    MOVEF_F 0.0 VLV_MIN_113
    MOVEF_F 0.0 VLV_RGBGREY_113
    MOVEF_F 0.0 VLV_RED_114
    MOVEF_F 0.0 VLV_YELLOW_114
    MOVEF_F 0.0 VLV_GREEN_114
    MOVEF_F 0.0 VLV_BLUE_114
    MOVEF_F 0.0 VLV_VALUENEGRO_114
    MOVEF_F 0.0 VLV_VALUEBLANCO_114
    MOVEF_F 0.0 VLV_RWHITE_114
    MOVEF_F 0.0 VLV_GWHITE_114
    MOVEF_F 0.0 VLV_BWHITE_114
    MOVEF_F 0.0 VLV_HUE_114
    MOVEF_F 0.0 VLV_SAT_114
    MOVEF_F 0.0 VLV_VALUE_114
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_114
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_114
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_114
    CALL ARRAYCREATE_FLOAT VLV_MAXA_114
    MOVEF_F 0.0 VLV_J_114
    CALL ARRAYCREATE_FLOAT VLV_RGB_114
    MOVEF_F 0.0 VLV_RRAW_114
    MOVEF_F 0.0 VLV_GRAW_114
    MOVEF_F 0.0 VLV_BRAW_114
    MOVEF_F 0.0 VLV_RNORM_114
    MOVEF_F 0.0 VLV_GNORM_114
    MOVEF_F 0.0 VLV_BNORM_114
    MOVEF_F 0.0 VLV_MAX_114
    MOVEF_F 0.0 VLV_MIN_114
    MOVEF_F 0.0 VLV_RGBGREY_114
    MOVEF_F 0.0 VLV_RED_115
    MOVEF_F 0.0 VLV_YELLOW_115
    MOVEF_F 0.0 VLV_GREEN_115
    MOVEF_F 0.0 VLV_BLUE_115
    MOVEF_F 0.0 VLV_VALUENEGRO_115
    MOVEF_F 0.0 VLV_VALUEBLANCO_115
    MOVEF_F 0.0 VLV_RWHITE_115
    MOVEF_F 0.0 VLV_GWHITE_115
    MOVEF_F 0.0 VLV_BWHITE_115
    MOVEF_F 0.0 VLV_HUE_115
    MOVEF_F 0.0 VLV_SAT_115
    MOVEF_F 0.0 VLV_VALUE_115
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_115
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_115
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_115
    CALL ARRAYCREATE_FLOAT VLV_MAXA_115
    MOVEF_F 0.0 VLV_J_115
    CALL ARRAYCREATE_FLOAT VLV_RGB_115
    MOVEF_F 0.0 VLV_RRAW_115
    MOVEF_F 0.0 VLV_GRAW_115
    MOVEF_F 0.0 VLV_BRAW_115
    MOVEF_F 0.0 VLV_RNORM_115
    MOVEF_F 0.0 VLV_GNORM_115
    MOVEF_F 0.0 VLV_BNORM_115
    MOVEF_F 0.0 VLV_MAX_115
    MOVEF_F 0.0 VLV_MIN_115
    MOVEF_F 0.0 VLV_RGBGREY_115
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 1
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    DATAF F.7
    DATAF F.8
    DATAF F.9
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1403
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1403:
    JR_NEQ32 SUBPROGRAM 1 dispatch1404
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1404:
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_V_98
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_97
    MOVEF_F 0.0 VLV_AENC_97
    MOVEF_F 0.0 VLV_VELOCIDAD1_25
    MOVEF_F 0.0 VLV_VELOCIDAD2_25
    MOVEF_F 0.0 VLV_TIEMPO_25
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_SENS_6
    MOVEF_F 0.0 VLV_VELOCIDAD_4
    MOVEF_F 0.0 VLV_SENS_4
    MOVEF_F 0.0 VLV_VELOCIDAD_81
    MOVEF_F 0.0 VLV_KP_81
    MOVEF_F 0.0 VLV_KI_81
    MOVEF_F 0.0 VLV_KD_81
    MOVEF_F 0.0 VLV_READER_81
    MOVEF_F 0.0 VLV_VELOCIDAD_88
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_71
    MOVEF_F 0.0 VLV_KP_71
    MOVEF_F 0.0 VLV_KI_71
    MOVEF_F 0.0 VLV_KD_71
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VELOCIDAD_37
    MOVEF_F 0.0 VLV_V_103
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_GRADOS_106
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_90
    MOVEF_F 0.0 VLV_KP_90
    MOVEF_F 0.0 VLV_KI_90
    MOVEF_F 0.0 VLV_KD_90
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    MOVEF_F 0.0 VLV_REPS_114
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_REPS_115
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_V_110
    MOVEF_F 0.0 VLV_T_110
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    MOVEF_F 0.0 VLV_COLOR_118
    MOVEF_F 0.0 VLV_COLOR_119
    MOVEF_F 0.0 VLV_READ_132
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 90.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0001 VGV_KI
    MOVEF_F 3.0 VGV_KD
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.44444444444444 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB0 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB0:
    DATA32 tmp1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp1
    JR_NEQ32 0 tmp1 alreadylaunched1
    OBJECT_START TF_DISPLAY_0
  alreadylaunched1:
    DATA32 tmp2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp2
    JR_NEQ32 0 tmp2 alreadylaunched2
    OBJECT_START TF_STOP_0
  alreadylaunched2:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB3 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB3:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 1.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 4.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    DATA8 layer7
	DATA8 no7
	DATA8 mode87
	
	MOVEF_8 4.0 no7
	SUB8 no7 1 no7
	DIV8 no7 4 layer7
	MATH MOD8 no7 4 no7

	MOVEF_8 0.0 mode87
	
	INPUT_DEVICE READY_RAW layer7 no7 0 mode87 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while9:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 850.0 endwhile9
  whilebody9:
    MOVEF_8 30.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 30.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 850.0 whilebody9
  endwhile9:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 40.0 VLV_V_107
    MOVEF_F -360.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB17 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB17:
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds19
	MOVEF_32 100.0 milliseconds19
	DATA32 timer19
	TIMER_WAIT milliseconds19 timer19
	TIMER_READY timer19
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while20:
  whilebody20:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf38
    DATA8 flag38
    DIVF F.2 0.05 tmpf38
    CP_EQF 0.0 0.05 flag38
    SELECTF flag38 0.0 tmpf38 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf46
    DATA8 flag46
    DIVF F.1 0.05 tmpf46
    CP_EQF 0.0 0.05 flag46
    SELECTF flag46 0.0 tmpf46 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds60
	MOVEF_32 50.0 milliseconds60
	DATA32 timer60
	TIMER_WAIT milliseconds60 timer60
	TIMER_READY timer60
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody20
  endwhile20:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB63:
    MOVEF_F 30.0 VLV_V_98
    WRITE32 ENDSUB_F_BMOVEA0_1:CALLSUB64 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA0_1
CALLSUB64:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_1
    MOVEF_F 20.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB66:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_35
    MULF VGV_VELOCIDAD 0.2 VLV_V2_35
    MOVEF_F 85.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB69 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB69:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_1
    MOVEF_F 38.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB71:
    MOVEF_F 20.0 VLV_V_107
    MOVEF_F -300.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB72:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -770.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB73 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB73:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 25.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB76:
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 7.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB78:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -740.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB79:
    MULF VGV_VELOCIDAD 0.1 VLV_VELOCIDAD1_25
    MULF VGV_VELOCIDAD -0.1 VLV_VELOCIDAD2_25
    MOVEF_F 1100.0 VLV_TIEMPO_25
    WRITE32 ENDSUB_F_TIEMPOGIROMM_3:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPOGIROMM_3
CALLSUB82:
    DATA32 milliseconds83
	MOVEF_32 500.0 milliseconds83
	DATA32 timer83
	TIMER_WAIT milliseconds83 timer83
	TIMER_READY timer83
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 8.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB86:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -580.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB87:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 70.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB90:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 85.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB93:
    MOVEF_F 30.0 VLV_V_108
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB94:
    MOVEF_F 30.0 VLV_V_97
    MOVEF_F -450.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB95:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 42.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB97:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 120.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB100:
    MULF VGV_VELOCIDAD 0.8 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB102:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_6
    MOVEF_F 4.0 VLV_SENS_6
    WRITE32 ENDSUB_F_1BLANCORECTOMMF_2:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMMF_2
CALLSUB104:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_4
    MOVEF_F 4.0 VLV_SENS_4
    WRITE32 ENDSUB_F_1NEGRORECTOMMF_2:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMMF_2
CALLSUB106:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB108:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 120.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB111:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 60.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB114:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_81
    MOVEF_F VGV_KP VLV_KP_81
    MOVEF_F VGV_KI VLV_KI_81
    MOVEF_F VGV_KD VLV_KD_81
    MOVEF_F 4.0 VLV_READER_81
    WRITE32 ENDSUB_F_SL1SPIDCROSS_5:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_5
CALLSUB116:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_88
    WRITE32 ENDSUB_F_SHIFT31_14_1:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SHIFT31_14_1
CALLSUB118:
    MULF VGV_VELOCIDAD 0.7 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 28.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB120:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD2_15
    MOVEF_F 22.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB123:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD2_15
    MOVEF_F 25.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB126:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 19.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB128:
    WRITE32 ENDSUB_F_COGER_ABAJO_BASURA_0:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_BASURA_0
CALLSUB129:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 11.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB131:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 85.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB134:
    DATA32 milliseconds135
	MOVEF_32 250.0 milliseconds135
	DATA32 timer135
	TIMER_WAIT milliseconds135 timer135
	TIMER_READY timer135
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 13.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB137:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 85.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB140:
    DATA32 milliseconds141
	MOVEF_32 250.0 milliseconds141
	DATA32 timer141
	TIMER_WAIT milliseconds141 timer141
	TIMER_READY timer141
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB143:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -780.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB144:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 30.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB147:
    DATA32 milliseconds148
	MOVEF_32 1000.0 milliseconds148
	DATA32 timer148
	TIMER_WAIT milliseconds148 timer148
	TIMER_READY timer148
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB150:
    MULF VGV_VELOCIDAD 0.1 VLV_VELOCIDAD1_25
    MULF VGV_VELOCIDAD -0.1 VLV_VELOCIDAD2_25
    MOVEF_F 1500.0 VLV_TIEMPO_25
    WRITE32 ENDSUB_F_TIEMPOGIROMM_3:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPOGIROMM_3
CALLSUB153:
    DATA32 milliseconds154
	MOVEF_32 500.0 milliseconds154
	DATA32 timer154
	TIMER_WAIT milliseconds154 timer154
	TIMER_READY timer154
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 6.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB157:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -580.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB158:
    DATA32 milliseconds159
	MOVEF_32 1000.0 milliseconds159
	DATA32 timer159
	TIMER_WAIT milliseconds159 timer159
	TIMER_READY timer159
    MOVEF_F 10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB160:
    MOVEF_F -10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB161:
    MOVEF_F 30.0 VLV_V_97
    MOVEF_F -300.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB162:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 155.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB165:
    DATA32 milliseconds166
	MOVEF_32 250.0 milliseconds166
	DATA32 timer166
	TIMER_WAIT milliseconds166 timer166
	TIMER_READY timer166
    MULF VGV_VELOCIDAD 0.9 VLV_VELOCIDAD_1
    MOVEF_F 120.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB168:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.37 VLV_VELOCIDAD2_15
    MOVEF_F 23.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB171:
    MULF VGV_VELOCIDAD 0.3 VLV_V_97
    MOVEF_F -730.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB173:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB176:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 1200.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB178:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB180:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB183:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 8.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB185:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB187:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB189:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 20.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB192:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -780.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB193:
    MOVEF_F 20.0 VLV_V_108
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB194:
    MULF VGV_VELOCIDAD -0.2 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB196:
    MOVEF_F 30.0 VLV_V_97
    MOVEF_F -300.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB197:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 115.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB200:
    MULF VGV_VELOCIDAD -0.55 VLV_VELOCIDAD_13
    MOVEF_F 900.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB202:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 31.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB204:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 82.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB207:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 14.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB209:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB211:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_4
    MOVEF_F 1.0 VLV_SENS_4
    WRITE32 ENDSUB_F_1NEGRORECTOMMF_2:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMMF_2
CALLSUB213:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 1.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB215:
    MULF VGV_VELOCIDAD 0.3 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB217:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_71
    MULF VGV_KP 1.5 VLV_KP_71
    MOVEF_F VGV_KI VLV_KI_71
    MOVEF_F VGV_KD VLV_KD_71
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB220:
    CALL MOTOR.STOP 'ABCD' 'True'
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 16.7 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB223:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB224:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB226:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB228:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB230:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 89.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB233:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MULF VGV_KP 1.5 VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 12.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB236:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 87.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB239:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB241:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB242:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_37
    WRITE32 ENDSUB_F_SPIN180_1:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN180_1
CALLSUB244:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_13
    MOVEF_F 1000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB246:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_1
    MOVEF_F 47.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB248:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB251:
    MULF VGV_VELOCIDAD -0.4 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB253:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB254:
    MOVEF_F 20.0 VLV_V_103
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB255:
    MULF VGV_VELOCIDAD -0.5 VLV_VELOCIDAD_1
    MOVEF_F 18.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB257:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB260:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 2000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB262:
    MULF VGV_VELOCIDAD 0.7 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB264:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_5
    MOVEF_F 4.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB266:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_3
    MOVEF_F 4.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB268:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB270:
    MULF VGV_VELOCIDAD 0.5 VLV_V1_35
    MULF VGV_VELOCIDAD -0.5 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB273:
    MULF VGV_VELOCIDAD 0.7 VLV_VELOCIDAD_71
    MOVEF_F VGV_KP VLV_KP_71
    MOVEF_F VGV_KI VLV_KI_71
    MOVEF_F VGV_KD VLV_KD_71
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB275:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB277:
    MOVEF_F 30.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB278:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB280:
    WRITE32 ENDSUB_F_COGER_ABAJO_BASURA_0:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_BASURA_0
CALLSUB281:
    MULF VGV_VELOCIDAD -0.85 VLV_VELOCIDAD_13
    MOVEF_F 2500.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB283:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB285:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB288:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB290:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB292:
    MULF VGV_VELOCIDAD -0.25 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB294:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 20.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB297:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -780.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB298:
    MOVEF_F 20.0 VLV_V_108
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB299:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_STOP_0:
  while300:
  whilebody300:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else301_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_106
    MOVEF_F 0.0 VLV_GRADOS_106
    WRITE32 ENDSUB_F_BMOVEADSAFE_2:CALLSUB306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEADSAFE_2
CALLSUB306:
    PROGRAM_STOP -1
  else301_1:
  endif301:
    JR whilebody300
  endwhile300:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf311
    DATA8 flag311
    DIVF F.1 F.2 tmpf311
    CP_EQF 0.0 F.2 flag311
    SELECTF flag311 0.0 tmpf311 F.0

    DATAF tmpf312
    DATA8 flag312
    DIVF F.0 VLV_DIAMETRO_1 tmpf312
    CP_EQF 0.0 VLV_DIAMETRO_1 flag312
    SELECTF flag312 0.0 tmpf312 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    DATAF tmpf315
    DATA8 flag315
    DIVF VGV_CORRECCION 30.0 tmpf315
    CP_EQF 0.0 30.0 flag315
    SELECTF flag315 0.0 tmpf315 F.2

    MULF F.2 VLV_VELOCIDAD_1 F.1
    ADDF F.0 F.1 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while321:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile321
  whilebody321:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 1.2 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody321
  endwhile321:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_1NEGRORECTOMM_2:
    MULF VLV_VELOCIDAD_3 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_3
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_3
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_3
  while342:
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_LTEQF F.0 10.0 endwhile342
  whilebody342:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_3 VLV_ENCODER_B_3
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_3 VLV_ENCODER_C_3
    SUBF VLV_ENCODER_B_3 VLV_ENCODER_C_3 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_3
    MULF VLV_ERROR_3 1.2 VLV_PROPORCIAL_3
    SUBF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_GTF F.0 10.0 whilebody342
  endwhile342:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGRORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMM_2:
SUB_F_1NEGRORECTOMMF_2:
    MULF VLV_VELOCIDAD_4 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_4
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_4
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_4
  while363:
    CALL SENSOR.READPERCENT VLV_SENS_4 F.0
    JR_LTEQF F.0 10.0 endwhile363
  whilebody363:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_4 VLV_ENCODER_B_4
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_4 VLV_ENCODER_C_4
    SUBF VLV_ENCODER_B_4 VLV_ENCODER_C_4 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_4
    MULF VLV_ERROR_4 1.2 VLV_PROPORCIAL_4
    SUBF VLV_VELOCIDAD_4 VLV_PROPORCIAL_4 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_4 VLV_PROPORCIAL_4 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_4 F.0
    JR_GTF F.0 10.0 whilebody363
  endwhile363:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_F_1NEGRORECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMMF_2:
SUB_F_1BLANCORECTOMM_2:
    MULF VLV_VELOCIDAD_5 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_5
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_5
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_5
  while384:
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_GTEQF F.0 40.0 endwhile384
  whilebody384:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_5 VLV_ENCODER_B_5
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_5 VLV_ENCODER_C_5
    SUBF VLV_ENCODER_B_5 VLV_ENCODER_C_5 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_5
    MULF VLV_ERROR_5 1.2 VLV_PROPORCIAL_5
    SUBF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_LTF F.0 40.0 whilebody384
  endwhile384:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1BLANCORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMM_2:
SUB_F_1BLANCORECTOMMF_2:
    MULF VLV_VELOCIDAD_6 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_6
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_6
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_6
  while405:
    CALL SENSOR.READPERCENT VLV_SENS_6 F.0
    JR_GTEQF F.0 40.0 endwhile405
  whilebody405:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_6 VLV_ENCODER_B_6
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_6 VLV_ENCODER_C_6
    SUBF VLV_ENCODER_B_6 VLV_ENCODER_C_6 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_6
    MULF VLV_ERROR_6 1.2 VLV_PROPORCIAL_6
    SUBF VLV_VELOCIDAD_6 VLV_PROPORCIAL_6 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_6 VLV_PROPORCIAL_6 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_6 F.0
    JR_LTF F.0 40.0 whilebody405
  endwhile405:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_F_1BLANCORECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMMF_2:
SUB_F_TIEMPORECTOMM_2:
    MULF VLV_VELOCIDAD_13 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_13
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_13
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_13
    TIMER_READ timeMC3
  while427:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_13 endwhile427
  whilebody427:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_13 VLV_ENCODER_B_13
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_13 VLV_ENCODER_C_13
    SUBF VLV_ENCODER_B_13 VLV_ENCODER_C_13 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_13
    MULF VLV_ERROR_13 1.2 VLV_PROPORCIAL_13
    SUBF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_13 whilebody427
  endwhile427:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPORECTOMM_2:
SUB_F_ENCODERGIROMM_3:
    MULF VLV_VELOCIDAD1_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_15
    MULF VLV_VELOCIDAD2_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_15
    MOVEF_F 5.6 VLV_DIAMETRO_15
    MOVEF_F 3.1415926535897932384 F.2
    MULF VLV_DIAMETRO_15 F.2 F.1
    DATAF tmpf447
    DATA8 flag447
    DIVF VLV_ENCODER_15 F.1 tmpf447
    CP_EQF 0.0 F.1 flag447
    SELECTF flag447 0.0 tmpf447 F.0

    MULF F.0 360.0 VLV_DISTANCIA_15
    MATH NEGATE VLV_VELOCIDAD1_15 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_15 VLV_DISTANCIA_15 'True'

	DATA8 layer450
	DATA8 nos450
	DATA8 busy450
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer450 nos450
	JR_EQ8 0 nos450 motornotbusy450
  motorwaiting450:
	OUTPUT_TEST layer450 nos450 busy450
	JR_EQ8 busy450 0 motornotbusy450
	SLEEP
	JR motorwaiting450
  motornotbusy450:
RETSUB_F_ENCODERGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERGIROMM_3:
SUB_F_TIEMPOGIROMM_3:
    TIMER_READ timeMC3
    MULF VLV_VELOCIDAD1_25 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_25
    MULF VLV_VELOCIDAD2_25 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_25
  while454:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_25 endwhile454
  whilebody454:
    MATH NEGATE VLV_VELOCIDAD1_25 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_25
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_25 whilebody454
  endwhile454:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPOGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPOGIROMM_3:
SUB_F_GPERFDDEFINITIVOMM_1:
    MOVEF_F 100.0 VLV_AVANCE_33
    MOVEF_F 200.0 VLV_GINICIO_33
    MOVEF_F 70.0 VLV_AJUSTE_33
    DATA8 flag460
	CP_LTF 40.0 VLV_VEL_33 flag460
	SELECTF flag460 40.0 VLV_VEL_33 VLV_VEL_33
    MULF VLV_VEL_33 0.75 VLV_VEL_33
    MULF VLV_VEL_33 VGV_SENTIDO_MOTORES VLV_VEL_33
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VEL_33 VLV_AVANCE_33 'True'

	DATA8 layer464
	DATA8 nos464
	DATA8 busy464
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer464 nos464
	JR_EQ8 0 nos464 motornotbusy464
  motorwaiting464:
	OUTPUT_TEST layer464 nos464 busy464
	JR_EQ8 busy464 0 motornotbusy464
	SLEEP
	JR motorwaiting464
  motornotbusy464:
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_GINICIO_33 0.0 'False' 

	DATA8 layer466
	DATA8 nos466
	DATA8 busy466
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer466 nos466
	JR_EQ8 0 nos466 motornotbusy466
  motorwaiting466:
	OUTPUT_TEST layer466 nos466 busy466
	JR_EQ8 busy466 0 motornotbusy466
	SLEEP
	JR motorwaiting466
  motornotbusy466:
  while467:
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 10.0 endwhile467
  whilebody467:
    MATH NEGATE VLV_VEL_33 F.0
    MATH NEGATE VLV_VEL_33 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 10.0 whilebody467
  endwhile467:
    CALL MOTOR.STOP 'BC' 'False'
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_AJUSTE_33 0.0 'True' 

	DATA8 layer475
	DATA8 nos475
	DATA8 busy475
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer475 nos475
	JR_EQ8 0 nos475 motornotbusy475
  motorwaiting475:
	OUTPUT_TEST layer475 nos475 busy475
	JR_EQ8 busy475 0 motornotbusy475
	SLEEP
	JR motorwaiting475
  motornotbusy475:
RETSUB_F_GPERFDDEFINITIVOMM_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GPERFDDEFINITIVOMM_1:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_35
    STRINGS DUPLICATE 'C' VLV_D_35
    DATAF tmpf476
    DATA8 flag476
    DIVF VLV_V1_35 VLV_V2_35 tmpf476
    CP_EQF 0.0 VLV_V2_35 flag476
    SELECTF flag476 0.0 tmpf476 F.0

    DATAF tmpf477
    DATA8 flag477
    DIVF VLV_V1_35 VLV_V2_35 tmpf477
    CP_EQF 0.0 VLV_V2_35 flag477
    SELECTF flag477 0.0 tmpf477 F.2

    MATH ABS F.2 F.1
    DATAF tmpf479
    DATA8 flag479
    DIVF F.0 F.1 tmpf479
    CP_EQF 0.0 F.1 flag479
    SELECTF flag479 0.0 tmpf479 VLV_SIGNO_35

    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag482
	CP_LTF F.0 F.1 flag482
	SELECTF flag482 F.0 F.1 VLV_VMIN_35
    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag485
	CP_GTF F.0 F.1 flag485
	SELECTF flag485 F.0 F.1 VLV_VMAX_35
    MULF VLV_ANGLE_35 VGV_G1 F.0
    MULF VLV_SIGNO_35 VLV_VMIN_35 F.4
    DATAF tmpf488
    DATA8 flag488
    DIVF F.4 VLV_VMAX_35 tmpf488
    CP_EQF 0.0 VLV_VMAX_35 flag488
    SELECTF flag488 0.0 tmpf488 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf490
    DATA8 flag490
    DIVF -2.0 F.2 tmpf490
    CP_EQF 0.0 F.2 flag490
    SELECTF flag490 0.0 tmpf490 F.1

    MULF F.0 F.1 VLV_ENCODR_35
    CALL TEXT.APPEND VLV_I_35 VLV_D_35 S.0
    MATH NEGATE VLV_V1_35 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_35 VLV_ENCODR_35 'True'

	DATA8 layer494
	DATA8 nos494
	DATA8 busy494
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer494 nos494
	JR_EQ8 0 nos494 motornotbusy494
  motorwaiting494:
	OUTPUT_TEST layer494 nos494 busy494
	JR_EQ8 busy494 0 motornotbusy494
	SLEEP
	JR motorwaiting494
  motornotbusy494:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    DATA32 milliseconds495
	MOVEF_32 200.0 milliseconds495
	DATA32 timer495
	TIMER_WAIT milliseconds495 timer495
	TIMER_READY timer495
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_GUNIVENCMMF_3:
    STRINGS DUPLICATE 'B' VLV_I_36
    STRINGS DUPLICATE 'C' VLV_D_36
    DATAF tmpf496
    DATA8 flag496
    DIVF VLV_V1_36 VLV_V2_36 tmpf496
    CP_EQF 0.0 VLV_V2_36 flag496
    SELECTF flag496 0.0 tmpf496 F.0

    DATAF tmpf497
    DATA8 flag497
    DIVF VLV_V1_36 VLV_V2_36 tmpf497
    CP_EQF 0.0 VLV_V2_36 flag497
    SELECTF flag497 0.0 tmpf497 F.2

    MATH ABS F.2 F.1
    DATAF tmpf499
    DATA8 flag499
    DIVF F.0 F.1 tmpf499
    CP_EQF 0.0 F.1 flag499
    SELECTF flag499 0.0 tmpf499 VLV_SIGNO_36

    MATH ABS VLV_V1_36 F.0
    MATH ABS VLV_V2_36 F.1
    DATA8 flag502
	CP_LTF F.0 F.1 flag502
	SELECTF flag502 F.0 F.1 VLV_VMIN_36
    MATH ABS VLV_V1_36 F.0
    MATH ABS VLV_V2_36 F.1
    DATA8 flag505
	CP_GTF F.0 F.1 flag505
	SELECTF flag505 F.0 F.1 VLV_VMAX_36
    MULF VLV_ANGLE_36 VGV_G1 F.0
    MULF VLV_SIGNO_36 VLV_VMIN_36 F.4
    DATAF tmpf508
    DATA8 flag508
    DIVF F.4 VLV_VMAX_36 tmpf508
    CP_EQF 0.0 VLV_VMAX_36 flag508
    SELECTF flag508 0.0 tmpf508 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf510
    DATA8 flag510
    DIVF -2.0 F.2 tmpf510
    CP_EQF 0.0 F.2 flag510
    SELECTF flag510 0.0 tmpf510 F.1

    MULF F.0 F.1 VLV_ENCODR_36
    CALL TEXT.APPEND VLV_I_36 VLV_D_36 S.0
    MATH NEGATE VLV_V1_36 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_36 VLV_ENCODR_36 'False'

	DATA8 layer514
	DATA8 nos514
	DATA8 busy514
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer514 nos514
	JR_EQ8 0 nos514 motornotbusy514
  motorwaiting514:
	OUTPUT_TEST layer514 nos514 busy514
	JR_EQ8 busy514 0 motornotbusy514
	SLEEP
	JR motorwaiting514
  motornotbusy514:
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
RETSUB_F_GUNIVENCMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMMF_3:
SUB_F_SPIN180_1:
    STRINGS DUPLICATE 'B' VLV_I_37
    STRINGS DUPLICATE 'C' VLV_D_37
    MOVEF_F VLV_VELOCIDAD_37 VLV_V1_35
    MULF VLV_VELOCIDAD_37 -1.0 VLV_V2_35
    MOVEF_F 176.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB516:
    MOVEF_F 0.0 VLV_ANGLE_37
RETSUB_F_SPIN180_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN180_1:
SUB_F_SPIN90_1:
    STRINGS DUPLICATE 'B' VLV_I_39
    STRINGS DUPLICATE 'C' VLV_D_39
    MOVEF_F VLV_VELOCIDAD_39 VLV_V1_35
    MULF VLV_VELOCIDAD_39 -1.0 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB518:
    MOVEF_F 0.0 VLV_ANGLE_39
RETSUB_F_SPIN90_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN90_1:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_56
    STRINGS DUPLICATE 'C' VLV_D_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf521
    DATA8 flag521
    DIVF VLV_ACCELENCODER_56 F.1 tmpf521
    CP_EQF 0.0 F.1 flag521
    SELECTF flag521 0.0 tmpf521 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    CALL MOTOR.RESETCOUNT 'C'
  while524:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or525
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile524
  or525:
  whilebody524:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf529
    DATA8 flag529
    DIVF F.3 VLV_ACCELENCODER_56 tmpf529
    CP_EQF 0.0 VLV_ACCELENCODER_56 flag529
    SELECTF flag529 0.0 tmpf529 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_56 VLV_V0_56 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_56 VLV_VEL_56
    DATA8 flag534
	CP_LTF VLV_VEL_56 VLV_VMAX_56 flag534
	SELECTF flag534 VLV_VEL_56 VLV_VMAX_56 VLV_VEL_56
    MATH ABS VLV_VEL_56 F.0
    DATAF tmpf536
    DATA8 flag536
    DIVF VLV_VEL_56 F.0 tmpf536
    CP_EQF 0.0 F.0 flag536
    SELECTF flag536 0.0 tmpf536 VLV_SENTIDO_56

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_56 VLV_ERROR_56
    ADDF VLV_ERRSUM_56 VLV_ERROR_56 VLV_ERRSUM_56
    MULF VLV_ERROR_56 VLV_KP_56 F.1
    SUBF VLV_ERROR_56 VLV_OLDERROR_56 F.3
    MULF F.3 VLV_KD_56 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_56 VLV_KI_56 F.1
    ADDF F.0 F.1 VLV_U_56
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    ADDF VLV_VEL_56 VLV_U_56 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_56 VLV_U_56 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_56 VLV_OLDERROR_56
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody524
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody524
  endwhile524:
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PID_4:
    MULF VLV_VELOCIDAD_71 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_71
    STRINGS DUPLICATE 'B' VLV_I_71
    STRINGS DUPLICATE 'C' VLV_D_71
    MOVEF_F 0.0 VLV_ERROR_71
    MOVEF_F 0.0 VLV_OLDERROR_71
    MOVEF_F 0.0 VLV_ERRSUM_71
    MOVEF_F 0.0 VLV_U_71
    MATH ABS VLV_VELOCIDAD_71 F.0
    DATAF tmpf561
    DATA8 flag561
    DIVF VLV_VELOCIDAD_71 F.0 tmpf561
    CP_EQF 0.0 F.0 flag561
    SELECTF flag561 0.0 tmpf561 VLV_SENTIDO_71

  while562:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or563
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile562
  or563:
  whilebody562:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_71 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_71
    ADDF VLV_ERRSUM_71 VLV_ERROR_71 VLV_ERRSUM_71
    MULF VLV_ERROR_71 VLV_KP_71 F.1
    SUBF VLV_ERROR_71 VLV_OLDERROR_71 F.3
    MULF F.3 VLV_KD_71 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_71 VLV_KI_71 F.1
    ADDF F.0 F.1 VLV_U_71
    CALL TEXT.APPEND VLV_I_71 VLV_D_71 S.0
    ADDF VLV_VELOCIDAD_71 VLV_U_71 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_71 VLV_U_71 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_71 VLV_OLDERROR_71
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody562
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody562
  endwhile562:
    CALL TEXT.APPEND VLV_I_71 VLV_D_71 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PID_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PID_4:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_72 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_72
    STRINGS DUPLICATE 'B' VLV_I_72
    STRINGS DUPLICATE 'C' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MATH ABS VLV_VELOCIDAD_72 F.0
    DATAF tmpf589
    DATA8 flag589
    DIVF VLV_VELOCIDAD_72 F.0 tmpf589
    CP_EQF 0.0 F.0 flag589
    SELECTF flag589 0.0 tmpf589 VLV_SENTIDO_72

  while590:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or591
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile590
  or591:
  whilebody590:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_72 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_72
    ADDF VLV_ERRSUM_72 VLV_ERROR_72 VLV_ERRSUM_72
    MULF VLV_ERROR_72 VLV_KP_72 F.1
    SUBF VLV_ERROR_72 VLV_OLDERROR_72 F.3
    MULF F.3 VLV_KD_72 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_72 VLV_KI_72 F.1
    ADDF F.0 F.1 VLV_U_72
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    ADDF VLV_VELOCIDAD_72 VLV_U_72 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_72 VLV_U_72 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_72 VLV_OLDERROR_72
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody590
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody590
  endwhile590:
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_75 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_75
    STRINGS DUPLICATE 'B' VLV_I_75
    STRINGS DUPLICATE 'C' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MATH ABS VLV_VELOCIDAD_75 F.0
    DATAF tmpf617
    DATA8 flag617
    DIVF VLV_VELOCIDAD_75 F.0 tmpf617
    CP_EQF 0.0 F.0 flag617
    SELECTF flag617 0.0 tmpf617 VLV_SENTIDO_75

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf620
    DATA8 flag620
    DIVF VLV_ENCODER_75 F.1 tmpf620
    CP_EQF 0.0 F.1 flag620
    SELECTF flag620 0.0 tmpf620 F.0

    MULF F.0 360.0 VLV_ENCODER_75
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
  while623:
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_GTEQF F.0 VLV_ENCODER_75 endwhile623
  whilebody623:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_75 VLV_ENCODER_C_75
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_75 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_75
    ADDF VLV_ERRSUM_75 VLV_ERROR_75 VLV_ERRSUM_75
    MULF VLV_ERROR_75 VLV_KP_75 F.1
    SUBF VLV_ERROR_75 VLV_OLDERROR_75 F.3
    MULF F.3 VLV_KD_75 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_75 VLV_KI_75 F.1
    ADDF F.0 F.1 VLV_U_75
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    ADDF VLV_VELOCIDAD_75 VLV_U_75 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_75 VLV_U_75 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_75 VLV_OLDERROR_75
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_LTF F.0 VLV_ENCODER_75 whilebody623
  endwhile623:
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_76 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_76
    STRINGS DUPLICATE 'B' VLV_I_76
    STRINGS DUPLICATE 'C' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MATH ABS VLV_VELOCIDAD_76 F.0
    DATAF tmpf649
    DATA8 flag649
    DIVF VLV_VELOCIDAD_76 F.0 tmpf649
    CP_EQF 0.0 F.0 flag649
    SELECTF flag649 0.0 tmpf649 VLV_SENTIDO_76

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf652
    DATA8 flag652
    DIVF VLV_ENCODER_76 F.1 tmpf652
    CP_EQF 0.0 F.1 flag652
    SELECTF flag652 0.0 tmpf652 F.0

    MULF F.0 360.0 VLV_ENCODER_76
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
  while655:
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_GTEQF F.0 VLV_ENCODER_76 endwhile655
  whilebody655:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_76 VLV_ENCODER_C_76
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_76 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_76
    ADDF VLV_ERRSUM_76 VLV_ERROR_76 VLV_ERRSUM_76
    MULF VLV_ERROR_76 VLV_KP_76 F.1
    SUBF VLV_ERROR_76 VLV_OLDERROR_76 F.3
    MULF F.3 VLV_KD_76 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_76 VLV_KI_76 F.1
    ADDF F.0 F.1 VLV_U_76
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    ADDF VLV_VELOCIDAD_76 VLV_U_76 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_76 VLV_U_76 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_76 VLV_OLDERROR_76
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_LTF F.0 VLV_ENCODER_76 whilebody655
  endwhile655:
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL1SPIDCROSS_5:
    MULF VLV_VELOCIDAD_81 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_81
    STRINGS DUPLICATE 'B' VLV_I_81
    STRINGS DUPLICATE 'C' VLV_D_81
    MOVEF_F 0.0 VLV_ERROR_81
    MOVEF_F 0.0 VLV_OLDERROR_81
    MOVEF_F 0.0 VLV_ERRSUM_81
    MOVEF_F 0.0 VLV_U_81
    MATH ABS VLV_VELOCIDAD_81 F.0
    DATAF tmpf681
    DATA8 flag681
    DIVF VLV_VELOCIDAD_81 F.0 tmpf681
    CP_EQF 0.0 F.0 flag681
    SELECTF flag681 0.0 tmpf681 VLV_SENTIDO_81

    JR_NEQF VLV_READER_81 3.0 else682_1
    MOVEF_F 1.0 VLV_READER1_81
    MOVEF_F 4.0 VLV_READER2_81
    JR endif682
  else682_1:
    MOVEF_F 3.0 VLV_READER1_81
    MOVEF_F 1.0 VLV_READER2_81
  else682_2:
  endif682:
  while683:
    CALL SENSOR.READPERCENT VLV_READER_81 F.0
    JR_LTEQF F.0 20.0 endwhile683
  whilebody683:
    CALL SENSOR.READPERCENT VLV_READER1_81 F.2
    CALL SENSOR.READPERCENT VLV_READER2_81 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_81 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_81
    ADDF VLV_ERRSUM_81 VLV_ERROR_81 VLV_ERRSUM_81
    MULF VLV_ERROR_81 VLV_KP_81 F.1
    SUBF VLV_ERROR_81 VLV_OLDERROR_81 F.3
    MULF F.3 VLV_KD_81 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_81 VLV_KI_81 F.1
    ADDF F.0 F.1 VLV_U_81
    CALL TEXT.APPEND VLV_I_81 VLV_D_81 S.0
    ADDF VLV_VELOCIDAD_81 VLV_U_81 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_81 VLV_U_81 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_81 VLV_OLDERROR_81
    CALL SENSOR.READPERCENT VLV_READER_81 F.0
    JR_GTF F.0 20.0 whilebody683
  endwhile683:
    CALL TEXT.APPEND VLV_I_81 VLV_D_81 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL1SPIDCROSS_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSS_5:
SUB_F_SHIFT31_14_1:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MULF VLV_VELOCIDAD_88 -0.2 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD_88 230.0 'False'

	DATA8 layer707
	DATA8 nos707
	DATA8 busy707
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer707 nos707
	JR_EQ8 0 nos707 motornotbusy707
  motorwaiting707:
	OUTPUT_TEST layer707 nos707 busy707
	JR_EQ8 busy707 0 motornotbusy707
	SLEEP
	JR motorwaiting707
  motornotbusy707:
    MULF VLV_VELOCIDAD_88 -1.0 F.0
    MULF VLV_VELOCIDAD_88 0.2 F.1
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 F.1 230.0 'False'

	DATA8 layer710
	DATA8 nos710
	DATA8 busy710
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer710 nos710
	JR_EQ8 0 nos710 motornotbusy710
  motorwaiting710:
	OUTPUT_TEST layer710 nos710 busy710
	JR_EQ8 busy710 0 motornotbusy710
	SLEEP
	JR motorwaiting710
  motornotbusy710:
RETSUB_F_SHIFT31_14_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SHIFT31_14_1:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_90 VGV_SENTIDO_MOTORES VLV_VMAX_90
    STRINGS DUPLICATE 'B' VLV_I_90
    STRINGS DUPLICATE 'C' VLV_D_90
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_90
    MOVEF_F 150.0 VLV_ACCELENCODER_90
    MOVEF_F 0.0 VLV_U_90
    MOVEF_F 0.0 VLV_ERRSUM_90
    MOVEF_F 0.0 VLV_OLDERROR_90
    CALL MOTOR.RESETCOUNT 'C'
  while714:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or715
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile714
  or715:
  whilebody714:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf719
    DATA8 flag719
    DIVF F.2 VLV_ACCELENCODER_90 tmpf719
    CP_EQF 0.0 VLV_ACCELENCODER_90 flag719
    SELECTF flag719 0.0 tmpf719 F.1

    ADDF VLV_VMAX_90 VLV_V0_90 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_90 VLV_VEL_90
    DATA8 flag723
	CP_LTF VLV_VEL_90 VLV_VMAX_90 flag723
	SELECTF flag723 VLV_VEL_90 VLV_VMAX_90 VLV_VEL_90
    MATH ABS VLV_VEL_90 F.0
    DATAF tmpf725
    DATA8 flag725
    DIVF VLV_VEL_90 F.0 tmpf725
    CP_EQF 0.0 F.0 flag725
    SELECTF flag725 0.0 tmpf725 VLV_SENTIDO_90

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_90 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_90
    MULF VLV_ERRSUM_90 0.9 F.0
    ADDF F.0 VLV_ERROR_90 VLV_ERRSUM_90
    MULF VLV_ERROR_90 VLV_KP_90 F.1
    SUBF VLV_ERROR_90 VLV_OLDERROR_90 F.3
    MULF F.3 VLV_KD_90 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_90 VLV_KI_90 F.1
    ADDF F.0 F.1 VLV_U_90
    CALL TEXT.APPEND VLV_I_90 VLV_D_90 S.0
    ADDF VLV_VEL_90 VLV_U_90 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_90 VLV_U_90 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_90 VLV_OLDERROR_90
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody714
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody714
  endwhile714:
    CALL TEXT.APPEND VLV_I_90 VLV_D_90 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_97 F.0 VLV_ENCDIFF_97
    MATH ABS VLV_ENCDIFF_97 F.0
    DATAF tmpf751
    DATA8 flag751
    DIVF VLV_ENCDIFF_97 F.0 tmpf751
    CP_EQF 0.0 F.0 flag751
    SELECTF flag751 0.0 tmpf751 VLV_SIGNO_97

    JR_EQF VLV_ENCDIFF_97 0.0 else752_1
  while753:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_97 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 15.0 endwhile753
  whilebody753:
    MULF VLV_SIGNO_97 VLV_V_97 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_97 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 15.0 whilebody753
  endwhile753:
    CALL MOTOR.STOP 'A' 'True'
  else752_1:
  endif752:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEA0_1:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF -300.0 F.0 VLV_ENCDIFF_98
    MATH ABS VLV_ENCDIFF_98 F.0
    DATAF tmpf766
    DATA8 flag766
    DIVF VLV_ENCDIFF_98 F.0 tmpf766
    CP_EQF 0.0 F.0 flag766
    SELECTF flag766 0.0 tmpf766 VLV_SIGNO_98

    JR_EQF VLV_ENCDIFF_98 0.0 else767_1
    MULF VLV_SIGNO_98 VLV_V_98 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
  while770:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 300.0 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile770
  whilebody770:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 300.0 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody770
  endwhile770:
    CALL MOTOR.STOP 'A' 'True'
  else767_1:
  endif767:
RETSUB_F_BMOVEA0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA0_1:
SUB_F_BMOVEAD0_1:
    MOVEF_F -300.0 VLV_AENCA_103
    MOVEF_F 0.0 VLV_AENCD_103
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENCA_103 F.0 VLV_ENCDIFFA_103
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENCD_103 F.0 VLV_ENCDIFFD_103
    MATH ABS VLV_ENCDIFFA_103 F.0
    DATAF tmpf783
    DATA8 flag783
    DIVF VLV_ENCDIFFA_103 F.0 tmpf783
    CP_EQF 0.0 F.0 flag783
    SELECTF flag783 0.0 tmpf783 VLV_SIGNOA_103

    MATH ABS VLV_ENCDIFFD_103 F.0
    DATAF tmpf785
    DATA8 flag785
    DIVF VLV_ENCDIFFD_103 F.0 tmpf785
    CP_EQF 0.0 F.0 flag785
    SELECTF flag785 0.0 tmpf785 VLV_SIGNOD_103

    MATH ABS VLV_ENCDIFFA_103 F.8
    MATH ABS VLV_ENCDIFFD_103 F.9
    DATA8 flag788
	CP_GTF F.8 F.9 flag788
	SELECTF flag788 F.8 F.9 F.7
    MATH ABS F.7 F.6
    DATAF tmpf790
    DATA8 flag790
    DIVF F.6 100.0 tmpf790
    CP_EQF 0.0 100.0 flag790
    SELECTF flag790 0.0 tmpf790 F.5

    DATAF tmpf791
    DATA8 flag791
    DIVF VLV_V_103 20.0 tmpf791
    CP_EQF 0.0 20.0 flag791
    SELECTF flag791 0.0 tmpf791 F.6

    DATAF tmpf792
    DATA8 flag792
    DIVF F.5 F.6 tmpf792
    CP_EQF 0.0 F.6 flag792
    SELECTF flag792 0.0 tmpf792 F.4

    MULF F.4 650.0 F.3
    MULF F.3 2.0 F.2
    MULF F.2 2.0 F.1
    DATAF tmpf796
    DATA8 flag796
    DIVF F.1 3.0 tmpf796
    CP_EQF 0.0 3.0 flag796
    SELECTF flag796 0.0 tmpf796 F.0

    DATA8 flag797
	CP_GTF F.0 400.0 flag797
	SELECTF flag797 F.0 400.0 VLV_SAFETYTIMER_103
    TIMER_READ timeMC3
  while799:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENCA_103 or800
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENCD_103 endwhile799
  or800:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_103 endwhile799
  whilebody799:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_GTEQF F.0 VLV_AENCA_103 else804_1
    DATAF tmpf806
    DATA8 flag806
    DIVF VLV_V_103 2.0 tmpf806
    CP_EQF 0.0 2.0 flag806
    SELECTF flag806 0.0 tmpf806 F.2

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.5
    SUBF VLV_AENCA_103 F.5 F.4
    DATAF tmpf809
    DATA8 flag809
    DIVF F.4 10.0 tmpf809
    CP_EQF 0.0 10.0 flag809
    SELECTF flag809 0.0 tmpf809 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag811
	CP_LTF VLV_V_103 F.1 flag811
	SELECTF flag811 VLV_V_103 F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif804
  else804_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_LTEQF F.0 VLV_AENCA_103 else804_2
    DATAF tmpf814
    DATA8 flag814
    DIVF VLV_V_103 2.0 tmpf814
    CP_EQF 0.0 2.0 flag814
    SELECTF flag814 0.0 tmpf814 F.3

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.6
    SUBF F.6 VLV_AENCA_103 F.5
    DATAF tmpf817
    DATA8 flag817
    DIVF F.5 10.0 tmpf817
    CP_EQF 0.0 10.0 flag817
    SELECTF flag817 0.0 tmpf817 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag819
	CP_LTF VLV_V_103 F.2 flag819
	SELECTF flag819 VLV_V_103 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif804
  else804_2:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else804_3:
  endif804:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_GTEQF F.0 VLV_AENCD_103 else823_1
    DATAF tmpf825
    DATA8 flag825
    DIVF VLV_V_103 2.0 tmpf825
    CP_EQF 0.0 2.0 flag825
    SELECTF flag825 0.0 tmpf825 F.2

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.5
    SUBF VLV_AENCD_103 F.5 F.4
    DATAF tmpf828
    DATA8 flag828
    DIVF F.4 10.0 tmpf828
    CP_EQF 0.0 10.0 flag828
    SELECTF flag828 0.0 tmpf828 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag830
	CP_LTF VLV_V_103 F.1 flag830
	SELECTF flag830 VLV_V_103 F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif823
  else823_1:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_LTEQF F.0 VLV_AENCD_103 else823_2
    DATAF tmpf833
    DATA8 flag833
    DIVF VLV_V_103 2.0 tmpf833
    CP_EQF 0.0 2.0 flag833
    SELECTF flag833 0.0 tmpf833 F.3

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.6
    SUBF F.6 VLV_AENCD_103 F.5
    DATAF tmpf836
    DATA8 flag836
    DIVF F.5 10.0 tmpf836
    CP_EQF 0.0 10.0 flag836
    SELECTF flag836 0.0 tmpf836 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag838
	CP_LTF VLV_V_103 F.2 flag838
	SELECTF flag838 VLV_V_103 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif823
  else823_2:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else823_3:
  endif823:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENCA_103 or843
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENCD_103 and842
  or843:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_103 whilebody799
  and842:
  endwhile799:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEAD0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD0_1:
SUB_F_BMOVEADSAFE_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_106 F.0 VLV_DIFFA_106
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_106 F.0 VLV_DIFFD_106
    MATH ABS VLV_DIFFA_106 F.5
    MATH ABS VLV_DIFFD_106 F.6
    DATA8 flag854
	CP_GTF F.5 F.6 flag854
	SELECTF flag854 F.5 F.6 F.4
    DATAF tmpf855
    DATA8 flag855
    DIVF F.4 100.0 tmpf855
    CP_EQF 0.0 100.0 flag855
    SELECTF flag855 0.0 tmpf855 F.3

    DATAF tmpf856
    DATA8 flag856
    DIVF VLV_V_106 20.0 tmpf856
    CP_EQF 0.0 20.0 flag856
    SELECTF flag856 0.0 tmpf856 F.4

    DATAF tmpf857
    DATA8 flag857
    DIVF F.3 F.4 tmpf857
    CP_EQF 0.0 F.4 flag857
    SELECTF flag857 0.0 tmpf857 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag860
	CP_GTF F.0 400.0 flag860
	SELECTF flag860 F.0 400.0 VLV_SAFETYTIMER_106
    MATH ABS VLV_DIFFA_106 F.0
    DATAF tmpf862
    DATA8 flag862
    DIVF VLV_DIFFA_106 F.0 tmpf862
    CP_EQF 0.0 F.0 flag862
    SELECTF flag862 0.0 tmpf862 VLV_SIGNOA_106

    MATH ABS VLV_DIFFD_106 F.0
    DATAF tmpf864
    DATA8 flag864
    DIVF VLV_DIFFD_106 F.0 tmpf864
    CP_EQF 0.0 F.0 flag864
    SELECTF flag864 0.0 tmpf864 VLV_SIGNOD_106

    MULF VLV_V_106 VLV_SIGNOA_106 VLV_VELA_106
    MULF VLV_V_106 VLV_SIGNOD_106 VLV_VELD_106
    CALL MOTOR.SCHEDULESYNC 'AD' VLV_VELA_106 VLV_VELD_106 5.0 'False'

	DATA8 layer867
	DATA8 nos867
	DATA8 busy867
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer867 nos867
	JR_EQ8 0 nos867 motornotbusy867
  motorwaiting867:
	OUTPUT_TEST layer867 nos867 busy867
	JR_EQ8 busy867 0 motornotbusy867
	SLEEP
	JR motorwaiting867
  motornotbusy867:
    CALL LCD.CLEAR
    TIMER_READ timeMC3
  while870:
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 or871
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_EQF F.0 0.0 endwhile870
  or871:
  whilebody870:
    MULF VLV_DIFFA_106 VLV_SIGNOA_106 F.0
    JR_LTEQF F.0 0.0 else874_1
    MOVEF_8 VLV_VELA_106 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif874
  else874_1:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else874_2:
  endif874:
    MULF VLV_DIFFD_106 VLV_SIGNOD_106 F.0
    JR_LTEQF F.0 0.0 else878_1
    MOVEF_8 VLV_VELD_106 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif878
  else878_1:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else878_2:
  endif878:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTEQF F.0 VLV_SAFETYTIMER_106 else882_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
  else882_1:
  endif882:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_106 F.0 VLV_DIFFA_106
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_106 F.0 VLV_DIFFD_106
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_106 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 whilebody870
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_NEQF F.0 0.0 whilebody870
  endwhile870:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEADSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEADSAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_107 F.0 VLV_ENCDIFF_107
    MATH ABS VLV_ENCDIFF_107 F.0
    DATAF tmpf899
    DATA8 flag899
    DIVF VLV_ENCDIFF_107 F.0 tmpf899
    CP_EQF 0.0 F.0 flag899
    SELECTF flag899 0.0 tmpf899 VLV_SIGNO_107

    JR_EQF VLV_ENCDIFF_107 0.0 else900_1
    MULF VLV_SIGNO_107 VLV_V_107 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while903:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile903
  whilebody903:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody903
  endwhile903:
    CALL MOTOR.STOP 'D' 'True'
  else900_1:
  endif900:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVED0_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 else911_1
  while913:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 endwhile913
  whilebody913:
    MATH NEGATE VLV_V_108 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTF F.0 -10.0 whilebody913
  endwhile913:
    CALL MOTOR.STOP 'D' 'True'
    JR endif911
  else911_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 else911_2
  while920:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 endwhile920
  whilebody920:
    MOVEF_8 VLV_V_108 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTF F.0 -10.0 whilebody920
  endwhile920:
    CALL MOTOR.STOP 'D' 'True'
    JR endif911
  else911_2:
    CALL MOTOR.STOP 'D' 'True'
  else911_3:
  endif911:
RETSUB_F_BMOVED0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED0_1:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while927:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_110 endwhile927
  whilebody927:
    MOVEF_8 VLV_V_110 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_110 whilebody927
  endwhile927:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_111 F.0 VLV_ENCDIFF_111
    MATH ABS VLV_ENCDIFF_111 F.0
    DATAF tmpf935
    DATA8 flag935
    DIVF VLV_ENCDIFF_111 F.0 tmpf935
    CP_EQF 0.0 F.0 flag935
    SELECTF flag935 0.0 tmpf935 VLV_SIGNO_111

    MATH ABS VLV_ENCDIFF_111 F.4
    DATAF tmpf937
    DATA8 flag937
    DIVF F.4 100.0 tmpf937
    CP_EQF 0.0 100.0 flag937
    SELECTF flag937 0.0 tmpf937 F.3

    DATAF tmpf938
    DATA8 flag938
    DIVF VLV_V_111 20.0 tmpf938
    CP_EQF 0.0 20.0 flag938
    SELECTF flag938 0.0 tmpf938 F.4

    DATAF tmpf939
    DATA8 flag939
    DIVF F.3 F.4 tmpf939
    CP_EQF 0.0 F.4 flag939
    SELECTF flag939 0.0 tmpf939 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag942
	CP_GTF F.0 400.0 flag942
	SELECTF flag942 F.0 400.0 VLV_SAFETYTIMER_111
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_111 0.0 else944_1
  while945:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile945
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_111 endwhile945
  whilebody945:
    MULF VLV_SIGNO_111 VLV_V_111 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_111 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and956
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_111 whilebody945
  and956:
  endwhile945:
    CALL MOTOR.STOP 'D' 'True'
  else944_1:
  endif944:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer962
	DATA8 no962
	DATA8 mode8962
	
	MOVEF_8 1.0 no962
	SUB8 no962 1 no962
	DIV8 no962 4 layer962
	MATH MOD8 no962 4 no962

	MOVEF_8 4.0 mode8962
	
	INPUT_DEVICE READY_RAW layer962 no962 0 mode8962 0
    MOVEF_F 15.0 VLV_RED_112
    MOVEF_F 60.0 VLV_YELLOW_112
    MOVEF_F 170.0 VLV_GREEN_112
    MOVEF_F 330.0 VLV_BLUE_112
    MOVEF_F 10.0 VLV_VALUENEGRO_112
    MOVEF_F 100.0 VLV_VALUEBLANCO_112
    MOVEF_F 147.0 VLV_RWHITE_112
    MOVEF_F 143.0 VLV_GWHITE_112
    MOVEF_F 160.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    MOVEF_F 0.0 VLV_COLOR_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_112
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_112
  for968:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor968
  forbody968:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_112
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_112 VLV_RGB_112
    DATAF tmpf973
    DATA8 flag973
    DIVF VLV_RRAW_112 VLV_RWHITE_112 tmpf973
    CP_EQF 0.0 VLV_RWHITE_112 flag973
    SELECTF flag973 0.0 tmpf973 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    DATAF tmpf977
    DATA8 flag977
    DIVF VLV_GRAW_112 VLV_GWHITE_112 tmpf977
    CP_EQF 0.0 VLV_GWHITE_112 flag977
    SELECTF flag977 0.0 tmpf977 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    DATAF tmpf981
    DATA8 flag981
    DIVF VLV_BRAW_112 VLV_BWHITE_112 tmpf981
    CP_EQF 0.0 VLV_BWHITE_112 flag981
    SELECTF flag981 0.0 tmpf981 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_RNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.3 VLV_GNORMA_112
    DATA8 flag987
	CP_GTF F.2 F.3 flag987
	SELECTF flag987 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_BNORMA_112
    DATA8 flag989
	CP_GTF F.1 F.2 flag989
	SELECTF flag989 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    DATA32 milliseconds991
	MOVEF_32 5.0 milliseconds991
	DATA32 timer991
	TIMER_WAIT milliseconds991 timer991
	TIMER_READY timer991
    ADDF VLV_J_112 1.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody968
  endfor968:
    MOVEF_F 1.0 VLV_J_112
  for993:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor993
  forbody993:
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_112
    ADDF F.0 F.1 VLV_RNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_112
    ADDF F.0 F.1 VLV_GNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_112
    ADDF F.0 F.1 VLV_BNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_112
    ADDF F.0 F.1 VLV_MAX_112
    ADDF VLV_J_112 2.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody993
  endfor993:
    DATAF tmpf1011
    DATA8 flag1011
    DIVF VLV_RNORM_112 VLV_REPS_112 tmpf1011
    CP_EQF 0.0 VLV_REPS_112 flag1011
    SELECTF flag1011 0.0 tmpf1011 VLV_RNORM_112

    DATAF tmpf1012
    DATA8 flag1012
    DIVF VLV_GNORM_112 VLV_REPS_112 tmpf1012
    CP_EQF 0.0 VLV_REPS_112 flag1012
    SELECTF flag1012 0.0 tmpf1012 VLV_GNORM_112

    DATAF tmpf1013
    DATA8 flag1013
    DIVF VLV_BNORM_112 VLV_REPS_112 tmpf1013
    CP_EQF 0.0 VLV_REPS_112 flag1013
    SELECTF flag1013 0.0 tmpf1013 VLV_BNORM_112

    DATAF tmpf1014
    DATA8 flag1014
    DIVF VLV_MAX_112 VLV_REPS_112 tmpf1014
    CP_EQF 0.0 VLV_REPS_112 flag1014
    SELECTF flag1014 0.0 tmpf1014 VLV_MAX_112

    DATA8 flag1015
	CP_LTF VLV_RNORM_112 VLV_GNORM_112 flag1015
	SELECTF flag1015 VLV_RNORM_112 VLV_GNORM_112 F.0
    DATA8 flag1016
	CP_LTF F.0 VLV_BNORM_112 flag1016
	SELECTF flag1016 F.0 VLV_BNORM_112 VLV_MIN_112
    JR_NEQF VLV_MAX_112 VLV_MIN_112 else1017_1
    MOVEF_F 0.0 VLV_HUE_112
    JR endif1017
  else1017_1:
    JR_NEQF VLV_MAX_112 VLV_RNORM_112 else1017_2
    JR_LTF VLV_GNORM_112 VLV_BNORM_112 else1018_1
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_112 VLV_MIN_112 F.1
    DATAF tmpf1022
    DATA8 flag1022
    DIVF F.0 F.1 tmpf1022
    CP_EQF 0.0 F.1 flag1022
    SELECTF flag1022 0.0 tmpf1022 VLV_HUE_112

    JR endif1018
  else1018_1:
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1026
    DATA8 flag1026
    DIVF F.1 F.2 tmpf1026
    CP_EQF 0.0 F.2 flag1026
    SELECTF flag1026 0.0 tmpf1026 F.0

    ADDF F.0 360.0 VLV_HUE_112
  else1018_2:
  endif1018:
    JR endif1017
  else1017_2:
    JR_NEQF VLV_MAX_112 VLV_GNORM_112 else1017_3
    SUBF VLV_BNORM_112 VLV_RNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1031
    DATA8 flag1031
    DIVF F.1 F.2 tmpf1031
    CP_EQF 0.0 F.2 flag1031
    SELECTF flag1031 0.0 tmpf1031 F.0

    ADDF F.0 120.0 VLV_HUE_112
    JR endif1017
  else1017_3:
    SUBF VLV_RNORM_112 VLV_GNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1036
    DATA8 flag1036
    DIVF F.1 F.2 tmpf1036
    CP_EQF 0.0 F.2 flag1036
    SELECTF flag1036 0.0 tmpf1036 F.0

    ADDF F.0 240.0 VLV_HUE_112
  else1017_4:
  endif1017:
    JR_NEQF VLV_MAX_112 0.0 else1038_1
    MOVEF_F 0.0 VLV_SAT_112
    JR endif1038
  else1038_1:
    DATAF tmpf1039
    DATA8 flag1039
    DIVF VLV_MIN_112 VLV_MAX_112 tmpf1039
    CP_EQF 0.0 VLV_MAX_112 flag1039
    SELECTF flag1039 0.0 tmpf1039 F.0

    SUBF 1.0 F.0 VLV_SAT_112
  else1038_2:
  endif1038:
    MOVEF_F VLV_MAX_112 VLV_VALUE_112
    ADDF VLV_VALUEBLANCO_112 VLV_VALUENEGRO_112 F.0
    DATAF tmpf1042
    DATA8 flag1042
    DIVF F.0 2.0 tmpf1042
    CP_EQF 0.0 2.0 flag1042
    SELECTF flag1042 0.0 tmpf1042 VLV_RGBGREY_112

    ADDF VLV_RNORM_112 VLV_GNORM_112 F.1
    ADDF F.1 VLV_BNORM_112 F.0
    JR_GTF F.0 3.0 else1043_1
    MOVEF_F 0.0 VLV_COLOR_112
    JR endif1043
  else1043_1:
    JR_GTEQF VLV_SAT_112 0.4 else1046_1
    JR_LTEQF VLV_VALUE_112 VLV_RGBGREY_112 else1047_1
    MOVEF_F 6.0 VLV_COLOR_112
    JR endif1047
  else1047_1:
    MOVEF_F 1.0 VLV_COLOR_112
  else1047_2:
  endif1047:
    JR endif1046
  else1046_1:
    JR_LTF VLV_HUE_112 0.0 else1048_1
    JR_GTEQF VLV_HUE_112 VLV_RED_112 else1048_1
    MOVEF_F 5.0 VLV_COLOR_112
    JR endif1048
  else1048_1:
    JR_LTF VLV_HUE_112 VLV_RED_112 else1048_2
    JR_GTEQF VLV_HUE_112 VLV_YELLOW_112 else1048_2
    MOVEF_F 4.0 VLV_COLOR_112
    JR endif1048
  else1048_2:
    JR_LTF VLV_HUE_112 VLV_YELLOW_112 else1048_3
    JR_GTEQF VLV_HUE_112 VLV_GREEN_112 else1048_3
    MOVEF_F 3.0 VLV_COLOR_112
    JR endif1048
  else1048_3:
    JR_LTF VLV_HUE_112 VLV_GREEN_112 else1048_4
    JR_GTEQF VLV_HUE_112 VLV_BLUE_112 else1048_4
    MOVEF_F 2.0 VLV_COLOR_112
    JR endif1048
  else1048_4:
    MOVEF_F 5.0 VLV_COLOR_112
  else1048_5:
  endif1048:
  else1046_2:
  endif1046:
  else1043_2:
  endif1043:
    STRINGS VALUE_FORMATTED VLV_RRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_112 VLV_COLOR_124
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1064:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer1065
	DATA8 no1065
	DATA8 mode81065
	
	MOVEF_8 2.0 no1065
	SUB8 no1065 1 no1065
	DIV8 no1065 4 layer1065
	MATH MOD8 no1065 4 no1065

	MOVEF_8 4.0 mode81065
	
	INPUT_DEVICE READY_RAW layer1065 no1065 0 mode81065 0
    MOVEF_F 15.0 VLV_RED_113
    MOVEF_F 60.0 VLV_YELLOW_113
    MOVEF_F 170.0 VLV_GREEN_113
    MOVEF_F 330.0 VLV_BLUE_113
    MOVEF_F 10.0 VLV_VALUENEGRO_113
    MOVEF_F 100.0 VLV_VALUEBLANCO_113
    MOVEF_F 147.0 VLV_RWHITE_113
    MOVEF_F 143.0 VLV_GWHITE_113
    MOVEF_F 160.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_113
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_113
  for1071:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1071
  forbody1071:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_113
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_113 VLV_RGB_113
    DATAF tmpf1076
    DATA8 flag1076
    DIVF VLV_RRAW_113 VLV_RWHITE_113 tmpf1076
    CP_EQF 0.0 VLV_RWHITE_113 flag1076
    SELECTF flag1076 0.0 tmpf1076 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    DATAF tmpf1080
    DATA8 flag1080
    DIVF VLV_GRAW_113 VLV_GWHITE_113 tmpf1080
    CP_EQF 0.0 VLV_GWHITE_113 flag1080
    SELECTF flag1080 0.0 tmpf1080 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    DATAF tmpf1084
    DATA8 flag1084
    DIVF VLV_BRAW_113 VLV_BWHITE_113 tmpf1084
    CP_EQF 0.0 VLV_BWHITE_113 flag1084
    SELECTF flag1084 0.0 tmpf1084 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_RNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.3 VLV_GNORMA_113
    DATA8 flag1090
	CP_GTF F.2 F.3 flag1090
	SELECTF flag1090 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_BNORMA_113
    DATA8 flag1092
	CP_GTF F.1 F.2 flag1092
	SELECTF flag1092 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    DATA32 milliseconds1094
	MOVEF_32 5.0 milliseconds1094
	DATA32 timer1094
	TIMER_WAIT milliseconds1094 timer1094
	TIMER_READY timer1094
    ADDF VLV_J_113 1.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1071
  endfor1071:
    MOVEF_F 1.0 VLV_J_113
  for1096:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1096
  forbody1096:
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_113
    ADDF F.0 F.1 VLV_RNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_113
    ADDF F.0 F.1 VLV_GNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_113
    ADDF F.0 F.1 VLV_BNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_113
    ADDF F.0 F.1 VLV_MAX_113
    ADDF VLV_J_113 2.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1096
  endfor1096:
    DATAF tmpf1114
    DATA8 flag1114
    DIVF VLV_RNORM_113 VLV_REPS_113 tmpf1114
    CP_EQF 0.0 VLV_REPS_113 flag1114
    SELECTF flag1114 0.0 tmpf1114 VLV_RNORM_113

    DATAF tmpf1115
    DATA8 flag1115
    DIVF VLV_GNORM_113 VLV_REPS_113 tmpf1115
    CP_EQF 0.0 VLV_REPS_113 flag1115
    SELECTF flag1115 0.0 tmpf1115 VLV_GNORM_113

    DATAF tmpf1116
    DATA8 flag1116
    DIVF VLV_BNORM_113 VLV_REPS_113 tmpf1116
    CP_EQF 0.0 VLV_REPS_113 flag1116
    SELECTF flag1116 0.0 tmpf1116 VLV_BNORM_113

    DATAF tmpf1117
    DATA8 flag1117
    DIVF VLV_MAX_113 VLV_REPS_113 tmpf1117
    CP_EQF 0.0 VLV_REPS_113 flag1117
    SELECTF flag1117 0.0 tmpf1117 VLV_MAX_113

    DATA8 flag1118
	CP_LTF VLV_RNORM_113 VLV_GNORM_113 flag1118
	SELECTF flag1118 VLV_RNORM_113 VLV_GNORM_113 F.0
    DATA8 flag1119
	CP_LTF F.0 VLV_BNORM_113 flag1119
	SELECTF flag1119 F.0 VLV_BNORM_113 VLV_MIN_113
    JR_NEQF VLV_MAX_113 VLV_MIN_113 else1120_1
    MOVEF_F 0.0 VLV_HUE_113
    JR endif1120
  else1120_1:
    JR_NEQF VLV_MAX_113 VLV_RNORM_113 else1120_2
    JR_LTF VLV_GNORM_113 VLV_BNORM_113 else1121_1
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_113 VLV_MIN_113 F.1
    DATAF tmpf1125
    DATA8 flag1125
    DIVF F.0 F.1 tmpf1125
    CP_EQF 0.0 F.1 flag1125
    SELECTF flag1125 0.0 tmpf1125 VLV_HUE_113

    JR endif1121
  else1121_1:
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1129
    DATA8 flag1129
    DIVF F.1 F.2 tmpf1129
    CP_EQF 0.0 F.2 flag1129
    SELECTF flag1129 0.0 tmpf1129 F.0

    ADDF F.0 360.0 VLV_HUE_113
  else1121_2:
  endif1121:
    JR endif1120
  else1120_2:
    JR_NEQF VLV_MAX_113 VLV_GNORM_113 else1120_3
    SUBF VLV_BNORM_113 VLV_RNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1134
    DATA8 flag1134
    DIVF F.1 F.2 tmpf1134
    CP_EQF 0.0 F.2 flag1134
    SELECTF flag1134 0.0 tmpf1134 F.0

    ADDF F.0 120.0 VLV_HUE_113
    JR endif1120
  else1120_3:
    SUBF VLV_RNORM_113 VLV_GNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1139
    DATA8 flag1139
    DIVF F.1 F.2 tmpf1139
    CP_EQF 0.0 F.2 flag1139
    SELECTF flag1139 0.0 tmpf1139 F.0

    ADDF F.0 240.0 VLV_HUE_113
  else1120_4:
  endif1120:
    JR_NEQF VLV_MAX_113 0.0 else1141_1
    MOVEF_F 0.0 VLV_SAT_113
    JR endif1141
  else1141_1:
    DATAF tmpf1142
    DATA8 flag1142
    DIVF VLV_MIN_113 VLV_MAX_113 tmpf1142
    CP_EQF 0.0 VLV_MAX_113 flag1142
    SELECTF flag1142 0.0 tmpf1142 F.0

    SUBF 1.0 F.0 VLV_SAT_113
  else1141_2:
  endif1141:
    MOVEF_F VLV_MAX_113 VLV_VALUE_113
    ADDF VLV_VALUEBLANCO_113 VLV_VALUENEGRO_113 F.0
    DATAF tmpf1145
    DATA8 flag1145
    DIVF F.0 2.0 tmpf1145
    CP_EQF 0.0 2.0 flag1145
    SELECTF flag1145 0.0 tmpf1145 VLV_RGBGREY_113

    ADDF VLV_RNORM_113 VLV_GNORM_113 F.1
    ADDF F.1 VLV_BNORM_113 F.0
    JR_GTF F.0 3.0 else1146_1
    MOVEF_F 0.0 VLV_COLOR_113
    JR endif1146
  else1146_1:
    JR_GTEQF VLV_SAT_113 0.4 else1149_1
    JR_LTEQF VLV_VALUE_113 VLV_RGBGREY_113 else1150_1
    MOVEF_F 6.0 VLV_COLOR_113
    JR endif1150
  else1150_1:
    MOVEF_F 1.0 VLV_COLOR_113
  else1150_2:
  endif1150:
    JR endif1149
  else1149_1:
    JR_LTF VLV_HUE_113 0.0 else1151_1
    JR_GTEQF VLV_HUE_113 VLV_RED_113 else1151_1
    MOVEF_F 5.0 VLV_COLOR_113
    JR endif1151
  else1151_1:
    JR_LTF VLV_HUE_113 VLV_RED_113 else1151_2
    JR_GTEQF VLV_HUE_113 VLV_YELLOW_113 else1151_2
    MOVEF_F 4.0 VLV_COLOR_113
    JR endif1151
  else1151_2:
    JR_LTF VLV_HUE_113 VLV_YELLOW_113 else1151_3
    JR_GTEQF VLV_HUE_113 VLV_GREEN_113 else1151_3
    MOVEF_F 3.0 VLV_COLOR_113
    JR endif1151
  else1151_3:
    JR_LTF VLV_HUE_113 VLV_GREEN_113 else1151_4
    JR_GTEQF VLV_HUE_113 VLV_BLUE_113 else1151_4
    MOVEF_F 2.0 VLV_COLOR_113
    JR endif1151
  else1151_4:
    MOVEF_F 5.0 VLV_COLOR_113
  else1151_5:
  endif1151:
  else1149_2:
  endif1149:
  else1146_2:
  endif1146:
    STRINGS VALUE_FORMATTED VLV_RRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_113 VLV_COLOR_124
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1167:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer1168
	DATA8 no1168
	DATA8 mode81168
	
	MOVEF_8 3.0 no1168
	SUB8 no1168 1 no1168
	DIV8 no1168 4 layer1168
	MATH MOD8 no1168 4 no1168

	MOVEF_8 4.0 mode81168
	
	INPUT_DEVICE READY_RAW layer1168 no1168 0 mode81168 0
    MOVEF_F 15.0 VLV_RED_114
    MOVEF_F 60.0 VLV_YELLOW_114
    MOVEF_F 170.0 VLV_GREEN_114
    MOVEF_F 330.0 VLV_BLUE_114
    MOVEF_F 10.0 VLV_VALUENEGRO_114
    MOVEF_F 100.0 VLV_VALUEBLANCO_114
    MOVEF_F 147.0 VLV_RWHITE_114
    MOVEF_F 143.0 VLV_GWHITE_114
    MOVEF_F 160.0 VLV_BWHITE_114
    MOVEF_F 0.0 VLV_HUE_114
    MOVEF_F 0.0 VLV_SAT_114
    MOVEF_F 0.0 VLV_VALUE_114
    MOVEF_F 0.0 VLV_COLOR_114
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_114
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_114
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_114
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_114
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_114
  for1174:
    JR_GTF VLV_J_114 VLV_REPS_114 endfor1174
  forbody1174:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_114
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_114 VLV_RGB_114
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_114 VLV_RGB_114
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_114 VLV_RGB_114
    DATAF tmpf1179
    DATA8 flag1179
    DIVF VLV_RRAW_114 VLV_RWHITE_114 tmpf1179
    CP_EQF 0.0 VLV_RWHITE_114 flag1179
    SELECTF flag1179 0.0 tmpf1179 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_114 F.0 VLV_RNORMA_114
    DATAF tmpf1183
    DATA8 flag1183
    DIVF VLV_GRAW_114 VLV_GWHITE_114 tmpf1183
    CP_EQF 0.0 VLV_GWHITE_114 flag1183
    SELECTF flag1183 0.0 tmpf1183 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_114 F.0 VLV_GNORMA_114
    DATAF tmpf1187
    DATA8 flag1187
    DIVF VLV_BRAW_114 VLV_BWHITE_114 tmpf1187
    CP_EQF 0.0 VLV_BWHITE_114 flag1187
    SELECTF flag1187 0.0 tmpf1187 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_114 F.0 VLV_BNORMA_114
    CALL ARRAYGET_FLOAT VLV_J_114 F.2 VLV_RNORMA_114
    CALL ARRAYGET_FLOAT VLV_J_114 F.3 VLV_GNORMA_114
    DATA8 flag1193
	CP_GTF F.2 F.3 flag1193
	SELECTF flag1193 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_114 F.2 VLV_BNORMA_114
    DATA8 flag1195
	CP_GTF F.1 F.2 flag1195
	SELECTF flag1195 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_114 F.0 VLV_MAXA_114
    DATA32 milliseconds1197
	MOVEF_32 5.0 milliseconds1197
	DATA32 timer1197
	TIMER_WAIT milliseconds1197 timer1197
	TIMER_READY timer1197
    ADDF VLV_J_114 1.0 VLV_J_114
    JR_LTEQF VLV_J_114 VLV_REPS_114 forbody1174
  endfor1174:
    MOVEF_F 1.0 VLV_J_114
  for1199:
    JR_GTF VLV_J_114 VLV_REPS_114 endfor1199
  forbody1199:
    CALL ARRAYGET_FLOAT VLV_J_114 F.0 VLV_RNORMA_114
    ADDF VLV_J_114 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_114
    ADDF F.0 F.1 VLV_RNORM_114
    CALL ARRAYGET_FLOAT VLV_J_114 F.0 VLV_GNORMA_114
    ADDF VLV_J_114 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_114
    ADDF F.0 F.1 VLV_GNORM_114
    CALL ARRAYGET_FLOAT VLV_J_114 F.0 VLV_BNORMA_114
    ADDF VLV_J_114 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_114
    ADDF F.0 F.1 VLV_BNORM_114
    CALL ARRAYGET_FLOAT VLV_J_114 F.0 VLV_MAXA_114
    ADDF VLV_J_114 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_114
    ADDF F.0 F.1 VLV_MAX_114
    ADDF VLV_J_114 2.0 VLV_J_114
    JR_LTEQF VLV_J_114 VLV_REPS_114 forbody1199
  endfor1199:
    DATAF tmpf1217
    DATA8 flag1217
    DIVF VLV_RNORM_114 VLV_REPS_114 tmpf1217
    CP_EQF 0.0 VLV_REPS_114 flag1217
    SELECTF flag1217 0.0 tmpf1217 VLV_RNORM_114

    DATAF tmpf1218
    DATA8 flag1218
    DIVF VLV_GNORM_114 VLV_REPS_114 tmpf1218
    CP_EQF 0.0 VLV_REPS_114 flag1218
    SELECTF flag1218 0.0 tmpf1218 VLV_GNORM_114

    DATAF tmpf1219
    DATA8 flag1219
    DIVF VLV_BNORM_114 VLV_REPS_114 tmpf1219
    CP_EQF 0.0 VLV_REPS_114 flag1219
    SELECTF flag1219 0.0 tmpf1219 VLV_BNORM_114

    DATAF tmpf1220
    DATA8 flag1220
    DIVF VLV_MAX_114 VLV_REPS_114 tmpf1220
    CP_EQF 0.0 VLV_REPS_114 flag1220
    SELECTF flag1220 0.0 tmpf1220 VLV_MAX_114

    DATA8 flag1221
	CP_LTF VLV_RNORM_114 VLV_GNORM_114 flag1221
	SELECTF flag1221 VLV_RNORM_114 VLV_GNORM_114 F.0
    DATA8 flag1222
	CP_LTF F.0 VLV_BNORM_114 flag1222
	SELECTF flag1222 F.0 VLV_BNORM_114 VLV_MIN_114
    JR_NEQF VLV_MAX_114 VLV_MIN_114 else1223_1
    MOVEF_F 0.0 VLV_HUE_114
    JR endif1223
  else1223_1:
    JR_NEQF VLV_MAX_114 VLV_RNORM_114 else1223_2
    JR_LTF VLV_GNORM_114 VLV_BNORM_114 else1224_1
    SUBF VLV_GNORM_114 VLV_BNORM_114 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_114 VLV_MIN_114 F.1
    DATAF tmpf1228
    DATA8 flag1228
    DIVF F.0 F.1 tmpf1228
    CP_EQF 0.0 F.1 flag1228
    SELECTF flag1228 0.0 tmpf1228 VLV_HUE_114

    JR endif1224
  else1224_1:
    SUBF VLV_GNORM_114 VLV_BNORM_114 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_114 VLV_MIN_114 F.2
    DATAF tmpf1232
    DATA8 flag1232
    DIVF F.1 F.2 tmpf1232
    CP_EQF 0.0 F.2 flag1232
    SELECTF flag1232 0.0 tmpf1232 F.0

    ADDF F.0 360.0 VLV_HUE_114
  else1224_2:
  endif1224:
    JR endif1223
  else1223_2:
    JR_NEQF VLV_MAX_114 VLV_GNORM_114 else1223_3
    SUBF VLV_BNORM_114 VLV_RNORM_114 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_114 VLV_MIN_114 F.2
    DATAF tmpf1237
    DATA8 flag1237
    DIVF F.1 F.2 tmpf1237
    CP_EQF 0.0 F.2 flag1237
    SELECTF flag1237 0.0 tmpf1237 F.0

    ADDF F.0 120.0 VLV_HUE_114
    JR endif1223
  else1223_3:
    SUBF VLV_RNORM_114 VLV_GNORM_114 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_114 VLV_MIN_114 F.2
    DATAF tmpf1242
    DATA8 flag1242
    DIVF F.1 F.2 tmpf1242
    CP_EQF 0.0 F.2 flag1242
    SELECTF flag1242 0.0 tmpf1242 F.0

    ADDF F.0 240.0 VLV_HUE_114
  else1223_4:
  endif1223:
    JR_NEQF VLV_MAX_114 0.0 else1244_1
    MOVEF_F 0.0 VLV_SAT_114
    JR endif1244
  else1244_1:
    DATAF tmpf1245
    DATA8 flag1245
    DIVF VLV_MIN_114 VLV_MAX_114 tmpf1245
    CP_EQF 0.0 VLV_MAX_114 flag1245
    SELECTF flag1245 0.0 tmpf1245 F.0

    SUBF 1.0 F.0 VLV_SAT_114
  else1244_2:
  endif1244:
    MOVEF_F VLV_MAX_114 VLV_VALUE_114
    ADDF VLV_VALUEBLANCO_114 VLV_VALUENEGRO_114 F.0
    DATAF tmpf1248
    DATA8 flag1248
    DIVF F.0 2.0 tmpf1248
    CP_EQF 0.0 2.0 flag1248
    SELECTF flag1248 0.0 tmpf1248 VLV_RGBGREY_114

    ADDF VLV_RNORM_114 VLV_GNORM_114 F.1
    ADDF F.1 VLV_BNORM_114 F.0
    JR_GTF F.0 3.0 else1249_1
    MOVEF_F 0.0 VLV_COLOR_114
    JR endif1249
  else1249_1:
    JR_GTEQF VLV_SAT_114 0.4 else1252_1
    JR_LTEQF VLV_VALUE_114 VLV_RGBGREY_114 else1253_1
    MOVEF_F 6.0 VLV_COLOR_114
    JR endif1253
  else1253_1:
    MOVEF_F 1.0 VLV_COLOR_114
  else1253_2:
  endif1253:
    JR endif1252
  else1252_1:
    JR_LTF VLV_HUE_114 0.0 else1254_1
    JR_GTEQF VLV_HUE_114 VLV_RED_114 else1254_1
    MOVEF_F 5.0 VLV_COLOR_114
    JR endif1254
  else1254_1:
    JR_LTF VLV_HUE_114 VLV_RED_114 else1254_2
    JR_GTEQF VLV_HUE_114 VLV_YELLOW_114 else1254_2
    MOVEF_F 4.0 VLV_COLOR_114
    JR endif1254
  else1254_2:
    JR_LTF VLV_HUE_114 VLV_YELLOW_114 else1254_3
    JR_GTEQF VLV_HUE_114 VLV_GREEN_114 else1254_3
    MOVEF_F 3.0 VLV_COLOR_114
    JR endif1254
  else1254_3:
    JR_LTF VLV_HUE_114 VLV_GREEN_114 else1254_4
    JR_GTEQF VLV_HUE_114 VLV_BLUE_114 else1254_4
    MOVEF_F 2.0 VLV_COLOR_114
    JR endif1254
  else1254_4:
    MOVEF_F 5.0 VLV_COLOR_114
  else1254_5:
  endif1254:
  else1252_2:
  endif1252:
  else1249_2:
  endif1249:
    STRINGS VALUE_FORMATTED VLV_RRAW_114 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_114 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_114 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_114 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_114 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_114 VLV_COLOR_124
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1270:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer1271
	DATA8 no1271
	DATA8 mode81271
	
	MOVEF_8 4.0 no1271
	SUB8 no1271 1 no1271
	DIV8 no1271 4 layer1271
	MATH MOD8 no1271 4 no1271

	MOVEF_8 4.0 mode81271
	
	INPUT_DEVICE READY_RAW layer1271 no1271 0 mode81271 0
    MOVEF_F 15.0 VLV_RED_115
    MOVEF_F 60.0 VLV_YELLOW_115
    MOVEF_F 170.0 VLV_GREEN_115
    MOVEF_F 330.0 VLV_BLUE_115
    MOVEF_F 10.0 VLV_VALUENEGRO_115
    MOVEF_F 100.0 VLV_VALUEBLANCO_115
    MOVEF_F 147.0 VLV_RWHITE_115
    MOVEF_F 143.0 VLV_GWHITE_115
    MOVEF_F 160.0 VLV_BWHITE_115
    MOVEF_F 0.0 VLV_HUE_115
    MOVEF_F 0.0 VLV_SAT_115
    MOVEF_F 0.0 VLV_VALUE_115
    MOVEF_F 0.0 VLV_COLOR_115
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_115
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_115
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_115
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_115
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_115
  for1277:
    JR_GTF VLV_J_115 VLV_REPS_115 endfor1277
  forbody1277:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_115
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_115 VLV_RGB_115
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_115 VLV_RGB_115
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_115 VLV_RGB_115
    DATAF tmpf1282
    DATA8 flag1282
    DIVF VLV_RRAW_115 VLV_RWHITE_115 tmpf1282
    CP_EQF 0.0 VLV_RWHITE_115 flag1282
    SELECTF flag1282 0.0 tmpf1282 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_115 F.0 VLV_RNORMA_115
    DATAF tmpf1286
    DATA8 flag1286
    DIVF VLV_GRAW_115 VLV_GWHITE_115 tmpf1286
    CP_EQF 0.0 VLV_GWHITE_115 flag1286
    SELECTF flag1286 0.0 tmpf1286 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_115 F.0 VLV_GNORMA_115
    DATAF tmpf1290
    DATA8 flag1290
    DIVF VLV_BRAW_115 VLV_BWHITE_115 tmpf1290
    CP_EQF 0.0 VLV_BWHITE_115 flag1290
    SELECTF flag1290 0.0 tmpf1290 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_115 F.0 VLV_BNORMA_115
    CALL ARRAYGET_FLOAT VLV_J_115 F.2 VLV_RNORMA_115
    CALL ARRAYGET_FLOAT VLV_J_115 F.3 VLV_GNORMA_115
    DATA8 flag1296
	CP_GTF F.2 F.3 flag1296
	SELECTF flag1296 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_115 F.2 VLV_BNORMA_115
    DATA8 flag1298
	CP_GTF F.1 F.2 flag1298
	SELECTF flag1298 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_115 F.0 VLV_MAXA_115
    DATA32 milliseconds1300
	MOVEF_32 5.0 milliseconds1300
	DATA32 timer1300
	TIMER_WAIT milliseconds1300 timer1300
	TIMER_READY timer1300
    ADDF VLV_J_115 1.0 VLV_J_115
    JR_LTEQF VLV_J_115 VLV_REPS_115 forbody1277
  endfor1277:
    MOVEF_F 1.0 VLV_J_115
  for1302:
    JR_GTF VLV_J_115 VLV_REPS_115 endfor1302
  forbody1302:
    CALL ARRAYGET_FLOAT VLV_J_115 F.0 VLV_RNORMA_115
    ADDF VLV_J_115 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_115
    ADDF F.0 F.1 VLV_RNORM_115
    CALL ARRAYGET_FLOAT VLV_J_115 F.0 VLV_GNORMA_115
    ADDF VLV_J_115 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_115
    ADDF F.0 F.1 VLV_GNORM_115
    CALL ARRAYGET_FLOAT VLV_J_115 F.0 VLV_BNORMA_115
    ADDF VLV_J_115 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_115
    ADDF F.0 F.1 VLV_BNORM_115
    CALL ARRAYGET_FLOAT VLV_J_115 F.0 VLV_MAXA_115
    ADDF VLV_J_115 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_115
    ADDF F.0 F.1 VLV_MAX_115
    ADDF VLV_J_115 2.0 VLV_J_115
    JR_LTEQF VLV_J_115 VLV_REPS_115 forbody1302
  endfor1302:
    DATAF tmpf1320
    DATA8 flag1320
    DIVF VLV_RNORM_115 VLV_REPS_115 tmpf1320
    CP_EQF 0.0 VLV_REPS_115 flag1320
    SELECTF flag1320 0.0 tmpf1320 VLV_RNORM_115

    DATAF tmpf1321
    DATA8 flag1321
    DIVF VLV_GNORM_115 VLV_REPS_115 tmpf1321
    CP_EQF 0.0 VLV_REPS_115 flag1321
    SELECTF flag1321 0.0 tmpf1321 VLV_GNORM_115

    DATAF tmpf1322
    DATA8 flag1322
    DIVF VLV_BNORM_115 VLV_REPS_115 tmpf1322
    CP_EQF 0.0 VLV_REPS_115 flag1322
    SELECTF flag1322 0.0 tmpf1322 VLV_BNORM_115

    DATAF tmpf1323
    DATA8 flag1323
    DIVF VLV_MAX_115 VLV_REPS_115 tmpf1323
    CP_EQF 0.0 VLV_REPS_115 flag1323
    SELECTF flag1323 0.0 tmpf1323 VLV_MAX_115

    DATA8 flag1324
	CP_LTF VLV_RNORM_115 VLV_GNORM_115 flag1324
	SELECTF flag1324 VLV_RNORM_115 VLV_GNORM_115 F.0
    DATA8 flag1325
	CP_LTF F.0 VLV_BNORM_115 flag1325
	SELECTF flag1325 F.0 VLV_BNORM_115 VLV_MIN_115
    JR_NEQF VLV_MAX_115 VLV_MIN_115 else1326_1
    MOVEF_F 0.0 VLV_HUE_115
    JR endif1326
  else1326_1:
    JR_NEQF VLV_MAX_115 VLV_RNORM_115 else1326_2
    JR_LTF VLV_GNORM_115 VLV_BNORM_115 else1327_1
    SUBF VLV_GNORM_115 VLV_BNORM_115 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_115 VLV_MIN_115 F.1
    DATAF tmpf1331
    DATA8 flag1331
    DIVF F.0 F.1 tmpf1331
    CP_EQF 0.0 F.1 flag1331
    SELECTF flag1331 0.0 tmpf1331 VLV_HUE_115

    JR endif1327
  else1327_1:
    SUBF VLV_GNORM_115 VLV_BNORM_115 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_115 VLV_MIN_115 F.2
    DATAF tmpf1335
    DATA8 flag1335
    DIVF F.1 F.2 tmpf1335
    CP_EQF 0.0 F.2 flag1335
    SELECTF flag1335 0.0 tmpf1335 F.0

    ADDF F.0 360.0 VLV_HUE_115
  else1327_2:
  endif1327:
    JR endif1326
  else1326_2:
    JR_NEQF VLV_MAX_115 VLV_GNORM_115 else1326_3
    SUBF VLV_BNORM_115 VLV_RNORM_115 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_115 VLV_MIN_115 F.2
    DATAF tmpf1340
    DATA8 flag1340
    DIVF F.1 F.2 tmpf1340
    CP_EQF 0.0 F.2 flag1340
    SELECTF flag1340 0.0 tmpf1340 F.0

    ADDF F.0 120.0 VLV_HUE_115
    JR endif1326
  else1326_3:
    SUBF VLV_RNORM_115 VLV_GNORM_115 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_115 VLV_MIN_115 F.2
    DATAF tmpf1345
    DATA8 flag1345
    DIVF F.1 F.2 tmpf1345
    CP_EQF 0.0 F.2 flag1345
    SELECTF flag1345 0.0 tmpf1345 F.0

    ADDF F.0 240.0 VLV_HUE_115
  else1326_4:
  endif1326:
    JR_NEQF VLV_MAX_115 0.0 else1347_1
    MOVEF_F 0.0 VLV_SAT_115
    JR endif1347
  else1347_1:
    DATAF tmpf1348
    DATA8 flag1348
    DIVF VLV_MIN_115 VLV_MAX_115 tmpf1348
    CP_EQF 0.0 VLV_MAX_115 flag1348
    SELECTF flag1348 0.0 tmpf1348 F.0

    SUBF 1.0 F.0 VLV_SAT_115
  else1347_2:
  endif1347:
    MOVEF_F VLV_MAX_115 VLV_VALUE_115
    ADDF VLV_VALUEBLANCO_115 VLV_VALUENEGRO_115 F.0
    DATAF tmpf1351
    DATA8 flag1351
    DIVF F.0 2.0 tmpf1351
    CP_EQF 0.0 2.0 flag1351
    SELECTF flag1351 0.0 tmpf1351 VLV_RGBGREY_115

    ADDF VLV_RNORM_115 VLV_GNORM_115 F.1
    ADDF F.1 VLV_BNORM_115 F.0
    JR_GTF F.0 3.0 else1352_1
    MOVEF_F 0.0 VLV_COLOR_115
    JR endif1352
  else1352_1:
    JR_GTEQF VLV_SAT_115 0.4 else1355_1
    JR_LTEQF VLV_VALUE_115 VLV_RGBGREY_115 else1356_1
    MOVEF_F 6.0 VLV_COLOR_115
    JR endif1356
  else1356_1:
    MOVEF_F 1.0 VLV_COLOR_115
  else1356_2:
  endif1356:
    JR endif1355
  else1355_1:
    JR_LTF VLV_HUE_115 0.0 else1357_1
    JR_GTEQF VLV_HUE_115 VLV_RED_115 else1357_1
    MOVEF_F 5.0 VLV_COLOR_115
    JR endif1357
  else1357_1:
    JR_LTF VLV_HUE_115 VLV_RED_115 else1357_2
    JR_GTEQF VLV_HUE_115 VLV_YELLOW_115 else1357_2
    MOVEF_F 4.0 VLV_COLOR_115
    JR endif1357
  else1357_2:
    JR_LTF VLV_HUE_115 VLV_YELLOW_115 else1357_3
    JR_GTEQF VLV_HUE_115 VLV_GREEN_115 else1357_3
    MOVEF_F 3.0 VLV_COLOR_115
    JR endif1357
  else1357_3:
    JR_LTF VLV_HUE_115 VLV_GREEN_115 else1357_4
    JR_GTEQF VLV_HUE_115 VLV_BLUE_115 else1357_4
    MOVEF_F 2.0 VLV_COLOR_115
    JR endif1357
  else1357_4:
    MOVEF_F 5.0 VLV_COLOR_115
  else1357_5:
  endif1357:
  else1355_2:
  endif1355:
  else1352_2:
  endif1352:
    STRINGS VALUE_FORMATTED VLV_RRAW_115 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_115 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_115 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_115 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_115 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_115 VLV_COLOR_124
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1373:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_124 0.0 else1374_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1374
  else1374_1:
    JR_NEQF VLV_COLOR_124 1.0 else1374_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1374
  else1374_2:
    JR_NEQF VLV_COLOR_124 2.0 else1374_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1374
  else1374_3:
    JR_NEQF VLV_COLOR_124 3.0 else1374_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1374
  else1374_4:
    JR_NEQF VLV_COLOR_124 4.0 else1374_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1374
  else1374_5:
    JR_NEQF VLV_COLOR_124 5.0 else1374_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1374
  else1374_6:
    JR_NEQF VLV_COLOR_124 6.0 else1374_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1374
  else1374_7:
    JR_NEQF VLV_COLOR_124 7.0 else1374_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1374_8:
  endif1374:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_ABAJO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1383:
    MOVEF_F 40.0 VLV_V_107
    MOVEF_F -220.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1384:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -780.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1385:
    MOVEF_F -40.0 VLV_V_110
    MOVEF_F 350.0 VLV_T_110
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1386:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -300.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1387:
RETSUB_F_COGER_ABAJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_0:
SUB_F_COGER_ABAJO_BASURA_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1388:
    MOVEF_F 40.0 VLV_V_107
    MOVEF_F -200.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1389:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -780.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1390:
    MOVEF_F -40.0 VLV_V_110
    MOVEF_F 500.0 VLV_T_110
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1391:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -500.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1392:
RETSUB_F_COGER_ABAJO_BASURA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_BASURA_0:
SUB_F_COGER_ARRIBA_0:
    MOVEF_F -20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1393:
    MOVEF_F 10.0 VLV_V_97
    MOVEF_F -670.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1394:
    MOVEF_F 20.0 VLV_V_107
    MOVEF_F -230.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1395:
    MOVEF_F 10.0 VLV_V_97
    MOVEF_F -780.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1396:
    MOVEF_F 40.0 VLV_V_111
    MOVEF_F -250.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1397:
    MOVEF_F -40.0 VLV_V_110
    MOVEF_F 800.0 VLV_T_110
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1398:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -400.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1399:
RETSUB_F_COGER_ARRIBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ARRIBA_0:
SUB_F_SOLTAR_TODO_0:
    MOVEF_F 10.0 VLV_V_97
    MOVEF_F -750.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1400:
    MOVEF_F 40.0 VLV_V_111
    MOVEF_F -200.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1401:
    MOVEF_F 10.0 VLV_V_97
    MOVEF_F -500.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1402:
RETSUB_F_SOLTAR_TODO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_TODO_0:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
