pr_giro_g1 = 0
pr_rgb_valuenegro = 0
pr_rgb_valueblanco = 0
pr_rgb_rwhite = 0
pr_rgb_gwhite = 0
pr_rgb_bwhite = 0
pr_recto_diametro = 0
pr_giro_diametro = 0
pr_siguelineas_diametro = 0
pr_smart_diametro = 0
pr_siguelineas_negro1 = 0
pr_siguelineas_negro3 = 0
pr_siguelineas_negro4 = 0
pr_siguelineas_blanco1 = 0
pr_siguelineas_blanco3 = 0
pr_siguelineas_blanco4 = 0
pr_smart_negro1 = 0
pr_smart_negro3 = 0
pr_smart_negro4 = 0
pr_smart_blanco1 = 0
pr_smart_blanco3 = 0
pr_smart_blanco4 = 0
pr_recto_negro = 0
pr_recto_blanco = 0
pr_giro_negro = 0
pr_giro_blanco = 0
lv_velocidad_9 = 0
lv_timer_9 = 0
lv_velocidad_10 = 0
lv_encoder_10 = 0
lv_velocidad_11 = 0
lv_distancia_11 = 0
lv_velocidad_18 = 0
lv_encoder_18 = 0
lv_velocidad1_25 = 0
lv_velocidad2_25 = 0
lv_grados_25 = 0
lv_velocidad1_26 = 0
lv_velocidad2_26 = 0
lv_distancia_26 = 0
lv_velocidad_12 = 0
lv_sensor_12 = 0
lv_velocidad_19 = 0
lv_velocidad_20 = 0
lv_encoder_20 = 0
lv_velocidad_13 = 0
lv_distancia_13 = 0
lv_sens_30 = 0
lv_reps_30 = 0
lv_color_30 = 0
lv_velocidad_14 = 0
lv_tiempo_14 = 0
lv_velocidad1_27 = 0
lv_velocidad2_27 = 0
lv_sens_27 = 0
lv_velocidad_21 = 0
lv_encoder_21 = 0
lv_velocidad1_28 = 0
lv_velocidad2_28 = 0
lv_sens_28 = 0
lv_velocidad_22 = 0
lv_reader_22 = 0
lv_velocidad1_29 = 0
lv_velocidad2_29 = 0
lv_distancia_29 = 0
lv_velocidad_15 = 0
lv_sensor_15 = 0
lv_velocidad_23 = 0
lv_reader_23 = 0
lv_marking_6 [ 0 ] = 0
lv_velocidad_16 = 0
lv_sensor_16 = 0
lv_velocidad_17 = 0
lv_sensor_17 = 0
lv_velocidad_24 = 0
lv_encoder_24 = 0
lv_color_31 = 0
lv_numero_2 = 0
lv_marking_4 [ 0 ] = 0
lv_codigo_4 = ""
lv_grados_5 = 0
gv_markinggrande = 0
lv_codigo_6 = ""
gv_diametro = 0
gv_negro1 = 0
gv_negro3 = 0
gv_negro4 = 0
gv_blanco1 = 0
gv_blanco3 = 0
gv_blanco4 = 0
gv_color = 0
gv_marking [ 0 ] = 0
f_setup_0 ()
f_main_0 ()
Sub f_setup_0
Sensor.SetMode ( 1 , 0 )
Sensor.SetMode ( 2 , 4 )
Sensor.SetMode ( 3 , 0 )
Sensor.SetMode ( 4 , 0 )
gv_diametro = 6.24
pr_giro_g1 = 965 / 360
gv_negro1 = 10
gv_negro3 = 9
gv_negro4 = 8
gv_blanco1 = 65
gv_blanco3 = 59
gv_blanco4 = 55
pr_rgb_valuenegro = 4
pr_rgb_valueblanco = 32
pr_rgb_rwhite = 57
pr_rgb_gwhite = 71
pr_rgb_bwhite = 73
pr_recto_diametro = gv_diametro
pr_giro_diametro = gv_diametro
pr_siguelineas_diametro = gv_diametro
pr_smart_diametro = gv_diametro
pr_siguelineas_negro1 = gv_negro1
pr_siguelineas_negro3 = gv_negro3
pr_siguelineas_negro4 = gv_negro4
pr_siguelineas_blanco1 = gv_blanco1
pr_siguelineas_blanco3 = gv_blanco3
pr_siguelineas_blanco4 = gv_blanco4
pr_smart_negro1 = gv_negro1
pr_smart_negro3 = gv_negro3
pr_smart_negro4 = gv_negro4
pr_smart_blanco1 = gv_blanco1
pr_smart_blanco3 = gv_blanco3
pr_smart_blanco4 = gv_blanco4
pr_recto_negro = ( gv_negro1 + gv_negro3 + gv_negro4 ) / 3
pr_recto_blanco = ( gv_blanco1 + gv_blanco3 + gv_blanco4 ) / 3
pr_giro_negro = ( gv_negro1 + gv_negro3 + gv_negro4 ) / 3
pr_giro_blanco = ( gv_blanco1 + gv_blanco3 + gv_blanco4 ) / 3
gv_color = 0
EndSub
Sub f_startarm_0
lv_velocidad_9 = 100
lv_timer_9 = 1000
m_brazo_atimer_2 ()
MotorA.ResetCount ()
Program.Delay ( 100 )
lv_velocidad_10 = 35
lv_encoder_10 = - 200
m_brazo_aencoder_2 ()
MotorA.ResetCount ()
Speaker.Play ( 100 , "WRO2025/Media/Connect" )
Speaker.Wait ()
EndSub
Sub f_main_0
f_gritarvoltaje_0 ()
f_startarm_0 ()
Speaker.Play ( 100 , "WRO2025/Media/One" )
f_s_0 ()
Program.Delay ( 150 )
lv_velocidad_10 = 35
lv_encoder_10 = - 300
m_brazo_aencoder_2 ()
lv_velocidad_11 = 50
lv_distancia_11 = 5
m_recto_encoderf_2 ()
lv_velocidad_18 = 50
lv_encoder_18 = 23
m_siguelineas_encoder14_2 ()
lv_velocidad1_25 = 10
lv_velocidad2_25 = 45
lv_grados_25 = 74
m_giro_grados_3 ()
lv_velocidad1_25 = 22.5
lv_velocidad2_25 = 5
lv_grados_25 = 82
m_giro_grados_3 ()
lv_velocidad1_26 = 50
lv_velocidad2_26 = 49
lv_distancia_26 = 44
m_giro_encoder_3 ()
lv_velocidad_12 = 50
lv_sensor_12 = 4
m_recto_negro1_2 ()
lv_velocidad1_25 = 50
lv_velocidad2_25 = - 17
lv_grados_25 = 94
m_giro_grados_3 ()
lv_velocidad_19 = 40
m_siguelineas_cruce14_1 ()
lv_velocidad1_25 = 70
lv_velocidad2_25 = - 62
lv_grados_25 = 185
m_giro_grados_3 ()
lv_velocidad_20 = 30
lv_encoder_20 = 40
m_siguelineas_encoder31f_2 ()
lv_velocidad_13 = 30
lv_distancia_13 = 9
m_recto_encoder_2 ()
lv_velocidad1_25 = - 30
lv_velocidad2_25 = 30
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_13 = 20
lv_distancia_13 = 13
m_recto_encoder_2 ()
lv_velocidad1_25 = 20
lv_velocidad2_25 = - 20
lv_grados_25 = 90
m_giro_grados_3 ()
Program.Delay ( 100 )
lv_velocidad_13 = - 40
lv_distancia_13 = 2
m_recto_encoder_2 ()
lv_sens_30 = 2
lv_reps_30 = 5
m_rgb_detect_3 ()
gv_markinggrande = lv_color_30
gv_color = gv_markinggrande
Thread.run = f_gritarcolor_0
gv_marking [ 0 ] = 0
lv_velocidad1_25 = 40
lv_velocidad2_25 = 9
lv_grados_25 = 45
m_giro_grados_3 ()
lv_velocidad1_25 = 9
lv_velocidad2_25 = 40
lv_grados_25 = 36
m_giro_grados_3 ()
lv_velocidad1_26 = 21
lv_velocidad2_26 = 20
lv_distancia_26 = 15
m_giro_encoder_3 ()
lv_sens_30 = 2
lv_reps_30 = 5
m_rgb_detect_3 ()
gv_marking [ 1 ] = lv_color_30
gv_color = gv_marking [ 1 ]
Thread.run = f_gritarcolor_0
lv_velocidad_13 = - 30
lv_distancia_13 = 5.8
m_recto_encoder_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 30
lv_grados_25 = 98
m_giro_grados_3 ()
lv_velocidad_13 = 30
lv_distancia_13 = 8
m_recto_encoder_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 30
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_14 = - 20
lv_tiempo_14 = 500
m_recto_tiempo_2 ()
lv_sens_30 = 2
lv_reps_30 = 5
m_rgb_detect_3 ()
gv_marking [ 2 ] = lv_color_30
gv_color = gv_marking [ 2 ]
Thread.run = f_gritarcolor_0
lv_velocidad_13 = 20
lv_distancia_13 = 8
m_recto_encoder_2 ()
lv_sens_30 = 2
lv_reps_30 = 5
m_rgb_detect_3 ()
gv_marking [ 3 ] = lv_color_30
gv_color = gv_marking [ 3 ]
Thread.run = f_gritarcolor_0
gv_marking [ 0 ] = 14 - ( gv_marking [ 1 ] + gv_marking [ 2 ] + gv_marking [ 3 ] )
lv_velocidad1_27 = 50
lv_velocidad2_27 = 43
lv_sens_27 = 1
m_giro_negro1f_3 ()
lv_velocidad1_27 = 5
lv_velocidad2_27 = 25
lv_sens_27 = 4
m_giro_negro1f_3 ()
lv_velocidad_21 = 20
lv_encoder_21 = 3
m_siguelineas_encoder14f_2 ()
lv_velocidad_19 = 60
m_siguelineas_cruce14_1 ()
lv_velocidad1_25 = - 25
lv_velocidad2_25 = 30
lv_grados_25 = 86
m_giro_grados_3 ()
MotorBC.OffAndBrake ()
Program.Delay ( 100 )
lv_velocidad_18 = 30
lv_encoder_18 = 22
m_siguelineas_encoder14_2 ()
lv_velocidad1_25 = 60
lv_velocidad2_25 = - 40
lv_grados_25 = 89
m_giro_grados_3 ()
lv_velocidad_11 = - 50
lv_distancia_11 = 35
m_recto_encoderf_2 ()
lv_velocidad_13 = - 30
lv_distancia_13 = 5
m_recto_encoder_2 ()
lv_velocidad_10 = 20
lv_encoder_10 = 40
m_brazo_aencoder_2 ()
Program.Delay ( 200 )
lv_velocidad_11 = 30
lv_distancia_11 = 17
m_recto_encoderf_2 ()
lv_velocidad_14 = 10
lv_tiempo_14 = 400
m_recto_tiempo_2 ()
lv_velocidad_13 = - 20
lv_distancia_13 = 3
m_recto_encoder_2 ()
lv_velocidad_10 = 20
lv_encoder_10 = - 310
m_brazo_aencoder_2 ()
lv_velocidad1_26 = 30
lv_velocidad2_26 = 20
lv_distancia_26 = 13
m_giro_encoder_3 ()
lv_velocidad1_26 = 20
lv_velocidad2_26 = 30
lv_distancia_26 = 13
m_giro_encoder_3 ()
lv_velocidad_12 = 20
lv_sensor_12 = 1
m_recto_negro1_2 ()
lv_velocidad1_25 = - 8
lv_velocidad2_25 = 20
lv_grados_25 = 85
m_giro_grados_3 ()
lv_velocidad1_28 = - 20
lv_velocidad2_28 = 20
lv_sens_28 = 4
m_giro_negro1_3 ()
lv_velocidad1_25 = 20
lv_velocidad2_25 = 0
lv_grados_25 = 10
m_giro_grados_3 ()
lv_velocidad_18 = 15
lv_encoder_18 = 10
m_siguelineas_encoder14_2 ()
lv_velocidad_22 = 15
lv_reader_22 = 3
m_siguelineas_cruce_externo_2 ()
Program.Delay ( 300 )
lv_velocidad1_26 = 30
lv_velocidad2_26 = 26
lv_distancia_26 = 12
m_giro_encoder_3 ()
lv_velocidad1_26 = 27
lv_velocidad2_26 = 30
lv_distancia_26 = 11
m_giro_encoder_3 ()
lv_velocidad_13 = 12
lv_distancia_13 = 5
m_recto_encoder_2 ()
lv_velocidad_13 = - 10
lv_distancia_13 = 6
m_recto_encoder_2 ()
f_bajarcuadro_0 ()
Program.Delay ( 400 )
lv_velocidad_13 = - 25
lv_distancia_13 = 17.5
m_recto_encoder_2 ()
lv_velocidad1_25 = - 20
lv_velocidad2_25 = 20
lv_grados_25 = 95
m_giro_grados_3 ()
lv_velocidad_18 = 35
lv_encoder_18 = 30
m_siguelineas_encoder14_2 ()
lv_velocidad_13 = 40
lv_distancia_13 = 13
m_recto_encoder_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = 0
lv_grados_25 = 144
m_giro_grados_3 ()
lv_velocidad_13 = 20
lv_distancia_13 = 2.5
m_recto_encoder_2 ()
lv_velocidad_10 = 35
lv_encoder_10 = - 330
m_brazo_aencoder_2 ()
lv_velocidad_13 = - 25
lv_distancia_13 = 6.5
m_recto_encoder_2 ()
f_bajarcuadro_0 ()
Program.Delay ( 400 )
lv_velocidad1_25 = - 40
lv_velocidad2_25 = 20
lv_grados_25 = 80
m_giro_grados_3 ()
lv_velocidad_13 = 40
lv_distancia_13 = 9
m_recto_encoder_2 ()
lv_velocidad_10 = 40
lv_encoder_10 = - 330
m_brazo_aencoder_2 ()
lv_velocidad1_25 = 35
lv_velocidad2_25 = - 35
lv_grados_25 = 168
m_giro_grados_3 ()
lv_velocidad1_29 = 63
lv_velocidad2_29 = 70
lv_distancia_29 = 65.5
m_giro_encoderf_3 ()
lv_velocidad1_29 = 60 * 0.5
lv_velocidad2_29 = 70 * 0.5
lv_distancia_29 = 3.5
m_giro_encoderf_3 ()
lv_velocidad_15 = 30
lv_sensor_15 = 4
m_recto_blanco1_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 31
lv_grados_25 = 85
m_giro_grados_3 ()
lv_velocidad_20 = 30
lv_encoder_20 = 10
m_siguelineas_encoder31f_2 ()
lv_velocidad_23 = 40
lv_reader_23 = 4
m_siguelineas_cruce_externof_2 ()
lv_velocidad_20 = 80
lv_encoder_20 = 80
m_siguelineas_encoder31f_2 ()
lv_velocidad_20 = 30
lv_encoder_20 = 15
m_siguelineas_encoder31f_2 ()
lv_velocidad_13 = 20
lv_distancia_13 = 20
m_recto_encoder_2 ()
lv_velocidad1_25 = 15
lv_velocidad2_25 = - 15
lv_grados_25 = 92
m_giro_grados_3 ()
lv_velocidad_13 = 20
lv_distancia_13 = 8
m_recto_encoder_2 ()
lv_velocidad_10 = 30
lv_encoder_10 = - 740
m_brazo_aencoder_2 ()
If gv_markinggrande = 5 Then
Motor.Move ( "D" , - 60 , 90 , "true" )
Else
Motor.Move ( "D" , 60 , ( gv_markinggrande - 2 ) * 90 , "true" )
EndIf
lv_velocidad_13 = 80
lv_distancia_13 = 28
m_recto_encoder_2 ()
lv_velocidad_15 = 40
lv_sensor_15 = 1
m_recto_blanco1_2 ()
lv_velocidad_13 = - 20
lv_distancia_13 = 1
m_recto_encoder_2 ()
Motor.Stop ( "BC" , "True" )
Program.Delay ( 150 )
lv_velocidad1_25 = 15
lv_velocidad2_25 = - 15
lv_grados_25 = 97
m_giro_grados_3 ()
lv_velocidad_13 = 80
lv_distancia_13 = 56
m_recto_encoder_2 ()
lv_velocidad_10 = 40
lv_encoder_10 = - 500
m_brazo_aencoder_2 ()
If gv_markinggrande = 5 or gv_markinggrande = 3 Then
Motor.Move ( "D" , 60 , - 90 , "true" )
EndIf
lv_velocidad_10 = 40
lv_encoder_10 = - 300
m_brazo_aencoder_2 ()
lv_velocidad_13 = - 10
lv_distancia_13 = 10
m_recto_encoder_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 30
lv_grados_25 = 180
m_giro_grados_3 ()
lv_velocidad1_26 = 30
lv_velocidad2_26 = 17
lv_distancia_26 = 23
m_giro_encoder_3 ()
lv_velocidad1_26 = 17
lv_velocidad2_26 = 30
lv_distancia_26 = 20
m_giro_encoder_3 ()
lv_velocidad_13 = - 50
lv_distancia_13 = 17
m_recto_encoder_2 ()
lv_velocidad1_25 = - 30
lv_velocidad2_25 = 30
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_14 = - 30
lv_tiempo_14 = 500
m_recto_tiempo_2 ()
lv_velocidad_11 = 30
lv_distancia_11 = 1
m_recto_encoderf_2 ()
lv_velocidad_9 = 100
lv_timer_9 = 600
m_brazo_atimer_2 ()
lv_velocidad_10 = 100
lv_encoder_10 = - 300
m_brazo_aencoder_2 ()
lv_velocidad1_25 = 35
lv_velocidad2_25 = - 3
lv_grados_25 = 95
m_giro_grados_3 ()
lv_velocidad_23 = 20
lv_reader_23 = 4
m_siguelineas_cruce_externof_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 14
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_20 = 10
lv_encoder_20 = 6
m_siguelineas_encoder31f_2 ()
lv_velocidad1_26 = 13 * 0.75
lv_velocidad2_26 = 30 * 0.75
lv_distancia_26 = 6.5
m_giro_encoder_3 ()
lv_velocidad1_26 = 30 * 0.75
lv_velocidad2_26 = 13 * 0.75
lv_distancia_26 = 6.5
m_giro_encoder_3 ()
lv_velocidad_13 = - 20
lv_distancia_13 = 6
m_recto_encoder_2 ()
Program.Delay ( 200 )
lv_marking_6 = gv_marking
f_ordenarbloques_1 ()
lv_velocidad_13 = 30
lv_distancia_13 = 10
m_recto_encoder_2 ()
lv_velocidad_22 = 30
lv_reader_22 = 3
m_siguelineas_cruce_externo_2 ()
lv_velocidad1_25 = - 14
lv_velocidad2_25 = 30
lv_grados_25 = 95
m_giro_grados_3 ()
lv_velocidad_18 = 35
lv_encoder_18 = 20
m_siguelineas_encoder14_2 ()
lv_velocidad1_26 = 35
lv_velocidad2_26 = 34
lv_distancia_26 = 44
m_giro_encoder_3 ()
lv_velocidad1_25 = 10
lv_velocidad2_25 = - 10
lv_grados_25 = 105
m_giro_grados_3 ()
lv_velocidad_14 = - 60
lv_tiempo_14 = 1000
m_recto_tiempo_2 ()
lv_velocidad_13 = 20
lv_distancia_13 = 3.5
m_recto_encoder_2 ()
lv_velocidad1_25 = 20
lv_velocidad2_25 = - 20
lv_grados_25 = 105
m_giro_grados_3 ()
lv_velocidad_14 = 35
lv_tiempo_14 = 700
m_recto_tiempo_2 ()
lv_velocidad_10 = 50
lv_encoder_10 = - 330
m_brazo_aencoder_2 ()
lv_velocidad_13 = - 15
lv_distancia_13 = 9
m_recto_encoder_2 ()
lv_velocidad_13 = 15
lv_distancia_13 = 8
m_recto_encoder_2 ()
lv_velocidad_10 = 30
lv_encoder_10 = 0
m_brazo_aencoder_2 ()
lv_velocidad_13 = - 15
lv_distancia_13 = 9
m_recto_encoder_2 ()
lv_velocidad_13 = 15
lv_distancia_13 = 17
m_recto_encoder_2 ()
lv_velocidad_13 = - 15
lv_distancia_13 = 5
m_recto_encoder_2 ()
lv_velocidad1_25 = - 15
lv_velocidad2_25 = 15
lv_grados_25 = 85
m_giro_grados_3 ()
lv_velocidad_14 = - 30
lv_tiempo_14 = 500
m_recto_tiempo_2 ()
lv_velocidad_13 = 15
lv_distancia_13 = 12
m_recto_encoder_2 ()
lv_velocidad1_25 = - 10
lv_velocidad2_25 = 10
lv_grados_25 = 9
m_giro_grados_3 ()
lv_velocidad_10 = 30
lv_encoder_10 = - 200
m_brazo_aencoder_2 ()
lv_velocidad_13 = 10
lv_distancia_13 = 5
m_recto_encoder_2 ()
lv_velocidad_13 = - 10
lv_distancia_13 = 5
m_recto_encoder_2 ()
lv_velocidad_10 = 50
lv_encoder_10 = 0
m_brazo_aencoder_2 ()
lv_velocidad1_25 = 10
lv_velocidad2_25 = - 10
lv_grados_25 = 15
m_giro_grados_3 ()
lv_velocidad_11 = 100
lv_distancia_11 = 60
m_recto_encoderf_2 ()
lv_velocidad_16 = 40
lv_sensor_16 = 1
m_recto_blanco1f_2 ()
lv_velocidad_17 = 20
lv_sensor_17 = 1
m_recto_negro1f_2 ()
lv_velocidad1_25 = - 18
lv_velocidad2_25 = 30
lv_grados_25 = 93
m_giro_grados_3 ()
lv_velocidad_21 = 40
lv_encoder_21 = 10
m_siguelineas_encoder14f_2 ()
lv_velocidad_21 = 80
lv_encoder_21 = 70
m_siguelineas_encoder14f_2 ()
lv_velocidad_22 = 40
lv_reader_22 = 3
m_siguelineas_cruce_externo_2 ()
lv_velocidad_13 = 20
lv_distancia_13 = 2
m_recto_encoder_2 ()
lv_velocidad1_25 = - 16
lv_velocidad2_25 = 30
lv_grados_25 = 93
m_giro_grados_3 ()
lv_velocidad_24 = 50
lv_encoder_24 = 40
m_siguelineas_encoder31_2 ()
lv_velocidad_13 = 50
lv_distancia_13 = 30
m_recto_encoder_2 ()
lv_velocidad_14 = 40
lv_tiempo_14 = 1000
m_recto_tiempo_2 ()
lv_velocidad1_25 = 8
lv_velocidad2_25 = - 32
lv_grados_25 = 94
m_giro_grados_3 ()
lv_velocidad_10 = 30
lv_encoder_10 = - 300
m_brazo_aencoder_2 ()
lv_velocidad_13 = 30
lv_distancia_13 = 20
m_recto_encoder_2 ()
lv_velocidad_10 = 30
lv_encoder_10 = 0
m_brazo_aencoder_2 ()
lv_velocidad_13 = - 30
lv_distancia_13 = 13.2
m_recto_encoder_2 ()
EndSub
Sub f_gritarcolor_0
lv_color_31 = gv_color
m_rgb_gritar_1 ()
EndSub
Sub f_gritarvoltaje_0
lv_voltaje_1 = EV3.BatteryVoltage
lv_numero_2 = Math.Floor ( lv_voltaje_1 )
f_gritarnumero_1 ()
lv_numero_2 = Math.Floor ( lv_voltaje_1 * 10 ) - Math.Floor ( lv_voltaje_1 ) * 10
f_gritarnumero_1 ()
lv_numero_2 = Math.Floor ( lv_voltaje_1 * 100 ) - Math.Floor ( lv_voltaje_1 * 10 ) * 10
f_gritarnumero_1 ()
EndSub
Sub f_gritarnumero_1
If lv_numero_2 = 0 Then
Speaker.Play ( 100 , "WRO2025/Media/ZERO" )
ElseIf lv_numero_2 = 1 Then
Speaker.Play ( 100 , "WRO2025/Media/One" )
ElseIf lv_numero_2 = 2 Then
Speaker.Play ( 100 , "WRO2025/Media/Two" )
ElseIf lv_numero_2 = 3 Then
Speaker.Play ( 100 , "WRO2025/Media/Three" )
ElseIf lv_numero_2 = 4 Then
Speaker.Play ( 100 , "WRO2025/Media/Four" )
ElseIf lv_numero_2 = 5 Then
Speaker.Play ( 100 , "WRO2025/Media/Five" )
ElseIf lv_numero_2 = 6 Then
Speaker.Play ( 100 , "WRO2025/Media/Six" )
ElseIf lv_numero_2 = 7 Then
Speaker.Play ( 100 , "WRO2025/Media/Seven" )
ElseIf lv_numero_2 = 8 Then
Speaker.Play ( 100 , "WRO2025/Media/Eight" )
ElseIf lv_numero_2 = 9 Then
Speaker.Play ( 100 , "WRO2025/Media/Nine" )
ElseIf lv_numero_2 = 10 Then
Speaker.Play ( 100 , "WRO2025/Media/Ten" )
EndIf
Speaker.Wait ()
EndSub
Sub f_bajarcuadro_0
lv_velocidad_10 = 30
lv_encoder_10 = - 780
m_brazo_aencoder_2 ()
EndSub
Sub f_codigo_2
lv_codigo_4 = ""
lv_aux_4 = lv_marking_4 [ 2 ]
lv_marking_4 [ 2 ] = lv_marking_4 [ 3 ]
lv_marking_4 [ 3 ] = lv_aux_4
For lv_i_4 = 0 To 4
If lv_marking_4 [ lv_i_4 ] = 2 Then
lv_codigo_4 = lv_codigo_4 + "Z"
ElseIf lv_marking_4 [ lv_i_4 ] = 3 Then
lv_codigo_4 = lv_codigo_4 + "V"
ElseIf lv_marking_4 [ lv_i_4 ] = 4 Then
lv_codigo_4 = lv_codigo_4 + "A"
ElseIf lv_marking_4 [ lv_i_4 ] = 5 Then
lv_codigo_4 = lv_codigo_4 + "R"
EndIf
EndFor
LCD.StopUpdate ()
LCD.Clear ()
LCD.Write ( 5 , 5 , "Codigo: " + lv_codigo_4 )
LCD.Update ()
EndSub
Sub f_rotar_1
lv_signo_5 = lv_grados_5 / Math.Abs ( lv_grados_5 )
f_bajarcuadro_0 ()
Program.Delay ( 100 )
Motor.Move ( "D" , 34 * lv_signo_5 , Math.Abs ( lv_grados_5 ) - 8 , "True" )
Program.Delay ( 200 )
lv_velocidad_10 = 30
lv_encoder_10 = - 360
m_brazo_aencoder_2 ()
EndSub
Sub f_ordenarbloques_1
lv_marking_4 = lv_marking_6
f_codigo_2 ()
lv_codigo_6 = lv_codigo_4
If lv_codigo_6 = "VRZA" Then
ElseIf lv_codigo_6 = "VRAZ" Then
f_swap_0 ()
ElseIf lv_codigo_6 = "VZRA" Then
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "VZAR" Then
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "VARZ" Then
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "VAZR" Then
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "RVZA" Then
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
ElseIf lv_codigo_6 = "RVAZ" Then
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "RZVA" Then
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "RZAV" Then
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "RAVZ" Then
lv_grados_5 = 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "RAZV" Then
lv_grados_5 = 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "ZVAR" Then
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "ZVRA" Then
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "ZRVA" Then
lv_grados_5 = 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "ZRAV" Then
lv_grados_5 = 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "ZAVR" Then
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "ZARV" Then
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
ElseIf lv_codigo_6 = "AVRZ" Then
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "AVZR" Then
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "ARVZ" Then
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
ElseIf lv_codigo_6 = "ARZV" Then
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "AZVR" Then
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
Else
lv_grados_5 = 180
f_rotar_1 ()
EndIf
lv_velocidad_13 = - 20
lv_distancia_13 = 8
m_recto_encoder_2 ()
lv_velocidad1_25 = 15
lv_velocidad2_25 = - 15
lv_grados_25 = 182
m_giro_grados_3 ()
lv_velocidad_13 = - 30
lv_distancia_13 = 23
m_recto_encoder_2 ()
lv_velocidad_10 = 20
lv_encoder_10 = 24
m_brazo_aencoder_2 ()
EndSub
Sub f_swap_0
lv_velocidad_13 = - 15
lv_distancia_13 = 5
m_recto_encoder_2 ()
f_bajarcuadro_0 ()
lv_velocidad_13 = - 15
lv_distancia_13 = 10
m_recto_encoder_2 ()
Motor.Move ( "D" , 50 , 180 , "True" )
lv_velocidad_10 = 30
lv_encoder_10 = - 360
m_brazo_aencoder_2 ()
lv_velocidad_13 = 15
lv_distancia_13 = 21
m_recto_encoder_2 ()
lv_velocidad_13 = - 15
lv_distancia_13 = 5
m_recto_encoder_2 ()
EndSub
Sub f_s_0
Buttons.Flush ()
Buttons.Wait ()
EndSub
Sub m_brazo_atimer_2
Time.Reset1 ()
While Time.Get1 () < lv_timer_9
MotorA.StartSpeed ( lv_velocidad_9 )
EndWhile
Motor.Stop ( "A" , "True" )
EndSub
Sub m_brazo_aencoder_2
lv_encdiff_10 = lv_encoder_10 - Motor.GetCount ( "A" )
lv_signo_10 = lv_encdiff_10 / Math.Abs ( lv_encdiff_10 )
lv_safetytimer_10 = Math.abs ( lv_encdiff_10 ) / 300 / ( Math.Abs ( lv_velocidad_10 ) / 30 ) * 750 + 150
Time.Reset3 ()
If lv_encdiff_10 <> 0 Then
While Math.Abs ( Motor.GetCount ( "A" ) - lv_encoder_10 ) > 35 and Time.Get3 () < lv_safetytimer_10
MotorA.StartSpeed ( lv_signo_10 * lv_velocidad_10 )
EndWhile
Motor.Stop ( "A" , "True" )
EndIf
EndSub
Sub m_recto_encoderf_2
lv_safetytimer_11 = 11286 / ( lv_velocidad_11 / 10 ) * ( lv_distancia_11 / 100 ) / ( pr_recto_diametro / 6.24 )
lv_correccion_11 = ( Math.abs ( lv_velocidad_11 ) - 20 ) * 0.05
lv_enc_11 = ( lv_distancia_11 - lv_correccion_11 ) * 360 / Math.Pi / pr_recto_diametro
MotorB.ResetCount ()
MotorC.ResetCount ()
MotorBC.Off ()
Program.Delay ( 100 )
Time.Reset4 ()
While Math.Abs ( MotorC.GetTacho () ) < lv_enc_11 And Time.Get4 () < lv_safetytimer_11 + 2000
Motor.StartSync ( "BC" , - lv_velocidad_11 , lv_velocidad_11 )
EndWhile
If Time.Get4 () > lv_safetytimer_11 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.Off ()
EndSub
Sub m_recto_negro1_2
lv_correccion_12 = 0
MotorBC.Off ()
lv_lectura_12 = 50
While lv_lectura_12 > 15
lv_lectura_12 = ( Sensor.ReadPercent ( lv_sensor_12 ) - pr_recto_negro ) / pr_recto_blanco * ( 100 - pr_recto_negro )
Motor.StartSync ( "BC" , - lv_velocidad_12 + lv_correccion_12 , lv_velocidad_12 + lv_correccion_12 )
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_recto_encoder_2
lv_safetytimer_13 = 11286 / ( lv_velocidad_13 / 10 ) * ( lv_distancia_13 / 100 ) / ( pr_recto_diametro / 6.24 )
lv_correccion_13 = ( Math.abs ( lv_velocidad_13 ) - 20 ) * 0.05
lv_enc_13 = ( lv_distancia_13 - lv_correccion_13 ) * 360 / Math.Pi / pr_recto_diametro
MotorB.ResetCount ()
MotorC.ResetCount ()
MotorBC.Off ()
Program.Delay ( 100 )
Time.Reset4 ()
While Math.Abs ( MotorC.GetTacho () ) < lv_enc_13 And Time.Get4 () < lv_safetytimer_13 + 2000
Motor.StartSync ( "BC" , - lv_velocidad_13 , lv_velocidad_13 )
EndWhile
If Time.Get4 () > lv_safetytimer_13 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.OffAndBrake ()
EndSub
Sub m_recto_tiempo_2
lv_correccion_14 = 0
Time.Reset3 ()
MotorBC.Off ()
While Time.Get3 () < lv_tiempo_14
Motor.StartSync ( "BC" , - lv_velocidad_14 + lv_correccion_14 , lv_velocidad_14 + lv_correccion_14 )
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_recto_blanco1_2
lv_correccion_15 = 0
MotorBC.Off ()
lv_lectura_15 = 50
While lv_lectura_15 < 60
lv_lectura_15 = ( Sensor.ReadPercent ( lv_sensor_15 ) - pr_recto_negro ) / pr_recto_blanco * ( 100 - pr_recto_negro )
Motor.StartSync ( "BC" , - lv_velocidad_15 + lv_correccion_15 , lv_velocidad_15 + lv_correccion_15 )
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_recto_blanco1f_2
lv_correccion_16 = 0
MotorBC.Off ()
lv_lectura_16 = 50
While lv_lectura_16 < 60
lv_lectura_16 = ( Sensor.ReadPercent ( lv_sensor_16 ) - pr_recto_negro ) / pr_recto_blanco * ( 100 - pr_recto_negro )
Motor.StartSync ( "BC" , - lv_velocidad_16 + lv_correccion_16 , lv_velocidad_16 + lv_correccion_16 )
EndWhile
MotorBC.Off ()
EndSub
Sub m_recto_negro1f_2
lv_correccion_17 = 0
MotorBC.Off ()
lv_lectura_17 = 50
While lv_lectura_17 > 15
lv_lectura_17 = ( Sensor.ReadPercent ( lv_sensor_17 ) - pr_recto_negro ) / pr_recto_blanco * ( 100 - pr_recto_negro )
Motor.StartSync ( "BC" , - lv_velocidad_17 + lv_correccion_17 , lv_velocidad_17 + lv_correccion_17 )
EndWhile
MotorBC.Off ()
EndSub
Sub m_siguelineas_encoder14_2
lv_velocidad_18 = lv_velocidad_18 * 1
lv_lectura1_18 = 50
lv_lectura3_18 = 50
lv_lectura4_18 = 50
lv_kp_18 = Math.Power ( lv_velocidad_18 , 5 / 6 ) / 440
lv_kd_18 = lv_kp_18 * 70
lv_error_18 = 0
lv_olderror_18 = 0
lv_u_18 = 0
lv_sentido_18 = lv_velocidad_18 / Math.Abs ( lv_velocidad_18 )
lv_encoder_18 = lv_encoder_18 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_18 = MotorC.GetTacho ()
lv_encoderc_18 = 0
lv_safetytimer_18 = 11286 / ( lv_velocidad_18 / 10 ) * ( lv_encoder_18 / 100 ) / ( pr_siguelineas_diametro / 6.24 )
Time.Reset4 ()
While Math.Abs ( lv_encoderc_18 ) < lv_encoder_18 And Time.Get4 () < lv_safetytimer_18 + 2000
lv_encoderc_18 = MotorC.GetTacho () - lv_startc_18
lv_lectura1_18 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura4_18 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_18 = ( lv_lectura1_18 - lv_lectura4_18 ) * lv_sentido_18 * 1
lv_u_18 = lv_error_18 * lv_kp_18 + ( lv_error_18 - lv_olderror_18 ) * lv_kd_18
Motor.StartSync ( "BC" , - ( lv_velocidad_18 + lv_u_18 ) , lv_velocidad_18 - lv_u_18 )
lv_olderror_18 = lv_error_18
EndWhile
If Time.Get4 () > lv_safetytimer_18 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.OffAndBrake ()
EndSub
Sub m_siguelineas_cruce14_1
lv_velocidad_19 = lv_velocidad_19 * 1
lv_lectura1_19 = 50
lv_lectura3_19 = 50
lv_lectura4_19 = 50
lv_kp_19 = Math.Power ( lv_velocidad_19 , 5 / 6 ) / 440
lv_kd_19 = lv_kp_19 * 70
lv_error_19 = 0
lv_olderror_19 = 0
lv_u_19 = 0
lv_sentido_19 = lv_velocidad_19 / Math.Abs ( lv_velocidad_19 )
While lv_lectura1_19 > 10 Or lv_lectura4_19 > 10
lv_lectura1_19 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura4_19 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_19 = ( lv_lectura1_19 - lv_lectura4_19 ) * lv_sentido_19 * 1
lv_u_19 = lv_error_19 * lv_kp_19 + ( lv_error_19 - lv_olderror_19 ) * lv_kd_19
Motor.StartSync ( "BC" , - ( lv_velocidad_19 + lv_u_19 ) , lv_velocidad_19 - lv_u_19 )
lv_olderror_19 = lv_error_19
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_siguelineas_encoder31f_2
lv_velocidad_20 = lv_velocidad_20 * 1
lv_lectura1_20 = 50
lv_lectura3_20 = 50
lv_lectura4_20 = 50
lv_kp_20 = Math.Power ( lv_velocidad_20 , 5 / 6 ) / 440
lv_kd_20 = lv_kp_20 * 70
lv_error_20 = 0
lv_olderror_20 = 0
lv_u_20 = 0
lv_sentido_20 = lv_velocidad_20 / Math.Abs ( lv_velocidad_20 )
lv_encoder_20 = lv_encoder_20 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_20 = MotorC.GetTacho ()
lv_encoderc_20 = 0
lv_safetytimer_20 = 11286 / ( lv_velocidad_20 / 10 ) * ( lv_encoder_20 / 100 ) / ( pr_siguelineas_diametro / 6.24 )
Time.Reset4 ()
While Math.Abs ( lv_encoderc_20 ) < lv_encoder_20 And Time.Get4 () < lv_safetytimer_20 + 2000
lv_encoderc_20 = MotorC.GetTacho () - lv_startc_20
lv_lectura1_20 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_20 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_error_20 = ( lv_lectura3_20 - lv_lectura1_20 ) * lv_sentido_20 * 1
lv_u_20 = lv_error_20 * lv_kp_20 + ( lv_error_20 - lv_olderror_20 ) * lv_kd_20
Motor.StartSync ( "BC" , - ( lv_velocidad_20 + lv_u_20 ) , lv_velocidad_20 - lv_u_20 )
lv_olderror_20 = lv_error_20
EndWhile
If Time.Get4 () > lv_safetytimer_20 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.Off ()
EndSub
Sub m_siguelineas_encoder14f_2
lv_velocidad_21 = lv_velocidad_21 * 1
lv_lectura1_21 = 50
lv_lectura3_21 = 50
lv_lectura4_21 = 50
lv_kp_21 = Math.Power ( lv_velocidad_21 , 5 / 6 ) / 440
lv_kd_21 = lv_kp_21 * 70
lv_error_21 = 0
lv_olderror_21 = 0
lv_u_21 = 0
lv_sentido_21 = lv_velocidad_21 / Math.Abs ( lv_velocidad_21 )
lv_encoder_21 = lv_encoder_21 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_21 = MotorC.GetTacho ()
lv_encoderc_21 = 0
lv_safetytimer_21 = 11286 / ( lv_velocidad_21 / 10 ) * ( lv_encoder_21 / 100 ) / ( pr_siguelineas_diametro / 6.24 )
Time.Reset4 ()
While Math.Abs ( lv_encoderc_21 ) < lv_encoder_21 And Time.Get4 () < lv_safetytimer_21 + 2000
lv_encoderc_21 = MotorC.GetTacho () - lv_startc_21
lv_lectura1_21 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura4_21 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_21 = ( lv_lectura1_21 - lv_lectura4_21 ) * lv_sentido_21 * 1
lv_u_21 = lv_error_21 * lv_kp_21 + ( lv_error_21 - lv_olderror_21 ) * lv_kd_21
Motor.StartSync ( "BC" , - ( lv_velocidad_21 + lv_u_21 ) , lv_velocidad_21 - lv_u_21 )
lv_olderror_21 = lv_error_21
EndWhile
If Time.Get4 () > lv_safetytimer_21 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.Off ()
EndSub
Sub m_siguelineas_cruce_externo_2
lv_velocidad_22 = lv_velocidad_22 * 1
lv_lectura1_22 = 50
lv_lectura3_22 = 50
lv_lectura4_22 = 50
lv_kp_22 = Math.Power ( lv_velocidad_22 , 5 / 6 ) / 440
lv_kd_22 = lv_kp_22 * 70
lv_error_22 = 0
lv_olderror_22 = 0
lv_u_22 = 0
lv_sentido_22 = lv_velocidad_22 / Math.Abs ( lv_velocidad_22 )
lv_lectura_22 = 50
While lv_lectura_22 > 7
If lv_reader_22 = 3 Then
lv_lectura_22 = lv_lectura3_22
lv_lecturaizq_22 = lv_lectura1_22
lv_lecturadch_22 = lv_lectura4_22
Else
lv_lectura_22 = lv_lectura4_22
lv_lecturaizq_22 = lv_lectura3_22
lv_lecturadch_22 = lv_lectura1_22
EndIf
lv_lectura1_22 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_22 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_lectura4_22 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_22 = ( lv_lecturaizq_22 - lv_lecturadch_22 ) * lv_sentido_22 * 1
lv_u_22 = lv_error_22 * lv_kp_22 + ( lv_error_22 - lv_olderror_22 ) * lv_kd_22
Motor.StartSync ( "BC" , - ( lv_velocidad_22 + lv_u_22 ) , lv_velocidad_22 - lv_u_22 )
lv_olderror_22 = lv_error_22
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_siguelineas_cruce_externof_2
lv_velocidad_23 = lv_velocidad_23 * 1
lv_lectura1_23 = 50
lv_lectura3_23 = 50
lv_lectura4_23 = 50
lv_kp_23 = Math.Power ( lv_velocidad_23 , 5 / 6 ) / 440
lv_kd_23 = lv_kp_23 * 70
lv_error_23 = 0
lv_olderror_23 = 0
lv_u_23 = 0
lv_sentido_23 = lv_velocidad_23 / Math.Abs ( lv_velocidad_23 )
lv_lectura_23 = 50
While lv_lectura_23 > 7
If lv_reader_23 = 3 Then
lv_lectura_23 = lv_lectura3_23
lv_lecturaizq_23 = lv_lectura1_23
lv_lecturadch_23 = lv_lectura4_23
Else
lv_lectura_23 = lv_lectura4_23
lv_lecturaizq_23 = lv_lectura3_23
lv_lecturadch_23 = lv_lectura1_23
EndIf
lv_lectura1_23 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_23 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_lectura4_23 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_23 = ( lv_lecturaizq_23 - lv_lecturadch_23 ) * lv_sentido_23 * 1
lv_u_23 = lv_error_23 * lv_kp_23 + ( lv_error_23 - lv_olderror_23 ) * lv_kd_23
Motor.StartSync ( "BC" , - ( lv_velocidad_23 + lv_u_23 ) , lv_velocidad_23 - lv_u_23 )
lv_olderror_23 = lv_error_23
EndWhile
MotorBC.Off ()
EndSub
Sub m_siguelineas_encoder31_2
lv_velocidad_24 = lv_velocidad_24 * 1
lv_lectura1_24 = 50
lv_lectura3_24 = 50
lv_lectura4_24 = 50
lv_kp_24 = Math.Power ( lv_velocidad_24 , 5 / 6 ) / 440
lv_kd_24 = lv_kp_24 * 70
lv_error_24 = 0
lv_olderror_24 = 0
lv_u_24 = 0
lv_sentido_24 = lv_velocidad_24 / Math.Abs ( lv_velocidad_24 )
lv_encoder_24 = lv_encoder_24 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_24 = MotorC.GetTacho ()
lv_encoderc_24 = 0
lv_safetytimer_24 = 11286 / ( lv_velocidad_24 / 10 ) * ( lv_encoder_24 / 100 ) / ( pr_siguelineas_diametro / 6.24 )
Time.Reset4 ()
While Math.Abs ( lv_encoderc_24 ) < lv_encoder_24 And Time.Get4 () < lv_safetytimer_24 + 2000
lv_encoderc_24 = MotorC.GetTacho () - lv_startc_24
lv_lectura1_24 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_24 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_error_24 = ( lv_lectura3_24 - lv_lectura1_24 ) * lv_sentido_24 * 1
lv_u_24 = lv_error_24 * lv_kp_24 + ( lv_error_24 - lv_olderror_24 ) * lv_kd_24
Motor.StartSync ( "BC" , - ( lv_velocidad_24 + lv_u_24 ) , lv_velocidad_24 - lv_u_24 )
lv_olderror_24 = lv_error_24
EndWhile
If Time.Get4 () > lv_safetytimer_24 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.OffAndBrake ()
EndSub
Sub m_giro_grados_3
lv_signo_25 = ( lv_velocidad1_25 / lv_velocidad2_25 ) / Math.Abs ( lv_velocidad1_25 / lv_velocidad2_25 )
lv_vmin_25 = Math.Min ( Math.Abs ( lv_velocidad1_25 ) , Math.Abs ( lv_velocidad2_25 ) )
lv_vmax_25 = Math.Max ( Math.Abs ( lv_velocidad1_25 ) , Math.Abs ( lv_velocidad2_25 ) )
lv_encoder_25 = lv_grados_25 * pr_giro_g1 * ( - 2 / ( lv_signo_25 * lv_vmin_25 / lv_vmax_25 - 1 ) )
MotorBC.Off ()
Program.Delay ( 100 )
Motor.MoveSync ( "BC" , - lv_velocidad1_25 , lv_velocidad2_25 , lv_encoder_25 , "True" )
lv_velocidad1_25 = 0
lv_velocidad2_25 = 0
lv_grados_25 = 0
Program.Delay ( 100 )
EndSub
Sub m_giro_encoder_3
lv_encoder_26 = lv_distancia_26 / ( pr_giro_diametro * Math.Pi ) * 360
MotorBC.Off ()
Motor.MoveSync ( "BC" , - lv_velocidad1_26 , lv_velocidad2_26 , lv_encoder_26 , "True" )
EndSub
Sub m_giro_negro1f_3
lv_lectura_27 = 50
While lv_lectura_27 > 15
lv_lectura_27 = ( Sensor.ReadPercent ( lv_sens_27 ) - pr_giro_negro ) / pr_giro_blanco * ( 100 - pr_giro_negro )
Motor.StartSync ( "BC" , - lv_velocidad1_27 , lv_velocidad2_27 )
EndWhile
Motor.Stop ( "BC" , "False" )
EndSub
Sub m_giro_negro1_3
lv_lectura_28 = 50
While lv_lectura_28 > 15
lv_lectura_28 = ( Sensor.ReadPercent ( lv_sens_28 ) - pr_giro_negro ) / pr_giro_blanco * ( 100 - pr_giro_negro )
Motor.StartSync ( "BC" , - lv_velocidad1_28 , lv_velocidad2_28 )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub m_giro_encoderf_3
lv_encoder_29 = lv_distancia_29 / ( pr_giro_diametro * Math.Pi ) * 360
MotorBC.Off ()
Motor.MoveSync ( "BC" , - lv_velocidad1_29 , lv_velocidad2_29 , lv_encoder_29 , "False" )
EndSub
Sub m_rgb_detect_3
lv_sens_mode_30 = Sensor.GetMode ( lv_sens_30 )
Sensor.SetMode ( lv_sens_30 , 4 )
lv_red_30 = 15
lv_yellow_30 = 60
lv_green_30 = 170
lv_blue_30 = 330
lv_hue_30 = 0
lv_sat_30 = 0
lv_value_30 = 0
lv_color_30 = 0
lv_rnormarray_30 [ 0 ] = 0
lv_gnormarray_30 [ 0 ] = 0
lv_bnormarray_30 [ 0 ] = 0
LCD.Clear ()
For lv_j_30 = 1 To lv_reps_30 Step 1
lv_rgb_30 = Sensor.ReadRaw ( lv_sens_30 , 3 )
lv_rraw_30 = lv_rgb_30 [ 0 ]
lv_graw_30 = lv_rgb_30 [ 1 ]
lv_braw_30 = lv_rgb_30 [ 2 ]
lv_rnormarray_30 [ lv_j_30 ] = Math.Round ( lv_rraw_30 / pr_rgb_rwhite * 255 )
lv_gnormarray_30 [ lv_j_30 ] = Math.Round ( lv_graw_30 / pr_rgb_gwhite * 255 )
lv_bnormarray_30 [ lv_j_30 ] = Math.Round ( lv_braw_30 / pr_rgb_bwhite * 255 )
Program.Delay ( 5 )
EndFor
For lv_j_30 = 1 To lv_reps_30 Step 2
lv_rnorm_30 = lv_rnormarray_30 [ lv_j_30 ] + lv_rnormarray_30 [ lv_j_30 + 1 ]
lv_gnorm_30 = lv_gnormarray_30 [ lv_j_30 ] + lv_gnormarray_30 [ lv_j_30 + 1 ]
lv_bnorm_30 = lv_bnormarray_30 [ lv_j_30 ] + lv_bnormarray_30 [ lv_j_30 + 1 ]
EndFor
lv_rnorm_30 = lv_rnorm_30 / lv_reps_30
lv_gnorm_30 = lv_gnorm_30 / lv_reps_30
lv_bnorm_30 = lv_bnorm_30 / lv_reps_30
lv_max_30 = Math.Max ( Math.Max ( lv_rnorm_30 , lv_gnorm_30 ) , lv_bnorm_30 )
lv_min_30 = Math.Min ( Math.Min ( lv_rnorm_30 , lv_gnorm_30 ) , lv_bnorm_30 )
If lv_max_30 = lv_min_30 Then
lv_hue_30 = 0
Elseif lv_max_30 = lv_rnorm_30 Then
If lv_gnorm_30 >= lv_bnorm_30 Then
lv_hue_30 = 60 * ( lv_gnorm_30 - lv_bnorm_30 ) / ( lv_max_30 - lv_min_30 )
Else
lv_hue_30 = 60 * ( lv_gnorm_30 - lv_bnorm_30 ) / ( lv_max_30 - lv_min_30 ) + 360
EndIf
Elseif lv_max_30 = lv_gnorm_30 Then
lv_hue_30 = 60 * ( lv_bnorm_30 - lv_rnorm_30 ) / ( lv_max_30 - lv_min_30 ) + 120
Else
lv_hue_30 = 60 * ( lv_rnorm_30 - lv_gnorm_30 ) / ( lv_max_30 - lv_min_30 ) + 240
EndIf
If lv_max_30 = 0 Then
lv_sat_30 = 0
Else
lv_sat_30 = 1 - lv_min_30 / lv_max_30
EndIf
lv_value_30 = lv_max_30
lv_rgbgrey_30 = ( pr_rgb_valueblanco + pr_rgb_valuenegro ) / 2
If lv_rraw_30 + lv_graw_30 + lv_braw_30 <= 3 Then
lv_color_30 = 0
Else
If lv_sat_30 < 0.3 Then
If lv_value_30 > lv_rgbgrey_30 Then
lv_color_30 = 6
Else
lv_color_30 = 1
EndIf
Else
If lv_hue_30 >= 0 And lv_hue_30 < lv_red_30 Then
lv_color_30 = 5
Elseif lv_hue_30 >= lv_red_30 And lv_hue_30 < lv_yellow_30 Then
lv_color_30 = 4
Elseif lv_hue_30 >= lv_yellow_30 And lv_hue_30 < lv_green_30 Then
lv_color_30 = 3
Elseif lv_hue_30 >= lv_green_30 And lv_hue_30 < lv_blue_30 Then
lv_color_30 = 2
Else
lv_color_30 = 5
EndIf
EndIf
EndIf
LCD.StopUpdate ()
LCD.Clear ()
LCD.Write ( 33 , 20 , "R: " + lv_rraw_30 )
LCD.Write ( 33 , 35 , "G: " + lv_graw_30 )
LCD.Write ( 33 , 50 , "B: " + lv_braw_30 )
LCD.Write ( 33 , 70 , "color: " + lv_color_30 )
LCD.Write ( 33 , 90 , "Value: " + lv_value_30 )
LCD.Update ()
Sensor.SetMode ( lv_sens_30 , lv_sens_mode_30 )
EndSub
Sub m_rgb_gritar_1
If lv_color_31 = 0 Then
Speaker.Play ( 100 , "WRO2025/Media/Zero" )
Elseif lv_color_31 = 1 Then
Speaker.Play ( 100 , "WRO2025/Media/Black" )
Elseif lv_color_31 = 2 Then
Speaker.Play ( 100 , "WRO2025/Media/BLUE" )
Elseif lv_color_31 = 3 Then
Speaker.Play ( 100 , "WRO2025/Media/GREEN" )
Elseif lv_color_31 = 4 Then
Speaker.Play ( 100 , "WRO2025/Media/YELLOW" )
Elseif lv_color_31 = 5 Then
Speaker.Play ( 100 , "WRO2025/Media/RED" )
Elseif lv_color_31 = 6 Then
Speaker.Play ( 100 , "WRO2025/Media/White" )
Elseif lv_color_31 = 7 Then
Speaker.Play ( 100 , "WRO2025/Media/Brown" )
EndIf
Speaker.Wait ()
EndSub
