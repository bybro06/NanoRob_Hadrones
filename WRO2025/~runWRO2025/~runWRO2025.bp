pr_giro_g1 = 0
pr_rgb_valuenegro = 0
pr_rgb_valueblanco = 0
pr_rgb_rwhite = 0
pr_rgb_gwhite = 0
pr_rgb_bwhite = 0
pr_recto_diametro = 0
pr_giro_diametro = 0
pr_siguelineas_diametro = 0
pr_smart_diametro = 0
pr_siguelineas_negro1 = 0
pr_siguelineas_negro3 = 0
pr_siguelineas_negro4 = 0
pr_siguelineas_blanco1 = 0
pr_siguelineas_blanco3 = 0
pr_siguelineas_blanco4 = 0
pr_smart_negro1 = 0
pr_smart_negro3 = 0
pr_smart_negro4 = 0
pr_smart_blanco1 = 0
pr_smart_blanco3 = 0
pr_smart_blanco4 = 0
pr_recto_negro = 0
pr_recto_blanco = 0
pr_giro_negro = 0
pr_giro_blanco = 0
lv_velocidada_10 = 0
lv_velocidadd_10 = 0
lv_timer_10 = 0
lv_velocidad_11 = 0
lv_encoder_11 = 0
lv_velocidad_12 = 0
lv_encoder_12 = 0
lv_velocidad_13 = 0
lv_distancia_13 = 0
lv_velocidad_18 = 0
lv_encoder_18 = 0
lv_velocidad_14 = 0
lv_distancia_14 = 0
lv_velocidad1_25 = 0
lv_velocidad2_25 = 0
lv_grados_25 = 0
lv_velocidad_15 = 0
lv_sensor_15 = 0
lv_velocidad_19 = 0
lv_velocidad_20 = 0
lv_encoder_20 = 0
lv_velocidad1_26 = 0
lv_velocidad2_26 = 0
lv_distancia_26 = 0
lv_sens_27 = 0
lv_reps_27 = 0
lv_color_27 = 0
lv_color_28 = 0
lv_velocidad_16 = 0
lv_tiempo_16 = 0
lv_velocidad_21 = 0
lv_encoder_21 = 0
lv_velocidad_22 = 0
lv_reader_22 = 0
lv_velocidad_23 = 0
lv_reader_23 = 0
lv_velocidad_24 = 0
lv_encoder_24 = 0
lv_v0_17 = 0
lv_vmax_17 = 0
lv_distanciaaccel_17 = 0
lv_distanciacrucero_17 = 0
lv_distanciadecel_17 = 0
lv_numero_2 = 0
gv_markinggrande = 0
gv_diametro = 0
gv_negro1 = 0
gv_negro3 = 0
gv_negro4 = 0
gv_blanco1 = 0
gv_blanco3 = 0
gv_blanco4 = 0
f_setup_0 ()
f_main_0 ()
Sub f_setup_0
Sensor.SetMode ( 1 , 0 )
Sensor.SetMode ( 2 , 4 )
Sensor.SetMode ( 3 , 0 )
Sensor.SetMode ( 4 , 0 )
gv_diametro = 6.24
pr_giro_g1 = 1065 / 360
gv_negro1 = 10
gv_negro3 = 9
gv_negro4 = 8
gv_blanco1 = 65
gv_blanco3 = 59
gv_blanco4 = 55
pr_rgb_valuenegro = 4
pr_rgb_valueblanco = 32
pr_rgb_rwhite = 57
pr_rgb_gwhite = 71
pr_rgb_bwhite = 73
pr_recto_diametro = gv_diametro
pr_giro_diametro = gv_diametro
pr_siguelineas_diametro = gv_diametro
pr_smart_diametro = gv_diametro
pr_siguelineas_negro1 = gv_negro1
pr_siguelineas_negro3 = gv_negro3
pr_siguelineas_negro4 = gv_negro4
pr_siguelineas_blanco1 = gv_blanco1
pr_siguelineas_blanco3 = gv_blanco3
pr_siguelineas_blanco4 = gv_blanco4
pr_smart_negro1 = gv_negro1
pr_smart_negro3 = gv_negro3
pr_smart_negro4 = gv_negro4
pr_smart_blanco1 = gv_blanco1
pr_smart_blanco3 = gv_blanco3
pr_smart_blanco4 = gv_blanco4
pr_recto_negro = ( gv_negro1 + gv_negro3 + gv_negro4 ) / 3
pr_recto_blanco = ( gv_blanco1 + gv_blanco3 + gv_blanco4 ) / 3
pr_giro_negro = ( gv_negro1 + gv_negro3 + gv_negro4 ) / 3
pr_giro_blanco = ( gv_blanco1 + gv_blanco3 + gv_blanco4 ) / 3
EndSub
Sub f_startarm_0
lv_velocidada_10 = 15
lv_velocidadd_10 = - 15
lv_timer_10 = 500
m_brazo_adtimer_3 ()
MotorA.ResetCount ()
MotorD.ResetCount ()
lv_velocidad_11 = 35
lv_encoder_11 = - 80
m_brazo_aencoder_2 ()
lv_velocidad_12 = 35
lv_encoder_12 = 80
m_brazo_dencoder_2 ()
MotorA.ResetCount ()
MotorD.ResetCount ()
Speaker.Play ( 100 , "WRO2025/Media/Connect" )
Speaker.Wait ()
EndSub
Sub f_main_0
f_gritarvoltaje_0 ()
f_startarm_0 ()
Speaker.Play ( 100 , "WRO2025/Media/One" )
f_s_0 ()
Program.Delay ( 150 )
lv_velocidad_13 = 50
lv_distancia_13 = 5
m_recto_encoderf_2 ()
lv_velocidad_18 = 50
lv_encoder_18 = 15
m_siguelineas_encoder14f_2 ()
lv_velocidad_14 = 50
lv_distancia_14 = 10
m_recto_encoder_2 ()
Thread.Run = f_bajardchleve_0
lv_velocidad1_25 = 10
lv_velocidad2_25 = 40
lv_grados_25 = 55
m_giro_grados_3 ()
lv_velocidad1_25 = 40
lv_velocidad2_25 = 10
lv_grados_25 = 55
m_giro_grados_3 ()
lv_velocidad_13 = 50
lv_distancia_13 = 40
m_recto_encoderf_2 ()
lv_velocidad_15 = 70
lv_sensor_15 = 4
m_recto_negro1_2 ()
lv_velocidad1_25 = 40
lv_velocidad2_25 = - 20
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_19 = 60
m_siguelineas_cruce14_1 ()
lv_velocidad1_25 = 70
lv_velocidad2_25 = - 62
lv_grados_25 = 180
m_giro_grados_3 ()
lv_velocidad_20 = 40
lv_encoder_20 = 52
m_siguelineas_encoder31_2 ()
lv_velocidad1_25 = - 30
lv_velocidad2_25 = 30
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_14 = 60
lv_distancia_14 = 12.5
m_recto_encoder_2 ()
lv_velocidad1_25 = 20
lv_velocidad2_25 = - 20
lv_grados_25 = 88
m_giro_grados_3 ()
lv_velocidad1_26 = 20
lv_velocidad2_26 = 20
lv_distancia_26 = 3
m_giro_encoder_3 ()
Program.Delay ( 100 )
lv_sens_27 = 2
lv_reps_27 = 5
m_rgb_detect_3 ()
gv_markinggrande = lv_color_27
lv_color_28 = gv_markinggrande
m_rgb_gritar_1 ()
lv_velocidad1_25 = 40
lv_velocidad2_25 = 10
lv_grados_25 = 35
m_giro_grados_3 ()
lv_velocidad1_25 = 10
lv_velocidad2_25 = 40
lv_grados_25 = 36
m_giro_grados_3 ()
lv_velocidad_14 = 20
lv_distancia_14 = 15
m_recto_encoder_2 ()
lv_sens_27 = 2
lv_reps_27 = 5
m_rgb_detect_3 ()
gv_marking [ 0 ] = lv_color_27
lv_color_28 = gv_marking [ 0 ]
m_rgb_gritar_1 ()
lv_velocidad_16 = 20
lv_tiempo_16 = 700
m_recto_tiempo_2 ()
lv_sens_27 = 2
lv_reps_27 = 5
m_rgb_detect_3 ()
gv_marking [ 1 ] = lv_color_27
lv_color_28 = gv_marking [ 1 ]
m_rgb_gritar_1 ()
lv_velocidad_14 = - 30
lv_distancia_14 = 35
m_recto_encoder_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 30
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_14 = 30
lv_distancia_14 = 7
m_recto_encoder_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 30
lv_grados_25 = 85
m_giro_grados_3 ()
lv_velocidad_14 = - 70
lv_distancia_14 = 30
m_recto_encoder_2 ()
lv_velocidad_16 = - 20
lv_tiempo_16 = 500
m_recto_tiempo_2 ()
lv_velocidad_14 = 20
lv_distancia_14 = 4
m_recto_encoder_2 ()
lv_sens_27 = 2
lv_reps_27 = 5
m_rgb_detect_3 ()
gv_marking [ 2 ] = lv_color_27
lv_color_28 = gv_marking [ 2 ]
m_rgb_gritar_1 ()
lv_velocidad_14 = 20
lv_distancia_14 = 8
m_recto_encoder_2 ()
lv_sens_27 = 2
lv_reps_27 = 5
m_rgb_detect_3 ()
gv_marking [ 3 ] = lv_color_27
lv_color_28 = gv_marking [ 3 ]
m_rgb_gritar_1 ()
lv_velocidad_13 = 70
lv_distancia_13 = 66
m_recto_encoderf_2 ()
lv_velocidad1_25 = - 10
lv_velocidad2_25 = - 50
lv_grados_25 = 70
m_giro_grados_3 ()
lv_velocidad1_25 = - 50
lv_velocidad2_25 = - 10
lv_grados_25 = 70
m_giro_grados_3 ()
lv_velocidad_11 = 20
lv_encoder_11 = - 300
m_brazo_aencoder_2 ()
Program.Delay ( 200 )
lv_velocidad_13 = 20
lv_distancia_13 = 10
m_recto_encoderf_2 ()
lv_velocidad_16 = 20
lv_tiempo_16 = 500
m_recto_tiempo_2 ()
lv_velocidad_14 = - 20
lv_distancia_14 = 5
m_recto_encoder_2 ()
lv_velocidad_11 = 20
lv_encoder_11 = - 50
m_brazo_aencoder_2 ()
lv_velocidad_14 = 40
lv_distancia_14 = 18
m_recto_encoder_2 ()
lv_velocidad_15 = 40
lv_sensor_15 = 1
m_recto_negro1_2 ()
lv_velocidad1_25 = - 25
lv_velocidad2_25 = 40
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_21 = 30
lv_encoder_21 = 10
m_siguelineas_encoder14_2 ()
lv_velocidad_22 = 25
lv_reader_22 = 3
m_siguelineas_cruce_externo_2 ()
lv_velocidad1_25 = - 30
lv_velocidad2_25 = 30
lv_grados_25 = 175
m_giro_grados_3 ()
lv_velocidad_14 = - 10
lv_distancia_14 = 19.5
m_recto_encoder_2 ()
lv_velocidad_14 = 10
lv_distancia_14 = 1.5
m_recto_encoder_2 ()
f_bajararana_0 ()
Program.Delay ( 400 )
lv_velocidad_14 = 10
lv_distancia_14 = 3
m_recto_encoder_2 ()
lv_velocidad1_25 = 20
lv_velocidad2_25 = 4
lv_grados_25 = 88
m_giro_grados_3 ()
lv_velocidad_21 = 20
lv_encoder_21 = 30
m_siguelineas_encoder14_2 ()
lv_velocidad_14 = 40
lv_distancia_14 = 24
m_recto_encoder_2 ()
lv_velocidad1_25 = - 30
lv_velocidad2_25 = 0
lv_grados_25 = - 46
m_giro_grados_3 ()
lv_velocidad_14 = - 20
lv_distancia_14 = 13
m_recto_encoder_2 ()
lv_velocidad_11 = 30
lv_encoder_11 = - 50
m_brazo_aencoder_2 ()
lv_velocidad_14 = 10
lv_distancia_14 = 5.75
m_recto_encoder_2 ()
f_bajararana_0 ()
Program.Delay ( 400 )
lv_velocidad1_25 = 30
lv_velocidad2_25 = 0
lv_grados_25 = 45
m_giro_grados_3 ()
lv_velocidad_14 = - 30
lv_distancia_14 = 4
m_recto_encoder_2 ()
lv_velocidad1_25 = - 15
lv_velocidad2_25 = 15
lv_grados_25 = 129
m_giro_grados_3 ()
lv_velocidad_14 = - 30
lv_distancia_14 = 11.5
m_recto_encoder_2 ()
lv_velocidad_11 = 30
lv_encoder_11 = - 50
m_brazo_aencoder_2 ()
lv_velocidad1_25 = - 20
lv_velocidad2_25 = 20
lv_grados_25 = 10
m_giro_grados_3 ()
lv_velocidad1_26 = 60
lv_velocidad2_26 = 70
lv_distancia_26 = 74.5
m_giro_encoder_3 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 30
lv_grados_25 = 72
m_giro_grados_3 ()
lv_velocidad_23 = 40
lv_reader_23 = 4
m_siguelineas_cruce_externof_2 ()
lv_velocidad_24 = 80
lv_encoder_24 = 50
m_siguelineas_encoder31f_2 ()
If gv_markinggrande = 2 Then
lv_velocidad_24 = 80
lv_encoder_24 = 40
m_siguelineas_encoder31f_2 ()
lv_velocidad_20 = 30
lv_encoder_20 = 9
m_siguelineas_encoder31_2 ()
lv_velocidad_14 = 30
lv_distancia_14 = 16
m_recto_encoder_2 ()
lv_velocidad1_25 = - 20
lv_velocidad2_25 = 20
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_14 = - 10
lv_distancia_14 = 8
m_recto_encoder_2 ()
f_bajararana_0 ()
lv_velocidad1_25 = - 20
lv_velocidad2_25 = - 40
lv_grados_25 = 91
m_giro_grados_3 ()
lv_velocidad_14 = - 80
lv_distancia_14 = 28
m_recto_encoder_2 ()
lv_velocidad_14 = - 10
lv_distancia_14 = 6
m_recto_encoder_2 ()
lv_velocidad_14 = 10
lv_distancia_14 = 2
m_recto_encoder_2 ()
lv_velocidad_11 = 40
lv_encoder_11 = 0
m_brazo_aencoder_2 ()
lv_velocidad1_26 = 30
lv_velocidad2_26 = 17
lv_distancia_26 = 25
m_giro_encoder_3 ()
lv_velocidad1_26 = 17
lv_velocidad2_26 = 30
lv_distancia_26 = 25
m_giro_encoder_3 ()
lv_velocidad_21 = 30
lv_encoder_21 = 15
m_siguelineas_encoder14_2 ()
lv_velocidad_22 = 30
lv_reader_22 = 4
m_siguelineas_cruce_externo_2 ()
ElseIf gv_markinggrande = 5 Then
lv_velocidad_20 = 30
lv_encoder_20 = 10
m_siguelineas_encoder31_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 30
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_14 = 40
lv_distancia_14 = 26
m_recto_encoder_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 30
lv_grados_25 = 88
m_giro_grados_3 ()
lv_velocidad_13 = - 60
lv_distancia_13 = 27
m_recto_encoderf_2 ()
lv_velocidad_14 = - 20
lv_distancia_14 = 10
m_recto_encoder_2 ()
f_bajararana_0 ()
lv_velocidad1_25 = 0
lv_velocidad2_25 = - 60
lv_grados_25 = 182
m_giro_grados_3 ()
lv_velocidad_13 = - 80
lv_distancia_13 = 39
m_recto_encoderf_2 ()
lv_velocidad_14 = - 10
lv_distancia_14 = 6
m_recto_encoder_2 ()
lv_velocidad_14 = 10
lv_distancia_14 = 2
m_recto_encoder_2 ()
lv_velocidad_11 = 40
lv_encoder_11 = 0
m_brazo_aencoder_2 ()
lv_velocidad1_26 = 30
lv_velocidad2_26 = 19
lv_distancia_26 = 20
m_giro_encoder_3 ()
lv_velocidad1_26 = 19
lv_velocidad2_26 = 30
lv_distancia_26 = 20
m_giro_encoder_3 ()
lv_velocidad_22 = 30
lv_reader_22 = 4
m_siguelineas_cruce_externo_2 ()
ElseIf gv_markinggrande = 4 Then
lv_velocidad_24 = 80
lv_encoder_24 = 34.5
m_siguelineas_encoder31f_2 ()
lv_velocidad_20 = 30
lv_encoder_20 = 9
m_siguelineas_encoder31_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 30
lv_grados_25 = 90
m_giro_grados_3 ()
lv_v0_17 = 30
lv_vmax_17 = 80
lv_distanciaaccel_17 = 10
lv_distanciacrucero_17 = 30.5
lv_distanciadecel_17 = 10
m_recto_acceldecel_5 ()
lv_velocidad1_25 = - 30
lv_velocidad2_25 = 30
lv_grados_25 = 86
m_giro_grados_3 ()
lv_velocidad_13 = 20
lv_distancia_13 = 5
m_recto_encoderf_2 ()
lv_velocidad_22 = 20
lv_reader_22 = 4
m_siguelineas_cruce_externo_2 ()
lv_velocidad_14 = - 10
lv_distancia_14 = 0.5
m_recto_encoder_2 ()
lv_velocidad1_25 = 15
lv_velocidad2_25 = - 30
lv_grados_25 = 87
m_giro_grados_3 ()
lv_velocidad_14 = - 10
lv_distancia_14 = 5.5
m_recto_encoder_2 ()
f_bajararana_0 ()
lv_velocidad_14 = 10
lv_distancia_14 = 0.5
m_recto_encoder_2 ()
Program.Delay ( 100 )
lv_velocidad1_25 = - 30
lv_velocidad2_25 = 30
lv_grados_25 = 87
m_giro_grados_3 ()
lv_velocidad_14 = - 80
lv_distancia_14 = 54
m_recto_encoder_2 ()
lv_velocidad_14 = - 20
lv_distancia_14 = 7
m_recto_encoder_2 ()
lv_velocidad_11 = 40
lv_encoder_11 = 0
m_brazo_aencoder_2 ()
lv_velocidad1_26 = 30
lv_velocidad2_26 = 19
lv_distancia_26 = 20
m_giro_encoder_3 ()
lv_velocidad1_26 = 19
lv_velocidad2_26 = 30
lv_distancia_26 = 20
m_giro_encoder_3 ()
lv_velocidad_22 = 30
lv_reader_22 = 4
m_siguelineas_cruce_externo_2 ()
ElseIf gv_markinggrande = 3 Then
lv_velocidad_24 = 80
lv_encoder_24 = 34.5
m_siguelineas_encoder31f_2 ()
lv_velocidad_20 = 30
lv_encoder_20 = 9
m_siguelineas_encoder31_2 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 30
lv_grados_25 = 90
m_giro_grados_3 ()
lv_v0_17 = 30
lv_vmax_17 = 80
lv_distanciaaccel_17 = 10
lv_distanciacrucero_17 = 30.5
lv_distanciadecel_17 = 10
m_recto_acceldecel_5 ()
lv_velocidad1_25 = - 30
lv_velocidad2_25 = 30
lv_grados_25 = 86
m_giro_grados_3 ()
lv_velocidad_13 = 20
lv_distancia_13 = 5
m_recto_encoderf_2 ()
lv_velocidad_22 = 20
lv_reader_22 = 4
m_siguelineas_cruce_externo_2 ()
lv_velocidad_14 = - 10
lv_distancia_14 = 0.5
m_recto_encoder_2 ()
lv_velocidad1_25 = 15
lv_velocidad2_25 = - 30
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_14 = - 10
lv_distancia_14 = 5.5
m_recto_encoder_2 ()
f_bajararana_0 ()
lv_velocidad_11 = 30
lv_encoder_11 = - 180
m_brazo_aencoder_2 ()
lv_velocidad_14 = 10
lv_distancia_14 = 0.5
m_recto_encoder_2 ()
Program.Delay ( 100 )
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 10
lv_grados_25 = 87
m_giro_grados_3 ()
lv_velocidad_13 = 80
lv_distancia_13 = 55
m_recto_encoderf_2 ()
lv_velocidad_14 = 20
lv_distancia_14 = 4
m_recto_encoder_2 ()
lv_velocidad1_25 = 0
lv_velocidad2_25 = 30
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad1_26 = 30
lv_velocidad2_26 = 20
lv_distancia_26 = 9
m_giro_encoder_3 ()
lv_velocidad1_26 = 20
lv_velocidad2_26 = 30
lv_distancia_26 = 11
m_giro_encoder_3 ()
lv_velocidad_14 = - 20
lv_distancia_14 = 17
m_recto_encoder_2 ()
lv_velocidad1_25 = - 30
lv_velocidad2_25 = 30
lv_grados_25 = 9
m_giro_grados_3 ()
lv_velocidad_11 = 30
lv_encoder_11 = 0
m_brazo_aencoder_2 ()
lv_velocidad_14 = 10
lv_distancia_14 = 3
m_recto_encoder_2 ()
lv_velocidad1_25 = - 10
lv_velocidad2_25 = 30
lv_grados_25 = 81
m_giro_grados_3 ()
lv_velocidad1_26 = 21
lv_velocidad2_26 = 30
lv_distancia_26 = 30
m_giro_encoder_3 ()
lv_velocidad1_26 = 30
lv_velocidad2_26 = 21
lv_distancia_26 = 30
m_giro_encoder_3 ()
lv_velocidad_22 = 30
lv_reader_22 = 4
m_siguelineas_cruce_externo_2 ()
EndIf
lv_velocidad1_25 = 40
lv_velocidad2_25 = - 20
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_22 = 30
lv_reader_22 = 4
m_siguelineas_cruce_externo_2 ()
lv_velocidad1_25 = 40
lv_velocidad2_25 = - 23
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_20 = 10
lv_encoder_20 = 12
m_siguelineas_encoder31_2 ()
lv_velocidad_14 = - 20
lv_distancia_14 = 8
m_recto_encoder_2 ()
f_bajarizq_0 ()
lv_velocidad_14 = 20
lv_distancia_14 = 9.5
m_recto_encoder_2 ()
f_subirizq_0 ()
lv_velocidad_14 = - 20
lv_distancia_14 = 9.5
m_recto_encoder_2 ()
f_bajardch_0 ()
lv_velocidad_14 = 20
lv_distancia_14 = 9.75
m_recto_encoder_2 ()
f_subirdch_0 ()
If ( gv_marking [ 0 ] = 2 Or gv_marking [ 0 ] = 4 ) And ( gv_marking [ 1 ] = 2 Or gv_marking [ 1 ] = 4 ) Then
lv_velocidad_14 = - 40
lv_distancia_14 = 25.25
m_recto_encoder_2 ()
lv_velocidad1_25 = 40
lv_velocidad2_25 = 0
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_24 = 15
lv_encoder_24 = 10
m_siguelineas_encoder31f_2 ()
lv_velocidad_13 = 100
lv_distancia_13 = 29
m_recto_encoderf_2 ()
lv_velocidad_14 = 60
lv_distancia_14 = 10
m_recto_encoder_2 ()
lv_velocidad1_25 = 4
lv_velocidad2_25 = 40
lv_grados_25 = 90
m_giro_grados_3 ()
lv_velocidad_14 = 20
lv_distancia_14 = 11.5
m_recto_encoder_2 ()
lv_velocidad1_25 = 40
lv_velocidad2_25 = 0
lv_grados_25 = 90
m_giro_grados_3 ()
If gv_marking [ 0 ] = 4 Then
lv_velocidad_13 = - 15
lv_distancia_13 = 2
m_recto_encoderf_2 ()
lv_velocidad_15 = - 15
lv_sensor_15 = 1
m_recto_negro1_2 ()
lv_velocidad_14 = 15
lv_distancia_14 = 2
m_recto_encoder_2 ()
f_bajarambos_0 ()
lv_velocidad_14 = - 15
lv_distancia_14 = 7
m_recto_encoder_2 ()
f_subirambosrap_0 ()
ElseIf gv_marking [ 0 ] = 2 Then
lv_velocidad_13 = - 15
lv_distancia_13 = 2
m_recto_encoderf_2 ()
lv_velocidad_15 = - 15
lv_sensor_15 = 1
m_recto_negro1_2 ()
lv_velocidad_14 = 15
lv_distancia_14 = 2
m_recto_encoder_2 ()
lv_velocidad1_25 = - 30
lv_velocidad2_25 = 30
lv_grados_25 = 60
m_giro_grados_3 ()
f_bajardch_0 ()
lv_velocidad1_25 = 30
lv_velocidad2_25 = - 30
lv_grados_25 = 120
m_giro_grados_3 ()
f_bajarizq_0 ()
lv_velocidad1_25 = - 30
lv_velocidad2_25 = 30
lv_grados_25 = 60
m_giro_grados_3 ()
lv_velocidad_14 = - 15
lv_distancia_14 = 7
m_recto_encoder_2 ()
f_subirambosrap_0 ()
EndIf
EndIf
EndSub
Sub f_bajarizq_0
lv_velocidad_11 = 20
lv_encoder_11 = - 380
m_brazo_aencoder_2 ()
EndSub
Sub f_bajardch_0
lv_velocidad_12 = 20
lv_encoder_12 = 430
m_brazo_dencoder_2 ()
EndSub
Sub f_subirizq_0
lv_velocidad_11 = 15
lv_encoder_11 = - 120
m_brazo_aencoder_2 ()
EndSub
Sub f_subirdch_0
lv_velocidad_12 = 15
lv_encoder_12 = 120
m_brazo_dencoder_2 ()
EndSub
Sub f_subirizqrap_0
lv_velocidad_11 = 65
lv_encoder_11 = - 120
m_brazo_aencoder_2 ()
EndSub
Sub f_subirdchrap_0
lv_velocidad_12 = 65
lv_encoder_12 = 120
m_brazo_dencoder_2 ()
EndSub
Sub f_bajardchleve_0
lv_velocidad_12 = 20
lv_encoder_12 = 100
m_brazo_dencoder_2 ()
EndSub
Sub f_gritarvoltaje_0
lv_voltaje_1 = EV3.BatteryVoltage
lv_numero_2 = Math.Floor ( lv_voltaje_1 )
f_gritarnumero_1 ()
lv_numero_2 = Math.Floor ( lv_voltaje_1 * 10 ) - Math.Floor ( lv_voltaje_1 ) * 10
f_gritarnumero_1 ()
lv_numero_2 = Math.Floor ( lv_voltaje_1 * 100 ) - Math.Floor ( lv_voltaje_1 * 10 ) * 10
f_gritarnumero_1 ()
EndSub
Sub f_gritarnumero_1
If lv_numero_2 = 0 Then
Speaker.Play ( 100 , "WRO2025/Media/ZERO" )
Elseif lv_numero_2 = 1 Then
Speaker.Play ( 100 , "WRO2025/Media/One" )
Elseif lv_numero_2 = 2 Then
Speaker.Play ( 100 , "WRO2025/Media/Two" )
Elseif lv_numero_2 = 3 Then
Speaker.Play ( 100 , "WRO2025/Media/Three" )
Elseif lv_numero_2 = 4 Then
Speaker.Play ( 100 , "WRO2025/Media/Four" )
Elseif lv_numero_2 = 5 Then
Speaker.Play ( 100 , "WRO2025/Media/Five" )
Elseif lv_numero_2 = 6 Then
Speaker.Play ( 100 , "WRO2025/Media/Six" )
Elseif lv_numero_2 = 7 Then
Speaker.Play ( 100 , "WRO2025/Media/Seven" )
Elseif lv_numero_2 = 8 Then
Speaker.Play ( 100 , "WRO2025/Media/Eight" )
Elseif lv_numero_2 = 9 Then
Speaker.Play ( 100 , "WRO2025/Media/Nine" )
Elseif lv_numero_2 = 10 Then
Speaker.Play ( 100 , "WRO2025/Media/Ten" )
EndIf
Speaker.Wait ()
EndSub
Sub f_bajararana_0
lv_velocidad_11 = 20
lv_encoder_11 = - 320
m_brazo_aencoder_2 ()
EndSub
Sub f_bajarambos_0
Thread.Run = f_bajarizq_0
f_bajardch_0 ()
Thread.Run = f_bajarizq_0
f_bajardch_0 ()
EndSub
Sub f_subirambosrap_0
Thread.Run = f_subirizqrap_0
f_subirdchrap_0 ()
EndSub
Sub f_s_0
Buttons.Flush ()
Buttons.Wait ()
EndSub
Sub m_brazo_adtimer_3
Time.Reset1 ()
While Time.Get1 () < lv_timer_10
MotorA.StartSpeed ( lv_velocidada_10 )
MotorD.StartSpeed ( lv_velocidadd_10 )
EndWhile
Motor.Stop ( "AD" , "True" )
EndSub
Sub m_brazo_aencoder_2
lv_encdiff_11 = lv_encoder_11 - Motor.GetCount ( "A" )
lv_signo_11 = lv_encdiff_11 / Math.Abs ( lv_encdiff_11 )
lv_safetytimer_11 = Math.Max ( ( ( Math.abs ( lv_encdiff_11 ) / 100 ) / ( lv_velocidad_11 / 20 ) * 650 * 2 ) , 400 )
Time.Reset3 ()
If lv_encdiff_11 <> 0 Then
While Math.Abs ( Motor.GetCount ( "A" ) - lv_encoder_11 ) > 25 and Time.Get3 () < 2000
MotorA.StartSpeed ( lv_signo_11 * lv_velocidad_11 )
EndWhile
Motor.Stop ( "A" , "True" )
EndIf
EndSub
Sub m_brazo_dencoder_2
lv_encdiff_12 = lv_encoder_12 - Motor.GetCount ( "D" )
lv_signo_12 = lv_encdiff_12 / Math.Abs ( lv_encdiff_12 )
lv_safetytimer_12 = Math.Max ( ( ( Math.abs ( lv_encdiff_12 ) / 100 ) / ( lv_velocidad_12 / 20 ) * 650 * 2 ) , 400 )
Time.Reset3 ()
If lv_encdiff_12 <> 0 Then
While Math.Abs ( Motor.GetCount ( "D" ) - lv_encoder_12 ) > 25 and Time.Get3 () < lv_safetytimer_12
MotorD.StartSpeed ( lv_signo_12 * lv_velocidad_12 )
LCD.Clear ()
LCD.Write ( 5 , 30 , "safetyTimer: " + lv_safetytimer_12 )
EndWhile
Motor.Stop ( "D" , "True" )
EndIf
EndSub
Sub m_recto_encoderf_2
lv_correccion_13 = ( Math.abs ( lv_velocidad_13 ) - 20 ) * 0.05
lv_enc_13 = ( lv_distancia_13 - lv_correccion_13 ) * 360 / Math.Pi / pr_recto_diametro
MotorBC.Off ()
Program.Delay ( 100 )
Motor.MoveSync ( "BC" , - lv_velocidad_13 , lv_velocidad_13 , lv_enc_13 , "False" )
EndSub
Sub m_recto_encoder_2
lv_correccion_14 = ( Math.abs ( lv_velocidad_14 ) - 20 ) * 0.05
lv_enc_14 = ( lv_distancia_14 - lv_correccion_14 ) * 360 / Math.Pi / pr_recto_diametro
MotorBC.Off ()
Program.Delay ( 100 )
Motor.MoveSync ( "BC" , - lv_velocidad_14 , lv_velocidad_14 , lv_enc_14 , "True" )
EndSub
Sub m_recto_negro1_2
lv_correccion_15 = 0
MotorBC.Off ()
lv_lectura_15 = 50
While lv_lectura_15 > 15
lv_lectura_15 = ( Sensor.ReadPercent ( lv_sensor_15 ) - pr_recto_negro ) / pr_recto_blanco * ( 100 - pr_recto_negro )
Motor.StartSync ( "BC" , - lv_velocidad_15 + lv_correccion_15 , lv_velocidad_15 + lv_correccion_15 )
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_recto_tiempo_2
lv_correccion_16 = 0
Time.Reset3 ()
MotorBC.Off ()
While Time.Get3 () < lv_tiempo_16
Motor.StartSync ( "BC" , - lv_velocidad_16 + lv_correccion_16 , lv_velocidad_16 + lv_correccion_16 )
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_recto_acceldecel_5
lv_startb_17 = Motor.GetCount ( "B" )
lv_startc_17 = Motor.GetCount ( "C" )
lv_encoderb_17 = 0
lv_encoderc_17 = 0
lv_signo_17 = lv_v0_17 / Math.Abs ( lv_v0_17 )
lv_v0_17 = Math.Max ( 8 , Math.Abs ( lv_v0_17 ) ) * lv_signo_17
lv_vmax_17 = Math.Min ( 90 , Math.Abs ( lv_vmax_17 ) ) * lv_signo_17
lv_vel_17 = 0
lv_kp_17 = 0.4
lv_kd_17 = 0.5
lv_error_17 = 0
lv_olderror_17 = 0
lv_gradosaccel_17 = lv_distanciaaccel_17 * 360 / ( pr_recto_diametro * math.pi )
lv_gradoscrucero_17 = lv_distanciacrucero_17 * 360 / ( pr_recto_diametro * math.pi )
lv_gradosdecel_17 = lv_distanciadecel_17 * 360 / ( pr_recto_diametro * math.pi )
While Math.Abs ( lv_encoderc_17 ) < lv_gradosaccel_17 + lv_gradoscrucero_17 + lv_gradosdecel_17
lv_encoderb_17 = Motor.GetCount ( "B" ) * 1 - lv_startb_17
lv_encoderc_17 = Motor.GetCount ( "C" ) - lv_startc_17
If Math.Abs ( lv_encoderc_17 ) < lv_gradosaccel_17 + lv_gradoscrucero_17 Then
lv_pendiente_17 = ( lv_vmax_17 - lv_v0_17 ) / lv_gradosaccel_17 * lv_signo_17
If lv_signo_17 > 0 Then
lv_vel_17 = Math.Min ( lv_vmax_17 , lv_pendiente_17 * lv_encoderc_17 + lv_v0_17 )
Else
lv_vel_17 = Math.Max ( lv_vmax_17 , lv_pendiente_17 * lv_encoderc_17 + lv_v0_17 )
EndIf
Else
lv_pendiente_17 = ( lv_v0_17 - lv_vmax_17 ) / lv_gradosdecel_17 * lv_signo_17
If lv_signo_17 > 0 Then
lv_vel_17 = Math.Max ( lv_v0_17 , lv_pendiente_17 * ( lv_encoderc_17 - lv_gradosaccel_17 - lv_gradoscrucero_17 ) + lv_vmax_17 )
Else
lv_vel_17 = Math.Min ( lv_v0_17 , lv_pendiente_17 * ( lv_encoderc_17 + lv_gradosaccel_17 + lv_gradoscrucero_17 ) + lv_vmax_17 )
EndIf
EndIf
lv_error_17 = ( - 1 * lv_encoderb_17 - lv_encoderc_17 ) * 1
lv_correccion_17 = lv_error_17 * lv_kp_17 + ( lv_error_17 - lv_olderror_17 ) * lv_kd_17
Motor.StartSync ( "BC" , - ( lv_vel_17 - lv_correccion_17 ) , ( lv_vel_17 + lv_correccion_17 ) )
lv_olderror_17 = lv_error_17
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_siguelineas_encoder14f_2
lv_velocidad_18 = lv_velocidad_18 * 1
lv_lectura1_18 = 50
lv_lectura3_18 = 50
lv_lectura4_18 = 50
lv_kp_18 = lv_velocidad_18 / 280
lv_kd_18 = lv_kp_18 * 32
lv_error_18 = 0
lv_olderror_18 = 0
lv_u_18 = 0
lv_sentido_18 = lv_velocidad_18 / Math.Abs ( lv_velocidad_18 )
lv_encoder_18 = lv_encoder_18 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_18 = MotorC.GetTacho ()
lv_encoderc_18 = 0
While Math.Abs ( lv_encoderc_18 ) < lv_encoder_18
lv_encoderc_18 = MotorC.GetTacho () - lv_startc_18
lv_lectura1_18 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura4_18 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_18 = ( lv_lectura1_18 - lv_lectura4_18 ) * lv_sentido_18 * 1
lv_u_18 = lv_error_18 * lv_kp_18 + ( lv_error_18 - lv_olderror_18 ) * lv_kd_18
Motor.StartSync ( "BC" , - ( lv_velocidad_18 + lv_u_18 ) , lv_velocidad_18 - lv_u_18 )
lv_olderror_18 = lv_error_18
EndWhile
MotorBC.Off ()
EndSub
Sub m_siguelineas_cruce14_1
lv_velocidad_19 = lv_velocidad_19 * 1
lv_lectura1_19 = 50
lv_lectura3_19 = 50
lv_lectura4_19 = 50
lv_kp_19 = lv_velocidad_19 / 280
lv_kd_19 = lv_kp_19 * 32
lv_error_19 = 0
lv_olderror_19 = 0
lv_u_19 = 0
lv_sentido_19 = lv_velocidad_19 / Math.Abs ( lv_velocidad_19 )
While lv_lectura1_19 > 10 Or lv_lectura4_19 > 10
lv_lectura1_19 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura4_19 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_19 = ( lv_lectura1_19 - lv_lectura4_19 ) * lv_sentido_19 * 1
lv_u_19 = lv_error_19 * lv_kp_19 + ( lv_error_19 - lv_olderror_19 ) * lv_kd_19
Motor.StartSync ( "BC" , - ( lv_velocidad_19 + lv_u_19 ) , lv_velocidad_19 - lv_u_19 )
lv_olderror_19 = lv_error_19
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_siguelineas_encoder31_2
lv_velocidad_20 = lv_velocidad_20 * 1
lv_lectura1_20 = 50
lv_lectura3_20 = 50
lv_lectura4_20 = 50
lv_kp_20 = lv_velocidad_20 / 280
lv_kd_20 = lv_kp_20 * 32
lv_error_20 = 0
lv_olderror_20 = 0
lv_u_20 = 0
lv_sentido_20 = lv_velocidad_20 / Math.Abs ( lv_velocidad_20 )
lv_encoder_20 = lv_encoder_20 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_20 = MotorC.GetTacho ()
lv_encoderc_20 = 0
While Math.Abs ( lv_encoderc_20 ) < lv_encoder_20
lv_encoderc_20 = MotorC.GetTacho () - lv_startc_20
lv_lectura1_20 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_20 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_error_20 = ( lv_lectura3_20 - lv_lectura1_20 ) * lv_sentido_20 * 1
lv_u_20 = lv_error_20 * lv_kp_20 + ( lv_error_20 - lv_olderror_20 ) * lv_kd_20
Motor.StartSync ( "BC" , - ( lv_velocidad_20 + lv_u_20 ) , lv_velocidad_20 - lv_u_20 )
lv_olderror_20 = lv_error_20
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_siguelineas_encoder14_2
lv_velocidad_21 = lv_velocidad_21 * 1
lv_lectura1_21 = 50
lv_lectura3_21 = 50
lv_lectura4_21 = 50
lv_kp_21 = lv_velocidad_21 / 320
lv_kd_21 = lv_kp_21 * 28
lv_error_21 = 0
lv_olderror_21 = 0
lv_u_21 = 0
lv_sentido_21 = lv_velocidad_21 / Math.Abs ( lv_velocidad_21 )
lv_encoder_21 = lv_encoder_21 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_21 = MotorC.GetTacho ()
lv_encoderc_21 = 0
While Math.Abs ( lv_encoderc_21 ) < lv_encoder_21
lv_encoderc_21 = MotorC.GetTacho () - lv_startc_21
lv_lectura1_21 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura4_21 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_21 = ( lv_lectura1_21 - lv_lectura4_21 ) * lv_sentido_21 * 1
lv_u_21 = lv_error_21 * lv_kp_21 + ( lv_error_21 - lv_olderror_21 ) * lv_kd_21
Motor.StartSync ( "BC" , - ( lv_velocidad_21 + lv_u_21 ) , lv_velocidad_21 - lv_u_21 )
lv_olderror_21 = lv_error_21
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_siguelineas_cruce_externo_2
lv_velocidad_22 = lv_velocidad_22 * 1
lv_lectura1_22 = 50
lv_lectura3_22 = 50
lv_lectura4_22 = 50
lv_kp_22 = lv_velocidad_22 / 280
lv_kd_22 = lv_kp_22 * 32
lv_error_22 = 0
lv_olderror_22 = 0
lv_u_22 = 0
lv_sentido_22 = lv_velocidad_22 / Math.Abs ( lv_velocidad_22 )
lv_lectura_22 = 50
While lv_lectura_22 > 7
If lv_reader_22 = 3 Then
lv_lectura_22 = lv_lectura3_22
lv_lecturaizq_22 = lv_lectura1_22
lv_lecturadch_22 = lv_lectura4_22
Else
lv_lectura_22 = lv_lectura4_22
lv_lecturaizq_22 = lv_lectura3_22
lv_lecturadch_22 = lv_lectura1_22
EndIf
lv_lectura1_22 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_22 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_lectura4_22 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_22 = ( lv_lecturaizq_22 - lv_lecturadch_22 ) * lv_sentido_22 * 1
lv_u_22 = lv_error_22 * lv_kp_22 + ( lv_error_22 - lv_olderror_22 ) * lv_kd_22
Motor.StartSync ( "BC" , - ( lv_velocidad_22 + lv_u_22 ) , lv_velocidad_22 - lv_u_22 )
lv_olderror_22 = lv_error_22
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_siguelineas_cruce_externof_2
lv_velocidad_23 = lv_velocidad_23 * 1
lv_lectura1_23 = 50
lv_lectura3_23 = 50
lv_lectura4_23 = 50
lv_kp_23 = lv_velocidad_23 / 280
lv_kd_23 = lv_kp_23 * 32
lv_error_23 = 0
lv_olderror_23 = 0
lv_u_23 = 0
lv_sentido_23 = lv_velocidad_23 / Math.Abs ( lv_velocidad_23 )
lv_lectura_23 = 50
While lv_lectura_23 > 7
If lv_reader_23 = 3 Then
lv_lectura_23 = lv_lectura3_23
lv_lecturaizq_23 = lv_lectura1_23
lv_lecturadch_23 = lv_lectura4_23
Else
lv_lectura_23 = lv_lectura4_23
lv_lecturaizq_23 = lv_lectura3_23
lv_lecturadch_23 = lv_lectura1_23
EndIf
lv_lectura1_23 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_23 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_lectura4_23 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_23 = ( lv_lecturaizq_23 - lv_lecturadch_23 ) * lv_sentido_23 * 1
lv_u_23 = lv_error_23 * lv_kp_23 + ( lv_error_23 - lv_olderror_23 ) * lv_kd_23
Motor.StartSync ( "BC" , - ( lv_velocidad_23 + lv_u_23 ) , lv_velocidad_23 - lv_u_23 )
lv_olderror_23 = lv_error_23
EndWhile
MotorBC.Off ()
EndSub
Sub m_siguelineas_encoder31f_2
lv_velocidad_24 = lv_velocidad_24 * 1
lv_lectura1_24 = 50
lv_lectura3_24 = 50
lv_lectura4_24 = 50
lv_kp_24 = lv_velocidad_24 / 280
lv_kd_24 = lv_kp_24 * 32
lv_error_24 = 0
lv_olderror_24 = 0
lv_u_24 = 0
lv_sentido_24 = lv_velocidad_24 / Math.Abs ( lv_velocidad_24 )
lv_encoder_24 = lv_encoder_24 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_24 = MotorC.GetTacho ()
lv_encoderc_24 = 0
While Math.Abs ( lv_encoderc_24 ) < lv_encoder_24
lv_encoderc_24 = MotorC.GetTacho () - lv_startc_24
lv_lectura1_24 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_24 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_error_24 = ( lv_lectura3_24 - lv_lectura1_24 ) * lv_sentido_24 * 1
lv_u_24 = lv_error_24 * lv_kp_24 + ( lv_error_24 - lv_olderror_24 ) * lv_kd_24
Motor.StartSync ( "BC" , - ( lv_velocidad_24 + lv_u_24 ) , lv_velocidad_24 - lv_u_24 )
lv_olderror_24 = lv_error_24
EndWhile
MotorBC.Off ()
EndSub
Sub m_giro_grados_3
lv_signo_25 = ( lv_velocidad1_25 / lv_velocidad2_25 ) / Math.Abs ( lv_velocidad1_25 / lv_velocidad2_25 )
lv_vmin_25 = Math.Min ( Math.Abs ( lv_velocidad1_25 ) , Math.Abs ( lv_velocidad2_25 ) )
lv_vmax_25 = Math.Max ( Math.Abs ( lv_velocidad1_25 ) , Math.Abs ( lv_velocidad2_25 ) )
lv_encoder_25 = lv_grados_25 * pr_giro_g1 * ( - 2 / ( lv_signo_25 * lv_vmin_25 / lv_vmax_25 - 1 ) )
MotorBC.Off ()
Program.Delay ( 100 )
Motor.MoveSync ( "BC" , - lv_velocidad1_25 , lv_velocidad2_25 , lv_encoder_25 , "True" )
lv_velocidad1_25 = 0
lv_velocidad2_25 = 0
lv_grados_25 = 0
Program.Delay ( 100 )
EndSub
Sub m_giro_encoder_3
lv_encoder_26 = lv_distancia_26 / ( pr_giro_diametro * Math.Pi ) * 360
MotorBC.Off ()
Motor.MoveSync ( "BC" , - lv_velocidad1_26 , lv_velocidad2_26 , lv_encoder_26 , "True" )
EndSub
Sub m_rgb_detect_3
lv_sens_mode_27 = Sensor.GetMode ( lv_sens_27 )
Sensor.SetMode ( lv_sens_27 , 4 )
lv_red_27 = 15
lv_yellow_27 = 60
lv_green_27 = 170
lv_blue_27 = 330
lv_hue_27 = 0
lv_sat_27 = 0
lv_value_27 = 0
lv_color_27 = 0
lv_rnormarray_27 [ 0 ] = 0
lv_gnormarray_27 [ 0 ] = 0
lv_bnormarray_27 [ 0 ] = 0
LCD.Clear ()
For lv_j_27 = 1 To lv_reps_27 Step 1
lv_rgb_27 = Sensor.ReadRaw ( lv_sens_27 , 3 )
lv_rraw_27 = lv_rgb_27 [ 0 ]
lv_graw_27 = lv_rgb_27 [ 1 ]
lv_braw_27 = lv_rgb_27 [ 2 ]
lv_rnormarray_27 [ lv_j_27 ] = Math.Round ( lv_rraw_27 / pr_rgb_rwhite * 255 )
lv_gnormarray_27 [ lv_j_27 ] = Math.Round ( lv_graw_27 / pr_rgb_gwhite * 255 )
lv_bnormarray_27 [ lv_j_27 ] = Math.Round ( lv_braw_27 / pr_rgb_bwhite * 255 )
Program.Delay ( 5 )
EndFor
For lv_j_27 = 1 To lv_reps_27 Step 2
lv_rnorm_27 = lv_rnormarray_27 [ lv_j_27 ] + lv_rnormarray_27 [ lv_j_27 + 1 ]
lv_gnorm_27 = lv_gnormarray_27 [ lv_j_27 ] + lv_gnormarray_27 [ lv_j_27 + 1 ]
lv_bnorm_27 = lv_bnormarray_27 [ lv_j_27 ] + lv_bnormarray_27 [ lv_j_27 + 1 ]
EndFor
lv_rnorm_27 = lv_rnorm_27 / lv_reps_27
lv_gnorm_27 = lv_gnorm_27 / lv_reps_27
lv_bnorm_27 = lv_bnorm_27 / lv_reps_27
lv_max_27 = Math.Max ( Math.Max ( lv_rnorm_27 , lv_gnorm_27 ) , lv_bnorm_27 )
lv_min_27 = Math.Min ( Math.Min ( lv_rnorm_27 , lv_gnorm_27 ) , lv_bnorm_27 )
If lv_max_27 = lv_min_27 Then
lv_hue_27 = 0
Elseif lv_max_27 = lv_rnorm_27 Then
If lv_gnorm_27 >= lv_bnorm_27 Then
lv_hue_27 = 60 * ( lv_gnorm_27 - lv_bnorm_27 ) / ( lv_max_27 - lv_min_27 )
Else
lv_hue_27 = 60 * ( lv_gnorm_27 - lv_bnorm_27 ) / ( lv_max_27 - lv_min_27 ) + 360
EndIf
Elseif lv_max_27 = lv_gnorm_27 Then
lv_hue_27 = 60 * ( lv_bnorm_27 - lv_rnorm_27 ) / ( lv_max_27 - lv_min_27 ) + 120
Else
lv_hue_27 = 60 * ( lv_rnorm_27 - lv_gnorm_27 ) / ( lv_max_27 - lv_min_27 ) + 240
EndIf
If lv_max_27 = 0 Then
lv_sat_27 = 0
Else
lv_sat_27 = 1 - lv_min_27 / lv_max_27
EndIf
lv_value_27 = lv_max_27
lv_rgbgrey_27 = ( pr_rgb_valueblanco + pr_rgb_valuenegro ) / 2
If lv_rraw_27 + lv_graw_27 + lv_braw_27 <= 3 Then
lv_color_27 = 0
Else
If lv_sat_27 < 0.3 Then
If lv_value_27 > lv_rgbgrey_27 Then
lv_color_27 = 6
Else
lv_color_27 = 1
EndIf
Else
If lv_hue_27 >= 0 And lv_hue_27 < lv_red_27 Then
lv_color_27 = 5
Elseif lv_hue_27 >= lv_red_27 And lv_hue_27 < lv_yellow_27 Then
lv_color_27 = 4
Elseif lv_hue_27 >= lv_yellow_27 And lv_hue_27 < lv_green_27 Then
lv_color_27 = 3
Elseif lv_hue_27 >= lv_green_27 And lv_hue_27 < lv_blue_27 Then
lv_color_27 = 2
Else
lv_color_27 = 5
EndIf
EndIf
EndIf
LCD.StopUpdate ()
LCD.Clear ()
LCD.Write ( 33 , 20 , "R: " + lv_rraw_27 )
LCD.Write ( 33 , 35 , "G: " + lv_graw_27 )
LCD.Write ( 33 , 50 , "B: " + lv_braw_27 )
LCD.Write ( 33 , 70 , "color: " + lv_color_27 )
LCD.Write ( 33 , 90 , "Value: " + lv_value_27 )
LCD.Update ()
Sensor.SetMode ( lv_sens_27 , lv_sens_mode_27 )
EndSub
Sub m_rgb_gritar_1
If lv_color_28 = 0 Then
Speaker.Play ( 100 , "WRO2025/Media/Zero" )
Elseif lv_color_28 = 1 Then
Speaker.Play ( 100 , "WRO2025/Media/Black" )
Elseif lv_color_28 = 2 Then
Speaker.Play ( 100 , "WRO2025/Media/BLUE" )
Elseif lv_color_28 = 3 Then
Speaker.Play ( 100 , "WRO2025/Media/GREEN" )
Elseif lv_color_28 = 4 Then
Speaker.Play ( 100 , "WRO2025/Media/YELLOW" )
Elseif lv_color_28 = 5 Then
Speaker.Play ( 100 , "WRO2025/Media/RED" )
Elseif lv_color_28 = 6 Then
Speaker.Play ( 100 , "WRO2025/Media/White" )
Elseif lv_color_28 = 7 Then
Speaker.Play ( 100 , "WRO2025/Media/Brown" )
EndIf
Speaker.Wait ()
EndSub
