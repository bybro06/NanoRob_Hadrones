pr_giro_g1 = 0
pr_rgb_valuenegro = 0
pr_rgb_valueblanco = 0
pr_rgb_rwhite = 0
pr_rgb_gwhite = 0
pr_rgb_bwhite = 0
pr_recto_diametro = 0
pr_giro_diametro = 0
pr_siguelineas_diametro = 0
pr_smart_diametro = 0
pr_siguelineas_negro1 = 0
pr_siguelineas_negro3 = 0
pr_siguelineas_negro4 = 0
pr_siguelineas_blanco1 = 0
pr_siguelineas_blanco3 = 0
pr_siguelineas_blanco4 = 0
pr_smart_negro1 = 0
pr_smart_negro3 = 0
pr_smart_negro4 = 0
pr_smart_blanco1 = 0
pr_smart_blanco3 = 0
pr_smart_blanco4 = 0
pr_recto_negro = 0
pr_recto_blanco = 0
pr_giro_negro = 0
pr_giro_blanco = 0
lv_numero_2 = 0
lv_velocidad_9 = 0
lv_timer_9 = 0
lv_velocidad_10 = 0
lv_encoder_10 = 0
lv_velocidad1_11 = 0
lv_velocidad2_11 = 0
lv_distancia_11 = 0
lv_velocidad_19 = 0
lv_distancia_19 = 0
lv_velocidad1_12 = 0
lv_velocidad2_12 = 0
lv_grados_12 = 0
lv_velocidad_20 = 0
lv_sensor_20 = 0
lv_velocidad1_13 = 0
lv_velocidad2_13 = 0
lv_grados_13 = 0
lv_velocidad_27 = 0
lv_velocidad_28 = 0
lv_encoder_28 = 0
lv_sens_34 = 0
lv_reps_34 = 0
lv_color_34 = 0
lv_velocidad1_14 = 0
lv_velocidad2_14 = 0
lv_distancia_14 = 0
lv_velocidad_21 = 0
lv_tiempo_21 = 0
lv_velocidad1_15 = 0
lv_velocidad2_15 = 0
lv_sens_15 = 0
lv_velocidad_29 = 0
lv_encoder_29 = 0
lv_velocidad_22 = 0
lv_distancia_22 = 0
lv_velocidad1_16 = 0
lv_velocidad2_16 = 0
lv_sens_16 = 0
lv_velocidad_30 = 0
lv_reader_30 = 0
lv_velocidad_23 = 0
lv_sensor_23 = 0
lv_color_23 = 0
lv_velocidad_24 = 0
lv_sensor_24 = 0
lv_velocidad_31 = 0
lv_reader_31 = 0
lv_velocidad_25 = 0
lv_sensor_25 = 0
lv_marking_6 [ 0 ] = 0
lv_velocidad1_17 = 0
lv_velocidad2_17 = 0
lv_tiempo_17 = 0
lv_velocidad1_18 = 0
lv_velocidad2_18 = 0
lv_tiempo_18 = 0
lv_velocidad_26 = 0
lv_sensor_26 = 0
lv_velocidad_32 = 0
lv_encoder_32 = 0
lv_velocidad_33 = 0
lv_encoder_33 = 0
lv_grados_5 = 0
lv_color_35 = 0
lv_marking_4 [ 0 ] = 0
lv_codigo_4 = ""
gv_markinggrande = 0
lv_codigo_6 = ""
gv_diametro = 0
gv_negro1 = 0
gv_negro3 = 0
gv_negro4 = 0
gv_blanco1 = 0
gv_blanco3 = 0
gv_blanco4 = 0
gv_color = 0
gv_marking [ 0 ] = 0
gv_tiempo = 0
f_setup_0 ()
f_main_0 ()
gv_tiempo = Time.Get9 ()
LCD.StopUpdate ()
LCD.Clear ()
LCD.Write ( 5 , 5 , "Tiempo: " + gv_tiempo / 1000 + " s" )
LCD.Update ()
Speaker.Play ( 100 , "WRO2025/Media/Good job" )
Speaker.Wait ()
lv_numero_2 = Math.Floor ( gv_tiempo / 100000 )
f_gritarnumero_1 ()
lv_numero_2 = Math.Floor ( gv_tiempo / 10000 ) - Math.Floor ( gv_tiempo / 100000 ) * 10
f_gritarnumero_1 ()
lv_numero_2 = Math.Floor ( gv_tiempo / 1000 ) - Math.Floor ( gv_tiempo / 10000 ) * 10
f_gritarnumero_1 ()
f_s_0 ()
Sub f_setup_0
Sensor.SetMode ( 1 , 0 )
Sensor.SetMode ( 2 , 4 )
Sensor.SetMode ( 3 , 0 )
Sensor.SetMode ( 4 , 0 )
gv_diametro = 6.24
pr_giro_g1 = 965 / 360
gv_negro1 = 10
gv_negro3 = 9
gv_negro4 = 8
gv_blanco1 = 65
gv_blanco3 = 59
gv_blanco4 = 55
pr_rgb_valuenegro = 4
pr_rgb_valueblanco = 32
pr_rgb_rwhite = 57
pr_rgb_gwhite = 71
pr_rgb_bwhite = 73
pr_recto_diametro = gv_diametro
pr_giro_diametro = gv_diametro
pr_siguelineas_diametro = gv_diametro
pr_smart_diametro = gv_diametro
pr_siguelineas_negro1 = gv_negro1
pr_siguelineas_negro3 = gv_negro3
pr_siguelineas_negro4 = gv_negro4
pr_siguelineas_blanco1 = gv_blanco1
pr_siguelineas_blanco3 = gv_blanco3
pr_siguelineas_blanco4 = gv_blanco4
pr_smart_negro1 = gv_negro1
pr_smart_negro3 = gv_negro3
pr_smart_negro4 = gv_negro4
pr_smart_blanco1 = gv_blanco1
pr_smart_blanco3 = gv_blanco3
pr_smart_blanco4 = gv_blanco4
pr_recto_negro = ( gv_negro1 + gv_negro3 + gv_negro4 ) / 3
pr_recto_blanco = ( gv_blanco1 + gv_blanco3 + gv_blanco4 ) / 3
pr_giro_negro = ( gv_negro1 + gv_negro3 + gv_negro4 ) / 3
pr_giro_blanco = ( gv_blanco1 + gv_blanco3 + gv_blanco4 ) / 3
gv_color = 0
EndSub
Sub f_startarm_0
lv_velocidad_9 = 100
lv_timer_9 = 1000
m_brazo_atimer_2 ()
MotorA.ResetCount ()
Program.Delay ( 100 )
lv_velocidad_10 = 35
lv_encoder_10 = - 200
m_brazo_aencoder_2 ()
MotorA.ResetCount ()
Speaker.Play ( 100 , "WRO2025/Media/Connect" )
Speaker.Wait ()
EndSub
Sub f_main_0
f_gritarvoltaje_0 ()
f_startarm_0 ()
Speaker.Play ( 100 , "WRO2025/Media/One" )
f_s_0 ()
Time.Reset9 ()
Program.Delay ( 100 )
lv_velocidad_10 = 35
lv_encoder_10 = - 260
m_brazo_aencoder_2 ()
lv_velocidad1_11 = 80
lv_velocidad2_11 = 82
lv_distancia_11 = 17
m_giro_encoderf_3 ()
lv_velocidad_19 = 30
lv_distancia_19 = 7
m_recto_encoder_2 ()
lv_velocidad1_12 = 10 * 0.75
lv_velocidad2_12 = 45 * 0.75
lv_grados_12 = 59
m_giro_gradosf_3 ()
lv_velocidad1_12 = 24
lv_velocidad2_12 = 5
lv_grados_12 = 62
m_giro_gradosf_3 ()
lv_velocidad_19 = 50
lv_distancia_19 = 44
m_recto_encoder_2 ()
lv_velocidad_20 = 50
lv_sensor_20 = 4
m_recto_negro1_2 ()
lv_velocidad1_13 = 50
lv_velocidad2_13 = - 40
lv_grados_13 = 92
m_giro_grados_3 ()
lv_velocidad_27 = 40
m_siguelineas_cruce14_1 ()
lv_velocidad1_13 = 70
lv_velocidad2_13 = - 62
lv_grados_13 = 185
m_giro_grados_3 ()
lv_velocidad_28 = 30
lv_encoder_28 = 40
m_siguelineas_encoder31f_2 ()
lv_velocidad_19 = 30
lv_distancia_19 = 9
m_recto_encoder_2 ()
lv_velocidad1_13 = - 30
lv_velocidad2_13 = 30
lv_grados_13 = 90
m_giro_grados_3 ()
lv_velocidad_19 = 20
lv_distancia_19 = 14.5
m_recto_encoder_2 ()
lv_velocidad1_13 = 20
lv_velocidad2_13 = - 20
lv_grados_13 = 93
m_giro_grados_3 ()
Program.Delay ( 100 )
lv_velocidad_19 = - 40
lv_distancia_19 = 2
m_recto_encoder_2 ()
lv_sens_34 = 2
lv_reps_34 = 5
m_rgb_detect_3 ()
gv_markinggrande = lv_color_34
gv_color = gv_markinggrande
Thread.run = f_gritarcolor_0
gv_marking [ 0 ] = 0
lv_velocidad1_13 = 40
lv_velocidad2_13 = 9
lv_grados_13 = 42.5
m_giro_grados_3 ()
lv_velocidad1_13 = 9
lv_velocidad2_13 = 40
lv_grados_13 = 42.5
m_giro_grados_3 ()
lv_velocidad1_14 = 42
lv_velocidad2_14 = 40
lv_distancia_14 = 12
m_giro_encoder_3 ()
lv_velocidad_21 = 80
lv_tiempo_21 = 300
m_recto_tiempo_2 ()
lv_velocidad_19 = - 30
lv_distancia_19 = 6
m_recto_encoder_2 ()
lv_sens_34 = 2
lv_reps_34 = 5
m_rgb_detect_3 ()
gv_marking [ 1 ] = lv_color_34
gv_color = gv_marking [ 1 ]
Thread.run = f_gritarcolor_0
lv_velocidad_19 = - 30
lv_distancia_19 = 5.8
m_recto_encoder_2 ()
lv_velocidad1_13 = 30
lv_velocidad2_13 = - 30
lv_grados_13 = 91
m_giro_grados_3 ()
lv_velocidad_19 = 30
lv_distancia_19 = 8
m_recto_encoder_2 ()
lv_velocidad1_13 = 30
lv_velocidad2_13 = - 30
lv_grados_13 = 86
m_giro_grados_3 ()
lv_velocidad_21 = - 20
lv_tiempo_21 = 500
m_recto_tiempo_2 ()
lv_sens_34 = 2
lv_reps_34 = 5
m_rgb_detect_3 ()
gv_marking [ 2 ] = lv_color_34
gv_color = gv_marking [ 2 ]
Thread.run = f_gritarcolor_0
lv_velocidad_19 = 20
lv_distancia_19 = 8
m_recto_encoder_2 ()
lv_sens_34 = 2
lv_reps_34 = 5
m_rgb_detect_3 ()
gv_marking [ 3 ] = lv_color_34
gv_color = gv_marking [ 3 ]
Thread.run = f_gritarcolor_0
gv_marking [ 0 ] = 14 - ( gv_marking [ 1 ] + gv_marking [ 2 ] + gv_marking [ 3 ] )
lv_velocidad1_15 = 52
lv_velocidad2_15 = 48
lv_sens_15 = 1
m_giro_negro1f_3 ()
lv_velocidad_27 = 60
m_siguelineas_cruce14_1 ()
lv_velocidad1_13 = - 41
lv_velocidad2_13 = 30
lv_grados_13 = 83
m_giro_grados_3 ()
lv_velocidad_29 = 30
lv_encoder_29 = 27
m_siguelineas_encoder14_2 ()
lv_velocidad1_13 = 60
lv_velocidad2_13 = - 40
lv_grados_13 = 88
m_giro_grados_3 ()
lv_velocidad1_11 = - 80
lv_velocidad2_11 = - 80
lv_distancia_11 = 34
m_giro_encoderf_3 ()
lv_velocidad_19 = - 30
lv_distancia_19 = 5
m_recto_encoder_2 ()
lv_velocidad_10 = 30
lv_encoder_10 = 20
m_brazo_aencoder_2 ()
Program.Delay ( 100 )
lv_velocidad_22 = 30
lv_distancia_22 = 16.5
m_recto_encoderf_2 ()
lv_velocidad_21 = 10
lv_tiempo_21 = 200
m_recto_tiempo_2 ()
lv_velocidad_19 = - 20
lv_distancia_19 = 3
m_recto_encoder_2 ()
lv_velocidad_10 = 20
lv_encoder_10 = - 310
m_brazo_aencoder_2 ()
lv_velocidad_19 = 40
lv_distancia_19 = 23.5
m_recto_encoder_2 ()
lv_velocidad_20 = 20
lv_sensor_20 = 1
m_recto_negro1_2 ()
lv_velocidad1_13 = - 5
lv_velocidad2_13 = 20
lv_grados_13 = 85
m_giro_grados_3 ()
lv_velocidad1_16 = - 20
lv_velocidad2_16 = 20
lv_sens_16 = 4
m_giro_negro1_3 ()
lv_velocidad1_13 = 20
lv_velocidad2_13 = 0
lv_grados_13 = 10
m_giro_grados_3 ()
lv_velocidad_29 = 15
lv_encoder_29 = 5
m_siguelineas_encoder14_2 ()
lv_velocidad_30 = 15
lv_reader_30 = 3
m_siguelineas_cruce_externo_2 ()
Program.Delay ( 350 )
lv_velocidad1_14 = 32
lv_velocidad2_14 = 26
lv_distancia_14 = 11
m_giro_encoder_3 ()
lv_velocidad1_14 = 26
lv_velocidad2_14 = 32
lv_distancia_14 = 9
m_giro_encoder_3 ()
lv_velocidad1_14 = 13
lv_velocidad2_14 = 12
lv_distancia_14 = 9
m_giro_encoder_3 ()
lv_velocidad_19 = - 10
lv_distancia_19 = 6
m_recto_encoder_2 ()
f_bajarcuadro_0 ()
lv_velocidad_19 = - 35
lv_distancia_19 = 16.5
m_recto_encoder_2 ()
lv_velocidad1_13 = - 20
lv_velocidad2_13 = 20
lv_grados_13 = 95
m_giro_grados_3 ()
lv_velocidad_29 = 45
lv_encoder_29 = 30
m_siguelineas_encoder14_2 ()
lv_velocidad1_14 = 50
lv_velocidad2_14 = 50
lv_distancia_14 = 14
m_giro_encoder_3 ()
lv_velocidad1_13 = 30
lv_velocidad2_13 = 0
lv_grados_13 = 150
m_giro_grados_3 ()
lv_velocidad_22 = 40
lv_distancia_22 = 9
m_recto_encoderf_2 ()
lv_velocidad_23 = 20
lv_sensor_23 = 1
lv_color_23 = 4
m_recto_color1_3 ()
lv_velocidad_19 = - 20
lv_distancia_19 = 9
m_recto_encoder_2 ()
lv_velocidad_10 = 35
lv_encoder_10 = - 330
m_brazo_aencoder_2 ()
lv_velocidad_19 = - 25
lv_distancia_19 = 6.5
m_recto_encoder_2 ()
f_bajarcuadro_0 ()
lv_velocidad1_13 = - 40
lv_velocidad2_13 = 20
lv_grados_13 = 86
m_giro_grados_3 ()
lv_velocidad_10 = 40
lv_encoder_10 = - 300
m_brazo_aencoder_2 ()
lv_velocidad_22 = 60
lv_distancia_22 = 8
m_recto_encoderf_2 ()
lv_velocidad_23 = 30
lv_sensor_23 = 1
lv_color_23 = 5
m_recto_color1_3 ()
lv_velocidad_19 = - 50
lv_distancia_19 = 14
m_recto_encoder_2 ()
lv_velocidad1_13 = 35
lv_velocidad2_13 = - 35
lv_grados_13 = 152
m_giro_grados_3 ()
lv_velocidad1_11 = 65 * 1.25
lv_velocidad2_11 = 70 * 1.25
lv_distancia_11 = 65
m_giro_encoderf_3 ()
lv_velocidad_21 = 80
lv_tiempo_21 = 400
m_recto_tiempo_2 ()
lv_velocidad_22 = - 80
lv_distancia_22 = 13
m_recto_encoderf_2 ()
lv_velocidad_24 = - 40
lv_sensor_24 = 1
m_recto_blanco1f_2 ()
lv_velocidad_20 = - 30
lv_sensor_20 = 1
m_recto_negro1_2 ()
lv_velocidad1_13 = 41
lv_velocidad2_13 = - 20
lv_grados_13 = 92
m_giro_grados_3 ()
f_s_0 ()
lv_velocidad_28 = 40
lv_encoder_28 = 10
m_siguelineas_encoder31f_2 ()
lv_velocidad_31 = 80
lv_reader_31 = 4
m_siguelineas_cruce_externof_2 ()
lv_velocidad_28 = 80
lv_encoder_28 = 82
m_siguelineas_encoder31f_2 ()
lv_velocidad_28 = 30
lv_encoder_28 = 13
m_siguelineas_encoder31f_2 ()
lv_velocidad1_14 = 20
lv_velocidad2_14 = 19
lv_distancia_14 = 21
m_giro_encoder_3 ()
lv_velocidad1_13 = 15
lv_velocidad2_13 = - 15
lv_grados_13 = 92
m_giro_grados_3 ()
lv_velocidad_19 = 20
lv_distancia_19 = 8
m_recto_encoder_2 ()
lv_velocidad_10 = 30
lv_encoder_10 = - 740
m_brazo_aencoder_2 ()
If gv_markinggrande = 5 Then
Motor.Move ( "D" , - 60 , 90 , "true" )
Else
Motor.Move ( "D" , 60 , ( gv_markinggrande - 2 ) * 90 , "true" )
EndIf
lv_velocidad1_14 = 84
lv_velocidad2_14 = 80
lv_distancia_14 = 28
m_giro_encoder_3 ()
lv_velocidad_25 = 40
lv_sensor_25 = 1
m_recto_blanco1_2 ()
lv_velocidad_19 = - 20
lv_distancia_19 = 1
m_recto_encoder_2 ()
Motor.Stop ( "BC" , "True" )
Program.Delay ( 100 )
lv_velocidad1_13 = 15
lv_velocidad2_13 = - 15
lv_grados_13 = 103
m_giro_grados_3 ()
lv_velocidad1_14 = 82
lv_velocidad2_14 = 80
lv_distancia_14 = 60
m_giro_encoder_3 ()
lv_velocidad_10 = 40
lv_encoder_10 = - 500
m_brazo_aencoder_2 ()
If gv_markinggrande = 5 or gv_markinggrande = 3 Then
Motor.Move ( "D" , 60 , - 90 , "true" )
EndIf
lv_velocidad_10 = 40
lv_encoder_10 = - 330
m_brazo_aencoder_2 ()
lv_velocidad_19 = - 60
lv_distancia_19 = 27
m_recto_encoder_2 ()
lv_velocidad1_13 = 30
lv_velocidad2_13 = - 30
lv_grados_13 = 85
m_giro_grados_3 ()
lv_velocidad_19 = - 70
lv_distancia_19 = 12
m_recto_encoder_2 ()
lv_velocidad_21 = - 30
lv_tiempo_21 = 800
m_recto_tiempo_2 ()
lv_velocidad_19 = 30
lv_distancia_19 = 2.25
m_recto_encoder_2 ()
lv_velocidad_9 = 100
lv_timer_9 = 600
m_brazo_atimer_2 ()
lv_velocidad_10 = 100
lv_encoder_10 = - 300
m_brazo_aencoder_2 ()
lv_velocidad1_13 = 32
lv_velocidad2_13 = - 6
lv_grados_13 = 98
m_giro_grados_3 ()
lv_velocidad_28 = 15
lv_encoder_28 = 5
m_siguelineas_encoder31f_2 ()
lv_velocidad_31 = 15
lv_reader_31 = 4
m_siguelineas_cruce_externof_2 ()
lv_velocidad1_13 = 30
lv_velocidad2_13 = - 7
lv_grados_13 = 92
m_giro_grados_3 ()
lv_velocidad_19 = 20
lv_distancia_19 = 7.5
m_recto_encoder_2 ()
Program.Delay ( 100 )
lv_marking_6 = gv_marking
f_ordenarbloques_1 ()
lv_velocidad_19 = 30
lv_distancia_19 = 10
m_recto_encoder_2 ()
lv_velocidad_30 = 30
lv_reader_30 = 3
m_siguelineas_cruce_externo_2 ()
lv_velocidad1_13 = - 16
lv_velocidad2_13 = 30
lv_grados_13 = 95
m_giro_grados_3 ()
lv_velocidad_29 = 35
lv_encoder_29 = 20
m_siguelineas_encoder14_2 ()
lv_velocidad1_14 = 36
lv_velocidad2_14 = 34
lv_distancia_14 = 43
m_giro_encoder_3 ()
lv_velocidad1_13 = - 20
lv_velocidad2_13 = 20
lv_grados_13 = 92
m_giro_grados_3 ()
lv_velocidad1_17 = 30
lv_velocidad2_17 = 26
lv_tiempo_17 = 1500
m_giro_tiempof_3 ()
lv_velocidad1_18 = 60
lv_velocidad2_18 = 60
lv_tiempo_18 = 300
m_giro_tiempo_3 ()
lv_velocidad_19 = - 20
lv_distancia_19 = 10.5
m_recto_encoder_2 ()
lv_velocidad1_13 = - 20
lv_velocidad2_13 = 20
lv_grados_13 = 95
m_giro_grados_3 ()
lv_velocidad1_18 = 40
lv_velocidad2_18 = 37
lv_tiempo_18 = 500
m_giro_tiempo_3 ()
lv_velocidad_10 = 50
lv_encoder_10 = - 330
m_brazo_aencoder_2 ()
lv_velocidad1_14 = - 15
lv_velocidad2_14 = - 16
lv_distancia_14 = 13
m_giro_encoder_3 ()
lv_velocidad_19 = 15
lv_distancia_19 = 8
m_recto_encoder_2 ()
lv_velocidad_10 = 30
lv_encoder_10 = 0
m_brazo_aencoder_2 ()
lv_velocidad_19 = - 15
lv_distancia_19 = 8.5
m_recto_encoder_2 ()
lv_velocidad_19 = 30
lv_distancia_19 = 17
m_recto_encoder_2 ()
lv_velocidad_19 = - 15
lv_distancia_19 = 5
m_recto_encoder_2 ()
lv_velocidad1_13 = - 15
lv_velocidad2_13 = 15
lv_grados_13 = 88
m_giro_grados_3 ()
lv_velocidad_21 = - 30
lv_tiempo_21 = 500
m_recto_tiempo_2 ()
lv_velocidad_19 = 15
lv_distancia_19 = 12
m_recto_encoder_2 ()
lv_velocidad1_13 = - 10
lv_velocidad2_13 = 10
lv_grados_13 = 9
m_giro_grados_3 ()
lv_velocidad_10 = 20
lv_encoder_10 = - 150
m_brazo_aencoder_2 ()
Program.Delay ( 200 )
lv_velocidad_19 = 10
lv_distancia_19 = 7
m_recto_encoder_2 ()
lv_velocidad_19 = - 40
lv_distancia_19 = 8
m_recto_encoder_2 ()
lv_velocidad_10 = 50
lv_encoder_10 = 0
m_brazo_aencoder_2 ()
lv_velocidad1_13 = 10
lv_velocidad2_13 = - 10
lv_grados_13 = 29
m_giro_grados_3 ()
lv_velocidad_22 = 100
lv_distancia_22 = 65
m_recto_encoderf_2 ()
lv_velocidad_24 = 40
lv_sensor_24 = 1
m_recto_blanco1f_2 ()
lv_velocidad_26 = 20
lv_sensor_26 = 1
m_recto_negro1f_2 ()
lv_velocidad1_13 = - 15
lv_velocidad2_13 = 30
lv_grados_13 = 90
m_giro_grados_3 ()
lv_velocidad_32 = 30
lv_encoder_32 = 8
m_siguelineas_encoder14f_2 ()
lv_velocidad_32 = 85
lv_encoder_32 = 74
m_siguelineas_encoder14f_2 ()
lv_velocidad_30 = 40
lv_reader_30 = 3
m_siguelineas_cruce_externo_2 ()
lv_velocidad_19 = 20
lv_distancia_19 = 2
m_recto_encoder_2 ()
lv_velocidad1_13 = - 16
lv_velocidad2_13 = 30
lv_grados_13 = 93
m_giro_grados_3 ()
lv_velocidad_33 = 50
lv_encoder_33 = 40
m_siguelineas_encoder31_2 ()
lv_velocidad1_14 = 52
lv_velocidad2_14 = 50
lv_distancia_14 = 30
m_giro_encoder_3 ()
lv_velocidad_21 = 40
lv_tiempo_21 = 700
m_recto_tiempo_2 ()
lv_velocidad1_13 = 8
lv_velocidad2_13 = - 32
lv_grados_13 = 100
m_giro_grados_3 ()
lv_velocidad_10 = 30
lv_encoder_10 = - 300
m_brazo_aencoder_2 ()
lv_velocidad_19 = 30
lv_distancia_19 = 17
m_recto_encoder_2 ()
lv_velocidad_10 = 30
lv_encoder_10 = 0
m_brazo_aencoder_2 ()
lv_velocidad_19 = - 30
lv_distancia_19 = 12
m_recto_encoder_2 ()
EndSub
Sub f_safetytimerbrazo_0
lv_velocidad_10 = 30
lv_encoder_10 = - 730
m_brazo_aencoder_2 ()
MotorA.OffAndBrake ()
EndSub
Sub f_gritarcolor_0
lv_color_35 = gv_color
m_rgb_gritar_1 ()
EndSub
Sub f_gritarvoltaje_0
lv_voltaje_1 = EV3.BatteryVoltage
lv_numero_2 = Math.Floor ( lv_voltaje_1 )
f_gritarnumero_1 ()
lv_numero_2 = Math.Floor ( lv_voltaje_1 * 10 ) - Math.Floor ( lv_voltaje_1 ) * 10
f_gritarnumero_1 ()
lv_numero_2 = Math.Floor ( lv_voltaje_1 * 100 ) - Math.Floor ( lv_voltaje_1 * 10 ) * 10
f_gritarnumero_1 ()
EndSub
Sub f_gritarnumero_1
If lv_numero_2 = 0 Then
Speaker.Play ( 100 , "WRO2025/Media/ZERO" )
ElseIf lv_numero_2 = 1 Then
Speaker.Play ( 100 , "WRO2025/Media/One" )
ElseIf lv_numero_2 = 2 Then
Speaker.Play ( 100 , "WRO2025/Media/Two" )
ElseIf lv_numero_2 = 3 Then
Speaker.Play ( 100 , "WRO2025/Media/Three" )
ElseIf lv_numero_2 = 4 Then
Speaker.Play ( 100 , "WRO2025/Media/Four" )
ElseIf lv_numero_2 = 5 Then
Speaker.Play ( 100 , "WRO2025/Media/Five" )
ElseIf lv_numero_2 = 6 Then
Speaker.Play ( 100 , "WRO2025/Media/Six" )
ElseIf lv_numero_2 = 7 Then
Speaker.Play ( 100 , "WRO2025/Media/Seven" )
ElseIf lv_numero_2 = 8 Then
Speaker.Play ( 100 , "WRO2025/Media/Eight" )
ElseIf lv_numero_2 = 9 Then
Speaker.Play ( 100 , "WRO2025/Media/Nine" )
ElseIf lv_numero_2 = 10 Then
Speaker.Play ( 100 , "WRO2025/Media/Ten" )
EndIf
Speaker.Wait ()
EndSub
Sub f_bajarcuadro_0
Thread.Run = f_safetytimerbrazo_0
Program.Delay ( 1300 )
MotorA.Off ()
lv_velocidad_10 = 30
lv_encoder_10 = - 730
m_brazo_aencoder_2 ()
EndSub
Sub f_codigo_2
lv_codigo_4 = ""
lv_aux_4 = lv_marking_4 [ 2 ]
lv_marking_4 [ 2 ] = lv_marking_4 [ 3 ]
lv_marking_4 [ 3 ] = lv_aux_4
For lv_i_4 = 0 To 4
If lv_marking_4 [ lv_i_4 ] = 2 Then
lv_codigo_4 = lv_codigo_4 + "Z"
ElseIf lv_marking_4 [ lv_i_4 ] = 3 Then
lv_codigo_4 = lv_codigo_4 + "V"
ElseIf lv_marking_4 [ lv_i_4 ] = 4 Then
lv_codigo_4 = lv_codigo_4 + "A"
ElseIf lv_marking_4 [ lv_i_4 ] = 5 Then
lv_codigo_4 = lv_codigo_4 + "R"
EndIf
EndFor
LCD.StopUpdate ()
LCD.Clear ()
LCD.Write ( 5 , 5 , "Codigo: " + lv_codigo_4 )
LCD.Update ()
EndSub
Sub f_rotar_1
lv_signo_5 = lv_grados_5 / Math.Abs ( lv_grados_5 )
f_bajarcuadro_0 ()
Program.Delay ( 100 )
Motor.Move ( "D" , 34 * lv_signo_5 , Math.Abs ( lv_grados_5 ) - 4 , "True" )
Program.Delay ( 200 )
lv_velocidad_10 = 30
lv_encoder_10 = - 360
m_brazo_aencoder_2 ()
EndSub
Sub f_ordenarbloques_1
lv_marking_4 = lv_marking_6
f_codigo_2 ()
lv_codigo_6 = lv_codigo_4
If lv_codigo_6 = "VRZA" Then
ElseIf lv_codigo_6 = "VRAZ" Then
f_swap_0 ()
ElseIf lv_codigo_6 = "VZRA" Then
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "VZAR" Then
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "VARZ" Then
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "VAZR" Then
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "RVZA" Then
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
ElseIf lv_codigo_6 = "RVAZ" Then
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "RZVA" Then
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "RZAV" Then
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "RAVZ" Then
lv_grados_5 = 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "RAZV" Then
lv_grados_5 = 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "ZVAR" Then
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "ZVRA" Then
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "ZRVA" Then
lv_grados_5 = 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "ZRAV" Then
lv_grados_5 = 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "ZAVR" Then
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "ZARV" Then
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
ElseIf lv_codigo_6 = "AVRZ" Then
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "AVZR" Then
f_swap_0 ()
lv_grados_5 = - 90
f_rotar_1 ()
ElseIf lv_codigo_6 = "ARVZ" Then
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
ElseIf lv_codigo_6 = "ARZV" Then
lv_grados_5 = - 90
f_rotar_1 ()
f_swap_0 ()
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
ElseIf lv_codigo_6 = "AZVR" Then
lv_grados_5 = 180
f_rotar_1 ()
f_swap_0 ()
Else
lv_grados_5 = 180
f_rotar_1 ()
EndIf
lv_velocidad_19 = - 20
lv_distancia_19 = 8
m_recto_encoder_2 ()
lv_velocidad1_13 = 15
lv_velocidad2_13 = - 15
lv_grados_13 = 182
m_giro_grados_3 ()
lv_velocidad_19 = - 30
lv_distancia_19 = 22
m_recto_encoder_2 ()
lv_velocidad_10 = 20
lv_encoder_10 = 24
m_brazo_aencoder_2 ()
EndSub
Sub f_swap_0
lv_velocidad_19 = - 15
lv_distancia_19 = 7.5
m_recto_encoder_2 ()
f_bajarcuadro_0 ()
lv_velocidad_19 = - 15
lv_distancia_19 = 2
m_recto_encoder_2 ()
Motor.Move ( "D" , 50 , 180 , "True" )
lv_velocidad_10 = 30
lv_encoder_10 = - 360
m_brazo_aencoder_2 ()
lv_velocidad_19 = 15
lv_distancia_19 = 15
m_recto_encoder_2 ()
lv_velocidad_19 = - 15
lv_distancia_19 = 5
m_recto_encoder_2 ()
EndSub
Sub f_s_0
Buttons.Flush ()
Buttons.Wait ()
EndSub
Sub m_brazo_atimer_2
Time.Reset1 ()
While Time.Get1 () < lv_timer_9
MotorA.StartSpeed ( lv_velocidad_9 )
EndWhile
Motor.Stop ( "A" , "True" )
EndSub
Sub m_brazo_aencoder_2
lv_encdiff_10 = lv_encoder_10 - Motor.GetCount ( "A" )
lv_signo_10 = lv_encdiff_10 / Math.Abs ( lv_encdiff_10 )
If lv_encdiff_10 <> 0 Then
Motor.Move ( "A" , lv_velocidad_10 * lv_signo_10 , Math.Abs ( lv_encdiff_10 ) , "True" )
EndIf
Motor.Stop ( "A" , "True" )
EndSub
Sub m_giro_encoderf_3
lv_encoder_11 = lv_distancia_11 / ( pr_giro_diametro * Math.Pi ) * 360
MotorBC.Off ()
Motor.MoveSync ( "BC" , - lv_velocidad1_11 , lv_velocidad2_11 , lv_encoder_11 , "False" )
EndSub
Sub m_giro_gradosf_3
lv_signo_12 = ( lv_velocidad1_12 / lv_velocidad2_12 ) / Math.Abs ( lv_velocidad1_12 / lv_velocidad2_12 )
lv_vmin_12 = Math.Min ( Math.Abs ( lv_velocidad1_12 ) , Math.Abs ( lv_velocidad2_12 ) )
lv_vmax_12 = Math.Max ( Math.Abs ( lv_velocidad1_12 ) , Math.Abs ( lv_velocidad2_12 ) )
lv_encoder_12 = lv_grados_12 * pr_giro_g1 * ( - 2 / ( lv_signo_12 * lv_vmin_12 / lv_vmax_12 - 1 ) )
MotorBC.Off ()
Program.Delay ( 100 )
Motor.MoveSync ( "BC" , - lv_velocidad1_12 , lv_velocidad2_12 , lv_encoder_12 , "False" )
lv_velocidad1_12 = 0
lv_velocidad2_12 = 0
lv_grados_12 = 0
Program.Delay ( 100 )
EndSub
Sub m_giro_grados_3
lv_signo_13 = ( lv_velocidad1_13 / lv_velocidad2_13 ) / Math.Abs ( lv_velocidad1_13 / lv_velocidad2_13 )
lv_vmin_13 = Math.Min ( Math.Abs ( lv_velocidad1_13 ) , Math.Abs ( lv_velocidad2_13 ) )
lv_vmax_13 = Math.Max ( Math.Abs ( lv_velocidad1_13 ) , Math.Abs ( lv_velocidad2_13 ) )
lv_encoder_13 = lv_grados_13 * pr_giro_g1 * ( - 2 / ( lv_signo_13 * lv_vmin_13 / lv_vmax_13 - 1 ) )
MotorBC.Off ()
Program.Delay ( 100 )
Motor.MoveSync ( "BC" , - lv_velocidad1_13 , lv_velocidad2_13 , lv_encoder_13 , "True" )
lv_velocidad1_13 = 0
lv_velocidad2_13 = 0
lv_grados_13 = 0
Program.Delay ( 100 )
EndSub
Sub m_giro_encoder_3
lv_encoder_14 = lv_distancia_14 / ( pr_giro_diametro * Math.Pi ) * 360
MotorBC.Off ()
Motor.MoveSync ( "BC" , - lv_velocidad1_14 , lv_velocidad2_14 , lv_encoder_14 , "True" )
EndSub
Sub m_giro_negro1f_3
lv_lectura_15 = 50
While lv_lectura_15 > 15
lv_lectura_15 = ( Sensor.ReadPercent ( lv_sens_15 ) - pr_giro_negro ) / pr_giro_blanco * ( 100 - pr_giro_negro )
Motor.StartSync ( "BC" , - lv_velocidad1_15 , lv_velocidad2_15 )
EndWhile
Motor.Stop ( "BC" , "False" )
EndSub
Sub m_giro_negro1_3
lv_lectura_16 = 50
While lv_lectura_16 > 15
lv_lectura_16 = ( Sensor.ReadPercent ( lv_sens_16 ) - pr_giro_negro ) / pr_giro_blanco * ( 100 - pr_giro_negro )
Motor.StartSync ( "BC" , - lv_velocidad1_16 , lv_velocidad2_16 )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub m_giro_tiempof_3
Time.Reset3 ()
While Time.Get3 () < lv_tiempo_17
Motor.StartSync ( "BC" , - lv_velocidad1_17 , lv_velocidad2_17 )
EndWhile
Motor.Stop ( "BC" , "False" )
EndSub
Sub m_giro_tiempo_3
Time.Reset3 ()
While Time.Get3 () < lv_tiempo_18
Motor.StartSync ( "BC" , - lv_velocidad1_18 , lv_velocidad2_18 )
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
Sub m_recto_encoder_2
lv_safetytimer_19 = 11286 / ( lv_velocidad_19 / 10 ) * ( lv_distancia_19 / 100 ) / ( pr_recto_diametro / 6.24 )
lv_correccion_19 = ( Math.abs ( lv_velocidad_19 ) - 20 ) * 0.05
lv_enc_19 = ( lv_distancia_19 - lv_correccion_19 ) * 360 / Math.Pi / pr_recto_diametro
MotorB.ResetCount ()
MotorC.ResetCount ()
MotorBC.Off ()
Program.Delay ( 100 )
lv_c_19 = - 0.05
Time.Reset4 ()
While Math.Abs ( MotorC.GetTacho () ) < lv_enc_19 And Time.Get4 () < lv_safetytimer_19 + 2000
Motor.StartSync ( "BC" , - lv_velocidad_19 * ( 1 + lv_c_19 / 2 ) , lv_velocidad_19 * ( 1 - lv_c_19 / 2 ) )
EndWhile
If Time.Get4 () > lv_safetytimer_19 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.OffAndBrake ()
EndSub
Sub m_recto_negro1_2
lv_correccion_20 = 0.002
MotorBC.Off ()
lv_lectura_20 = 50
While lv_lectura_20 > 15
lv_lectura_20 = ( Sensor.ReadPercent ( lv_sensor_20 ) - pr_recto_negro ) / pr_recto_blanco * ( 100 - pr_recto_negro )
Motor.StartSync ( "BC" , - lv_velocidad_20 * ( 1 - lv_correccion_20 ) , lv_velocidad_20 * ( 1 - lv_correccion_20 ) )
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_recto_tiempo_2
lv_correccion_21 = 0.002
Time.Reset3 ()
MotorBC.Off ()
While Time.Get3 () < lv_tiempo_21
Motor.StartSync ( "BC" , - lv_velocidad_21 * ( 1 - lv_correccion_21 ) , lv_velocidad_21 * ( 1 - lv_correccion_21 ) )
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_recto_encoderf_2
lv_safetytimer_22 = 11286 / ( lv_velocidad_22 / 10 ) * ( lv_distancia_22 / 100 ) / ( pr_recto_diametro / 6.24 )
lv_correccion_22 = ( Math.abs ( lv_velocidad_22 ) - 20 ) * 0.05
lv_enc_22 = ( lv_distancia_22 - lv_correccion_22 ) * 360 / Math.Pi / pr_recto_diametro
MotorB.ResetCount ()
MotorC.ResetCount ()
MotorBC.Off ()
Program.Delay ( 100 )
lv_c_22 = - 0.05
Time.Reset4 ()
While Math.Abs ( MotorC.GetTacho () ) < lv_enc_22 And Time.Get4 () < lv_safetytimer_22 + 2000
Motor.StartSync ( "BC" , - lv_velocidad_22 * ( 1 + lv_c_22 / 2 ) , lv_velocidad_22 * ( 1 - lv_c_22 / 2 ) )
EndWhile
If Time.Get4 () > lv_safetytimer_22 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.Off ()
EndSub
Sub m_recto_color1_3
lv_correccion_23 = 0.002
lv_mode_23 = Sensor.GetMode ( lv_sensor_23 )
Sensor.SetMode ( lv_sensor_23 , 2 )
MotorBC.Off ()
While Sensor.ReadRawValue ( lv_sensor_23 , 0 ) <> lv_color_23
Motor.StartSync ( "BC" , - lv_velocidad_23 * ( 1 + lv_correccion_23 ) , lv_velocidad_23 * ( 1 - lv_correccion_23 ) )
EndWhile
MotorBC.OffAndBrake ()
Sensor.SetMode ( lv_sensor_23 , lv_mode_23 )
EndSub
Sub m_recto_blanco1f_2
lv_correccion_24 = 0.002
MotorBC.Off ()
lv_lectura_24 = 50
While lv_lectura_24 < 60
lv_lectura_24 = ( Sensor.ReadPercent ( lv_sensor_24 ) - pr_recto_negro ) / pr_recto_blanco * ( 100 - pr_recto_negro )
Motor.StartSync ( "BC" , - lv_velocidad_24 * ( 1 - lv_correccion_24 ) , lv_velocidad_24 * ( 1 - lv_correccion_24 ) )
EndWhile
MotorBC.Off ()
EndSub
Sub m_recto_blanco1_2
lv_correccion_25 = 0.002
MotorBC.Off ()
lv_lectura_25 = 50
While lv_lectura_25 < 60
lv_lectura_25 = ( Sensor.ReadPercent ( lv_sensor_25 ) - pr_recto_negro ) / pr_recto_blanco * ( 100 - pr_recto_negro )
Motor.StartSync ( "BC" , - lv_velocidad_25 * ( 1 - lv_correccion_25 ) , lv_velocidad_25 * ( 1 - lv_correccion_25 ) )
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_recto_negro1f_2
lv_correccion_26 = 0.002
MotorBC.Off ()
lv_lectura_26 = 50
While lv_lectura_26 > 15
lv_lectura_26 = ( Sensor.ReadPercent ( lv_sensor_26 ) - pr_recto_negro ) / pr_recto_blanco * ( 100 - pr_recto_negro )
Motor.StartSync ( "BC" , - lv_velocidad_26 * ( 1 - lv_correccion_26 ) , lv_velocidad_26 * ( 1 - lv_correccion_26 ) )
EndWhile
MotorBC.Off ()
EndSub
Sub m_siguelineas_cruce14_1
lv_velocidad_27 = lv_velocidad_27 * 1
lv_lectura1_27 = 50
lv_lectura3_27 = 50
lv_lectura4_27 = 50
lv_kp_27 = Math.Power ( lv_velocidad_27 , 5 / 6 ) / 440
lv_kd_27 = lv_kp_27 * 70
lv_error_27 = 0
lv_olderror_27 = 0
lv_u_27 = 0
lv_sentido_27 = lv_velocidad_27 / Math.Abs ( lv_velocidad_27 )
While lv_lectura1_27 > 10 Or lv_lectura4_27 > 10
lv_lectura1_27 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura4_27 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_27 = ( lv_lectura1_27 - lv_lectura4_27 ) * lv_sentido_27 * 1
lv_u_27 = lv_error_27 * lv_kp_27 + ( lv_error_27 - lv_olderror_27 ) * lv_kd_27
Motor.StartSync ( "BC" , - ( lv_velocidad_27 + lv_u_27 ) , lv_velocidad_27 - lv_u_27 )
lv_olderror_27 = lv_error_27
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_siguelineas_encoder31f_2
lv_velocidad_28 = lv_velocidad_28 * 1
lv_lectura1_28 = 50
lv_lectura3_28 = 50
lv_lectura4_28 = 50
lv_kp_28 = Math.Power ( lv_velocidad_28 , 5 / 6 ) / 440
lv_kd_28 = lv_kp_28 * 70
lv_error_28 = 0
lv_olderror_28 = 0
lv_u_28 = 0
lv_sentido_28 = lv_velocidad_28 / Math.Abs ( lv_velocidad_28 )
lv_encoder_28 = lv_encoder_28 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_28 = MotorC.GetTacho ()
lv_encoderc_28 = 0
lv_safetytimer_28 = 11286 / ( lv_velocidad_28 / 10 ) * ( lv_encoder_28 / 100 ) / ( pr_siguelineas_diametro / 6.24 )
Time.Reset4 ()
While Math.Abs ( lv_encoderc_28 ) < lv_encoder_28 And Time.Get4 () < lv_safetytimer_28 + 2000
lv_encoderc_28 = MotorC.GetTacho () - lv_startc_28
lv_lectura1_28 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_28 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_error_28 = ( lv_lectura3_28 - lv_lectura1_28 ) * lv_sentido_28 * 1
lv_u_28 = lv_error_28 * lv_kp_28 + ( lv_error_28 - lv_olderror_28 ) * lv_kd_28
Motor.StartSync ( "BC" , - ( lv_velocidad_28 + lv_u_28 ) , lv_velocidad_28 - lv_u_28 )
lv_olderror_28 = lv_error_28
EndWhile
If Time.Get4 () > lv_safetytimer_28 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.Off ()
EndSub
Sub m_siguelineas_encoder14_2
lv_velocidad_29 = lv_velocidad_29 * 1
lv_lectura1_29 = 50
lv_lectura3_29 = 50
lv_lectura4_29 = 50
lv_kp_29 = Math.Power ( lv_velocidad_29 , 5 / 6 ) / 440
lv_kd_29 = lv_kp_29 * 70
lv_error_29 = 0
lv_olderror_29 = 0
lv_u_29 = 0
lv_sentido_29 = lv_velocidad_29 / Math.Abs ( lv_velocidad_29 )
lv_encoder_29 = lv_encoder_29 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_29 = MotorC.GetTacho ()
lv_encoderc_29 = 0
lv_safetytimer_29 = 11286 / ( lv_velocidad_29 / 10 ) * ( lv_encoder_29 / 100 ) / ( pr_siguelineas_diametro / 6.24 )
Time.Reset4 ()
While Math.Abs ( lv_encoderc_29 ) < lv_encoder_29 And Time.Get4 () < lv_safetytimer_29 + 2000
lv_encoderc_29 = MotorC.GetTacho () - lv_startc_29
lv_lectura1_29 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura4_29 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_29 = ( lv_lectura1_29 - lv_lectura4_29 ) * lv_sentido_29 * 1
lv_u_29 = lv_error_29 * lv_kp_29 + ( lv_error_29 - lv_olderror_29 ) * lv_kd_29
Motor.StartSync ( "BC" , - ( lv_velocidad_29 + lv_u_29 ) , lv_velocidad_29 - lv_u_29 )
lv_olderror_29 = lv_error_29
EndWhile
If Time.Get4 () > lv_safetytimer_29 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.OffAndBrake ()
EndSub
Sub m_siguelineas_cruce_externo_2
lv_velocidad_30 = lv_velocidad_30 * 1
lv_lectura1_30 = 50
lv_lectura3_30 = 50
lv_lectura4_30 = 50
lv_kp_30 = Math.Power ( lv_velocidad_30 , 5 / 6 ) / 440
lv_kd_30 = lv_kp_30 * 70
lv_error_30 = 0
lv_olderror_30 = 0
lv_u_30 = 0
lv_sentido_30 = lv_velocidad_30 / Math.Abs ( lv_velocidad_30 )
lv_lectura_30 = 50
While lv_lectura_30 > 7
If lv_reader_30 = 3 Then
lv_lectura_30 = lv_lectura3_30
lv_lecturaizq_30 = lv_lectura1_30
lv_lecturadch_30 = lv_lectura4_30
Else
lv_lectura_30 = lv_lectura4_30
lv_lecturaizq_30 = lv_lectura3_30
lv_lecturadch_30 = lv_lectura1_30
EndIf
lv_lectura1_30 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_30 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_lectura4_30 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_30 = ( lv_lecturaizq_30 - lv_lecturadch_30 ) * lv_sentido_30 * 1
lv_u_30 = lv_error_30 * lv_kp_30 + ( lv_error_30 - lv_olderror_30 ) * lv_kd_30
Motor.StartSync ( "BC" , - ( lv_velocidad_30 + lv_u_30 ) , lv_velocidad_30 - lv_u_30 )
lv_olderror_30 = lv_error_30
EndWhile
MotorBC.OffAndBrake ()
EndSub
Sub m_siguelineas_cruce_externof_2
lv_velocidad_31 = lv_velocidad_31 * 1
lv_lectura1_31 = 50
lv_lectura3_31 = 50
lv_lectura4_31 = 50
lv_kp_31 = Math.Power ( lv_velocidad_31 , 5 / 6 ) / 440
lv_kd_31 = lv_kp_31 * 70
lv_error_31 = 0
lv_olderror_31 = 0
lv_u_31 = 0
lv_sentido_31 = lv_velocidad_31 / Math.Abs ( lv_velocidad_31 )
lv_lectura_31 = 50
While lv_lectura_31 > 7
If lv_reader_31 = 3 Then
lv_lectura_31 = lv_lectura3_31
lv_lecturaizq_31 = lv_lectura1_31
lv_lecturadch_31 = lv_lectura4_31
Else
lv_lectura_31 = lv_lectura4_31
lv_lecturaizq_31 = lv_lectura3_31
lv_lecturadch_31 = lv_lectura1_31
EndIf
lv_lectura1_31 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_31 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_lectura4_31 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_31 = ( lv_lecturaizq_31 - lv_lecturadch_31 ) * lv_sentido_31 * 1
lv_u_31 = lv_error_31 * lv_kp_31 + ( lv_error_31 - lv_olderror_31 ) * lv_kd_31
Motor.StartSync ( "BC" , - ( lv_velocidad_31 + lv_u_31 ) , lv_velocidad_31 - lv_u_31 )
lv_olderror_31 = lv_error_31
EndWhile
MotorBC.Off ()
EndSub
Sub m_siguelineas_encoder14f_2
lv_velocidad_32 = lv_velocidad_32 * 1
lv_lectura1_32 = 50
lv_lectura3_32 = 50
lv_lectura4_32 = 50
lv_kp_32 = Math.Power ( lv_velocidad_32 , 5 / 6 ) / 440
lv_kd_32 = lv_kp_32 * 70
lv_error_32 = 0
lv_olderror_32 = 0
lv_u_32 = 0
lv_sentido_32 = lv_velocidad_32 / Math.Abs ( lv_velocidad_32 )
lv_encoder_32 = lv_encoder_32 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_32 = MotorC.GetTacho ()
lv_encoderc_32 = 0
lv_safetytimer_32 = 11286 / ( lv_velocidad_32 / 10 ) * ( lv_encoder_32 / 100 ) / ( pr_siguelineas_diametro / 6.24 )
Time.Reset4 ()
While Math.Abs ( lv_encoderc_32 ) < lv_encoder_32 And Time.Get4 () < lv_safetytimer_32 + 2000
lv_encoderc_32 = MotorC.GetTacho () - lv_startc_32
lv_lectura1_32 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura4_32 = ( Sensor.ReadPercent ( 4 ) - pr_siguelineas_negro4 ) / pr_siguelineas_blanco4 * ( 100 - pr_siguelineas_negro4 )
lv_error_32 = ( lv_lectura1_32 - lv_lectura4_32 ) * lv_sentido_32 * 1
lv_u_32 = lv_error_32 * lv_kp_32 + ( lv_error_32 - lv_olderror_32 ) * lv_kd_32
Motor.StartSync ( "BC" , - ( lv_velocidad_32 + lv_u_32 ) , lv_velocidad_32 - lv_u_32 )
lv_olderror_32 = lv_error_32
EndWhile
If Time.Get4 () > lv_safetytimer_32 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.Off ()
EndSub
Sub m_siguelineas_encoder31_2
lv_velocidad_33 = lv_velocidad_33 * 1
lv_lectura1_33 = 50
lv_lectura3_33 = 50
lv_lectura4_33 = 50
lv_kp_33 = Math.Power ( lv_velocidad_33 , 5 / 6 ) / 440
lv_kd_33 = lv_kp_33 * 70
lv_error_33 = 0
lv_olderror_33 = 0
lv_u_33 = 0
lv_sentido_33 = lv_velocidad_33 / Math.Abs ( lv_velocidad_33 )
lv_encoder_33 = lv_encoder_33 / ( pr_siguelineas_diametro * Math.Pi ) * 360
lv_startc_33 = MotorC.GetTacho ()
lv_encoderc_33 = 0
lv_safetytimer_33 = 11286 / ( lv_velocidad_33 / 10 ) * ( lv_encoder_33 / 100 ) / ( pr_siguelineas_diametro / 6.24 )
Time.Reset4 ()
While Math.Abs ( lv_encoderc_33 ) < lv_encoder_33 And Time.Get4 () < lv_safetytimer_33 + 2000
lv_encoderc_33 = MotorC.GetTacho () - lv_startc_33
lv_lectura1_33 = ( Sensor.ReadPercent ( 1 ) - pr_siguelineas_negro1 ) / pr_siguelineas_blanco1 * ( 100 - pr_siguelineas_negro1 )
lv_lectura3_33 = ( Sensor.ReadPercent ( 3 ) - pr_siguelineas_negro3 ) / pr_siguelineas_blanco3 * ( 100 - pr_siguelineas_negro3 )
lv_error_33 = ( lv_lectura3_33 - lv_lectura1_33 ) * lv_sentido_33 * 1
lv_u_33 = lv_error_33 * lv_kp_33 + ( lv_error_33 - lv_olderror_33 ) * lv_kd_33
Motor.StartSync ( "BC" , - ( lv_velocidad_33 + lv_u_33 ) , lv_velocidad_33 - lv_u_33 )
lv_olderror_33 = lv_error_33
EndWhile
If Time.Get4 () > lv_safetytimer_33 + 2000 Then
Speaker.Play ( 100 , "WRO2025/Media/General alert" )
Speaker.Wait ()
EndIf
MotorBC.OffAndBrake ()
EndSub
Sub m_rgb_detect_3
lv_sens_mode_34 = Sensor.GetMode ( lv_sens_34 )
Sensor.SetMode ( lv_sens_34 , 4 )
lv_red_34 = 15
lv_yellow_34 = 60
lv_green_34 = 170
lv_blue_34 = 330
lv_hue_34 = 0
lv_sat_34 = 0
lv_value_34 = 0
lv_color_34 = 0
lv_rnormarray_34 [ 0 ] = 0
lv_gnormarray_34 [ 0 ] = 0
lv_bnormarray_34 [ 0 ] = 0
LCD.Clear ()
For lv_j_34 = 1 To lv_reps_34 Step 1
lv_rgb_34 = Sensor.ReadRaw ( lv_sens_34 , 3 )
lv_rraw_34 = lv_rgb_34 [ 0 ]
lv_graw_34 = lv_rgb_34 [ 1 ]
lv_braw_34 = lv_rgb_34 [ 2 ]
lv_rnormarray_34 [ lv_j_34 ] = Math.Round ( lv_rraw_34 / pr_rgb_rwhite * 255 )
lv_gnormarray_34 [ lv_j_34 ] = Math.Round ( lv_graw_34 / pr_rgb_gwhite * 255 )
lv_bnormarray_34 [ lv_j_34 ] = Math.Round ( lv_braw_34 / pr_rgb_bwhite * 255 )
Program.Delay ( 5 )
EndFor
For lv_j_34 = 1 To lv_reps_34 Step 2
lv_rnorm_34 = lv_rnormarray_34 [ lv_j_34 ] + lv_rnormarray_34 [ lv_j_34 + 1 ]
lv_gnorm_34 = lv_gnormarray_34 [ lv_j_34 ] + lv_gnormarray_34 [ lv_j_34 + 1 ]
lv_bnorm_34 = lv_bnormarray_34 [ lv_j_34 ] + lv_bnormarray_34 [ lv_j_34 + 1 ]
EndFor
lv_rnorm_34 = lv_rnorm_34 / lv_reps_34
lv_gnorm_34 = lv_gnorm_34 / lv_reps_34
lv_bnorm_34 = lv_bnorm_34 / lv_reps_34
lv_max_34 = Math.Max ( Math.Max ( lv_rnorm_34 , lv_gnorm_34 ) , lv_bnorm_34 )
lv_min_34 = Math.Min ( Math.Min ( lv_rnorm_34 , lv_gnorm_34 ) , lv_bnorm_34 )
If lv_max_34 = lv_min_34 Then
lv_hue_34 = 0
Elseif lv_max_34 = lv_rnorm_34 Then
If lv_gnorm_34 >= lv_bnorm_34 Then
lv_hue_34 = 60 * ( lv_gnorm_34 - lv_bnorm_34 ) / ( lv_max_34 - lv_min_34 )
Else
lv_hue_34 = 60 * ( lv_gnorm_34 - lv_bnorm_34 ) / ( lv_max_34 - lv_min_34 ) + 360
EndIf
Elseif lv_max_34 = lv_gnorm_34 Then
lv_hue_34 = 60 * ( lv_bnorm_34 - lv_rnorm_34 ) / ( lv_max_34 - lv_min_34 ) + 120
Else
lv_hue_34 = 60 * ( lv_rnorm_34 - lv_gnorm_34 ) / ( lv_max_34 - lv_min_34 ) + 240
EndIf
If lv_max_34 = 0 Then
lv_sat_34 = 0
Else
lv_sat_34 = 1 - lv_min_34 / lv_max_34
EndIf
lv_value_34 = lv_max_34
lv_rgbgrey_34 = ( pr_rgb_valueblanco + pr_rgb_valuenegro ) / 2
If lv_rraw_34 + lv_graw_34 + lv_braw_34 <= 3 Then
lv_color_34 = 0
Else
If lv_sat_34 < 0.3 Then
If lv_value_34 > lv_rgbgrey_34 Then
lv_color_34 = 6
Else
lv_color_34 = 1
EndIf
Else
If lv_hue_34 >= 0 And lv_hue_34 < lv_red_34 Then
lv_color_34 = 5
Elseif lv_hue_34 >= lv_red_34 And lv_hue_34 < lv_yellow_34 Then
lv_color_34 = 4
Elseif lv_hue_34 >= lv_yellow_34 And lv_hue_34 < lv_green_34 Then
lv_color_34 = 3
Elseif lv_hue_34 >= lv_green_34 And lv_hue_34 < lv_blue_34 Then
lv_color_34 = 2
Else
lv_color_34 = 5
EndIf
EndIf
EndIf
LCD.StopUpdate ()
LCD.Clear ()
LCD.Write ( 33 , 20 , "R: " + lv_rraw_34 )
LCD.Write ( 33 , 35 , "G: " + lv_graw_34 )
LCD.Write ( 33 , 50 , "B: " + lv_braw_34 )
LCD.Write ( 33 , 70 , "color: " + lv_color_34 )
LCD.Write ( 33 , 90 , "Value: " + lv_value_34 )
LCD.Update ()
Sensor.SetMode ( lv_sens_34 , lv_sens_mode_34 )
EndSub
Sub m_rgb_gritar_1
If lv_color_35 = 0 Then
Speaker.Play ( 100 , "WRO2025/Media/Zero" )
Elseif lv_color_35 = 1 Then
Speaker.Play ( 100 , "WRO2025/Media/Black" )
Elseif lv_color_35 = 2 Then
Speaker.Play ( 100 , "WRO2025/Media/BLUE" )
Elseif lv_color_35 = 3 Then
Speaker.Play ( 100 , "WRO2025/Media/GREEN" )
Elseif lv_color_35 = 4 Then
Speaker.Play ( 100 , "WRO2025/Media/YELLOW" )
Elseif lv_color_35 = 5 Then
Speaker.Play ( 100 , "WRO2025/Media/RED" )
Elseif lv_color_35 = 6 Then
Speaker.Play ( 100 , "WRO2025/Media/White" )
Elseif lv_color_35 = 7 Then
Speaker.Play ( 100 , "WRO2025/Media/Brown" )
EndIf
Speaker.Wait ()
EndSub
