DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VPR_GIRO_G1
DATAF VPR_RGB_VALUENEGRO
DATAF VPR_RGB_VALUEBLANCO
DATAF VPR_RGB_RWHITE
DATAF VPR_RGB_GWHITE
DATAF VPR_RGB_BWHITE
DATAF VPR_RECTO_DIAMETRO
DATAF VPR_GIRO_DIAMETRO
DATAF VPR_SIGUELINEAS_DIAMETRO
DATAF VPR_SMART_DIAMETRO
DATAF VPR_SIGUELINEAS_NEGRO1
DATAF VPR_SIGUELINEAS_NEGRO3
DATAF VPR_SIGUELINEAS_NEGRO4
DATAF VPR_SIGUELINEAS_BLANCO1
DATAF VPR_SIGUELINEAS_BLANCO3
DATAF VPR_SIGUELINEAS_BLANCO4
DATAF VPR_SMART_NEGRO1
DATAF VPR_SMART_NEGRO3
DATAF VPR_SMART_NEGRO4
DATAF VPR_SMART_BLANCO1
DATAF VPR_SMART_BLANCO3
DATAF VPR_SMART_BLANCO4
DATAF VPR_RECTO_NEGRO
DATAF VPR_RECTO_BLANCO
DATAF VPR_GIRO_NEGRO
DATAF VPR_GIRO_BLANCO
DATAF VLV_VELOCIDAD_3
DATAF VLV_TIMER_3
DATAF VLV_VELOCIDAD_4
DATAF VLV_TIMER_4
DATAF VLV_VELOCIDAD_5
DATAF VLV_ENCODER_5
DATAF VLV_VELOCIDAD_7
DATAF VLV_DISTANCIA_7
DATAF VLV_VELOCIDAD_10
DATAF VLV_ENCODER_10
DATAF VLV_VELOCIDAD1_13
DATAF VLV_VELOCIDAD2_13
DATAF VLV_GRADOS_13
DATAF VLV_VELOCIDAD_8
DATAF VLV_SENSOR_8
DATAF VLV_VELOCIDAD_11
DATAF VLV_VELOCIDAD_12
DATAF VLV_ENCODER_12
DATAF VLV_VELOCIDAD_9
DATAF VLV_DISTANCIA_9
DATAF VLV_SENS_14
DATAF VLV_REPS_14
DATAF VLV_COLOR_14
DATAF VLV_COLOR_15
DATAF VLV_VELOCIDAD_6
DATAF VLV_ENCODER_6
DATAF VGV_MARKINGGRANDE
DATAF VGV_DIAMETRO
DATAF VGV_NEGRO1
DATAF VGV_NEGRO3
DATAF VGV_NEGRO4
DATAF VGV_BLANCO1
DATAF VGV_BLANCO3
DATAF VGV_BLANCO4
DATAF VLV_ENCDIFF_5
DATAF VLV_SIGNO_5
DATAF VLV_SAFETYTIMER_5
DATAF VLV_ENCDIFF_6
DATAF VLV_SIGNO_6
DATAF VLV_SAFETYTIMER_6
DATAF VLV_CORRECCION_7
DATAF VLV_ENC_7
DATAF VLV_CORRECCION_8
DATAF VLV_LECTURA_8
DATAF VLV_CORRECCION_9
DATAF VLV_ENC_9
DATAF VLV_LECTURA1_10
DATAF VLV_LECTURA3_10
DATAF VLV_LECTURA4_10
DATAF VLV_KP_10
DATAF VLV_KD_10
DATAF VLV_ERROR_10
DATAF VLV_OLDERROR_10
DATAF VLV_U_10
DATAF VLV_SENTIDO_10
DATAF VLV_STARTC_10
DATAF VLV_ENCODERC_10
DATAF VLV_LECTURA1_11
DATAF VLV_LECTURA3_11
DATAF VLV_LECTURA4_11
DATAF VLV_KP_11
DATAF VLV_KD_11
DATAF VLV_ERROR_11
DATAF VLV_OLDERROR_11
DATAF VLV_U_11
DATAF VLV_SENTIDO_11
DATAF VLV_LECTURA1_12
DATAF VLV_LECTURA3_12
DATAF VLV_LECTURA4_12
DATAF VLV_KP_12
DATAF VLV_KD_12
DATAF VLV_ERROR_12
DATAF VLV_OLDERROR_12
DATAF VLV_U_12
DATAF VLV_SENTIDO_12
DATAF VLV_STARTC_12
DATAF VLV_ENCODERC_12
DATAF VLV_SIGNO_13
DATAF VLV_VMIN_13
DATAF VLV_VMAX_13
DATAF VLV_ENCODER_13
DATAF VLV_SENS_MODE_14
DATAF VLV_RED_14
DATAF VLV_YELLOW_14
DATAF VLV_GREEN_14
DATAF VLV_BLUE_14
DATAF VLV_HUE_14
DATAF VLV_SAT_14
DATAF VLV_VALUE_14
ARRAY16 VLV_RNORMARRAY_14 2
ARRAY16 VLV_GNORMARRAY_14 2
ARRAY16 VLV_BNORMARRAY_14 2
DATAF VLV_J_14
ARRAY16 VLV_RGB_14 2
DATAF VLV_RRAW_14
DATAF VLV_GRAW_14
DATAF VLV_BRAW_14
DATAF VLV_RNORM_14
DATAF VLV_GNORM_14
DATAF VLV_BNORM_14
DATAF VLV_MAX_14
DATAF VLV_MIN_14
DATAF VLV_RGBGREY_14

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VPR_GIRO_G1
    MOVEF_F 0.0 VPR_RGB_VALUENEGRO
    MOVEF_F 0.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 0.0 VPR_RGB_RWHITE
    MOVEF_F 0.0 VPR_RGB_GWHITE
    MOVEF_F 0.0 VPR_RGB_BWHITE
    MOVEF_F 0.0 VPR_RECTO_DIAMETRO
    MOVEF_F 0.0 VPR_GIRO_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F 0.0 VPR_SMART_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F 0.0 VPR_SMART_NEGRO1
    MOVEF_F 0.0 VPR_SMART_NEGRO3
    MOVEF_F 0.0 VPR_SMART_NEGRO4
    MOVEF_F 0.0 VPR_SMART_BLANCO1
    MOVEF_F 0.0 VPR_SMART_BLANCO3
    MOVEF_F 0.0 VPR_SMART_BLANCO4
    MOVEF_F 0.0 VPR_RECTO_NEGRO
    MOVEF_F 0.0 VPR_RECTO_BLANCO
    MOVEF_F 0.0 VPR_GIRO_NEGRO
    MOVEF_F 0.0 VPR_GIRO_BLANCO
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_TIMER_3
    MOVEF_F 0.0 VLV_VELOCIDAD_4
    MOVEF_F 0.0 VLV_TIMER_4
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_ENCODER_5
    MOVEF_F 0.0 VLV_VELOCIDAD_7
    MOVEF_F 0.0 VLV_DISTANCIA_7
    MOVEF_F 0.0 VLV_VELOCIDAD_10
    MOVEF_F 0.0 VLV_ENCODER_10
    MOVEF_F 0.0 VLV_VELOCIDAD1_13
    MOVEF_F 0.0 VLV_VELOCIDAD2_13
    MOVEF_F 0.0 VLV_GRADOS_13
    MOVEF_F 0.0 VLV_VELOCIDAD_8
    MOVEF_F 0.0 VLV_SENSOR_8
    MOVEF_F 0.0 VLV_VELOCIDAD_11
    MOVEF_F 0.0 VLV_VELOCIDAD_12
    MOVEF_F 0.0 VLV_ENCODER_12
    MOVEF_F 0.0 VLV_VELOCIDAD_9
    MOVEF_F 0.0 VLV_DISTANCIA_9
    MOVEF_F 0.0 VLV_SENS_14
    MOVEF_F 0.0 VLV_REPS_14
    MOVEF_F 0.0 VLV_COLOR_14
    MOVEF_F 0.0 VLV_COLOR_15
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_ENCODER_6
    MOVEF_F 0.0 VGV_MARKINGGRANDE
    MOVEF_F 0.0 VGV_DIAMETRO
    MOVEF_F 0.0 VGV_NEGRO1
    MOVEF_F 0.0 VGV_NEGRO3
    MOVEF_F 0.0 VGV_NEGRO4
    MOVEF_F 0.0 VGV_BLANCO1
    MOVEF_F 0.0 VGV_BLANCO3
    MOVEF_F 0.0 VGV_BLANCO4
    MOVEF_F 0.0 VLV_ENCDIFF_5
    MOVEF_F 0.0 VLV_SIGNO_5
    MOVEF_F 0.0 VLV_SAFETYTIMER_5
    MOVEF_F 0.0 VLV_ENCDIFF_6
    MOVEF_F 0.0 VLV_SIGNO_6
    MOVEF_F 0.0 VLV_SAFETYTIMER_6
    MOVEF_F 0.0 VLV_CORRECCION_7
    MOVEF_F 0.0 VLV_ENC_7
    MOVEF_F 0.0 VLV_CORRECCION_8
    MOVEF_F 0.0 VLV_LECTURA_8
    MOVEF_F 0.0 VLV_CORRECCION_9
    MOVEF_F 0.0 VLV_ENC_9
    MOVEF_F 0.0 VLV_LECTURA1_10
    MOVEF_F 0.0 VLV_LECTURA3_10
    MOVEF_F 0.0 VLV_LECTURA4_10
    MOVEF_F 0.0 VLV_KP_10
    MOVEF_F 0.0 VLV_KD_10
    MOVEF_F 0.0 VLV_ERROR_10
    MOVEF_F 0.0 VLV_OLDERROR_10
    MOVEF_F 0.0 VLV_U_10
    MOVEF_F 0.0 VLV_SENTIDO_10
    MOVEF_F 0.0 VLV_STARTC_10
    MOVEF_F 0.0 VLV_ENCODERC_10
    MOVEF_F 0.0 VLV_LECTURA1_11
    MOVEF_F 0.0 VLV_LECTURA3_11
    MOVEF_F 0.0 VLV_LECTURA4_11
    MOVEF_F 0.0 VLV_KP_11
    MOVEF_F 0.0 VLV_KD_11
    MOVEF_F 0.0 VLV_ERROR_11
    MOVEF_F 0.0 VLV_OLDERROR_11
    MOVEF_F 0.0 VLV_U_11
    MOVEF_F 0.0 VLV_SENTIDO_11
    MOVEF_F 0.0 VLV_LECTURA1_12
    MOVEF_F 0.0 VLV_LECTURA3_12
    MOVEF_F 0.0 VLV_LECTURA4_12
    MOVEF_F 0.0 VLV_KP_12
    MOVEF_F 0.0 VLV_KD_12
    MOVEF_F 0.0 VLV_ERROR_12
    MOVEF_F 0.0 VLV_OLDERROR_12
    MOVEF_F 0.0 VLV_U_12
    MOVEF_F 0.0 VLV_SENTIDO_12
    MOVEF_F 0.0 VLV_STARTC_12
    MOVEF_F 0.0 VLV_ENCODERC_12
    MOVEF_F 0.0 VLV_SIGNO_13
    MOVEF_F 0.0 VLV_VMIN_13
    MOVEF_F 0.0 VLV_VMAX_13
    MOVEF_F 0.0 VLV_ENCODER_13
    MOVEF_F 0.0 VLV_SENS_MODE_14
    MOVEF_F 0.0 VLV_RED_14
    MOVEF_F 0.0 VLV_YELLOW_14
    MOVEF_F 0.0 VLV_GREEN_14
    MOVEF_F 0.0 VLV_BLUE_14
    MOVEF_F 0.0 VLV_HUE_14
    MOVEF_F 0.0 VLV_SAT_14
    MOVEF_F 0.0 VLV_VALUE_14
    CALL ARRAYCREATE_FLOAT VLV_RNORMARRAY_14
    CALL ARRAYCREATE_FLOAT VLV_GNORMARRAY_14
    CALL ARRAYCREATE_FLOAT VLV_BNORMARRAY_14
    MOVEF_F 0.0 VLV_J_14
    CALL ARRAYCREATE_FLOAT VLV_RGB_14
    MOVEF_F 0.0 VLV_RRAW_14
    MOVEF_F 0.0 VLV_GRAW_14
    MOVEF_F 0.0 VLV_BRAW_14
    MOVEF_F 0.0 VLV_RNORM_14
    MOVEF_F 0.0 VLV_GNORM_14
    MOVEF_F 0.0 VLV_BNORM_14
    MOVEF_F 0.0 VLV_MAX_14
    MOVEF_F 0.0 VLV_MIN_14
    MOVEF_F 0.0 VLV_RGBGREY_14
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    MOVEF_F 0.0 VPR_GIRO_G1
    MOVEF_F 0.0 VPR_RGB_VALUENEGRO
    MOVEF_F 0.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 0.0 VPR_RGB_RWHITE
    MOVEF_F 0.0 VPR_RGB_GWHITE
    MOVEF_F 0.0 VPR_RGB_BWHITE
    MOVEF_F 0.0 VPR_RECTO_DIAMETRO
    MOVEF_F 0.0 VPR_GIRO_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F 0.0 VPR_SMART_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F 0.0 VPR_SMART_NEGRO1
    MOVEF_F 0.0 VPR_SMART_NEGRO3
    MOVEF_F 0.0 VPR_SMART_NEGRO4
    MOVEF_F 0.0 VPR_SMART_BLANCO1
    MOVEF_F 0.0 VPR_SMART_BLANCO3
    MOVEF_F 0.0 VPR_SMART_BLANCO4
    MOVEF_F 0.0 VPR_RECTO_NEGRO
    MOVEF_F 0.0 VPR_RECTO_BLANCO
    MOVEF_F 0.0 VPR_GIRO_NEGRO
    MOVEF_F 0.0 VPR_GIRO_BLANCO
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_TIMER_3
    MOVEF_F 0.0 VLV_VELOCIDAD_4
    MOVEF_F 0.0 VLV_TIMER_4
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_ENCODER_5
    MOVEF_F 0.0 VLV_VELOCIDAD_7
    MOVEF_F 0.0 VLV_DISTANCIA_7
    MOVEF_F 0.0 VLV_VELOCIDAD_10
    MOVEF_F 0.0 VLV_ENCODER_10
    MOVEF_F 0.0 VLV_VELOCIDAD1_13
    MOVEF_F 0.0 VLV_VELOCIDAD2_13
    MOVEF_F 0.0 VLV_GRADOS_13
    MOVEF_F 0.0 VLV_VELOCIDAD_8
    MOVEF_F 0.0 VLV_SENSOR_8
    MOVEF_F 0.0 VLV_VELOCIDAD_11
    MOVEF_F 0.0 VLV_VELOCIDAD_12
    MOVEF_F 0.0 VLV_ENCODER_12
    MOVEF_F 0.0 VLV_VELOCIDAD_9
    MOVEF_F 0.0 VLV_DISTANCIA_9
    MOVEF_F 0.0 VLV_SENS_14
    MOVEF_F 0.0 VLV_REPS_14
    MOVEF_F 0.0 VLV_COLOR_14
    MOVEF_F 0.0 VLV_COLOR_15
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_ENCODER_6
    MOVEF_F 0.0 VGV_MARKINGGRANDE
    MOVEF_F 0.0 VGV_DIAMETRO
    MOVEF_F 0.0 VGV_NEGRO1
    MOVEF_F 0.0 VGV_NEGRO3
    MOVEF_F 0.0 VGV_NEGRO4
    MOVEF_F 0.0 VGV_BLANCO1
    MOVEF_F 0.0 VGV_BLANCO3
    MOVEF_F 0.0 VGV_BLANCO4
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB0 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB1 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB1:
    WRITE32 ENDSUB_F_MAINPRUEBA_0:CALLSUB2 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAINPRUEBA_0
CALLSUB2:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 0.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 4.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 4.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    MOVEF_F 6.24 VGV_DIAMETRO
    MOVEF_F 2.68055555555556 VPR_GIRO_G1
    MOVEF_F 10.0 VGV_NEGRO1
    MOVEF_F 7.0 VGV_NEGRO3
    MOVEF_F 10.0 VGV_NEGRO4
    MOVEF_F 77.0 VGV_BLANCO1
    MOVEF_F 59.0 VGV_BLANCO3
    MOVEF_F 77.0 VGV_BLANCO4
    MOVEF_F 4.0 VPR_RGB_VALUENEGRO
    MOVEF_F 32.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 57.0 VPR_RGB_RWHITE
    MOVEF_F 71.0 VPR_RGB_GWHITE
    MOVEF_F 73.0 VPR_RGB_BWHITE
    MOVEF_F VGV_DIAMETRO VPR_RECTO_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_GIRO_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_SMART_DIAMETRO
    MOVEF_F VGV_NEGRO1 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F VGV_NEGRO3 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F VGV_NEGRO4 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F VGV_BLANCO1 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F VGV_BLANCO3 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F VGV_BLANCO4 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F VGV_NEGRO1 VPR_SMART_NEGRO1
    MOVEF_F VGV_NEGRO3 VPR_SMART_NEGRO3
    MOVEF_F VGV_NEGRO4 VPR_SMART_NEGRO4
    MOVEF_F VGV_BLANCO1 VPR_SMART_BLANCO1
    MOVEF_F VGV_BLANCO3 VPR_SMART_BLANCO3
    MOVEF_F VGV_BLANCO4 VPR_SMART_BLANCO4
    ADDF VGV_NEGRO1 VGV_NEGRO3 F.1
    ADDF F.1 VGV_NEGRO4 F.0
    DATAF tmpf9
    DATA8 flag9
    DIVF F.0 3.0 tmpf9
    CP_EQF 0.0 3.0 flag9
    SELECTF flag9 0.0 tmpf9 VPR_RECTO_NEGRO

    ADDF VGV_BLANCO1 VGV_BLANCO3 F.1
    ADDF F.1 VGV_BLANCO4 F.0
    DATAF tmpf12
    DATA8 flag12
    DIVF F.0 3.0 tmpf12
    CP_EQF 0.0 3.0 flag12
    SELECTF flag12 0.0 tmpf12 VPR_RECTO_BLANCO

    ADDF VGV_NEGRO1 VGV_NEGRO3 F.1
    ADDF F.1 VGV_NEGRO4 F.0
    DATAF tmpf15
    DATA8 flag15
    DIVF F.0 3.0 tmpf15
    CP_EQF 0.0 3.0 flag15
    SELECTF flag15 0.0 tmpf15 VPR_GIRO_NEGRO

    ADDF VGV_BLANCO1 VGV_BLANCO3 F.1
    ADDF F.1 VGV_BLANCO4 F.0
    DATAF tmpf18
    DATA8 flag18
    DIVF F.0 3.0 tmpf18
    CP_EQF 0.0 3.0 flag18
    SELECTF flag18 0.0 tmpf18 VPR_GIRO_BLANCO

RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    MOVEF_F -10.0 VLV_VELOCIDAD_3
    MOVEF_F 300.0 VLV_TIMER_3
    WRITE32 ENDSUB_M_BRAZO_ATIMER_2:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_ATIMER_2
CALLSUB19:
    MOVEF_F -100.0 VLV_VELOCIDAD_4
    MOVEF_F 1000.0 VLV_TIMER_4
    WRITE32 ENDSUB_M_BRAZO_DTIMER_2:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DTIMER_2
CALLSUB20:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 60.0 VLV_VELOCIDAD_5
    MOVEF_F 500.0 VLV_ENCODER_5
    WRITE32 ENDSUB_M_BRAZO_DENCODER_2:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_DENCODER_2
CALLSUB23:
    MOVEF_F 100.0 VLV_VELOCIDAD_3
    MOVEF_F 1500.0 VLV_TIMER_3
    WRITE32 ENDSUB_M_BRAZO_ATIMER_2:CALLSUB24 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_ATIMER_2
CALLSUB24:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_MAINPRUEBA_0:
    MOVEF_F 60.0 VLV_VELOCIDAD_6
    MOVEF_F -400.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB27:
    DATA32 milliseconds28
	MOVEF_32 300.0 milliseconds28
	DATA32 timer28
	TIMER_WAIT milliseconds28 timer28
	TIMER_READY timer28
    MOVEF_F 40.0 VLV_VELOCIDAD_6
    MOVEF_F -530.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB29:
    UI_BUTTON WAIT_FOR_PRESS
    MOVEF_F 10.0 VLV_VELOCIDAD_6
    MOVEF_F -350.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB31 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB31:
    PROGRAM_STOP -1
    MOVEF_F 15.0 VLV_VELOCIDAD_6
    MOVEF_F -100.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB33 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB33:
    MOVEF_F 8.0 VLV_VELOCIDAD_6
    MOVEF_F -40.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB34 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB34:
    DATA32 milliseconds35
	MOVEF_32 300.0 milliseconds35
	DATA32 timer35
	TIMER_WAIT milliseconds35 timer35
	TIMER_READY timer35
    MOVEF_F 10.0 VLV_VELOCIDAD_6
    MOVEF_F -300.0 VLV_ENCODER_6
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB36:
RETSUB_F_MAINPRUEBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAINPRUEBA_0:
SUB_F_S_0:
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_S_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_S_0:
SUB_M_BRAZO_ATIMER_2:
    TIMER_READ timeMC1
  while39:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_TIMER_3 endwhile39
  whilebody39:
    MOVEF_8 VLV_VELOCIDAD_3 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_TIMER_3 whilebody39
  endwhile39:
    CALL MOTOR.STOP 'A' 'True'
RETSUB_M_BRAZO_ATIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_BRAZO_ATIMER_2:
SUB_M_BRAZO_DTIMER_2:
    TIMER_READ timeMC1
  while45:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_TIMER_4 endwhile45
  whilebody45:
    MOVEF_8 VLV_VELOCIDAD_4 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_TIMER_4 whilebody45
  endwhile45:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_M_BRAZO_DTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_BRAZO_DTIMER_2:
SUB_M_BRAZO_DENCODER_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_ENCODER_5 F.0 VLV_ENCDIFF_5
    MATH ABS VLV_ENCDIFF_5 F.0
    DATAF tmpf53
    DATA8 flag53
    DIVF VLV_ENCDIFF_5 F.0 tmpf53
    CP_EQF 0.0 F.0 flag53
    SELECTF flag53 0.0 tmpf53 VLV_SIGNO_5

    MATH ABS VLV_ENCDIFF_5 F.4
    DATAF tmpf55
    DATA8 flag55
    DIVF F.4 100.0 tmpf55
    CP_EQF 0.0 100.0 flag55
    SELECTF flag55 0.0 tmpf55 F.3

    DATAF tmpf56
    DATA8 flag56
    DIVF VLV_VELOCIDAD_5 20.0 tmpf56
    CP_EQF 0.0 20.0 flag56
    SELECTF flag56 0.0 tmpf56 F.4

    DATAF tmpf57
    DATA8 flag57
    DIVF F.3 F.4 tmpf57
    CP_EQF 0.0 F.4 flag57
    SELECTF flag57 0.0 tmpf57 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag60
	CP_GTF F.0 400.0 flag60
	SELECTF flag60 F.0 400.0 VLV_SAFETYTIMER_5
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_5 0.0 else62_1
  while63:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_ENCODER_5 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 25.0 endwhile63
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_5 endwhile63
  whilebody63:
    MULF VLV_SIGNO_5 VLV_VELOCIDAD_5 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_5 '%g' 99 S.1
    CALL TEXT.APPEND 'safetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_ENCODER_5 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 25.0 and74
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_5 whilebody63
  and74:
  endwhile63:
    CALL MOTOR.STOP 'D' 'True'
  else62_1:
  endif62:
RETSUB_M_BRAZO_DENCODER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_BRAZO_DENCODER_2:
SUB_M_BRAZO_AENCODER_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_ENCODER_6 F.0 VLV_ENCDIFF_6
    MATH ABS VLV_ENCDIFF_6 F.0
    DATAF tmpf83
    DATA8 flag83
    DIVF VLV_ENCDIFF_6 F.0 tmpf83
    CP_EQF 0.0 F.0 flag83
    SELECTF flag83 0.0 tmpf83 VLV_SIGNO_6

    MATH ABS VLV_ENCDIFF_6 F.4
    DATAF tmpf85
    DATA8 flag85
    DIVF F.4 100.0 tmpf85
    CP_EQF 0.0 100.0 flag85
    SELECTF flag85 0.0 tmpf85 F.3

    DATAF tmpf86
    DATA8 flag86
    DIVF VLV_VELOCIDAD_6 20.0 tmpf86
    CP_EQF 0.0 20.0 flag86
    SELECTF flag86 0.0 tmpf86 F.4

    DATAF tmpf87
    DATA8 flag87
    DIVF F.3 F.4 tmpf87
    CP_EQF 0.0 F.4 flag87
    SELECTF flag87 0.0 tmpf87 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag90
	CP_GTF F.0 400.0 flag90
	SELECTF flag90 F.0 400.0 VLV_SAFETYTIMER_6
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_6 0.0 else92_1
  while93:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_ENCODER_6 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 25.0 endwhile93
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 2000.0 endwhile93
  whilebody93:
    MULF VLV_SIGNO_6 VLV_VELOCIDAD_6 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_ENCODER_6 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 25.0 and100
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 2000.0 whilebody93
  and100:
  endwhile93:
    CALL MOTOR.STOP 'A' 'True'
  else92_1:
  endif92:
RETSUB_M_BRAZO_AENCODER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_BRAZO_AENCODER_2:
SUB_M_RECTO_ENCODERF_2:
    MATH ABS VLV_VELOCIDAD_7 F.1
    SUBF F.1 20.0 F.0
    MULF F.0 0.05 VLV_CORRECCION_7
    SUBF VLV_DISTANCIA_7 VLV_CORRECCION_7 F.2
    MULF F.2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf112
    DATA8 flag112
    DIVF F.1 F.2 tmpf112
    CP_EQF 0.0 F.2 flag112
    SELECTF flag112 0.0 tmpf112 F.0

    DATAF tmpf113
    DATA8 flag113
    DIVF F.0 VPR_RECTO_DIAMETRO tmpf113
    CP_EQF 0.0 VPR_RECTO_DIAMETRO flag113
    SELECTF flag113 0.0 tmpf113 VLV_ENC_7

    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds115
	MOVEF_32 100.0 milliseconds115
	DATA32 timer115
	TIMER_WAIT milliseconds115 timer115
	TIMER_READY timer115
    MATH NEGATE VLV_VELOCIDAD_7 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD_7 VLV_ENC_7 'False'

	DATA8 layer117
	DATA8 nos117
	DATA8 busy117
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer117 nos117
	JR_EQ8 0 nos117 motornotbusy117
  motorwaiting117:
	OUTPUT_TEST layer117 nos117 busy117
	JR_EQ8 busy117 0 motornotbusy117
	SLEEP
	JR motorwaiting117
  motornotbusy117:
RETSUB_M_RECTO_ENCODERF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_ENCODERF_2:
SUB_M_RECTO_NEGRO1_2:
    MOVEF_F 0.0 VLV_CORRECCION_8
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MOVEF_F 50.0 VLV_LECTURA_8
  while119:
    JR_LTEQF VLV_LECTURA_8 15.0 endwhile119
  whilebody119:
    CALL SENSOR.READPERCENT VLV_SENSOR_8 F.2
    SUBF F.2 VPR_RECTO_NEGRO F.1
    DATAF tmpf122
    DATA8 flag122
    DIVF F.1 VPR_RECTO_BLANCO tmpf122
    CP_EQF 0.0 VPR_RECTO_BLANCO flag122
    SELECTF flag122 0.0 tmpf122 F.0

    SUBF 100.0 VPR_RECTO_NEGRO F.1
    MULF F.0 F.1 VLV_LECTURA_8
    MATH NEGATE VLV_VELOCIDAD_8 F.1
    ADDF F.1 VLV_CORRECCION_8 F.0
    ADDF VLV_VELOCIDAD_8 VLV_CORRECCION_8 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    JR_GTF VLV_LECTURA_8 15.0 whilebody119
  endwhile119:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_NEGRO1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_NEGRO1_2:
SUB_M_RECTO_ENCODER_2:
    MATH ABS VLV_VELOCIDAD_9 F.1
    SUBF F.1 20.0 F.0
    MULF F.0 0.05 VLV_CORRECCION_9
    SUBF VLV_DISTANCIA_9 VLV_CORRECCION_9 F.2
    MULF F.2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf136
    DATA8 flag136
    DIVF F.1 F.2 tmpf136
    CP_EQF 0.0 F.2 flag136
    SELECTF flag136 0.0 tmpf136 F.0

    DATAF tmpf137
    DATA8 flag137
    DIVF F.0 VPR_RECTO_DIAMETRO tmpf137
    CP_EQF 0.0 VPR_RECTO_DIAMETRO flag137
    SELECTF flag137 0.0 tmpf137 VLV_ENC_9

    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds139
	MOVEF_32 100.0 milliseconds139
	DATA32 timer139
	TIMER_WAIT milliseconds139 timer139
	TIMER_READY timer139
    MATH NEGATE VLV_VELOCIDAD_9 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD_9 VLV_ENC_9 'True'

	DATA8 layer141
	DATA8 nos141
	DATA8 busy141
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer141 nos141
	JR_EQ8 0 nos141 motornotbusy141
  motorwaiting141:
	OUTPUT_TEST layer141 nos141 busy141
	JR_EQ8 busy141 0 motornotbusy141
	SLEEP
	JR motorwaiting141
  motornotbusy141:
RETSUB_M_RECTO_ENCODER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_ENCODER_2:
SUB_M_SIGUELINEAS_ENCODER14_2:
    MULF VLV_VELOCIDAD_10 1.0 VLV_VELOCIDAD_10
    MOVEF_F 50.0 VLV_LECTURA1_10
    MOVEF_F 50.0 VLV_LECTURA3_10
    MOVEF_F 50.0 VLV_LECTURA4_10
    DATAF tmpf143
    DATA8 flag143
    DIVF VLV_VELOCIDAD_10 320.0 tmpf143
    CP_EQF 0.0 320.0 flag143
    SELECTF flag143 0.0 tmpf143 VLV_KP_10

    MULF VLV_KP_10 28.0 VLV_KD_10
    MOVEF_F 0.0 VLV_ERROR_10
    MOVEF_F 0.0 VLV_OLDERROR_10
    MOVEF_F 0.0 VLV_U_10
    MATH ABS VLV_VELOCIDAD_10 F.0
    DATAF tmpf146
    DATA8 flag146
    DIVF VLV_VELOCIDAD_10 F.0 tmpf146
    CP_EQF 0.0 F.0 flag146
    SELECTF flag146 0.0 tmpf146 VLV_SENTIDO_10

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf149
    DATA8 flag149
    DIVF VLV_ENCODER_10 F.1 tmpf149
    CP_EQF 0.0 F.1 flag149
    SELECTF flag149 0.0 tmpf149 F.0

    MULF F.0 360.0 VLV_ENCODER_10
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_10
    MOVEF_F 0.0 VLV_ENCODERC_10
  while152:
    MATH ABS VLV_ENCODERC_10 F.0
    JR_GTEQF F.0 VLV_ENCODER_10 endwhile152
  whilebody152:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_10 VLV_ENCODERC_10
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf158
    DATA8 flag158
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf158
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag158
    SELECTF flag158 0.0 tmpf158 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_10
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf163
    DATA8 flag163
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf163
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag163
    SELECTF flag163 0.0 tmpf163 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_10
    SUBF VLV_LECTURA1_10 VLV_LECTURA4_10 F.1
    MULF F.1 VLV_SENTIDO_10 F.0
    MULF F.0 1.0 VLV_ERROR_10
    MULF VLV_ERROR_10 VLV_KP_10 F.0
    SUBF VLV_ERROR_10 VLV_OLDERROR_10 F.2
    MULF F.2 VLV_KD_10 F.1
    ADDF F.0 F.1 VLV_U_10
    ADDF VLV_VELOCIDAD_10 VLV_U_10 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_10 VLV_U_10 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_10 VLV_OLDERROR_10
    MATH ABS VLV_ENCODERC_10 F.0
    JR_LTF F.0 VLV_ENCODER_10 whilebody152
  endwhile152:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_ENCODER14_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER14_2:
SUB_M_SIGUELINEAS_CRUCE14_1:
    MULF VLV_VELOCIDAD_11 1.0 VLV_VELOCIDAD_11
    MOVEF_F 50.0 VLV_LECTURA1_11
    MOVEF_F 50.0 VLV_LECTURA3_11
    MOVEF_F 50.0 VLV_LECTURA4_11
    DATAF tmpf180
    DATA8 flag180
    DIVF VLV_VELOCIDAD_11 280.0 tmpf180
    CP_EQF 0.0 280.0 flag180
    SELECTF flag180 0.0 tmpf180 VLV_KP_11

    MULF VLV_KP_11 32.0 VLV_KD_11
    MOVEF_F 0.0 VLV_ERROR_11
    MOVEF_F 0.0 VLV_OLDERROR_11
    MOVEF_F 0.0 VLV_U_11
    MATH ABS VLV_VELOCIDAD_11 F.0
    DATAF tmpf183
    DATA8 flag183
    DIVF VLV_VELOCIDAD_11 F.0 tmpf183
    CP_EQF 0.0 F.0 flag183
    SELECTF flag183 0.0 tmpf183 VLV_SENTIDO_11

  while184:
    JR_GTF VLV_LECTURA1_11 10.0 or185
    JR_LTEQF VLV_LECTURA4_11 10.0 endwhile184
  or185:
  whilebody184:
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf188
    DATA8 flag188
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf188
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag188
    SELECTF flag188 0.0 tmpf188 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_11
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf193
    DATA8 flag193
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf193
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag193
    SELECTF flag193 0.0 tmpf193 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_11
    SUBF VLV_LECTURA1_11 VLV_LECTURA4_11 F.1
    MULF F.1 VLV_SENTIDO_11 F.0
    MULF F.0 1.0 VLV_ERROR_11
    MULF VLV_ERROR_11 VLV_KP_11 F.0
    SUBF VLV_ERROR_11 VLV_OLDERROR_11 F.2
    MULF F.2 VLV_KD_11 F.1
    ADDF F.0 F.1 VLV_U_11
    ADDF VLV_VELOCIDAD_11 VLV_U_11 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_11 VLV_U_11 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_11 VLV_OLDERROR_11
    JR_GTF VLV_LECTURA1_11 10.0 whilebody184
    JR_GTF VLV_LECTURA4_11 10.0 whilebody184
  endwhile184:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_CRUCE14_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_CRUCE14_1:
SUB_M_SIGUELINEAS_ENCODER31_2:
    MULF VLV_VELOCIDAD_12 1.0 VLV_VELOCIDAD_12
    MOVEF_F 50.0 VLV_LECTURA1_12
    MOVEF_F 50.0 VLV_LECTURA3_12
    MOVEF_F 50.0 VLV_LECTURA4_12
    DATAF tmpf209
    DATA8 flag209
    DIVF VLV_VELOCIDAD_12 280.0 tmpf209
    CP_EQF 0.0 280.0 flag209
    SELECTF flag209 0.0 tmpf209 VLV_KP_12

    MULF VLV_KP_12 32.0 VLV_KD_12
    MOVEF_F 0.0 VLV_ERROR_12
    MOVEF_F 0.0 VLV_OLDERROR_12
    MOVEF_F 0.0 VLV_U_12
    MATH ABS VLV_VELOCIDAD_12 F.0
    DATAF tmpf212
    DATA8 flag212
    DIVF VLV_VELOCIDAD_12 F.0 tmpf212
    CP_EQF 0.0 F.0 flag212
    SELECTF flag212 0.0 tmpf212 VLV_SENTIDO_12

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf215
    DATA8 flag215
    DIVF VLV_ENCODER_12 F.1 tmpf215
    CP_EQF 0.0 F.1 flag215
    SELECTF flag215 0.0 tmpf215 F.0

    MULF F.0 360.0 VLV_ENCODER_12
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_12
    MOVEF_F 0.0 VLV_ENCODERC_12
  while218:
    MATH ABS VLV_ENCODERC_12 F.0
    JR_GTEQF F.0 VLV_ENCODER_12 endwhile218
  whilebody218:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_12 VLV_ENCODERC_12
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf224
    DATA8 flag224
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf224
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag224
    SELECTF flag224 0.0 tmpf224 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_12
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO3 F.1
    DATAF tmpf229
    DATA8 flag229
    DIVF F.1 VPR_SIGUELINEAS_BLANCO3 tmpf229
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO3 flag229
    SELECTF flag229 0.0 tmpf229 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_12
    SUBF VLV_LECTURA3_12 VLV_LECTURA1_12 F.1
    MULF F.1 VLV_SENTIDO_12 F.0
    MULF F.0 1.0 VLV_ERROR_12
    MULF VLV_ERROR_12 VLV_KP_12 F.0
    SUBF VLV_ERROR_12 VLV_OLDERROR_12 F.2
    MULF F.2 VLV_KD_12 F.1
    ADDF F.0 F.1 VLV_U_12
    ADDF VLV_VELOCIDAD_12 VLV_U_12 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_12 VLV_U_12 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_12 VLV_OLDERROR_12
    MATH ABS VLV_ENCODERC_12 F.0
    JR_LTF F.0 VLV_ENCODER_12 whilebody218
  endwhile218:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_ENCODER31_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER31_2:
SUB_M_GIRO_GRADOS_3:
    DATAF tmpf245
    DATA8 flag245
    DIVF VLV_VELOCIDAD1_13 VLV_VELOCIDAD2_13 tmpf245
    CP_EQF 0.0 VLV_VELOCIDAD2_13 flag245
    SELECTF flag245 0.0 tmpf245 F.0

    DATAF tmpf246
    DATA8 flag246
    DIVF VLV_VELOCIDAD1_13 VLV_VELOCIDAD2_13 tmpf246
    CP_EQF 0.0 VLV_VELOCIDAD2_13 flag246
    SELECTF flag246 0.0 tmpf246 F.2

    MATH ABS F.2 F.1
    DATAF tmpf248
    DATA8 flag248
    DIVF F.0 F.1 tmpf248
    CP_EQF 0.0 F.1 flag248
    SELECTF flag248 0.0 tmpf248 VLV_SIGNO_13

    MATH ABS VLV_VELOCIDAD1_13 F.0
    MATH ABS VLV_VELOCIDAD2_13 F.1
    DATA8 flag251
	CP_LTF F.0 F.1 flag251
	SELECTF flag251 F.0 F.1 VLV_VMIN_13
    MATH ABS VLV_VELOCIDAD1_13 F.0
    MATH ABS VLV_VELOCIDAD2_13 F.1
    DATA8 flag254
	CP_GTF F.0 F.1 flag254
	SELECTF flag254 F.0 F.1 VLV_VMAX_13
    MULF VLV_GRADOS_13 VPR_GIRO_G1 F.0
    MULF VLV_SIGNO_13 VLV_VMIN_13 F.4
    DATAF tmpf257
    DATA8 flag257
    DIVF F.4 VLV_VMAX_13 tmpf257
    CP_EQF 0.0 VLV_VMAX_13 flag257
    SELECTF flag257 0.0 tmpf257 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf259
    DATA8 flag259
    DIVF -2.0 F.2 tmpf259
    CP_EQF 0.0 F.2 flag259
    SELECTF flag259 0.0 tmpf259 F.1

    MULF F.0 F.1 VLV_ENCODER_13
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds262
	MOVEF_32 100.0 milliseconds262
	DATA32 timer262
	TIMER_WAIT milliseconds262 timer262
	TIMER_READY timer262
    MATH NEGATE VLV_VELOCIDAD1_13 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_13 VLV_ENCODER_13 'True'

	DATA8 layer264
	DATA8 nos264
	DATA8 busy264
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer264 nos264
	JR_EQ8 0 nos264 motornotbusy264
  motorwaiting264:
	OUTPUT_TEST layer264 nos264 busy264
	JR_EQ8 busy264 0 motornotbusy264
	SLEEP
	JR motorwaiting264
  motornotbusy264:
    MOVEF_F 0.0 VLV_VELOCIDAD1_13
    MOVEF_F 0.0 VLV_VELOCIDAD2_13
    MOVEF_F 0.0 VLV_GRADOS_13
    DATA32 milliseconds265
	MOVEF_32 100.0 milliseconds265
	DATA32 timer265
	TIMER_WAIT milliseconds265 timer265
	TIMER_READY timer265
RETSUB_M_GIRO_GRADOS_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_GRADOS_3:
SUB_M_RGB_DETECT_3:
    CALL SENSOR.GETMODE VLV_SENS_14 VLV_SENS_MODE_14
    DATA8 layer267
	DATA8 no267
	DATA8 mode8267
	
	MOVEF_8 VLV_SENS_14 no267
	SUB8 no267 1 no267
	DIV8 no267 4 layer267
	MATH MOD8 no267 4 no267

	MOVEF_8 4.0 mode8267
	
	INPUT_DEVICE READY_RAW layer267 no267 0 mode8267 0
    MOVEF_F 15.0 VLV_RED_14
    MOVEF_F 60.0 VLV_YELLOW_14
    MOVEF_F 170.0 VLV_GREEN_14
    MOVEF_F 330.0 VLV_BLUE_14
    MOVEF_F 0.0 VLV_HUE_14
    MOVEF_F 0.0 VLV_SAT_14
    MOVEF_F 0.0 VLV_VALUE_14
    MOVEF_F 0.0 VLV_COLOR_14
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMARRAY_14
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMARRAY_14
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMARRAY_14
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_14
  for272:
    JR_GTF VLV_J_14 VLV_REPS_14 endfor272
  forbody272:
    CALL SENSOR.READRAW VLV_SENS_14 3.0 VLV_RGB_14
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_14 VLV_RGB_14
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_14 VLV_RGB_14
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_14 VLV_RGB_14
    DATAF tmpf277
    DATA8 flag277
    DIVF VLV_RRAW_14 VPR_RGB_RWHITE tmpf277
    CP_EQF 0.0 VPR_RGB_RWHITE flag277
    SELECTF flag277 0.0 tmpf277 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_14 F.0 VLV_RNORMARRAY_14
    DATAF tmpf281
    DATA8 flag281
    DIVF VLV_GRAW_14 VPR_RGB_GWHITE tmpf281
    CP_EQF 0.0 VPR_RGB_GWHITE flag281
    SELECTF flag281 0.0 tmpf281 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_14 F.0 VLV_GNORMARRAY_14
    DATAF tmpf285
    DATA8 flag285
    DIVF VLV_BRAW_14 VPR_RGB_BWHITE tmpf285
    CP_EQF 0.0 VPR_RGB_BWHITE flag285
    SELECTF flag285 0.0 tmpf285 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_14 F.0 VLV_BNORMARRAY_14
    DATA32 milliseconds289
	MOVEF_32 5.0 milliseconds289
	DATA32 timer289
	TIMER_WAIT milliseconds289 timer289
	TIMER_READY timer289
    ADDF VLV_J_14 1.0 VLV_J_14
    JR_LTEQF VLV_J_14 VLV_REPS_14 forbody272
  endfor272:
    MOVEF_F 1.0 VLV_J_14
  for291:
    JR_GTF VLV_J_14 VLV_REPS_14 endfor291
  forbody291:
    CALL ARRAYGET_FLOAT VLV_J_14 F.0 VLV_RNORMARRAY_14
    ADDF VLV_J_14 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMARRAY_14
    ADDF F.0 F.1 VLV_RNORM_14
    CALL ARRAYGET_FLOAT VLV_J_14 F.0 VLV_GNORMARRAY_14
    ADDF VLV_J_14 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMARRAY_14
    ADDF F.0 F.1 VLV_GNORM_14
    CALL ARRAYGET_FLOAT VLV_J_14 F.0 VLV_BNORMARRAY_14
    ADDF VLV_J_14 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMARRAY_14
    ADDF F.0 F.1 VLV_BNORM_14
    ADDF VLV_J_14 2.0 VLV_J_14
    JR_LTEQF VLV_J_14 VLV_REPS_14 forbody291
  endfor291:
    DATAF tmpf305
    DATA8 flag305
    DIVF VLV_RNORM_14 VLV_REPS_14 tmpf305
    CP_EQF 0.0 VLV_REPS_14 flag305
    SELECTF flag305 0.0 tmpf305 VLV_RNORM_14

    DATAF tmpf306
    DATA8 flag306
    DIVF VLV_GNORM_14 VLV_REPS_14 tmpf306
    CP_EQF 0.0 VLV_REPS_14 flag306
    SELECTF flag306 0.0 tmpf306 VLV_GNORM_14

    DATAF tmpf307
    DATA8 flag307
    DIVF VLV_BNORM_14 VLV_REPS_14 tmpf307
    CP_EQF 0.0 VLV_REPS_14 flag307
    SELECTF flag307 0.0 tmpf307 VLV_BNORM_14

    DATA8 flag308
	CP_GTF VLV_RNORM_14 VLV_GNORM_14 flag308
	SELECTF flag308 VLV_RNORM_14 VLV_GNORM_14 F.0
    DATA8 flag309
	CP_GTF F.0 VLV_BNORM_14 flag309
	SELECTF flag309 F.0 VLV_BNORM_14 VLV_MAX_14
    DATA8 flag310
	CP_LTF VLV_RNORM_14 VLV_GNORM_14 flag310
	SELECTF flag310 VLV_RNORM_14 VLV_GNORM_14 F.0
    DATA8 flag311
	CP_LTF F.0 VLV_BNORM_14 flag311
	SELECTF flag311 F.0 VLV_BNORM_14 VLV_MIN_14
    JR_NEQF VLV_MAX_14 VLV_MIN_14 else312_1
    MOVEF_F 0.0 VLV_HUE_14
    JR endif312
  else312_1:
    JR_NEQF VLV_MAX_14 VLV_RNORM_14 else312_2
    JR_LTF VLV_GNORM_14 VLV_BNORM_14 else313_1
    SUBF VLV_GNORM_14 VLV_BNORM_14 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_14 VLV_MIN_14 F.1
    DATAF tmpf317
    DATA8 flag317
    DIVF F.0 F.1 tmpf317
    CP_EQF 0.0 F.1 flag317
    SELECTF flag317 0.0 tmpf317 VLV_HUE_14

    JR endif313
  else313_1:
    SUBF VLV_GNORM_14 VLV_BNORM_14 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_14 VLV_MIN_14 F.2
    DATAF tmpf321
    DATA8 flag321
    DIVF F.1 F.2 tmpf321
    CP_EQF 0.0 F.2 flag321
    SELECTF flag321 0.0 tmpf321 F.0

    ADDF F.0 360.0 VLV_HUE_14
  else313_2:
  endif313:
    JR endif312
  else312_2:
    JR_NEQF VLV_MAX_14 VLV_GNORM_14 else312_3
    SUBF VLV_BNORM_14 VLV_RNORM_14 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_14 VLV_MIN_14 F.2
    DATAF tmpf326
    DATA8 flag326
    DIVF F.1 F.2 tmpf326
    CP_EQF 0.0 F.2 flag326
    SELECTF flag326 0.0 tmpf326 F.0

    ADDF F.0 120.0 VLV_HUE_14
    JR endif312
  else312_3:
    SUBF VLV_RNORM_14 VLV_GNORM_14 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_14 VLV_MIN_14 F.2
    DATAF tmpf331
    DATA8 flag331
    DIVF F.1 F.2 tmpf331
    CP_EQF 0.0 F.2 flag331
    SELECTF flag331 0.0 tmpf331 F.0

    ADDF F.0 240.0 VLV_HUE_14
  else312_4:
  endif312:
    JR_NEQF VLV_MAX_14 0.0 else333_1
    MOVEF_F 0.0 VLV_SAT_14
    JR endif333
  else333_1:
    DATAF tmpf334
    DATA8 flag334
    DIVF VLV_MIN_14 VLV_MAX_14 tmpf334
    CP_EQF 0.0 VLV_MAX_14 flag334
    SELECTF flag334 0.0 tmpf334 F.0

    SUBF 1.0 F.0 VLV_SAT_14
  else333_2:
  endif333:
    MOVEF_F VLV_MAX_14 VLV_VALUE_14
    ADDF VPR_RGB_VALUEBLANCO VPR_RGB_VALUENEGRO F.0
    DATAF tmpf337
    DATA8 flag337
    DIVF F.0 2.0 tmpf337
    CP_EQF 0.0 2.0 flag337
    SELECTF flag337 0.0 tmpf337 VLV_RGBGREY_14

    ADDF VLV_RRAW_14 VLV_GRAW_14 F.1
    ADDF F.1 VLV_BRAW_14 F.0
    JR_GTF F.0 3.0 else338_1
    MOVEF_F 0.0 VLV_COLOR_14
    JR endif338
  else338_1:
    JR_GTEQF VLV_SAT_14 0.3 else341_1
    JR_LTEQF VLV_VALUE_14 VLV_RGBGREY_14 else342_1
    MOVEF_F 6.0 VLV_COLOR_14
    JR endif342
  else342_1:
    MOVEF_F 1.0 VLV_COLOR_14
  else342_2:
  endif342:
    JR endif341
  else341_1:
    JR_LTF VLV_HUE_14 0.0 else343_1
    JR_GTEQF VLV_HUE_14 VLV_RED_14 else343_1
    MOVEF_F 5.0 VLV_COLOR_14
    JR endif343
  else343_1:
    JR_LTF VLV_HUE_14 VLV_RED_14 else343_2
    JR_GTEQF VLV_HUE_14 VLV_YELLOW_14 else343_2
    MOVEF_F 4.0 VLV_COLOR_14
    JR endif343
  else343_2:
    JR_LTF VLV_HUE_14 VLV_YELLOW_14 else343_3
    JR_GTEQF VLV_HUE_14 VLV_GREEN_14 else343_3
    MOVEF_F 3.0 VLV_COLOR_14
    JR endif343
  else343_3:
    JR_LTF VLV_HUE_14 VLV_GREEN_14 else343_4
    JR_GTEQF VLV_HUE_14 VLV_BLUE_14 else343_4
    MOVEF_F 2.0 VLV_COLOR_14
    JR endif343
  else343_4:
    MOVEF_F 5.0 VLV_COLOR_14
  else343_5:
  endif343:
  else341_2:
  endif341:
  else338_2:
  endif338:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_RRAW_14 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_14 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_14 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_14 '%g' 99 S.1
    CALL TEXT.APPEND 'color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_14 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA8 layer362
	DATA8 no362
	DATA8 mode8362
	
	MOVEF_8 VLV_SENS_14 no362
	SUB8 no362 1 no362
	DIV8 no362 4 layer362
	MATH MOD8 no362 4 no362

	MOVEF_8 VLV_SENS_MODE_14 mode8362
	
	INPUT_DEVICE READY_RAW layer362 no362 0 mode8362 0
RETSUB_M_RGB_DETECT_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RGB_DETECT_3:
SUB_M_RGB_GRITAR_1:
    JR_NEQF VLV_COLOR_15 0.0 else363_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Zero'
    JR endif363
  else363_1:
    JR_NEQF VLV_COLOR_15 1.0 else363_2
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Black'
    JR endif363
  else363_2:
    JR_NEQF VLV_COLOR_15 2.0 else363_3
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/BLUE'
    JR endif363
  else363_3:
    JR_NEQF VLV_COLOR_15 3.0 else363_4
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/GREEN'
    JR endif363
  else363_4:
    JR_NEQF VLV_COLOR_15 4.0 else363_5
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/YELLOW'
    JR endif363
  else363_5:
    JR_NEQF VLV_COLOR_15 5.0 else363_6
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/RED'
    JR endif363
  else363_6:
    JR_NEQF VLV_COLOR_15 6.0 else363_7
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/White'
    JR endif363
  else363_7:
    JR_NEQF VLV_COLOR_15 7.0 else363_8
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Brown'
  else363_8:
  endif363:
    SOUND_READY
RETSUB_M_RGB_GRITAR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RGB_GRITAR_1:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall SENSOR.GETMODE		// FF
{
	IN_F port
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 type
	DATA8 mode
	
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	
	INPUT_DEVICE GET_TYPEMODE layer no type mode
	MOVE8_F mode result
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
