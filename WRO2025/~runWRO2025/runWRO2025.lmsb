DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VPR_GIRO_G1
DATAF VPR_RGB_VALUENEGRO
DATAF VPR_RGB_VALUEBLANCO
DATAF VPR_RGB_RWHITE
DATAF VPR_RGB_GWHITE
DATAF VPR_RGB_BWHITE
DATAF VPR_RECTO_DIAMETRO
DATAF VPR_GIRO_DIAMETRO
DATAF VPR_SIGUELINEAS_DIAMETRO
DATAF VPR_SMART_DIAMETRO
DATAF VPR_SIGUELINEAS_NEGRO1
DATAF VPR_SIGUELINEAS_NEGRO3
DATAF VPR_SIGUELINEAS_NEGRO4
DATAF VPR_SIGUELINEAS_BLANCO1
DATAF VPR_SIGUELINEAS_BLANCO3
DATAF VPR_SIGUELINEAS_BLANCO4
DATAF VPR_SMART_NEGRO1
DATAF VPR_SMART_NEGRO3
DATAF VPR_SMART_NEGRO4
DATAF VPR_SMART_BLANCO1
DATAF VPR_SMART_BLANCO3
DATAF VPR_SMART_BLANCO4
DATAF VPR_RECTO_NEGRO
DATAF VPR_RECTO_BLANCO
DATAF VPR_GIRO_NEGRO
DATAF VPR_GIRO_BLANCO
DATAF VLV_VELOCIDAD_1
DATAF VLV_ENCODER_1
DATAF VLV_V0_2
DATAF VLV_VMIN_2
DATAF VLV_DISTANCIADECEL_2
DATAF VLV_DISTANCIACRUCERO_2
DATAF VGV_DIAMETRO
DATAF VGV_NEGRO1
DATAF VGV_NEGRO3
DATAF VGV_NEGRO4
DATAF VGV_BLANCO1
DATAF VGV_BLANCO3
DATAF VGV_BLANCO4
DATAF VLV_LECTURA1_1
DATAF VLV_LECTURA3_1
DATAF VLV_LECTURA4_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V0_1
DATAF VLV_ERROR_1
DATAF VLV_OLDERROR_1
DATAF VLV_U_1
DATAF VLV_SENTIDO_1
DATAF VLV_STARTC_1
DATAF VLV_ENCODERC_1
DATAF VLV_PENDIENTE_1
DATAF VLV_VEL_1
DATAF VLV_KP_1
DATAF VLV_KD_1
DATAF VLV_STARTB_2
DATAF VLV_STARTC_2
DATAF VLV_SIGNO_2
DATAF VLV_VEL_2
DATAF VLV_KP_2
DATAF VLV_KD_2
DATAF VLV_ERROR_2
DATAF VLV_OLDERROR_2
DATAF VLV_GRADOSDECEL_2
DATAF VLV_GRADOSCRUCERO_2
DATAF VLV_ENCODERB_2
DATAF VLV_ENCODERC_2
DATAF VLV_PENDIENTE_2
DATAF VLV_CORRECCION_2
DATA32 RUNCOUNTER_F_MOSTRARVEL_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VPR_GIRO_G1
    MOVEF_F 0.0 VPR_RGB_VALUENEGRO
    MOVEF_F 0.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 0.0 VPR_RGB_RWHITE
    MOVEF_F 0.0 VPR_RGB_GWHITE
    MOVEF_F 0.0 VPR_RGB_BWHITE
    MOVEF_F 0.0 VPR_RECTO_DIAMETRO
    MOVEF_F 0.0 VPR_GIRO_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F 0.0 VPR_SMART_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F 0.0 VPR_SMART_NEGRO1
    MOVEF_F 0.0 VPR_SMART_NEGRO3
    MOVEF_F 0.0 VPR_SMART_NEGRO4
    MOVEF_F 0.0 VPR_SMART_BLANCO1
    MOVEF_F 0.0 VPR_SMART_BLANCO3
    MOVEF_F 0.0 VPR_SMART_BLANCO4
    MOVEF_F 0.0 VPR_RECTO_NEGRO
    MOVEF_F 0.0 VPR_RECTO_BLANCO
    MOVEF_F 0.0 VPR_GIRO_NEGRO
    MOVEF_F 0.0 VPR_GIRO_BLANCO
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_ENCODER_1
    MOVEF_F 0.0 VLV_V0_2
    MOVEF_F 0.0 VLV_VMIN_2
    MOVEF_F 0.0 VLV_DISTANCIADECEL_2
    MOVEF_F 0.0 VLV_DISTANCIACRUCERO_2
    MOVEF_F 0.0 VGV_DIAMETRO
    MOVEF_F 0.0 VGV_NEGRO1
    MOVEF_F 0.0 VGV_NEGRO3
    MOVEF_F 0.0 VGV_NEGRO4
    MOVEF_F 0.0 VGV_BLANCO1
    MOVEF_F 0.0 VGV_BLANCO3
    MOVEF_F 0.0 VGV_BLANCO4
    MOVEF_F 0.0 VLV_LECTURA1_1
    MOVEF_F 0.0 VLV_LECTURA3_1
    MOVEF_F 0.0 VLV_LECTURA4_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V0_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_OLDERROR_1
    MOVEF_F 0.0 VLV_U_1
    MOVEF_F 0.0 VLV_SENTIDO_1
    MOVEF_F 0.0 VLV_STARTC_1
    MOVEF_F 0.0 VLV_ENCODERC_1
    MOVEF_F 0.0 VLV_PENDIENTE_1
    MOVEF_F 0.0 VLV_VEL_1
    MOVEF_F 0.0 VLV_KP_1
    MOVEF_F 0.0 VLV_KD_1
    MOVEF_F 0.0 VLV_STARTB_2
    MOVEF_F 0.0 VLV_STARTC_2
    MOVEF_F 0.0 VLV_SIGNO_2
    MOVEF_F 0.0 VLV_VEL_2
    MOVEF_F 0.0 VLV_KP_2
    MOVEF_F 0.0 VLV_KD_2
    MOVEF_F 0.0 VLV_ERROR_2
    MOVEF_F 0.0 VLV_OLDERROR_2
    MOVEF_F 0.0 VLV_GRADOSDECEL_2
    MOVEF_F 0.0 VLV_GRADOSCRUCERO_2
    MOVEF_F 0.0 VLV_ENCODERB_2
    MOVEF_F 0.0 VLV_ENCODERC_2
    MOVEF_F 0.0 VLV_PENDIENTE_2
    MOVEF_F 0.0 VLV_CORRECCION_2
    MOVE32_32 0 RUNCOUNTER_F_MOSTRARVEL_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_MOSTRARVEL_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_MOSTRARVEL_0 0
    CALL GETANDINC32 RUNCOUNTER_F_MOSTRARVEL_0 -1 RUNCOUNTER_F_MOSTRARVEL_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_MOSTRARVEL_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch127
    WRITE32 ENDSUB_F_MOSTRARVEL_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOSTRARVEL_0
  dispatch127:
    MOVEF_F 0.0 VPR_GIRO_G1
    MOVEF_F 0.0 VPR_RGB_VALUENEGRO
    MOVEF_F 0.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 0.0 VPR_RGB_RWHITE
    MOVEF_F 0.0 VPR_RGB_GWHITE
    MOVEF_F 0.0 VPR_RGB_BWHITE
    MOVEF_F 0.0 VPR_RECTO_DIAMETRO
    MOVEF_F 0.0 VPR_GIRO_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F 0.0 VPR_SMART_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F 0.0 VPR_SMART_NEGRO1
    MOVEF_F 0.0 VPR_SMART_NEGRO3
    MOVEF_F 0.0 VPR_SMART_NEGRO4
    MOVEF_F 0.0 VPR_SMART_BLANCO1
    MOVEF_F 0.0 VPR_SMART_BLANCO3
    MOVEF_F 0.0 VPR_SMART_BLANCO4
    MOVEF_F 0.0 VPR_RECTO_NEGRO
    MOVEF_F 0.0 VPR_RECTO_BLANCO
    MOVEF_F 0.0 VPR_GIRO_NEGRO
    MOVEF_F 0.0 VPR_GIRO_BLANCO
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_ENCODER_1
    MOVEF_F 0.0 VLV_V0_2
    MOVEF_F 0.0 VLV_VMIN_2
    MOVEF_F 0.0 VLV_DISTANCIADECEL_2
    MOVEF_F 0.0 VLV_DISTANCIACRUCERO_2
    MOVEF_F 0.0 VGV_DIAMETRO
    MOVEF_F 0.0 VGV_NEGRO1
    MOVEF_F 0.0 VGV_NEGRO3
    MOVEF_F 0.0 VGV_NEGRO4
    MOVEF_F 0.0 VGV_BLANCO1
    MOVEF_F 0.0 VGV_BLANCO3
    MOVEF_F 0.0 VGV_BLANCO4
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB0 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB0:
    DATA32 tmp1
    CALL GETANDINC32 RUNCOUNTER_F_MOSTRARVEL_0 1  RUNCOUNTER_F_MOSTRARVEL_0 tmp1
    JR_NEQ32 0 tmp1 alreadylaunched1
    OBJECT_START TF_MOSTRARVEL_0
  alreadylaunched1:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB2 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB2:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 1.0 no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 0.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 2.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 4.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 3.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 4.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    MOVEF_F 6.24 VGV_DIAMETRO
    MOVEF_F 2.68055555555556 VPR_GIRO_G1
    MOVEF_F 10.0 VGV_NEGRO1
    MOVEF_F 7.0 VGV_NEGRO3
    MOVEF_F 10.0 VGV_NEGRO4
    MOVEF_F 77.0 VGV_BLANCO1
    MOVEF_F 59.0 VGV_BLANCO3
    MOVEF_F 77.0 VGV_BLANCO4
    MOVEF_F 4.0 VPR_RGB_VALUENEGRO
    MOVEF_F 32.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 57.0 VPR_RGB_RWHITE
    MOVEF_F 71.0 VPR_RGB_GWHITE
    MOVEF_F 73.0 VPR_RGB_BWHITE
    MOVEF_F VGV_DIAMETRO VPR_RECTO_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_GIRO_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_SMART_DIAMETRO
    MOVEF_F VGV_NEGRO1 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F VGV_NEGRO3 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F VGV_NEGRO4 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F VGV_BLANCO1 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F VGV_BLANCO3 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F VGV_BLANCO4 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F VGV_NEGRO1 VPR_SMART_NEGRO1
    MOVEF_F VGV_NEGRO3 VPR_SMART_NEGRO3
    MOVEF_F VGV_NEGRO4 VPR_SMART_NEGRO4
    MOVEF_F VGV_BLANCO1 VPR_SMART_BLANCO1
    MOVEF_F VGV_BLANCO3 VPR_SMART_BLANCO3
    MOVEF_F VGV_BLANCO4 VPR_SMART_BLANCO4
    ADDF VGV_NEGRO1 VGV_NEGRO3 F.1
    ADDF F.1 VGV_NEGRO4 F.0
    DATAF tmpf9
    DATA8 flag9
    DIVF F.0 3.0 tmpf9
    CP_EQF 0.0 3.0 flag9
    SELECTF flag9 0.0 tmpf9 VPR_RECTO_NEGRO

    ADDF VGV_BLANCO1 VGV_BLANCO3 F.1
    ADDF F.1 VGV_BLANCO4 F.0
    DATAF tmpf12
    DATA8 flag12
    DIVF F.0 3.0 tmpf12
    CP_EQF 0.0 3.0 flag12
    SELECTF flag12 0.0 tmpf12 VPR_RECTO_BLANCO

    ADDF VGV_NEGRO1 VGV_NEGRO3 F.1
    ADDF F.1 VGV_NEGRO4 F.0
    DATAF tmpf15
    DATA8 flag15
    DIVF F.0 3.0 tmpf15
    CP_EQF 0.0 3.0 flag15
    SELECTF flag15 0.0 tmpf15 VPR_GIRO_NEGRO

    ADDF VGV_BLANCO1 VGV_BLANCO3 F.1
    ADDF F.1 VGV_BLANCO4 F.0
    DATAF tmpf18
    DATA8 flag18
    DIVF F.0 3.0 tmpf18
    CP_EQF 0.0 3.0 flag18
    SELECTF flag18 0.0 tmpf18 VPR_GIRO_BLANCO

RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_MAIN_0:
    MOVEF_F 80.0 VLV_VELOCIDAD_1
    MOVEF_F 80.0 VLV_ENCODER_1
    WRITE32 ENDSUB_M_SMART_ENCODER14F_2:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_SMART_ENCODER14F_2
CALLSUB19:
    MOVEF_F 80.0 VLV_V0_2
    MOVEF_F 20.0 VLV_VMIN_2
    MOVEF_F 15.0 VLV_DISTANCIADECEL_2
    MOVEF_F 0.0 VLV_DISTANCIACRUCERO_2
    WRITE32 ENDSUB_M_RECTO_DECEL_4:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_DECEL_4
CALLSUB20:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_MOSTRARVEL_0:
  while21:
  whilebody21:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Vel = ' S.1 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    JR whilebody21
  endwhile21:
RETSUB_F_MOSTRARVEL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOSTRARVEL_0:
SUB_M_SMART_ENCODER14F_2:
    MULF VLV_VELOCIDAD_1 1.0 VLV_VELOCIDAD_1
    MOVEF_F 50.0 VLV_LECTURA1_1
    MOVEF_F 50.0 VLV_LECTURA3_1
    MOVEF_F 50.0 VLV_LECTURA4_1
    MOVEF_F 3.1415926535897932384 F.1
    MULF VPR_SMART_DIAMETRO F.1 F.0
    DATAF tmpf32
    DATA8 flag32
    DIVF 1800.0 F.0 tmpf32
    CP_EQF 0.0 F.0 flag32
    SELECTF flag32 0.0 tmpf32 VLV_DISTANCIA_1

    DATA8 flag33
	CP_LTF VLV_VELOCIDAD_1 20.0 flag33
	SELECTF flag33 VLV_VELOCIDAD_1 20.0 VLV_V0_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_OLDERROR_1
    MOVEF_F 0.0 VLV_U_1
    MATH ABS VLV_VELOCIDAD_1 F.0
    DATAF tmpf35
    DATA8 flag35
    DIVF VLV_VELOCIDAD_1 F.0 tmpf35
    CP_EQF 0.0 F.0 flag35
    SELECTF flag35 0.0 tmpf35 VLV_SENTIDO_1

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SMART_DIAMETRO F.2 F.1
    DATAF tmpf38
    DATA8 flag38
    DIVF VLV_ENCODER_1 F.1 tmpf38
    CP_EQF 0.0 F.1 flag38
    SELECTF flag38 0.0 tmpf38 F.0

    MULF F.0 360.0 VLV_ENCODER_1
    CALL MOTOR.GETCOUNT 'C' VLV_STARTC_1
    MOVEF_F 0.0 VLV_ENCODERC_1
  while41:
    MATH ABS VLV_ENCODERC_1 F.0
    JR_GTEQF F.0 VLV_ENCODER_1 endwhile41
  whilebody41:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_STARTC_1 VLV_ENCODERC_1
    SUBF VLV_VELOCIDAD_1 VLV_V0_1 F.0
    DATAF tmpf46
    DATA8 flag46
    DIVF F.0 VLV_DISTANCIA_1 tmpf46
    CP_EQF 0.0 VLV_DISTANCIA_1 flag46
    SELECTF flag46 0.0 tmpf46 VLV_PENDIENTE_1

    MULF VLV_PENDIENTE_1 VLV_ENCODERC_1 F.1
    ADDF F.1 VLV_V0_1 F.0
    DATA8 flag49
	CP_LTF VLV_VELOCIDAD_1 F.0 flag49
	SELECTF flag49 VLV_VELOCIDAD_1 F.0 VLV_VEL_1
    DATAF tmpf50
    DATA8 flag50
    DIVF VLV_VEL_1 220.0 tmpf50
    CP_EQF 0.0 220.0 flag50
    SELECTF flag50 0.0 tmpf50 VLV_KP_1

    MULF VLV_KP_1 2.0 VLV_KD_1
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SMART_NEGRO1 F.1
    DATAF tmpf54
    DATA8 flag54
    DIVF F.1 VPR_SMART_BLANCO1 tmpf54
    CP_EQF 0.0 VPR_SMART_BLANCO1 flag54
    SELECTF flag54 0.0 tmpf54 F.0

    SUBF 100.0 VPR_SMART_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SMART_NEGRO4 F.1
    DATAF tmpf59
    DATA8 flag59
    DIVF F.1 VPR_SMART_BLANCO4 tmpf59
    CP_EQF 0.0 VPR_SMART_BLANCO4 flag59
    SELECTF flag59 0.0 tmpf59 F.0

    SUBF 100.0 VPR_SMART_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_1
    SUBF VLV_LECTURA1_1 VLV_LECTURA4_1 F.1
    MULF F.1 VLV_SENTIDO_1 F.0
    MULF F.0 1.0 VLV_ERROR_1
    MULF VLV_ERROR_1 VLV_KP_1 F.0
    SUBF VLV_ERROR_1 VLV_OLDERROR_1 F.2
    MULF F.2 VLV_KD_1 F.1
    ADDF F.0 F.1 VLV_U_1
    ADDF VLV_VEL_1 VLV_U_1 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_1 VLV_U_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_1 VLV_OLDERROR_1
    MATH ABS VLV_ENCODERC_1 F.0
    JR_LTF F.0 VLV_ENCODER_1 whilebody41
  endwhile41:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_SMART_ENCODER14F_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SMART_ENCODER14F_2:
SUB_M_RECTO_DECEL_4:
    CALL MOTOR.GETCOUNT 'B' VLV_STARTB_2
    CALL MOTOR.GETCOUNT 'C' VLV_STARTC_2
    MATH ABS VLV_V0_2 F.0
    DATAF tmpf78
    DATA8 flag78
    DIVF VLV_V0_2 F.0 tmpf78
    CP_EQF 0.0 F.0 flag78
    SELECTF flag78 0.0 tmpf78 VLV_SIGNO_2

    MATH ABS VLV_V0_2 F.1
    DATA8 flag80
	CP_LTF 90.0 F.1 flag80
	SELECTF flag80 90.0 F.1 F.0
    MULF F.0 VLV_SIGNO_2 VLV_V0_2
    MATH ABS VLV_VMIN_2 F.1
    DATA8 flag83
	CP_GTF 8.0 F.1 flag83
	SELECTF flag83 8.0 F.1 F.0
    MULF F.0 VLV_SIGNO_2 VLV_VMIN_2
    MOVEF_F 0.0 VLV_VEL_2
    MOVEF_F 0.4 VLV_KP_2
    MOVEF_F 0.5 VLV_KD_2
    MOVEF_F 0.0 VLV_ERROR_2
    MOVEF_F 0.0 VLV_OLDERROR_2
    MULF VLV_DISTANCIADECEL_2 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_RECTO_DIAMETRO F.2 F.1
    DATAF tmpf88
    DATA8 flag88
    DIVF F.0 F.1 tmpf88
    CP_EQF 0.0 F.1 flag88
    SELECTF flag88 0.0 tmpf88 VLV_GRADOSDECEL_2

    MULF VLV_DISTANCIACRUCERO_2 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_RECTO_DIAMETRO F.2 F.1
    DATAF tmpf92
    DATA8 flag92
    DIVF F.0 F.1 tmpf92
    CP_EQF 0.0 F.1 flag92
    SELECTF flag92 0.0 tmpf92 VLV_GRADOSCRUCERO_2

    MOVEF_F 0.0 VLV_ENCODERB_2
    MOVEF_F 0.0 VLV_ENCODERC_2
  while93:
    MATH ABS VLV_ENCODERC_2 F.0
    ADDF VLV_GRADOSDECEL_2 VLV_GRADOSCRUCERO_2 F.1
    JR_GTEQF F.0 F.1 endwhile93
  whilebody93:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 1.0 F.0
    SUBF F.0 VLV_STARTB_2 VLV_ENCODERB_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_STARTC_2 VLV_ENCODERC_2
    SUBF VLV_VMIN_2 VLV_V0_2 F.1
    DATAF tmpf102
    DATA8 flag102
    DIVF F.1 VLV_GRADOSDECEL_2 tmpf102
    CP_EQF 0.0 VLV_GRADOSDECEL_2 flag102
    SELECTF flag102 0.0 tmpf102 F.0

    MULF F.0 VLV_SIGNO_2 VLV_PENDIENTE_2
    JR_LTEQF VLV_SIGNO_2 0.0 else104_1
    MULF VLV_PENDIENTE_2 VLV_ENCODERC_2 F.1
    ADDF F.1 VLV_V0_2 F.0
    DATA8 flag107
	CP_GTF VLV_VMIN_2 F.0 flag107
	SELECTF flag107 VLV_VMIN_2 F.0 VLV_VEL_2
    JR endif104
  else104_1:
    MULF VLV_PENDIENTE_2 VLV_ENCODERC_2 F.1
    ADDF F.1 VLV_V0_2 F.0
    DATA8 flag110
	CP_LTF VLV_VMIN_2 F.0 flag110
	SELECTF flag110 VLV_VMIN_2 F.0 VLV_VEL_2
  else104_2:
  endif104:
    MULF -1.0 VLV_ENCODERB_2 F.1
    SUBF F.1 VLV_ENCODERC_2 F.0
    MULF F.0 1.0 VLV_ERROR_2
    MULF VLV_ERROR_2 VLV_KP_2 F.0
    SUBF VLV_ERROR_2 VLV_OLDERROR_2 F.2
    MULF F.2 VLV_KD_2 F.1
    ADDF F.0 F.1 VLV_CORRECCION_2
    MOVEF_F VLV_ERROR_2 VLV_OLDERROR_2
    SUBF VLV_VEL_2 VLV_CORRECCION_2 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 1.0 F.0
    ADDF VLV_VEL_2 VLV_CORRECCION_2 F.2
    MULF F.2 1.0 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODERC_2 F.0
    ADDF VLV_GRADOSDECEL_2 VLV_GRADOSCRUCERO_2 F.1
    JR_LTF F.0 F.1 whilebody93
  endwhile93:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_DECEL_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_DECEL_4:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
