DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VPR_GIRO_G1
DATAF VPR_RGB_VALUENEGRO
DATAF VPR_RGB_VALUEBLANCO
DATAF VPR_RGB_RWHITE
DATAF VPR_RGB_GWHITE
DATAF VPR_RGB_BWHITE
DATAF VPR_RECTO_DIAMETRO
DATAF VPR_GIRO_DIAMETRO
DATAF VPR_SIGUELINEAS_DIAMETRO
DATAF VPR_SMART_DIAMETRO
DATAF VPR_SIGUELINEAS_NEGRO1
DATAF VPR_SIGUELINEAS_NEGRO3
DATAF VPR_SIGUELINEAS_NEGRO4
DATAF VPR_SIGUELINEAS_BLANCO1
DATAF VPR_SIGUELINEAS_BLANCO3
DATAF VPR_SIGUELINEAS_BLANCO4
DATAF VPR_SMART_NEGRO1
DATAF VPR_SMART_NEGRO3
DATAF VPR_SMART_NEGRO4
DATAF VPR_SMART_BLANCO1
DATAF VPR_SMART_BLANCO3
DATAF VPR_SMART_BLANCO4
DATAF VPR_RECTO_NEGRO
DATAF VPR_RECTO_BLANCO
DATAF VPR_GIRO_NEGRO
DATAF VPR_GIRO_BLANCO
DATAF VLV_VELOCIDAD_11
DATAF VLV_TIMER_11
DATAF VLV_VELOCIDAD_12
DATAF VLV_ENCODER_12
DATAF VLV_VELOCIDAD_14
DATAF VLV_DISTANCIA_14
DATAF VLV_VELOCIDAD_20
DATAF VLV_ENCODER_20
DATAF VLV_VELOCIDAD1_27
DATAF VLV_VELOCIDAD2_27
DATAF VLV_GRADOS_27
DATAF VLV_VELOCIDAD_15
DATAF VLV_SENSOR_15
DATAF VLV_VELOCIDAD_21
DATAF VLV_VELOCIDAD_22
DATAF VLV_ENCODER_22
DATAF VLV_VELOCIDAD_16
DATAF VLV_DISTANCIA_16
DATAF VLV_SENS_30
DATAF VLV_REPS_30
DATAF VLV_COLOR_30
DATAF VLV_COLOR_31
DATAF VLV_VELOCIDAD_17
DATAF VLV_TIEMPO_17
DATAF VLV_VELOCIDAD1_28
DATAF VLV_VELOCIDAD2_28
DATAF VLV_SENS_28
DATAF VLV_VELOCIDAD_23
DATAF VLV_ENCODER_23
DATAF VLV_VELOCIDAD1_29
DATAF VLV_VELOCIDAD2_29
DATAF VLV_DISTANCIA_29
DATAF VLV_VELOCIDAD_24
DATAF VLV_READER_24
DATAF VLV_VELOCIDAD_25
DATAF VLV_READER_25
DATAF VLV_VELOCIDAD_26
DATAF VLV_ENCODER_26
DATAF VLV_VELOCIDAD_18
DATAF VLV_SENSOR_18
ARRAY16 VLV_MARKING_8 2
DATAF VLV_VELOCIDAD_19
DATAF VLV_DISTANCIA_19
DATAF VLV_NUMERO_2
DATAF VLV_VELOCIDAD_13
DATAF VLV_TIMER_13
ARRAY16 VLV_MARKING_6 2
DATAS VLV_CODIGO_6 252
DATAF VLV_GRADOS_7
DATAF VGV_MARKINGGRANDE
DATAS VLV_CODIGO_8 252
DATAF VGV_DIAMETRO
DATAF VGV_NEGRO1
DATAF VGV_NEGRO3
DATAF VGV_NEGRO4
DATAF VGV_BLANCO1
DATAF VGV_BLANCO3
DATAF VGV_BLANCO4
DATAF VGV_TIEMPO
DATAF VLV_VOLTAJE_1
DATAF VLV_AUX_6
DATAF VLV_I_6
DATAF VLV_SIGNO_7
DATAF VLV_ENCDIFF_12
DATAF VLV_SIGNO_12
DATAF VLV_SAFETYTIMER_12
DATAF VLV_CORRECCION_14
DATAF VLV_ENC_14
DATAF VLV_CORRECCION_15
DATAF VLV_LECTURA_15
DATAF VLV_CORRECCION_16
DATAF VLV_ENC_16
DATAF VLV_CORRECCION_17
DATAF VLV_CORRECCION_18
DATAF VLV_LECTURA_18
DATAF VLV_SAFETYTIMER_19
DATAF VLV_CORRECCION_19
DATAF VLV_ENC_19
DATAF VLV_LECTURA1_20
DATAF VLV_LECTURA3_20
DATAF VLV_LECTURA4_20
DATAF VLV_KP_20
DATAF VLV_KD_20
DATAF VLV_ERROR_20
DATAF VLV_OLDERROR_20
DATAF VLV_U_20
DATAF VLV_SENTIDO_20
DATAF VLV_STARTC_20
DATAF VLV_ENCODERC_20
DATAF VLV_LECTURA1_21
DATAF VLV_LECTURA3_21
DATAF VLV_LECTURA4_21
DATAF VLV_KP_21
DATAF VLV_KD_21
DATAF VLV_ERROR_21
DATAF VLV_OLDERROR_21
DATAF VLV_U_21
DATAF VLV_SENTIDO_21
DATAF VLV_LECTURA1_22
DATAF VLV_LECTURA3_22
DATAF VLV_LECTURA4_22
DATAF VLV_KP_22
DATAF VLV_KD_22
DATAF VLV_ERROR_22
DATAF VLV_OLDERROR_22
DATAF VLV_U_22
DATAF VLV_SENTIDO_22
DATAF VLV_STARTC_22
DATAF VLV_ENCODERC_22
DATAF VLV_LECTURA1_23
DATAF VLV_LECTURA3_23
DATAF VLV_LECTURA4_23
DATAF VLV_KP_23
DATAF VLV_KD_23
DATAF VLV_ERROR_23
DATAF VLV_OLDERROR_23
DATAF VLV_U_23
DATAF VLV_SENTIDO_23
DATAF VLV_STARTC_23
DATAF VLV_ENCODERC_23
DATAF VLV_LECTURA1_24
DATAF VLV_LECTURA3_24
DATAF VLV_LECTURA4_24
DATAF VLV_KP_24
DATAF VLV_KD_24
DATAF VLV_ERROR_24
DATAF VLV_OLDERROR_24
DATAF VLV_U_24
DATAF VLV_SENTIDO_24
DATAF VLV_LECTURA_24
DATAF VLV_LECTURAIZQ_24
DATAF VLV_LECTURADCH_24
DATAF VLV_LECTURA1_25
DATAF VLV_LECTURA3_25
DATAF VLV_LECTURA4_25
DATAF VLV_KP_25
DATAF VLV_KD_25
DATAF VLV_ERROR_25
DATAF VLV_OLDERROR_25
DATAF VLV_U_25
DATAF VLV_SENTIDO_25
DATAF VLV_LECTURA_25
DATAF VLV_LECTURAIZQ_25
DATAF VLV_LECTURADCH_25
DATAF VLV_LECTURA1_26
DATAF VLV_LECTURA3_26
DATAF VLV_LECTURA4_26
DATAF VLV_KP_26
DATAF VLV_KD_26
DATAF VLV_ERROR_26
DATAF VLV_OLDERROR_26
DATAF VLV_U_26
DATAF VLV_SENTIDO_26
DATAF VLV_STARTC_26
DATAF VLV_ENCODERC_26
DATAF VLV_SIGNO_27
DATAF VLV_VMIN_27
DATAF VLV_VMAX_27
DATAF VLV_ENCODER_27
DATAF VLV_LECTURA_28
DATAF VLV_ENCODER_29
DATAF VLV_SENS_MODE_30
DATAF VLV_RED_30
DATAF VLV_YELLOW_30
DATAF VLV_GREEN_30
DATAF VLV_BLUE_30
DATAF VLV_HUE_30
DATAF VLV_SAT_30
DATAF VLV_VALUE_30
ARRAY16 VLV_RNORMARRAY_30 2
ARRAY16 VLV_GNORMARRAY_30 2
ARRAY16 VLV_BNORMARRAY_30 2
DATAF VLV_J_30
ARRAY16 VLV_RGB_30 2
DATAF VLV_RRAW_30
DATAF VLV_GRAW_30
DATAF VLV_BRAW_30
DATAF VLV_RNORM_30
DATAF VLV_GNORM_30
DATAF VLV_BNORM_30
DATAF VLV_MAX_30
DATAF VLV_MIN_30
DATAF VLV_RGBGREY_30

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VPR_GIRO_G1
    MOVEF_F 0.0 VPR_RGB_VALUENEGRO
    MOVEF_F 0.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 0.0 VPR_RGB_RWHITE
    MOVEF_F 0.0 VPR_RGB_GWHITE
    MOVEF_F 0.0 VPR_RGB_BWHITE
    MOVEF_F 0.0 VPR_RECTO_DIAMETRO
    MOVEF_F 0.0 VPR_GIRO_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F 0.0 VPR_SMART_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F 0.0 VPR_SMART_NEGRO1
    MOVEF_F 0.0 VPR_SMART_NEGRO3
    MOVEF_F 0.0 VPR_SMART_NEGRO4
    MOVEF_F 0.0 VPR_SMART_BLANCO1
    MOVEF_F 0.0 VPR_SMART_BLANCO3
    MOVEF_F 0.0 VPR_SMART_BLANCO4
    MOVEF_F 0.0 VPR_RECTO_NEGRO
    MOVEF_F 0.0 VPR_RECTO_BLANCO
    MOVEF_F 0.0 VPR_GIRO_NEGRO
    MOVEF_F 0.0 VPR_GIRO_BLANCO
    MOVEF_F 0.0 VLV_VELOCIDAD_11
    MOVEF_F 0.0 VLV_TIMER_11
    MOVEF_F 0.0 VLV_VELOCIDAD_12
    MOVEF_F 0.0 VLV_ENCODER_12
    MOVEF_F 0.0 VLV_VELOCIDAD_14
    MOVEF_F 0.0 VLV_DISTANCIA_14
    MOVEF_F 0.0 VLV_VELOCIDAD_20
    MOVEF_F 0.0 VLV_ENCODER_20
    MOVEF_F 0.0 VLV_VELOCIDAD1_27
    MOVEF_F 0.0 VLV_VELOCIDAD2_27
    MOVEF_F 0.0 VLV_GRADOS_27
    MOVEF_F 0.0 VLV_VELOCIDAD_15
    MOVEF_F 0.0 VLV_SENSOR_15
    MOVEF_F 0.0 VLV_VELOCIDAD_21
    MOVEF_F 0.0 VLV_VELOCIDAD_22
    MOVEF_F 0.0 VLV_ENCODER_22
    MOVEF_F 0.0 VLV_VELOCIDAD_16
    MOVEF_F 0.0 VLV_DISTANCIA_16
    MOVEF_F 0.0 VLV_SENS_30
    MOVEF_F 0.0 VLV_REPS_30
    MOVEF_F 0.0 VLV_COLOR_30
    MOVEF_F 0.0 VLV_COLOR_31
    MOVEF_F 0.0 VLV_VELOCIDAD_17
    MOVEF_F 0.0 VLV_TIEMPO_17
    MOVEF_F 0.0 VLV_VELOCIDAD1_28
    MOVEF_F 0.0 VLV_VELOCIDAD2_28
    MOVEF_F 0.0 VLV_SENS_28
    MOVEF_F 0.0 VLV_VELOCIDAD_23
    MOVEF_F 0.0 VLV_ENCODER_23
    MOVEF_F 0.0 VLV_VELOCIDAD1_29
    MOVEF_F 0.0 VLV_VELOCIDAD2_29
    MOVEF_F 0.0 VLV_DISTANCIA_29
    MOVEF_F 0.0 VLV_VELOCIDAD_24
    MOVEF_F 0.0 VLV_READER_24
    MOVEF_F 0.0 VLV_VELOCIDAD_25
    MOVEF_F 0.0 VLV_READER_25
    MOVEF_F 0.0 VLV_VELOCIDAD_26
    MOVEF_F 0.0 VLV_ENCODER_26
    MOVEF_F 0.0 VLV_VELOCIDAD_18
    MOVEF_F 0.0 VLV_SENSOR_18
    CALL ARRAYCREATE_FLOAT VLV_MARKING_8
    MOVEF_F 0.0 VLV_VELOCIDAD_19
    MOVEF_F 0.0 VLV_DISTANCIA_19
    MOVEF_F 0.0 VLV_NUMERO_2
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIMER_13
    CALL ARRAYCREATE_FLOAT VLV_MARKING_6
    STRINGS DUPLICATE '' VLV_CODIGO_6
    MOVEF_F 0.0 VLV_GRADOS_7
    MOVEF_F 0.0 VGV_MARKINGGRANDE
    STRINGS DUPLICATE '' VLV_CODIGO_8
    MOVEF_F 0.0 VGV_DIAMETRO
    MOVEF_F 0.0 VGV_NEGRO1
    MOVEF_F 0.0 VGV_NEGRO3
    MOVEF_F 0.0 VGV_NEGRO4
    MOVEF_F 0.0 VGV_BLANCO1
    MOVEF_F 0.0 VGV_BLANCO3
    MOVEF_F 0.0 VGV_BLANCO4
    MOVEF_F 0.0 VGV_TIEMPO
    MOVEF_F 0.0 VLV_VOLTAJE_1
    MOVEF_F 0.0 VLV_AUX_6
    MOVEF_F 0.0 VLV_I_6
    MOVEF_F 0.0 VLV_SIGNO_7
    MOVEF_F 0.0 VLV_ENCDIFF_12
    MOVEF_F 0.0 VLV_SIGNO_12
    MOVEF_F 0.0 VLV_SAFETYTIMER_12
    MOVEF_F 0.0 VLV_CORRECCION_14
    MOVEF_F 0.0 VLV_ENC_14
    MOVEF_F 0.0 VLV_CORRECCION_15
    MOVEF_F 0.0 VLV_LECTURA_15
    MOVEF_F 0.0 VLV_CORRECCION_16
    MOVEF_F 0.0 VLV_ENC_16
    MOVEF_F 0.0 VLV_CORRECCION_17
    MOVEF_F 0.0 VLV_CORRECCION_18
    MOVEF_F 0.0 VLV_LECTURA_18
    MOVEF_F 0.0 VLV_SAFETYTIMER_19
    MOVEF_F 0.0 VLV_CORRECCION_19
    MOVEF_F 0.0 VLV_ENC_19
    MOVEF_F 0.0 VLV_LECTURA1_20
    MOVEF_F 0.0 VLV_LECTURA3_20
    MOVEF_F 0.0 VLV_LECTURA4_20
    MOVEF_F 0.0 VLV_KP_20
    MOVEF_F 0.0 VLV_KD_20
    MOVEF_F 0.0 VLV_ERROR_20
    MOVEF_F 0.0 VLV_OLDERROR_20
    MOVEF_F 0.0 VLV_U_20
    MOVEF_F 0.0 VLV_SENTIDO_20
    MOVEF_F 0.0 VLV_STARTC_20
    MOVEF_F 0.0 VLV_ENCODERC_20
    MOVEF_F 0.0 VLV_LECTURA1_21
    MOVEF_F 0.0 VLV_LECTURA3_21
    MOVEF_F 0.0 VLV_LECTURA4_21
    MOVEF_F 0.0 VLV_KP_21
    MOVEF_F 0.0 VLV_KD_21
    MOVEF_F 0.0 VLV_ERROR_21
    MOVEF_F 0.0 VLV_OLDERROR_21
    MOVEF_F 0.0 VLV_U_21
    MOVEF_F 0.0 VLV_SENTIDO_21
    MOVEF_F 0.0 VLV_LECTURA1_22
    MOVEF_F 0.0 VLV_LECTURA3_22
    MOVEF_F 0.0 VLV_LECTURA4_22
    MOVEF_F 0.0 VLV_KP_22
    MOVEF_F 0.0 VLV_KD_22
    MOVEF_F 0.0 VLV_ERROR_22
    MOVEF_F 0.0 VLV_OLDERROR_22
    MOVEF_F 0.0 VLV_U_22
    MOVEF_F 0.0 VLV_SENTIDO_22
    MOVEF_F 0.0 VLV_STARTC_22
    MOVEF_F 0.0 VLV_ENCODERC_22
    MOVEF_F 0.0 VLV_LECTURA1_23
    MOVEF_F 0.0 VLV_LECTURA3_23
    MOVEF_F 0.0 VLV_LECTURA4_23
    MOVEF_F 0.0 VLV_KP_23
    MOVEF_F 0.0 VLV_KD_23
    MOVEF_F 0.0 VLV_ERROR_23
    MOVEF_F 0.0 VLV_OLDERROR_23
    MOVEF_F 0.0 VLV_U_23
    MOVEF_F 0.0 VLV_SENTIDO_23
    MOVEF_F 0.0 VLV_STARTC_23
    MOVEF_F 0.0 VLV_ENCODERC_23
    MOVEF_F 0.0 VLV_LECTURA1_24
    MOVEF_F 0.0 VLV_LECTURA3_24
    MOVEF_F 0.0 VLV_LECTURA4_24
    MOVEF_F 0.0 VLV_KP_24
    MOVEF_F 0.0 VLV_KD_24
    MOVEF_F 0.0 VLV_ERROR_24
    MOVEF_F 0.0 VLV_OLDERROR_24
    MOVEF_F 0.0 VLV_U_24
    MOVEF_F 0.0 VLV_SENTIDO_24
    MOVEF_F 0.0 VLV_LECTURA_24
    MOVEF_F 0.0 VLV_LECTURAIZQ_24
    MOVEF_F 0.0 VLV_LECTURADCH_24
    MOVEF_F 0.0 VLV_LECTURA1_25
    MOVEF_F 0.0 VLV_LECTURA3_25
    MOVEF_F 0.0 VLV_LECTURA4_25
    MOVEF_F 0.0 VLV_KP_25
    MOVEF_F 0.0 VLV_KD_25
    MOVEF_F 0.0 VLV_ERROR_25
    MOVEF_F 0.0 VLV_OLDERROR_25
    MOVEF_F 0.0 VLV_U_25
    MOVEF_F 0.0 VLV_SENTIDO_25
    MOVEF_F 0.0 VLV_LECTURA_25
    MOVEF_F 0.0 VLV_LECTURAIZQ_25
    MOVEF_F 0.0 VLV_LECTURADCH_25
    MOVEF_F 0.0 VLV_LECTURA1_26
    MOVEF_F 0.0 VLV_LECTURA3_26
    MOVEF_F 0.0 VLV_LECTURA4_26
    MOVEF_F 0.0 VLV_KP_26
    MOVEF_F 0.0 VLV_KD_26
    MOVEF_F 0.0 VLV_ERROR_26
    MOVEF_F 0.0 VLV_OLDERROR_26
    MOVEF_F 0.0 VLV_U_26
    MOVEF_F 0.0 VLV_SENTIDO_26
    MOVEF_F 0.0 VLV_STARTC_26
    MOVEF_F 0.0 VLV_ENCODERC_26
    MOVEF_F 0.0 VLV_SIGNO_27
    MOVEF_F 0.0 VLV_VMIN_27
    MOVEF_F 0.0 VLV_VMAX_27
    MOVEF_F 0.0 VLV_ENCODER_27
    MOVEF_F 0.0 VLV_LECTURA_28
    MOVEF_F 0.0 VLV_ENCODER_29
    MOVEF_F 0.0 VLV_SENS_MODE_30
    MOVEF_F 0.0 VLV_RED_30
    MOVEF_F 0.0 VLV_YELLOW_30
    MOVEF_F 0.0 VLV_GREEN_30
    MOVEF_F 0.0 VLV_BLUE_30
    MOVEF_F 0.0 VLV_HUE_30
    MOVEF_F 0.0 VLV_SAT_30
    MOVEF_F 0.0 VLV_VALUE_30
    CALL ARRAYCREATE_FLOAT VLV_RNORMARRAY_30
    CALL ARRAYCREATE_FLOAT VLV_GNORMARRAY_30
    CALL ARRAYCREATE_FLOAT VLV_BNORMARRAY_30
    MOVEF_F 0.0 VLV_J_30
    CALL ARRAYCREATE_FLOAT VLV_RGB_30
    MOVEF_F 0.0 VLV_RRAW_30
    MOVEF_F 0.0 VLV_GRAW_30
    MOVEF_F 0.0 VLV_BRAW_30
    MOVEF_F 0.0 VLV_RNORM_30
    MOVEF_F 0.0 VLV_GNORM_30
    MOVEF_F 0.0 VLV_BNORM_30
    MOVEF_F 0.0 VLV_MAX_30
    MOVEF_F 0.0 VLV_MIN_30
    MOVEF_F 0.0 VLV_RGBGREY_30
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    DATAS S.2 252
    MOVE8_8 0 STACKPOINTER
    MOVEF_F 0.0 VPR_GIRO_G1
    MOVEF_F 0.0 VPR_RGB_VALUENEGRO
    MOVEF_F 0.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 0.0 VPR_RGB_RWHITE
    MOVEF_F 0.0 VPR_RGB_GWHITE
    MOVEF_F 0.0 VPR_RGB_BWHITE
    MOVEF_F 0.0 VPR_RECTO_DIAMETRO
    MOVEF_F 0.0 VPR_GIRO_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F 0.0 VPR_SMART_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F 0.0 VPR_SMART_NEGRO1
    MOVEF_F 0.0 VPR_SMART_NEGRO3
    MOVEF_F 0.0 VPR_SMART_NEGRO4
    MOVEF_F 0.0 VPR_SMART_BLANCO1
    MOVEF_F 0.0 VPR_SMART_BLANCO3
    MOVEF_F 0.0 VPR_SMART_BLANCO4
    MOVEF_F 0.0 VPR_RECTO_NEGRO
    MOVEF_F 0.0 VPR_RECTO_BLANCO
    MOVEF_F 0.0 VPR_GIRO_NEGRO
    MOVEF_F 0.0 VPR_GIRO_BLANCO
    MOVEF_F 0.0 VLV_VELOCIDAD_11
    MOVEF_F 0.0 VLV_TIMER_11
    MOVEF_F 0.0 VLV_VELOCIDAD_12
    MOVEF_F 0.0 VLV_ENCODER_12
    MOVEF_F 0.0 VLV_VELOCIDAD_14
    MOVEF_F 0.0 VLV_DISTANCIA_14
    MOVEF_F 0.0 VLV_VELOCIDAD_20
    MOVEF_F 0.0 VLV_ENCODER_20
    MOVEF_F 0.0 VLV_VELOCIDAD1_27
    MOVEF_F 0.0 VLV_VELOCIDAD2_27
    MOVEF_F 0.0 VLV_GRADOS_27
    MOVEF_F 0.0 VLV_VELOCIDAD_15
    MOVEF_F 0.0 VLV_SENSOR_15
    MOVEF_F 0.0 VLV_VELOCIDAD_21
    MOVEF_F 0.0 VLV_VELOCIDAD_22
    MOVEF_F 0.0 VLV_ENCODER_22
    MOVEF_F 0.0 VLV_VELOCIDAD_16
    MOVEF_F 0.0 VLV_DISTANCIA_16
    MOVEF_F 0.0 VLV_SENS_30
    MOVEF_F 0.0 VLV_REPS_30
    MOVEF_F 0.0 VLV_COLOR_30
    MOVEF_F 0.0 VLV_COLOR_31
    MOVEF_F 0.0 VLV_VELOCIDAD_17
    MOVEF_F 0.0 VLV_TIEMPO_17
    MOVEF_F 0.0 VLV_VELOCIDAD1_28
    MOVEF_F 0.0 VLV_VELOCIDAD2_28
    MOVEF_F 0.0 VLV_SENS_28
    MOVEF_F 0.0 VLV_VELOCIDAD_23
    MOVEF_F 0.0 VLV_ENCODER_23
    MOVEF_F 0.0 VLV_VELOCIDAD1_29
    MOVEF_F 0.0 VLV_VELOCIDAD2_29
    MOVEF_F 0.0 VLV_DISTANCIA_29
    MOVEF_F 0.0 VLV_VELOCIDAD_24
    MOVEF_F 0.0 VLV_READER_24
    MOVEF_F 0.0 VLV_VELOCIDAD_25
    MOVEF_F 0.0 VLV_READER_25
    MOVEF_F 0.0 VLV_VELOCIDAD_26
    MOVEF_F 0.0 VLV_ENCODER_26
    MOVEF_F 0.0 VLV_VELOCIDAD_18
    MOVEF_F 0.0 VLV_SENSOR_18
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MARKING_8
    MOVEF_F 0.0 VLV_VELOCIDAD_19
    MOVEF_F 0.0 VLV_DISTANCIA_19
    MOVEF_F 0.0 VLV_NUMERO_2
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIMER_13
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MARKING_6
    STRINGS DUPLICATE '' VLV_CODIGO_6
    MOVEF_F 0.0 VLV_GRADOS_7
    MOVEF_F 0.0 VGV_MARKINGGRANDE
    STRINGS DUPLICATE '' VLV_CODIGO_8
    MOVEF_F 0.0 VGV_DIAMETRO
    MOVEF_F 0.0 VGV_NEGRO1
    MOVEF_F 0.0 VGV_NEGRO3
    MOVEF_F 0.0 VGV_NEGRO4
    MOVEF_F 0.0 VGV_BLANCO1
    MOVEF_F 0.0 VGV_BLANCO3
    MOVEF_F 0.0 VGV_BLANCO4
    MOVEF_F 0.0 VGV_TIEMPO
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB2 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB2:
    WRITE32 ENDSUB_F_PRUEBAANDAR_0:CALLSUB3 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PRUEBAANDAR_0
CALLSUB3:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 1.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 4.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    DATA8 layer7
	DATA8 no7
	DATA8 mode87
	
	MOVEF_8 4.0 no7
	SUB8 no7 1 no7
	DIV8 no7 4 layer7
	MATH MOD8 no7 4 no7

	MOVEF_8 0.0 mode87
	
	INPUT_DEVICE READY_RAW layer7 no7 0 mode87 0
    MOVEF_F 6.24 VGV_DIAMETRO
    MOVEF_F 2.73611111111111 VPR_GIRO_G1
    MOVEF_F 10.0 VGV_NEGRO1
    MOVEF_F 9.0 VGV_NEGRO3
    MOVEF_F 8.0 VGV_NEGRO4
    MOVEF_F 65.0 VGV_BLANCO1
    MOVEF_F 59.0 VGV_BLANCO3
    MOVEF_F 55.0 VGV_BLANCO4
    MOVEF_F 4.0 VPR_RGB_VALUENEGRO
    MOVEF_F 32.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 57.0 VPR_RGB_RWHITE
    MOVEF_F 71.0 VPR_RGB_GWHITE
    MOVEF_F 73.0 VPR_RGB_BWHITE
    MOVEF_F VGV_DIAMETRO VPR_RECTO_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_GIRO_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_SMART_DIAMETRO
    MOVEF_F VGV_NEGRO1 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F VGV_NEGRO3 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F VGV_NEGRO4 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F VGV_BLANCO1 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F VGV_BLANCO3 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F VGV_BLANCO4 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F VGV_NEGRO1 VPR_SMART_NEGRO1
    MOVEF_F VGV_NEGRO3 VPR_SMART_NEGRO3
    MOVEF_F VGV_NEGRO4 VPR_SMART_NEGRO4
    MOVEF_F VGV_BLANCO1 VPR_SMART_BLANCO1
    MOVEF_F VGV_BLANCO3 VPR_SMART_BLANCO3
    MOVEF_F VGV_BLANCO4 VPR_SMART_BLANCO4
    ADDF VGV_NEGRO1 VGV_NEGRO3 F.1
    ADDF F.1 VGV_NEGRO4 F.0
    DATAF tmpf10
    DATA8 flag10
    DIVF F.0 3.0 tmpf10
    CP_EQF 0.0 3.0 flag10
    SELECTF flag10 0.0 tmpf10 VPR_RECTO_NEGRO

    ADDF VGV_BLANCO1 VGV_BLANCO3 F.1
    ADDF F.1 VGV_BLANCO4 F.0
    DATAF tmpf13
    DATA8 flag13
    DIVF F.0 3.0 tmpf13
    CP_EQF 0.0 3.0 flag13
    SELECTF flag13 0.0 tmpf13 VPR_RECTO_BLANCO

    ADDF VGV_NEGRO1 VGV_NEGRO3 F.1
    ADDF F.1 VGV_NEGRO4 F.0
    DATAF tmpf16
    DATA8 flag16
    DIVF F.0 3.0 tmpf16
    CP_EQF 0.0 3.0 flag16
    SELECTF flag16 0.0 tmpf16 VPR_GIRO_NEGRO

    ADDF VGV_BLANCO1 VGV_BLANCO3 F.1
    ADDF F.1 VGV_BLANCO4 F.0
    DATAF tmpf19
    DATA8 flag19
    DIVF F.0 3.0 tmpf19
    CP_EQF 0.0 3.0 flag19
    SELECTF flag19 0.0 tmpf19 VPR_GIRO_BLANCO

RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    MOVEF_F 100.0 VLV_VELOCIDAD_11
    MOVEF_F 1000.0 VLV_TIMER_11
    WRITE32 ENDSUB_M_BRAZO_ATIMER_2:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_ATIMER_2
CALLSUB20:
    OUTPUT_CLR_COUNT 0 1
    DATA32 milliseconds22
	MOVEF_32 100.0 milliseconds22
	DATA32 timer22
	TIMER_WAIT milliseconds22 timer22
	TIMER_READY timer22
    MOVEF_F 35.0 VLV_VELOCIDAD_12
    MOVEF_F -200.0 VLV_ENCODER_12
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB23:
    OUTPUT_CLR_COUNT 0 1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Connect'
    SOUND_READY
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_PRUEBAANDAR_0:
    MOVEF_F 10.0 VLV_VELOCIDAD_19
    MOVEF_F 30.0 VLV_DISTANCIA_19
    WRITE32 ENDSUB_M_RECTO_ENCODERSAFE_2:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODERSAFE_2
CALLSUB27:
    WRITE32 ENDSUB_F_GRITARVOLTAJE_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GRITARVOLTAJE_0
CALLSUB28:
    PROGRAM_STOP -1
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB30 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB30:
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Three'
    MOVEF_F 35.0 VLV_VELOCIDAD_12
    MOVEF_F -310.0 VLV_ENCODER_12
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB32:
    WRITE32 ENDSUB_F_S_0:CALLSUB33 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_S_0
CALLSUB33:
    DATA32 milliseconds34
	MOVEF_32 150.0 milliseconds34
	DATA32 timer34
	TIMER_WAIT milliseconds34 timer34
	TIMER_READY timer34
    TIMER_READ timeMC4
    MOVEF_F 10.0 VLV_VELOCIDAD_16
    MOVEF_F 100.0 VLV_DISTANCIA_16
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB36:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp VGV_TIEMPO
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_TIEMPO '%g' 99 S.2
    CALL TEXT.APPEND 'Tiempo: ' S.2 S.1
    CALL TEXT.APPEND S.1 ' ms' S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    WRITE32 ENDSUB_F_S_0:CALLSUB45 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_S_0
CALLSUB45:
RETSUB_F_PRUEBAANDAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PRUEBAANDAR_0:
SUB_F_GRITARVOLTAJE_0:
    CALL EV3.BATTERYVOLTAGE VLV_VOLTAJE_1
    MATH FLOOR VLV_VOLTAJE_1 VLV_NUMERO_2
    WRITE32 ENDSUB_F_GRITARNUMERO_1:CALLSUB48 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GRITARNUMERO_1
CALLSUB48:
    MULF VLV_VOLTAJE_1 10.0 F.1
    MATH FLOOR F.1 F.0
    MATH FLOOR VLV_VOLTAJE_1 F.2
    MULF F.2 10.0 F.1
    SUBF F.0 F.1 VLV_NUMERO_2
    WRITE32 ENDSUB_F_GRITARNUMERO_1:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GRITARNUMERO_1
CALLSUB54:
    MULF VLV_VOLTAJE_1 100.0 F.1
    MATH FLOOR F.1 F.0
    MULF VLV_VOLTAJE_1 10.0 F.3
    MATH FLOOR F.3 F.2
    MULF F.2 10.0 F.1
    SUBF F.0 F.1 VLV_NUMERO_2
    WRITE32 ENDSUB_F_GRITARNUMERO_1:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GRITARNUMERO_1
CALLSUB61:
RETSUB_F_GRITARVOLTAJE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GRITARVOLTAJE_0:
SUB_F_GRITARNUMERO_1:
    JR_NEQF VLV_NUMERO_2 0.0 else62_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/ZERO'
    JR endif62
  else62_1:
    JR_NEQF VLV_NUMERO_2 1.0 else62_2
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/One'
    JR endif62
  else62_2:
    JR_NEQF VLV_NUMERO_2 2.0 else62_3
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Two'
    JR endif62
  else62_3:
    JR_NEQF VLV_NUMERO_2 3.0 else62_4
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Three'
    JR endif62
  else62_4:
    JR_NEQF VLV_NUMERO_2 4.0 else62_5
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Four'
    JR endif62
  else62_5:
    JR_NEQF VLV_NUMERO_2 5.0 else62_6
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Five'
    JR endif62
  else62_6:
    JR_NEQF VLV_NUMERO_2 6.0 else62_7
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Six'
    JR endif62
  else62_7:
    JR_NEQF VLV_NUMERO_2 7.0 else62_8
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Seven'
    JR endif62
  else62_8:
    JR_NEQF VLV_NUMERO_2 8.0 else62_9
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Eight'
    JR endif62
  else62_9:
    JR_NEQF VLV_NUMERO_2 9.0 else62_10
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Nine'
    JR endif62
  else62_10:
    JR_NEQF VLV_NUMERO_2 10.0 else62_11
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Ten'
  else62_11:
  endif62:
    SOUND_READY
RETSUB_F_GRITARNUMERO_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GRITARNUMERO_1:
SUB_F_BAJARCUADRO_0:
    MOVEF_F 30.0 VLV_VELOCIDAD_12
    MOVEF_F -780.0 VLV_ENCODER_12
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB75:
RETSUB_F_BAJARCUADRO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BAJARCUADRO_0:
SUB_F_CODIGO_2:
    STRINGS DUPLICATE '' VLV_CODIGO_6
    CALL ARRAYGET_FLOAT 2.0 VLV_AUX_6 VLV_MARKING_6
    CALL ARRAYGET_FLOAT 3.0 F.0 VLV_MARKING_6
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_MARKING_6
    CALL ARRAYSTORE_FLOAT 3.0 VLV_AUX_6 VLV_MARKING_6
    MOVEF_F 0.0 VLV_I_6
  for80:
    JR_GTF VLV_I_6 4.0 endfor80
  forbody80:
    CALL ARRAYGET_FLOAT VLV_I_6 F.0 VLV_MARKING_6
    JR_NEQF F.0 2.0 else81_1
    CALL TEXT.APPEND VLV_CODIGO_6 'Z' VLV_CODIGO_6
    JR endif81
  else81_1:
    CALL ARRAYGET_FLOAT VLV_I_6 F.0 VLV_MARKING_6
    JR_NEQF F.0 3.0 else81_2
    CALL TEXT.APPEND VLV_CODIGO_6 'V' VLV_CODIGO_6
    JR endif81
  else81_2:
    CALL ARRAYGET_FLOAT VLV_I_6 F.0 VLV_MARKING_6
    JR_NEQF F.0 4.0 else81_3
    CALL TEXT.APPEND VLV_CODIGO_6 'A' VLV_CODIGO_6
    JR endif81
  else81_3:
    CALL ARRAYGET_FLOAT VLV_I_6 F.0 VLV_MARKING_6
    JR_NEQF F.0 5.0 else81_4
    CALL TEXT.APPEND VLV_CODIGO_6 'R' VLV_CODIGO_6
  else81_4:
  endif81:
    ADDF VLV_I_6 1.0 VLV_I_6
    JR_LTEQF VLV_I_6 4.0 forbody80
  endfor80:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL TEXT.APPEND 'Codigo: ' VLV_CODIGO_6 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_CODIGO_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CODIGO_2:
SUB_F_ROTAR_1:
    MATH ABS VLV_GRADOS_7 F.0
    DATAF tmpf97
    DATA8 flag97
    DIVF VLV_GRADOS_7 F.0 tmpf97
    CP_EQF 0.0 F.0 flag97
    SELECTF flag97 0.0 tmpf97 VLV_SIGNO_7

    WRITE32 ENDSUB_F_BAJARCUADRO_0:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BAJARCUADRO_0
CALLSUB98:
    MULF 40.0 VLV_SIGNO_7 F.0
    MATH ABS VLV_GRADOS_7 F.1
    CALL MOTOR.SCHEDULE 'D' F.0 0.0 F.1 0.0 'True' 

	DATA8 layer101
	DATA8 nos101
	DATA8 busy101
	CALL MOTORDECODEPORTSDESCRIPTOR 'D' layer101 nos101
	JR_EQ8 0 nos101 motornotbusy101
  motorwaiting101:
	OUTPUT_TEST layer101 nos101 busy101
	JR_EQ8 busy101 0 motornotbusy101
	SLEEP
	JR motorwaiting101
  motornotbusy101:
    DATA32 milliseconds102
	MOVEF_32 200.0 milliseconds102
	DATA32 timer102
	TIMER_WAIT milliseconds102 timer102
	TIMER_READY timer102
    MOVEF_F 30.0 VLV_VELOCIDAD_12
    MOVEF_F -360.0 VLV_ENCODER_12
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB103:
RETSUB_F_ROTAR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ROTAR_1:
SUB_F_ORDENARBLOQUES_1:
    ARRAY COPY VLV_MARKING_8 VLV_MARKING_6
    WRITE32 ENDSUB_F_CODIGO_2:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CODIGO_2
CALLSUB104:
    STRINGS DUPLICATE VLV_CODIGO_6 VLV_CODIGO_8
    CALL EQ_STRING VLV_CODIGO_8 'VRZA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_1
    JR endif105
  else105_1:
    CALL EQ_STRING VLV_CODIGO_8 'VRAZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_2
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB108:
    JR endif105
  else105_2:
    CALL EQ_STRING VLV_CODIGO_8 'VZRA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_3
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB110:
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB111:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB112:
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB113:
    JR endif105
  else105_3:
    CALL EQ_STRING VLV_CODIGO_8 'VZRA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_4
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB115:
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB116:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB117:
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB118:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB119:
    JR endif105
  else105_4:
    CALL EQ_STRING VLV_CODIGO_8 'VARZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_5
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB121:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB122:
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB123:
    JR endif105
  else105_5:
    CALL EQ_STRING VLV_CODIGO_8 'VAZR' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_6
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB125:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB126:
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB127:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB128:
    JR endif105
  else105_6:
    CALL EQ_STRING VLV_CODIGO_8 'RVZA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_7
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB130:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB131:
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB132:
    JR endif105
  else105_7:
    CALL EQ_STRING VLV_CODIGO_8 'RVAZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_8
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB134:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB135:
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB136:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB137:
    JR endif105
  else105_8:
    CALL EQ_STRING VLV_CODIGO_8 'RZVA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_9
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB139:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB140:
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB141:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB142:
    JR endif105
  else105_9:
    CALL EQ_STRING VLV_CODIGO_8 'RZAV' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_10
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB144:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB145:
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB146:
    JR endif105
  else105_10:
    CALL EQ_STRING VLV_CODIGO_8 'RAVZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_11
    MOVEF_F -90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB148:
    JR endif105
  else105_11:
    CALL EQ_STRING VLV_CODIGO_8 'RAZV' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_12
    MOVEF_F -90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB150:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB151:
    JR endif105
  else105_12:
    CALL EQ_STRING VLV_CODIGO_8 'ZVRA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_13
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB153:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB154:
    JR endif105
  else105_13:
    CALL EQ_STRING VLV_CODIGO_8 'ZVAR' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_14
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB156:
    JR endif105
  else105_14:
    CALL EQ_STRING VLV_CODIGO_8 'ZRVA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_15
    MOVEF_F -90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB158:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB159:
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB160:
    JR endif105
  else105_15:
    CALL EQ_STRING VLV_CODIGO_8 'ZRAV' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_16
    MOVEF_F -90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB162:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB163:
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB164:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB165:
    JR endif105
  else105_16:
    CALL EQ_STRING VLV_CODIGO_8 'ZAVR' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_17
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB167:
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB168:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB169:
    JR endif105
  else105_17:
    CALL EQ_STRING VLV_CODIGO_8 'ZARV' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_18
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB171:
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB172:
    JR endif105
  else105_18:
    CALL EQ_STRING VLV_CODIGO_8 'AVRZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_19
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB174:
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB175:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB176:
    JR endif105
  else105_19:
    CALL EQ_STRING VLV_CODIGO_8 'AVZR' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_20
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB178:
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB179:
    JR endif105
  else105_20:
    CALL EQ_STRING VLV_CODIGO_8 'ARVZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_21
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB181:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB182:
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB183:
    JR endif105
  else105_21:
    CALL EQ_STRING VLV_CODIGO_8 'ARZV' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_22
    MOVEF_F 90.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB185:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB186:
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB187:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB188:
    JR endif105
  else105_22:
    CALL EQ_STRING VLV_CODIGO_8 'AZVR' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_23
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB190:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB191:
    JR endif105
  else105_23:
    MOVEF_F 180.0 VLV_GRADOS_7
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB192:
  else105_24:
  endif105:
    MOVEF_F -20.0 VLV_VELOCIDAD_16
    MOVEF_F 8.0 VLV_DISTANCIA_16
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB193:
    MOVEF_F 15.0 VLV_VELOCIDAD1_27
    MOVEF_F -15.0 VLV_VELOCIDAD2_27
    MOVEF_F 177.0 VLV_GRADOS_27
    WRITE32 ENDSUB_M_GIRO_GRADOS_3:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_GIRO_GRADOS_3
CALLSUB194:
    MOVEF_F -30.0 VLV_VELOCIDAD_16
    MOVEF_F 22.0 VLV_DISTANCIA_16
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB195:
    MOVEF_F 20.0 VLV_VELOCIDAD_12
    MOVEF_F 24.0 VLV_ENCODER_12
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB196:
RETSUB_F_ORDENARBLOQUES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ORDENARBLOQUES_1:
SUB_F_SWAP_0:
    MOVEF_F -15.0 VLV_VELOCIDAD_16
    MOVEF_F 7.0 VLV_DISTANCIA_16
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB197:
    WRITE32 ENDSUB_F_BAJARCUADRO_0:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BAJARCUADRO_0
CALLSUB198:
    MOVEF_F -15.0 VLV_VELOCIDAD_16
    MOVEF_F 10.0 VLV_DISTANCIA_16
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB199:
    CALL MOTOR.SCHEDULE 'D' 50.0 0.0 180.0 0.0 'True' 

	DATA8 layer200
	DATA8 nos200
	DATA8 busy200
	CALL MOTORDECODEPORTSDESCRIPTOR 'D' layer200 nos200
	JR_EQ8 0 nos200 motornotbusy200
  motorwaiting200:
	OUTPUT_TEST layer200 nos200 busy200
	JR_EQ8 busy200 0 motornotbusy200
	SLEEP
	JR motorwaiting200
  motornotbusy200:
    MOVEF_F 30.0 VLV_VELOCIDAD_12
    MOVEF_F -360.0 VLV_ENCODER_12
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB201:
    MOVEF_F 15.0 VLV_VELOCIDAD_16
    MOVEF_F 23.0 VLV_DISTANCIA_16
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB202:
    MOVEF_F -15.0 VLV_VELOCIDAD_16
    MOVEF_F 5.0 VLV_DISTANCIA_16
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB203:
RETSUB_F_SWAP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SWAP_0:
SUB_F_S_0:
    UI_BUTTON FLUSH
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_S_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_S_0:
SUB_M_BRAZO_ATIMER_2:
    TIMER_READ timeMC1
  while207:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_TIMER_11 endwhile207
  whilebody207:
    MOVEF_8 VLV_VELOCIDAD_11 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_TIMER_11 whilebody207
  endwhile207:
    CALL MOTOR.STOP 'A' 'True'
RETSUB_M_BRAZO_ATIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_BRAZO_ATIMER_2:
SUB_M_BRAZO_AENCODER_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_ENCODER_12 F.0 VLV_ENCDIFF_12
    MATH ABS VLV_ENCDIFF_12 F.0
    DATAF tmpf215
    DATA8 flag215
    DIVF VLV_ENCDIFF_12 F.0 tmpf215
    CP_EQF 0.0 F.0 flag215
    SELECTF flag215 0.0 tmpf215 VLV_SIGNO_12

    MATH ABS VLV_ENCDIFF_12 F.4
    DATAF tmpf217
    DATA8 flag217
    DIVF F.4 100.0 tmpf217
    CP_EQF 0.0 100.0 flag217
    SELECTF flag217 0.0 tmpf217 F.3

    DATAF tmpf218
    DATA8 flag218
    DIVF VLV_VELOCIDAD_12 20.0 tmpf218
    CP_EQF 0.0 20.0 flag218
    SELECTF flag218 0.0 tmpf218 F.4

    DATAF tmpf219
    DATA8 flag219
    DIVF F.3 F.4 tmpf219
    CP_EQF 0.0 F.4 flag219
    SELECTF flag219 0.0 tmpf219 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag222
	CP_GTF F.0 400.0 flag222
	SELECTF flag222 F.0 400.0 VLV_SAFETYTIMER_12
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_12 0.0 else224_1
  while225:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_ENCODER_12 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 25.0 endwhile225
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 2000.0 endwhile225
  whilebody225:
    MULF VLV_SIGNO_12 VLV_VELOCIDAD_12 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_ENCODER_12 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 25.0 and232
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 2000.0 whilebody225
  and232:
  endwhile225:
    CALL MOTOR.STOP 'A' 'True'
  else224_1:
  endif224:
RETSUB_M_BRAZO_AENCODER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_BRAZO_AENCODER_2:
SUB_M_BRAZO_DTIMER_2:
    TIMER_READ timeMC1
  while239:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_TIMER_13 endwhile239
  whilebody239:
    MOVEF_8 VLV_VELOCIDAD_13 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_TIMER_13 whilebody239
  endwhile239:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_M_BRAZO_DTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_BRAZO_DTIMER_2:
SUB_M_RECTO_ENCODERF_2:
    MATH ABS VLV_VELOCIDAD_14 F.1
    SUBF F.1 20.0 F.0
    MULF F.0 0.05 VLV_CORRECCION_14
    SUBF VLV_DISTANCIA_14 VLV_CORRECCION_14 F.2
    MULF F.2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf250
    DATA8 flag250
    DIVF F.1 F.2 tmpf250
    CP_EQF 0.0 F.2 flag250
    SELECTF flag250 0.0 tmpf250 F.0

    DATAF tmpf251
    DATA8 flag251
    DIVF F.0 VPR_RECTO_DIAMETRO tmpf251
    CP_EQF 0.0 VPR_RECTO_DIAMETRO flag251
    SELECTF flag251 0.0 tmpf251 VLV_ENC_14

    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds253
	MOVEF_32 100.0 milliseconds253
	DATA32 timer253
	TIMER_WAIT milliseconds253 timer253
	TIMER_READY timer253
    MATH NEGATE VLV_VELOCIDAD_14 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD_14 VLV_ENC_14 'False'

	DATA8 layer255
	DATA8 nos255
	DATA8 busy255
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer255 nos255
	JR_EQ8 0 nos255 motornotbusy255
  motorwaiting255:
	OUTPUT_TEST layer255 nos255 busy255
	JR_EQ8 busy255 0 motornotbusy255
	SLEEP
	JR motorwaiting255
  motornotbusy255:
RETSUB_M_RECTO_ENCODERF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_ENCODERF_2:
SUB_M_RECTO_NEGRO1_2:
    MOVEF_F 0.0 VLV_CORRECCION_15
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MOVEF_F 50.0 VLV_LECTURA_15
  while257:
    JR_LTEQF VLV_LECTURA_15 15.0 endwhile257
  whilebody257:
    CALL SENSOR.READPERCENT VLV_SENSOR_15 F.2
    SUBF F.2 VPR_RECTO_NEGRO F.1
    DATAF tmpf260
    DATA8 flag260
    DIVF F.1 VPR_RECTO_BLANCO tmpf260
    CP_EQF 0.0 VPR_RECTO_BLANCO flag260
    SELECTF flag260 0.0 tmpf260 F.0

    SUBF 100.0 VPR_RECTO_NEGRO F.1
    MULF F.0 F.1 VLV_LECTURA_15
    MATH NEGATE VLV_VELOCIDAD_15 F.1
    ADDF F.1 VLV_CORRECCION_15 F.0
    ADDF VLV_VELOCIDAD_15 VLV_CORRECCION_15 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    JR_GTF VLV_LECTURA_15 15.0 whilebody257
  endwhile257:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_NEGRO1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_NEGRO1_2:
SUB_M_RECTO_ENCODER_2:
    MATH ABS VLV_VELOCIDAD_16 F.1
    SUBF F.1 20.0 F.0
    MULF F.0 0.05 VLV_CORRECCION_16
    SUBF VLV_DISTANCIA_16 VLV_CORRECCION_16 F.2
    MULF F.2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf274
    DATA8 flag274
    DIVF F.1 F.2 tmpf274
    CP_EQF 0.0 F.2 flag274
    SELECTF flag274 0.0 tmpf274 F.0

    DATAF tmpf275
    DATA8 flag275
    DIVF F.0 VPR_RECTO_DIAMETRO tmpf275
    CP_EQF 0.0 VPR_RECTO_DIAMETRO flag275
    SELECTF flag275 0.0 tmpf275 VLV_ENC_16

    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds277
	MOVEF_32 100.0 milliseconds277
	DATA32 timer277
	TIMER_WAIT milliseconds277 timer277
	TIMER_READY timer277
    MATH NEGATE VLV_VELOCIDAD_16 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD_16 VLV_ENC_16 'True'

	DATA8 layer279
	DATA8 nos279
	DATA8 busy279
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer279 nos279
	JR_EQ8 0 nos279 motornotbusy279
  motorwaiting279:
	OUTPUT_TEST layer279 nos279 busy279
	JR_EQ8 busy279 0 motornotbusy279
	SLEEP
	JR motorwaiting279
  motornotbusy279:
RETSUB_M_RECTO_ENCODER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_ENCODER_2:
SUB_M_RECTO_TIEMPO_2:
    MOVEF_F 0.0 VLV_CORRECCION_17
    TIMER_READ timeMC3
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
  while282:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_17 endwhile282
  whilebody282:
    MATH NEGATE VLV_VELOCIDAD_17 F.1
    ADDF F.1 VLV_CORRECCION_17 F.0
    ADDF VLV_VELOCIDAD_17 VLV_CORRECCION_17 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_17 whilebody282
  endwhile282:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_TIEMPO_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_TIEMPO_2:
SUB_M_RECTO_BLANCO1_2:
    MOVEF_F 0.0 VLV_CORRECCION_18
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MOVEF_F 50.0 VLV_LECTURA_18
  while291:
    JR_GTEQF VLV_LECTURA_18 60.0 endwhile291
  whilebody291:
    CALL SENSOR.READPERCENT VLV_SENSOR_18 F.2
    SUBF F.2 VPR_RECTO_NEGRO F.1
    DATAF tmpf294
    DATA8 flag294
    DIVF F.1 VPR_RECTO_BLANCO tmpf294
    CP_EQF 0.0 VPR_RECTO_BLANCO flag294
    SELECTF flag294 0.0 tmpf294 F.0

    SUBF 100.0 VPR_RECTO_NEGRO F.1
    MULF F.0 F.1 VLV_LECTURA_18
    MATH NEGATE VLV_VELOCIDAD_18 F.1
    ADDF F.1 VLV_CORRECCION_18 F.0
    ADDF VLV_VELOCIDAD_18 VLV_CORRECCION_18 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    JR_LTF VLV_LECTURA_18 60.0 whilebody291
  endwhile291:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_BLANCO1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_BLANCO1_2:
SUB_M_RECTO_ENCODERSAFE_2:
    DATAF tmpf302
    DATA8 flag302
    DIVF VLV_VELOCIDAD_19 10.0 tmpf302
    CP_EQF 0.0 10.0 flag302
    SELECTF flag302 0.0 tmpf302 F.2

    DATAF tmpf303
    DATA8 flag303
    DIVF 11286.0 F.2 tmpf303
    CP_EQF 0.0 F.2 flag303
    SELECTF flag303 0.0 tmpf303 F.1

    DATAF tmpf304
    DATA8 flag304
    DIVF VLV_DISTANCIA_19 100.0 tmpf304
    CP_EQF 0.0 100.0 flag304
    SELECTF flag304 0.0 tmpf304 F.2

    MULF F.1 F.2 F.0
    DATAF tmpf306
    DATA8 flag306
    DIVF VPR_RECTO_DIAMETRO 6.24 tmpf306
    CP_EQF 0.0 6.24 flag306
    SELECTF flag306 0.0 tmpf306 F.1

    DATAF tmpf307
    DATA8 flag307
    DIVF F.0 F.1 tmpf307
    CP_EQF 0.0 F.1 flag307
    SELECTF flag307 0.0 tmpf307 VLV_SAFETYTIMER_19

    MATH ABS VLV_VELOCIDAD_19 F.1
    SUBF F.1 20.0 F.0
    MULF F.0 0.05 VLV_CORRECCION_19
    SUBF VLV_DISTANCIA_19 VLV_CORRECCION_19 F.2
    MULF F.2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf314
    DATA8 flag314
    DIVF F.1 F.2 tmpf314
    CP_EQF 0.0 F.2 flag314
    SELECTF flag314 0.0 tmpf314 F.0

    DATAF tmpf315
    DATA8 flag315
    DIVF F.0 VPR_RECTO_DIAMETRO tmpf315
    CP_EQF 0.0 VPR_RECTO_DIAMETRO flag315
    SELECTF flag315 0.0 tmpf315 VLV_ENC_19

    OUTPUT_CLR_COUNT 0 2
    OUTPUT_CLR_COUNT 0 4
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds319
	MOVEF_32 100.0 milliseconds319
	DATA32 timer319
	TIMER_WAIT milliseconds319 timer319
	TIMER_READY timer319
    TIMER_READ timeMC4
  while321:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 VLV_ENC_19 endwhile321
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_19 2000.0 F.1
    JR_GTEQF F.0 F.1 endwhile321
  whilebody321:
    MATH NEGATE VLV_VELOCIDAD_19 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD_19
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 VLV_ENC_19 and328
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_19 2000.0 F.1
    JR_LTF F.0 F.1 whilebody321
  and328:
  endwhile321:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_19 2000.0 F.1
    JR_LTEQF F.0 F.1 else333_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/General alert'
    SOUND_READY
  else333_1:
  endif333:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_ENCODERSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_ENCODERSAFE_2:
SUB_M_SIGUELINEAS_ENCODER14_2:
    MULF VLV_VELOCIDAD_20 1.0 VLV_VELOCIDAD_20
    MOVEF_F 50.0 VLV_LECTURA1_20
    MOVEF_F 50.0 VLV_LECTURA3_20
    MOVEF_F 50.0 VLV_LECTURA4_20
    MATH POW VLV_VELOCIDAD_20 0.833333333333333 F.0
    DATAF tmpf341
    DATA8 flag341
    DIVF F.0 440.0 tmpf341
    CP_EQF 0.0 440.0 flag341
    SELECTF flag341 0.0 tmpf341 VLV_KP_20

    MULF VLV_KP_20 70.0 VLV_KD_20
    MOVEF_F 0.0 VLV_ERROR_20
    MOVEF_F 0.0 VLV_OLDERROR_20
    MOVEF_F 0.0 VLV_U_20
    MATH ABS VLV_VELOCIDAD_20 F.0
    DATAF tmpf344
    DATA8 flag344
    DIVF VLV_VELOCIDAD_20 F.0 tmpf344
    CP_EQF 0.0 F.0 flag344
    SELECTF flag344 0.0 tmpf344 VLV_SENTIDO_20

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf347
    DATA8 flag347
    DIVF VLV_ENCODER_20 F.1 tmpf347
    CP_EQF 0.0 F.1 flag347
    SELECTF flag347 0.0 tmpf347 F.0

    MULF F.0 360.0 VLV_ENCODER_20
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_20
    MOVEF_F 0.0 VLV_ENCODERC_20
  while350:
    MATH ABS VLV_ENCODERC_20 F.0
    JR_GTEQF F.0 VLV_ENCODER_20 endwhile350
  whilebody350:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_20 VLV_ENCODERC_20
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf356
    DATA8 flag356
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf356
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag356
    SELECTF flag356 0.0 tmpf356 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_20
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf361
    DATA8 flag361
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf361
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag361
    SELECTF flag361 0.0 tmpf361 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_20
    SUBF VLV_LECTURA1_20 VLV_LECTURA4_20 F.1
    MULF F.1 VLV_SENTIDO_20 F.0
    MULF F.0 1.0 VLV_ERROR_20
    MULF VLV_ERROR_20 VLV_KP_20 F.0
    SUBF VLV_ERROR_20 VLV_OLDERROR_20 F.2
    MULF F.2 VLV_KD_20 F.1
    ADDF F.0 F.1 VLV_U_20
    ADDF VLV_VELOCIDAD_20 VLV_U_20 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_20 VLV_U_20 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_20 VLV_OLDERROR_20
    MATH ABS VLV_ENCODERC_20 F.0
    JR_LTF F.0 VLV_ENCODER_20 whilebody350
  endwhile350:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_ENCODER14_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER14_2:
SUB_M_SIGUELINEAS_CRUCE14_1:
    MULF VLV_VELOCIDAD_21 1.0 VLV_VELOCIDAD_21
    MOVEF_F 50.0 VLV_LECTURA1_21
    MOVEF_F 50.0 VLV_LECTURA3_21
    MOVEF_F 50.0 VLV_LECTURA4_21
    MATH POW VLV_VELOCIDAD_21 0.833333333333333 F.0
    DATAF tmpf379
    DATA8 flag379
    DIVF F.0 440.0 tmpf379
    CP_EQF 0.0 440.0 flag379
    SELECTF flag379 0.0 tmpf379 VLV_KP_21

    MULF VLV_KP_21 70.0 VLV_KD_21
    MOVEF_F 0.0 VLV_ERROR_21
    MOVEF_F 0.0 VLV_OLDERROR_21
    MOVEF_F 0.0 VLV_U_21
    MATH ABS VLV_VELOCIDAD_21 F.0
    DATAF tmpf382
    DATA8 flag382
    DIVF VLV_VELOCIDAD_21 F.0 tmpf382
    CP_EQF 0.0 F.0 flag382
    SELECTF flag382 0.0 tmpf382 VLV_SENTIDO_21

  while383:
    JR_GTF VLV_LECTURA1_21 10.0 or384
    JR_LTEQF VLV_LECTURA4_21 10.0 endwhile383
  or384:
  whilebody383:
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf387
    DATA8 flag387
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf387
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag387
    SELECTF flag387 0.0 tmpf387 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_21
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf392
    DATA8 flag392
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf392
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag392
    SELECTF flag392 0.0 tmpf392 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_21
    SUBF VLV_LECTURA1_21 VLV_LECTURA4_21 F.1
    MULF F.1 VLV_SENTIDO_21 F.0
    MULF F.0 1.0 VLV_ERROR_21
    MULF VLV_ERROR_21 VLV_KP_21 F.0
    SUBF VLV_ERROR_21 VLV_OLDERROR_21 F.2
    MULF F.2 VLV_KD_21 F.1
    ADDF F.0 F.1 VLV_U_21
    ADDF VLV_VELOCIDAD_21 VLV_U_21 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_21 VLV_U_21 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_21 VLV_OLDERROR_21
    JR_GTF VLV_LECTURA1_21 10.0 whilebody383
    JR_GTF VLV_LECTURA4_21 10.0 whilebody383
  endwhile383:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_CRUCE14_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_CRUCE14_1:
SUB_M_SIGUELINEAS_ENCODER31F_2:
    MULF VLV_VELOCIDAD_22 1.0 VLV_VELOCIDAD_22
    MOVEF_F 50.0 VLV_LECTURA1_22
    MOVEF_F 50.0 VLV_LECTURA3_22
    MOVEF_F 50.0 VLV_LECTURA4_22
    MATH POW VLV_VELOCIDAD_22 0.833333333333333 F.0
    DATAF tmpf409
    DATA8 flag409
    DIVF F.0 440.0 tmpf409
    CP_EQF 0.0 440.0 flag409
    SELECTF flag409 0.0 tmpf409 VLV_KP_22

    MULF VLV_KP_22 70.0 VLV_KD_22
    MOVEF_F 0.0 VLV_ERROR_22
    MOVEF_F 0.0 VLV_OLDERROR_22
    MOVEF_F 0.0 VLV_U_22
    MATH ABS VLV_VELOCIDAD_22 F.0
    DATAF tmpf412
    DATA8 flag412
    DIVF VLV_VELOCIDAD_22 F.0 tmpf412
    CP_EQF 0.0 F.0 flag412
    SELECTF flag412 0.0 tmpf412 VLV_SENTIDO_22

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf415
    DATA8 flag415
    DIVF VLV_ENCODER_22 F.1 tmpf415
    CP_EQF 0.0 F.1 flag415
    SELECTF flag415 0.0 tmpf415 F.0

    MULF F.0 360.0 VLV_ENCODER_22
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_22
    MOVEF_F 0.0 VLV_ENCODERC_22
  while418:
    MATH ABS VLV_ENCODERC_22 F.0
    JR_GTEQF F.0 VLV_ENCODER_22 endwhile418
  whilebody418:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_22 VLV_ENCODERC_22
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf424
    DATA8 flag424
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf424
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag424
    SELECTF flag424 0.0 tmpf424 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_22
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO3 F.1
    DATAF tmpf429
    DATA8 flag429
    DIVF F.1 VPR_SIGUELINEAS_BLANCO3 tmpf429
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO3 flag429
    SELECTF flag429 0.0 tmpf429 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_22
    SUBF VLV_LECTURA3_22 VLV_LECTURA1_22 F.1
    MULF F.1 VLV_SENTIDO_22 F.0
    MULF F.0 1.0 VLV_ERROR_22
    MULF VLV_ERROR_22 VLV_KP_22 F.0
    SUBF VLV_ERROR_22 VLV_OLDERROR_22 F.2
    MULF F.2 VLV_KD_22 F.1
    ADDF F.0 F.1 VLV_U_22
    ADDF VLV_VELOCIDAD_22 VLV_U_22 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_22 VLV_U_22 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_22 VLV_OLDERROR_22
    MATH ABS VLV_ENCODERC_22 F.0
    JR_LTF F.0 VLV_ENCODER_22 whilebody418
  endwhile418:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_SIGUELINEAS_ENCODER31F_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER31F_2:
SUB_M_SIGUELINEAS_ENCODER14F_2:
    MULF VLV_VELOCIDAD_23 1.0 VLV_VELOCIDAD_23
    MOVEF_F 50.0 VLV_LECTURA1_23
    MOVEF_F 50.0 VLV_LECTURA3_23
    MOVEF_F 50.0 VLV_LECTURA4_23
    MATH POW VLV_VELOCIDAD_23 0.833333333333333 F.0
    DATAF tmpf447
    DATA8 flag447
    DIVF F.0 440.0 tmpf447
    CP_EQF 0.0 440.0 flag447
    SELECTF flag447 0.0 tmpf447 VLV_KP_23

    MULF VLV_KP_23 70.0 VLV_KD_23
    MOVEF_F 0.0 VLV_ERROR_23
    MOVEF_F 0.0 VLV_OLDERROR_23
    MOVEF_F 0.0 VLV_U_23
    MATH ABS VLV_VELOCIDAD_23 F.0
    DATAF tmpf450
    DATA8 flag450
    DIVF VLV_VELOCIDAD_23 F.0 tmpf450
    CP_EQF 0.0 F.0 flag450
    SELECTF flag450 0.0 tmpf450 VLV_SENTIDO_23

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf453
    DATA8 flag453
    DIVF VLV_ENCODER_23 F.1 tmpf453
    CP_EQF 0.0 F.1 flag453
    SELECTF flag453 0.0 tmpf453 F.0

    MULF F.0 360.0 VLV_ENCODER_23
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_23
    MOVEF_F 0.0 VLV_ENCODERC_23
  while456:
    MATH ABS VLV_ENCODERC_23 F.0
    JR_GTEQF F.0 VLV_ENCODER_23 endwhile456
  whilebody456:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_23 VLV_ENCODERC_23
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf462
    DATA8 flag462
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf462
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag462
    SELECTF flag462 0.0 tmpf462 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_23
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf467
    DATA8 flag467
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf467
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag467
    SELECTF flag467 0.0 tmpf467 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_23
    SUBF VLV_LECTURA1_23 VLV_LECTURA4_23 F.1
    MULF F.1 VLV_SENTIDO_23 F.0
    MULF F.0 1.0 VLV_ERROR_23
    MULF VLV_ERROR_23 VLV_KP_23 F.0
    SUBF VLV_ERROR_23 VLV_OLDERROR_23 F.2
    MULF F.2 VLV_KD_23 F.1
    ADDF F.0 F.1 VLV_U_23
    ADDF VLV_VELOCIDAD_23 VLV_U_23 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_23 VLV_U_23 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_23 VLV_OLDERROR_23
    MATH ABS VLV_ENCODERC_23 F.0
    JR_LTF F.0 VLV_ENCODER_23 whilebody456
  endwhile456:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_SIGUELINEAS_ENCODER14F_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER14F_2:
SUB_M_SIGUELINEAS_CRUCE_EXTERNO_2:
    MULF VLV_VELOCIDAD_24 1.0 VLV_VELOCIDAD_24
    MOVEF_F 50.0 VLV_LECTURA1_24
    MOVEF_F 50.0 VLV_LECTURA3_24
    MOVEF_F 50.0 VLV_LECTURA4_24
    MATH POW VLV_VELOCIDAD_24 0.833333333333333 F.0
    DATAF tmpf485
    DATA8 flag485
    DIVF F.0 440.0 tmpf485
    CP_EQF 0.0 440.0 flag485
    SELECTF flag485 0.0 tmpf485 VLV_KP_24

    MULF VLV_KP_24 70.0 VLV_KD_24
    MOVEF_F 0.0 VLV_ERROR_24
    MOVEF_F 0.0 VLV_OLDERROR_24
    MOVEF_F 0.0 VLV_U_24
    MATH ABS VLV_VELOCIDAD_24 F.0
    DATAF tmpf488
    DATA8 flag488
    DIVF VLV_VELOCIDAD_24 F.0 tmpf488
    CP_EQF 0.0 F.0 flag488
    SELECTF flag488 0.0 tmpf488 VLV_SENTIDO_24

    MOVEF_F 50.0 VLV_LECTURA_24
  while489:
    JR_LTEQF VLV_LECTURA_24 7.0 endwhile489
  whilebody489:
    JR_NEQF VLV_READER_24 3.0 else490_1
    MOVEF_F VLV_LECTURA3_24 VLV_LECTURA_24
    MOVEF_F VLV_LECTURA1_24 VLV_LECTURAIZQ_24
    MOVEF_F VLV_LECTURA4_24 VLV_LECTURADCH_24
    JR endif490
  else490_1:
    MOVEF_F VLV_LECTURA4_24 VLV_LECTURA_24
    MOVEF_F VLV_LECTURA3_24 VLV_LECTURAIZQ_24
    MOVEF_F VLV_LECTURA1_24 VLV_LECTURADCH_24
  else490_2:
  endif490:
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf493
    DATA8 flag493
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf493
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag493
    SELECTF flag493 0.0 tmpf493 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_24
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO3 F.1
    DATAF tmpf498
    DATA8 flag498
    DIVF F.1 VPR_SIGUELINEAS_BLANCO3 tmpf498
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO3 flag498
    SELECTF flag498 0.0 tmpf498 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_24
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf503
    DATA8 flag503
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf503
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag503
    SELECTF flag503 0.0 tmpf503 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_24
    SUBF VLV_LECTURAIZQ_24 VLV_LECTURADCH_24 F.1
    MULF F.1 VLV_SENTIDO_24 F.0
    MULF F.0 1.0 VLV_ERROR_24
    MULF VLV_ERROR_24 VLV_KP_24 F.0
    SUBF VLV_ERROR_24 VLV_OLDERROR_24 F.2
    MULF F.2 VLV_KD_24 F.1
    ADDF F.0 F.1 VLV_U_24
    ADDF VLV_VELOCIDAD_24 VLV_U_24 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_24 VLV_U_24 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_24 VLV_OLDERROR_24
    JR_GTF VLV_LECTURA_24 7.0 whilebody489
  endwhile489:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_CRUCE_EXTERNO_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_CRUCE_EXTERNO_2:
SUB_M_SIGUELINEAS_CRUCE_EXTERNOF_2:
    MULF VLV_VELOCIDAD_25 1.0 VLV_VELOCIDAD_25
    MOVEF_F 50.0 VLV_LECTURA1_25
    MOVEF_F 50.0 VLV_LECTURA3_25
    MOVEF_F 50.0 VLV_LECTURA4_25
    MATH POW VLV_VELOCIDAD_25 0.833333333333333 F.0
    DATAF tmpf520
    DATA8 flag520
    DIVF F.0 440.0 tmpf520
    CP_EQF 0.0 440.0 flag520
    SELECTF flag520 0.0 tmpf520 VLV_KP_25

    MULF VLV_KP_25 70.0 VLV_KD_25
    MOVEF_F 0.0 VLV_ERROR_25
    MOVEF_F 0.0 VLV_OLDERROR_25
    MOVEF_F 0.0 VLV_U_25
    MATH ABS VLV_VELOCIDAD_25 F.0
    DATAF tmpf523
    DATA8 flag523
    DIVF VLV_VELOCIDAD_25 F.0 tmpf523
    CP_EQF 0.0 F.0 flag523
    SELECTF flag523 0.0 tmpf523 VLV_SENTIDO_25

    MOVEF_F 50.0 VLV_LECTURA_25
  while524:
    JR_LTEQF VLV_LECTURA_25 7.0 endwhile524
  whilebody524:
    JR_NEQF VLV_READER_25 3.0 else525_1
    MOVEF_F VLV_LECTURA3_25 VLV_LECTURA_25
    MOVEF_F VLV_LECTURA1_25 VLV_LECTURAIZQ_25
    MOVEF_F VLV_LECTURA4_25 VLV_LECTURADCH_25
    JR endif525
  else525_1:
    MOVEF_F VLV_LECTURA4_25 VLV_LECTURA_25
    MOVEF_F VLV_LECTURA3_25 VLV_LECTURAIZQ_25
    MOVEF_F VLV_LECTURA1_25 VLV_LECTURADCH_25
  else525_2:
  endif525:
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf528
    DATA8 flag528
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf528
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag528
    SELECTF flag528 0.0 tmpf528 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_25
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO3 F.1
    DATAF tmpf533
    DATA8 flag533
    DIVF F.1 VPR_SIGUELINEAS_BLANCO3 tmpf533
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO3 flag533
    SELECTF flag533 0.0 tmpf533 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_25
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf538
    DATA8 flag538
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf538
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag538
    SELECTF flag538 0.0 tmpf538 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_25
    SUBF VLV_LECTURAIZQ_25 VLV_LECTURADCH_25 F.1
    MULF F.1 VLV_SENTIDO_25 F.0
    MULF F.0 1.0 VLV_ERROR_25
    MULF VLV_ERROR_25 VLV_KP_25 F.0
    SUBF VLV_ERROR_25 VLV_OLDERROR_25 F.2
    MULF F.2 VLV_KD_25 F.1
    ADDF F.0 F.1 VLV_U_25
    ADDF VLV_VELOCIDAD_25 VLV_U_25 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_25 VLV_U_25 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_25 VLV_OLDERROR_25
    JR_GTF VLV_LECTURA_25 7.0 whilebody524
  endwhile524:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_SIGUELINEAS_CRUCE_EXTERNOF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_CRUCE_EXTERNOF_2:
SUB_M_SIGUELINEAS_ENCODER31_2:
    MULF VLV_VELOCIDAD_26 1.0 VLV_VELOCIDAD_26
    MOVEF_F 50.0 VLV_LECTURA1_26
    MOVEF_F 50.0 VLV_LECTURA3_26
    MOVEF_F 50.0 VLV_LECTURA4_26
    MATH POW VLV_VELOCIDAD_26 0.833333333333333 F.0
    DATAF tmpf555
    DATA8 flag555
    DIVF F.0 440.0 tmpf555
    CP_EQF 0.0 440.0 flag555
    SELECTF flag555 0.0 tmpf555 VLV_KP_26

    MULF VLV_KP_26 70.0 VLV_KD_26
    MOVEF_F 0.0 VLV_ERROR_26
    MOVEF_F 0.0 VLV_OLDERROR_26
    MOVEF_F 0.0 VLV_U_26
    MATH ABS VLV_VELOCIDAD_26 F.0
    DATAF tmpf558
    DATA8 flag558
    DIVF VLV_VELOCIDAD_26 F.0 tmpf558
    CP_EQF 0.0 F.0 flag558
    SELECTF flag558 0.0 tmpf558 VLV_SENTIDO_26

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf561
    DATA8 flag561
    DIVF VLV_ENCODER_26 F.1 tmpf561
    CP_EQF 0.0 F.1 flag561
    SELECTF flag561 0.0 tmpf561 F.0

    MULF F.0 360.0 VLV_ENCODER_26
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_26
    MOVEF_F 0.0 VLV_ENCODERC_26
  while564:
    MATH ABS VLV_ENCODERC_26 F.0
    JR_GTEQF F.0 VLV_ENCODER_26 endwhile564
  whilebody564:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_26 VLV_ENCODERC_26
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf570
    DATA8 flag570
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf570
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag570
    SELECTF flag570 0.0 tmpf570 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_26
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO3 F.1
    DATAF tmpf575
    DATA8 flag575
    DIVF F.1 VPR_SIGUELINEAS_BLANCO3 tmpf575
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO3 flag575
    SELECTF flag575 0.0 tmpf575 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_26
    SUBF VLV_LECTURA3_26 VLV_LECTURA1_26 F.1
    MULF F.1 VLV_SENTIDO_26 F.0
    MULF F.0 1.0 VLV_ERROR_26
    MULF VLV_ERROR_26 VLV_KP_26 F.0
    SUBF VLV_ERROR_26 VLV_OLDERROR_26 F.2
    MULF F.2 VLV_KD_26 F.1
    ADDF F.0 F.1 VLV_U_26
    ADDF VLV_VELOCIDAD_26 VLV_U_26 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_26 VLV_U_26 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_26 VLV_OLDERROR_26
    MATH ABS VLV_ENCODERC_26 F.0
    JR_LTF F.0 VLV_ENCODER_26 whilebody564
  endwhile564:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_ENCODER31_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER31_2:
SUB_M_GIRO_GRADOS_3:
    DATAF tmpf591
    DATA8 flag591
    DIVF VLV_VELOCIDAD1_27 VLV_VELOCIDAD2_27 tmpf591
    CP_EQF 0.0 VLV_VELOCIDAD2_27 flag591
    SELECTF flag591 0.0 tmpf591 F.0

    DATAF tmpf592
    DATA8 flag592
    DIVF VLV_VELOCIDAD1_27 VLV_VELOCIDAD2_27 tmpf592
    CP_EQF 0.0 VLV_VELOCIDAD2_27 flag592
    SELECTF flag592 0.0 tmpf592 F.2

    MATH ABS F.2 F.1
    DATAF tmpf594
    DATA8 flag594
    DIVF F.0 F.1 tmpf594
    CP_EQF 0.0 F.1 flag594
    SELECTF flag594 0.0 tmpf594 VLV_SIGNO_27

    MATH ABS VLV_VELOCIDAD1_27 F.0
    MATH ABS VLV_VELOCIDAD2_27 F.1
    DATA8 flag597
	CP_LTF F.0 F.1 flag597
	SELECTF flag597 F.0 F.1 VLV_VMIN_27
    MATH ABS VLV_VELOCIDAD1_27 F.0
    MATH ABS VLV_VELOCIDAD2_27 F.1
    DATA8 flag600
	CP_GTF F.0 F.1 flag600
	SELECTF flag600 F.0 F.1 VLV_VMAX_27
    MULF VLV_GRADOS_27 VPR_GIRO_G1 F.0
    MULF VLV_SIGNO_27 VLV_VMIN_27 F.4
    DATAF tmpf603
    DATA8 flag603
    DIVF F.4 VLV_VMAX_27 tmpf603
    CP_EQF 0.0 VLV_VMAX_27 flag603
    SELECTF flag603 0.0 tmpf603 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf605
    DATA8 flag605
    DIVF -2.0 F.2 tmpf605
    CP_EQF 0.0 F.2 flag605
    SELECTF flag605 0.0 tmpf605 F.1

    MULF F.0 F.1 VLV_ENCODER_27
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds608
	MOVEF_32 100.0 milliseconds608
	DATA32 timer608
	TIMER_WAIT milliseconds608 timer608
	TIMER_READY timer608
    MATH NEGATE VLV_VELOCIDAD1_27 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_27 VLV_ENCODER_27 'True'

	DATA8 layer610
	DATA8 nos610
	DATA8 busy610
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer610 nos610
	JR_EQ8 0 nos610 motornotbusy610
  motorwaiting610:
	OUTPUT_TEST layer610 nos610 busy610
	JR_EQ8 busy610 0 motornotbusy610
	SLEEP
	JR motorwaiting610
  motornotbusy610:
    MOVEF_F 0.0 VLV_VELOCIDAD1_27
    MOVEF_F 0.0 VLV_VELOCIDAD2_27
    MOVEF_F 0.0 VLV_GRADOS_27
    DATA32 milliseconds611
	MOVEF_32 100.0 milliseconds611
	DATA32 timer611
	TIMER_WAIT milliseconds611 timer611
	TIMER_READY timer611
RETSUB_M_GIRO_GRADOS_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_GRADOS_3:
SUB_M_GIRO_NEGRO1F_3:
    MOVEF_F 50.0 VLV_LECTURA_28
  while612:
    JR_LTEQF VLV_LECTURA_28 15.0 endwhile612
  whilebody612:
    CALL SENSOR.READPERCENT VLV_SENS_28 F.2
    SUBF F.2 VPR_GIRO_NEGRO F.1
    DATAF tmpf615
    DATA8 flag615
    DIVF F.1 VPR_GIRO_BLANCO tmpf615
    CP_EQF 0.0 VPR_GIRO_BLANCO flag615
    SELECTF flag615 0.0 tmpf615 F.0

    SUBF 100.0 VPR_GIRO_NEGRO F.1
    MULF F.0 F.1 VLV_LECTURA_28
    MATH NEGATE VLV_VELOCIDAD1_28 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_28
    JR_GTF VLV_LECTURA_28 15.0 whilebody612
  endwhile612:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_M_GIRO_NEGRO1F_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_NEGRO1F_3:
SUB_M_GIRO_ENCODER_3:
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_GIRO_DIAMETRO F.2 F.1
    DATAF tmpf623
    DATA8 flag623
    DIVF VLV_DISTANCIA_29 F.1 tmpf623
    CP_EQF 0.0 F.1 flag623
    SELECTF flag623 0.0 tmpf623 F.0

    MULF F.0 360.0 VLV_ENCODER_29
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MATH NEGATE VLV_VELOCIDAD1_29 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_29 VLV_ENCODER_29 'True'

	DATA8 layer627
	DATA8 nos627
	DATA8 busy627
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer627 nos627
	JR_EQ8 0 nos627 motornotbusy627
  motorwaiting627:
	OUTPUT_TEST layer627 nos627 busy627
	JR_EQ8 busy627 0 motornotbusy627
	SLEEP
	JR motorwaiting627
  motornotbusy627:
RETSUB_M_GIRO_ENCODER_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_ENCODER_3:
SUB_M_RGB_DETECT_3:
    CALL SENSOR.GETMODE VLV_SENS_30 VLV_SENS_MODE_30
    DATA8 layer629
	DATA8 no629
	DATA8 mode8629
	
	MOVEF_8 VLV_SENS_30 no629
	SUB8 no629 1 no629
	DIV8 no629 4 layer629
	MATH MOD8 no629 4 no629

	MOVEF_8 4.0 mode8629
	
	INPUT_DEVICE READY_RAW layer629 no629 0 mode8629 0
    MOVEF_F 15.0 VLV_RED_30
    MOVEF_F 60.0 VLV_YELLOW_30
    MOVEF_F 170.0 VLV_GREEN_30
    MOVEF_F 330.0 VLV_BLUE_30
    MOVEF_F 0.0 VLV_HUE_30
    MOVEF_F 0.0 VLV_SAT_30
    MOVEF_F 0.0 VLV_VALUE_30
    MOVEF_F 0.0 VLV_COLOR_30
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMARRAY_30
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMARRAY_30
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMARRAY_30
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_30
  for634:
    JR_GTF VLV_J_30 VLV_REPS_30 endfor634
  forbody634:
    CALL SENSOR.READRAW VLV_SENS_30 3.0 VLV_RGB_30
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_30 VLV_RGB_30
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_30 VLV_RGB_30
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_30 VLV_RGB_30
    DATAF tmpf639
    DATA8 flag639
    DIVF VLV_RRAW_30 VPR_RGB_RWHITE tmpf639
    CP_EQF 0.0 VPR_RGB_RWHITE flag639
    SELECTF flag639 0.0 tmpf639 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_30 F.0 VLV_RNORMARRAY_30
    DATAF tmpf643
    DATA8 flag643
    DIVF VLV_GRAW_30 VPR_RGB_GWHITE tmpf643
    CP_EQF 0.0 VPR_RGB_GWHITE flag643
    SELECTF flag643 0.0 tmpf643 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_30 F.0 VLV_GNORMARRAY_30
    DATAF tmpf647
    DATA8 flag647
    DIVF VLV_BRAW_30 VPR_RGB_BWHITE tmpf647
    CP_EQF 0.0 VPR_RGB_BWHITE flag647
    SELECTF flag647 0.0 tmpf647 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_30 F.0 VLV_BNORMARRAY_30
    DATA32 milliseconds651
	MOVEF_32 5.0 milliseconds651
	DATA32 timer651
	TIMER_WAIT milliseconds651 timer651
	TIMER_READY timer651
    ADDF VLV_J_30 1.0 VLV_J_30
    JR_LTEQF VLV_J_30 VLV_REPS_30 forbody634
  endfor634:
    MOVEF_F 1.0 VLV_J_30
  for653:
    JR_GTF VLV_J_30 VLV_REPS_30 endfor653
  forbody653:
    CALL ARRAYGET_FLOAT VLV_J_30 F.0 VLV_RNORMARRAY_30
    ADDF VLV_J_30 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMARRAY_30
    ADDF F.0 F.1 VLV_RNORM_30
    CALL ARRAYGET_FLOAT VLV_J_30 F.0 VLV_GNORMARRAY_30
    ADDF VLV_J_30 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMARRAY_30
    ADDF F.0 F.1 VLV_GNORM_30
    CALL ARRAYGET_FLOAT VLV_J_30 F.0 VLV_BNORMARRAY_30
    ADDF VLV_J_30 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMARRAY_30
    ADDF F.0 F.1 VLV_BNORM_30
    ADDF VLV_J_30 2.0 VLV_J_30
    JR_LTEQF VLV_J_30 VLV_REPS_30 forbody653
  endfor653:
    DATAF tmpf667
    DATA8 flag667
    DIVF VLV_RNORM_30 VLV_REPS_30 tmpf667
    CP_EQF 0.0 VLV_REPS_30 flag667
    SELECTF flag667 0.0 tmpf667 VLV_RNORM_30

    DATAF tmpf668
    DATA8 flag668
    DIVF VLV_GNORM_30 VLV_REPS_30 tmpf668
    CP_EQF 0.0 VLV_REPS_30 flag668
    SELECTF flag668 0.0 tmpf668 VLV_GNORM_30

    DATAF tmpf669
    DATA8 flag669
    DIVF VLV_BNORM_30 VLV_REPS_30 tmpf669
    CP_EQF 0.0 VLV_REPS_30 flag669
    SELECTF flag669 0.0 tmpf669 VLV_BNORM_30

    DATA8 flag670
	CP_GTF VLV_RNORM_30 VLV_GNORM_30 flag670
	SELECTF flag670 VLV_RNORM_30 VLV_GNORM_30 F.0
    DATA8 flag671
	CP_GTF F.0 VLV_BNORM_30 flag671
	SELECTF flag671 F.0 VLV_BNORM_30 VLV_MAX_30
    DATA8 flag672
	CP_LTF VLV_RNORM_30 VLV_GNORM_30 flag672
	SELECTF flag672 VLV_RNORM_30 VLV_GNORM_30 F.0
    DATA8 flag673
	CP_LTF F.0 VLV_BNORM_30 flag673
	SELECTF flag673 F.0 VLV_BNORM_30 VLV_MIN_30
    JR_NEQF VLV_MAX_30 VLV_MIN_30 else674_1
    MOVEF_F 0.0 VLV_HUE_30
    JR endif674
  else674_1:
    JR_NEQF VLV_MAX_30 VLV_RNORM_30 else674_2
    JR_LTF VLV_GNORM_30 VLV_BNORM_30 else675_1
    SUBF VLV_GNORM_30 VLV_BNORM_30 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_30 VLV_MIN_30 F.1
    DATAF tmpf679
    DATA8 flag679
    DIVF F.0 F.1 tmpf679
    CP_EQF 0.0 F.1 flag679
    SELECTF flag679 0.0 tmpf679 VLV_HUE_30

    JR endif675
  else675_1:
    SUBF VLV_GNORM_30 VLV_BNORM_30 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_30 VLV_MIN_30 F.2
    DATAF tmpf683
    DATA8 flag683
    DIVF F.1 F.2 tmpf683
    CP_EQF 0.0 F.2 flag683
    SELECTF flag683 0.0 tmpf683 F.0

    ADDF F.0 360.0 VLV_HUE_30
  else675_2:
  endif675:
    JR endif674
  else674_2:
    JR_NEQF VLV_MAX_30 VLV_GNORM_30 else674_3
    SUBF VLV_BNORM_30 VLV_RNORM_30 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_30 VLV_MIN_30 F.2
    DATAF tmpf688
    DATA8 flag688
    DIVF F.1 F.2 tmpf688
    CP_EQF 0.0 F.2 flag688
    SELECTF flag688 0.0 tmpf688 F.0

    ADDF F.0 120.0 VLV_HUE_30
    JR endif674
  else674_3:
    SUBF VLV_RNORM_30 VLV_GNORM_30 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_30 VLV_MIN_30 F.2
    DATAF tmpf693
    DATA8 flag693
    DIVF F.1 F.2 tmpf693
    CP_EQF 0.0 F.2 flag693
    SELECTF flag693 0.0 tmpf693 F.0

    ADDF F.0 240.0 VLV_HUE_30
  else674_4:
  endif674:
    JR_NEQF VLV_MAX_30 0.0 else695_1
    MOVEF_F 0.0 VLV_SAT_30
    JR endif695
  else695_1:
    DATAF tmpf696
    DATA8 flag696
    DIVF VLV_MIN_30 VLV_MAX_30 tmpf696
    CP_EQF 0.0 VLV_MAX_30 flag696
    SELECTF flag696 0.0 tmpf696 F.0

    SUBF 1.0 F.0 VLV_SAT_30
  else695_2:
  endif695:
    MOVEF_F VLV_MAX_30 VLV_VALUE_30
    ADDF VPR_RGB_VALUEBLANCO VPR_RGB_VALUENEGRO F.0
    DATAF tmpf699
    DATA8 flag699
    DIVF F.0 2.0 tmpf699
    CP_EQF 0.0 2.0 flag699
    SELECTF flag699 0.0 tmpf699 VLV_RGBGREY_30

    ADDF VLV_RRAW_30 VLV_GRAW_30 F.1
    ADDF F.1 VLV_BRAW_30 F.0
    JR_GTF F.0 3.0 else700_1
    MOVEF_F 0.0 VLV_COLOR_30
    JR endif700
  else700_1:
    JR_GTEQF VLV_SAT_30 0.3 else703_1
    JR_LTEQF VLV_VALUE_30 VLV_RGBGREY_30 else704_1
    MOVEF_F 6.0 VLV_COLOR_30
    JR endif704
  else704_1:
    MOVEF_F 1.0 VLV_COLOR_30
  else704_2:
  endif704:
    JR endif703
  else703_1:
    JR_LTF VLV_HUE_30 0.0 else705_1
    JR_GTEQF VLV_HUE_30 VLV_RED_30 else705_1
    MOVEF_F 5.0 VLV_COLOR_30
    JR endif705
  else705_1:
    JR_LTF VLV_HUE_30 VLV_RED_30 else705_2
    JR_GTEQF VLV_HUE_30 VLV_YELLOW_30 else705_2
    MOVEF_F 4.0 VLV_COLOR_30
    JR endif705
  else705_2:
    JR_LTF VLV_HUE_30 VLV_YELLOW_30 else705_3
    JR_GTEQF VLV_HUE_30 VLV_GREEN_30 else705_3
    MOVEF_F 3.0 VLV_COLOR_30
    JR endif705
  else705_3:
    JR_LTF VLV_HUE_30 VLV_GREEN_30 else705_4
    JR_GTEQF VLV_HUE_30 VLV_BLUE_30 else705_4
    MOVEF_F 2.0 VLV_COLOR_30
    JR endif705
  else705_4:
    MOVEF_F 5.0 VLV_COLOR_30
  else705_5:
  endif705:
  else703_2:
  endif703:
  else700_2:
  endif700:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_RRAW_30 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_30 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_30 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_30 '%g' 99 S.1
    CALL TEXT.APPEND 'color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_30 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA8 layer724
	DATA8 no724
	DATA8 mode8724
	
	MOVEF_8 VLV_SENS_30 no724
	SUB8 no724 1 no724
	DIV8 no724 4 layer724
	MATH MOD8 no724 4 no724

	MOVEF_8 VLV_SENS_MODE_30 mode8724
	
	INPUT_DEVICE READY_RAW layer724 no724 0 mode8724 0
RETSUB_M_RGB_DETECT_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RGB_DETECT_3:
SUB_M_RGB_GRITAR_1:
    JR_NEQF VLV_COLOR_31 0.0 else725_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Zero'
    JR endif725
  else725_1:
    JR_NEQF VLV_COLOR_31 1.0 else725_2
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Black'
    JR endif725
  else725_2:
    JR_NEQF VLV_COLOR_31 2.0 else725_3
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/BLUE'
    JR endif725
  else725_3:
    JR_NEQF VLV_COLOR_31 3.0 else725_4
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/GREEN'
    JR endif725
  else725_4:
    JR_NEQF VLV_COLOR_31 4.0 else725_5
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/YELLOW'
    JR endif725
  else725_5:
    JR_NEQF VLV_COLOR_31 5.0 else725_6
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/RED'
    JR endif725
  else725_6:
    JR_NEQF VLV_COLOR_31 6.0 else725_7
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/White'
    JR endif725
  else725_7:
    JR_NEQF VLV_COLOR_31 7.0 else725_8
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Brown'
  else725_8:
  endif725:
    SOUND_READY
RETSUB_M_RGB_GRITAR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RGB_GRITAR_1:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall SENSOR.GETMODE		// FF
{
	IN_F port
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 type
	DATA8 mode
	
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	
	INPUT_DEVICE GET_TYPEMODE layer no type mode
	MOVE8_F mode result
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
