DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VPR_GIRO_G1
DATAF VPR_RGB_VALUENEGRO
DATAF VPR_RGB_VALUEBLANCO
DATAF VPR_RGB_RWHITE
DATAF VPR_RGB_GWHITE
DATAF VPR_RGB_BWHITE
DATAF VPR_RECTO_DIAMETRO
DATAF VPR_GIRO_DIAMETRO
DATAF VPR_SIGUELINEAS_DIAMETRO
DATAF VPR_SMART_DIAMETRO
DATAF VPR_CONTROL_DIAMETRO
DATAF VPR_SIGUELINEAS_NEGRO1
DATAF VPR_SIGUELINEAS_NEGRO3
DATAF VPR_SIGUELINEAS_NEGRO4
DATAF VPR_SIGUELINEAS_BLANCO1
DATAF VPR_SIGUELINEAS_BLANCO3
DATAF VPR_SIGUELINEAS_BLANCO4
DATAF VPR_SMART_NEGRO1
DATAF VPR_SMART_NEGRO3
DATAF VPR_SMART_NEGRO4
DATAF VPR_SMART_BLANCO1
DATAF VPR_SMART_BLANCO3
DATAF VPR_SMART_BLANCO4
DATAF VPR_RECTO_NEGRO
DATAF VPR_RECTO_BLANCO
DATAF VPR_GIRO_NEGRO
DATAF VPR_GIRO_BLANCO
DATAF VLV_VELOCIDAD_9
DATAF VLV_TIMER_9
DATAF VLV_VELOCIDAD_10
DATAF VLV_ENCODER_10
DATAF VLV_VELOCIDAD_11
DATAF VLV_ENCODER_11
DATAF VLV_VELOCIDAD1_18
DATAF VLV_VELOCIDAD2_18
DATAF VLV_GRADOS_18
DATAF VLV_VELOCIDAD1_19
DATAF VLV_VELOCIDAD2_19
DATAF VLV_DISTANCIA_19
DATAF VLV_VELOCIDAD_25
DATAF VLV_SENSOR_25
DATAF VLV_VELOCIDAD1_20
DATAF VLV_VELOCIDAD2_20
DATAF VLV_GRADOS_20
DATAF VLV_VELOCIDAD_12
DATAF VLV_VELOCIDAD_13
DATAF VLV_ENCODER_13
DATAF VLV_VELOCIDAD_26
DATAF VLV_DISTANCIA_26
DATAF VLV_SENS_33
DATAF VLV_REPS_33
DATAF VLV_COLOR_33
DATAF VLV_VELOCIDAD_27
DATAF VLV_TIEMPO_27
DATAF VLV_VELOCIDAD1_21
DATAF VLV_VELOCIDAD2_21
DATAF VLV_SENS_21
DATAF VLV_VELOCIDAD_14
DATAF VLV_ENCODER_14
DATAF VLV_VELOCIDAD1_22
DATAF VLV_VELOCIDAD2_22
DATAF VLV_DISTANCIA_22
DATAF VLV_VELOCIDAD_28
DATAF VLV_DISTANCIA_28
DATAF VLV_VELOCIDAD_15
DATAF VLV_READER_15
DATAF VLV_VELOCIDAD_29
DATAF VLV_SENSOR_29
DATAF VLV_COLOR_29
DATAF VLV_VELOCIDAD_30
DATAF VLV_SENSOR_30
DATAF VLV_VELOCIDAD_16
DATAF VLV_READER_16
DATAF VLV_VELOCIDAD_31
DATAF VLV_SENSOR_31
ARRAY16 VLV_MARKING_6 2
DATAF VLV_VELOCIDAD1_23
DATAF VLV_VELOCIDAD2_23
DATAF VLV_TIEMPO_23
DATAF VLV_VELOCIDAD_17
DATAF VLV_ENCODER_17
DATAF VLV_VELOCIDAD1_24
DATAF VLV_VELOCIDAD2_24
DATAF VLV_TIEMPO_24
DATAF VLV_VELOCIDAD_32
DATAF VLV_SENSOR_32
DATAF VLV_VMAX_35
DATAF VLV_DISTANCIAACCEL_35
DATAF VLV_DISTANCIA_35
DATAF VLV_GRADOS_5
DATAF VLV_COLOR_34
DATAF VLV_NUMERO_2
ARRAY16 VLV_MARKING_4 2
DATAS VLV_CODIGO_4 252
DATAF VGV_MARKINGGRANDE
DATAS VLV_CODIGO_6 252
DATAF VGV_DIAMETRO
DATAF VGV_NEGRO1
DATAF VGV_NEGRO3
DATAF VGV_NEGRO4
DATAF VGV_BLANCO1
DATAF VGV_BLANCO3
DATAF VGV_BLANCO4
DATAF VGV_COLOR
DATAF VLV_VOLTAJE_1
DATAF VLV_AUX_4
DATAF VLV_I_4
DATAF VLV_SIGNO_5
DATAF VLV_ENCDIFF_10
DATAF VLV_SIGNO_10
DATAF VLV_LECTURA1_11
DATAF VLV_LECTURA3_11
DATAF VLV_LECTURA4_11
DATAF VLV_KP_11
DATAF VLV_KD_11
DATAF VLV_ERROR_11
DATAF VLV_OLDERROR_11
DATAF VLV_U_11
DATAF VLV_SENTIDO_11
DATAF VLV_STARTC_11
DATAF VLV_ENCODERC_11
DATAF VLV_SAFETYTIMER_11
DATAF VLV_LECTURA1_12
DATAF VLV_LECTURA3_12
DATAF VLV_LECTURA4_12
DATAF VLV_KP_12
DATAF VLV_KD_12
DATAF VLV_ERROR_12
DATAF VLV_OLDERROR_12
DATAF VLV_U_12
DATAF VLV_SENTIDO_12
DATAF VLV_LECTURA1_13
DATAF VLV_LECTURA3_13
DATAF VLV_LECTURA4_13
DATAF VLV_KP_13
DATAF VLV_KD_13
DATAF VLV_ERROR_13
DATAF VLV_OLDERROR_13
DATAF VLV_U_13
DATAF VLV_SENTIDO_13
DATAF VLV_STARTC_13
DATAF VLV_ENCODERC_13
DATAF VLV_SAFETYTIMER_13
DATAF VLV_LECTURA1_14
DATAF VLV_LECTURA3_14
DATAF VLV_LECTURA4_14
DATAF VLV_KP_14
DATAF VLV_KD_14
DATAF VLV_ERROR_14
DATAF VLV_OLDERROR_14
DATAF VLV_U_14
DATAF VLV_SENTIDO_14
DATAF VLV_STARTC_14
DATAF VLV_ENCODERC_14
DATAF VLV_SAFETYTIMER_14
DATAF VLV_LECTURA1_15
DATAF VLV_LECTURA3_15
DATAF VLV_LECTURA4_15
DATAF VLV_KP_15
DATAF VLV_KD_15
DATAF VLV_ERROR_15
DATAF VLV_OLDERROR_15
DATAF VLV_U_15
DATAF VLV_SENTIDO_15
DATAF VLV_LECTURA_15
DATAF VLV_LECTURAIZQ_15
DATAF VLV_LECTURADCH_15
DATAF VLV_LECTURA1_16
DATAF VLV_LECTURA3_16
DATAF VLV_LECTURA4_16
DATAF VLV_KP_16
DATAF VLV_KD_16
DATAF VLV_ERROR_16
DATAF VLV_OLDERROR_16
DATAF VLV_U_16
DATAF VLV_SENTIDO_16
DATAF VLV_LECTURA_16
DATAF VLV_LECTURAIZQ_16
DATAF VLV_LECTURADCH_16
DATAF VLV_LECTURA1_17
DATAF VLV_LECTURA3_17
DATAF VLV_LECTURA4_17
DATAF VLV_KP_17
DATAF VLV_KD_17
DATAF VLV_ERROR_17
DATAF VLV_OLDERROR_17
DATAF VLV_U_17
DATAF VLV_SENTIDO_17
DATAF VLV_STARTC_17
DATAF VLV_ENCODERC_17
DATAF VLV_SAFETYTIMER_17
DATAF VLV_SIGNO_18
DATAF VLV_VMIN_18
DATAF VLV_VMAX_18
DATAF VLV_ENCODER_18
DATAF VLV_ENCODER_19
DATAF VLV_SIGNO_20
DATAF VLV_VMIN_20
DATAF VLV_VMAX_20
DATAF VLV_ENCODER_20
DATAF VLV_LECTURA_21
DATAF VLV_ENCODER_22
DATAF VLV_CORRECCION_25
DATAF VLV_LECTURA_25
DATAF VLV_SAFETYTIMER_26
DATAF VLV_CORRECCION_26
DATAF VLV_ENC_26
DATAF VLV_C_26
DATAF VLV_CORRECCION_27
DATAF VLV_SAFETYTIMER_28
DATAF VLV_CORRECCION_28
DATAF VLV_ENC_28
DATAF VLV_C_28
DATAF VLV_CORRECCION_29
DATAF VLV_MODE_29
DATAF VLV_CORRECCION_30
DATAF VLV_LECTURA_30
DATAF VLV_CORRECCION_31
DATAF VLV_LECTURA_31
DATAF VLV_CORRECCION_32
DATAF VLV_LECTURA_32
DATAF VLV_SENS_MODE_33
DATAF VLV_RED_33
DATAF VLV_YELLOW_33
DATAF VLV_GREEN_33
DATAF VLV_BLUE_33
DATAF VLV_HUE_33
DATAF VLV_SAT_33
DATAF VLV_VALUE_33
ARRAY16 VLV_RNORMARRAY_33 2
ARRAY16 VLV_GNORMARRAY_33 2
ARRAY16 VLV_BNORMARRAY_33 2
DATAF VLV_J_33
ARRAY16 VLV_RGB_33 2
DATAF VLV_RRAW_33
DATAF VLV_GRAW_33
DATAF VLV_BRAW_33
DATAF VLV_RNORM_33
DATAF VLV_GNORM_33
DATAF VLV_BNORM_33
DATAF VLV_MAX_33
DATAF VLV_MIN_33
DATAF VLV_RGBGREY_33
DATAF VLV_SIGNO_35
DATAF VLV_VEL_35
DATAF VLV_KP_35
DATAF VLV_KD_35
DATAF VLV_ERROR_35
DATAF VLV_OLDERROR_35
DATAF VLV_ENCODERACCEL_35
DATAF VLV_ENCODER_35
DATAF VLV_ENCODERCRUCERO_35
DATAF VLV_LOG_35
DATAF VLV_LECTURAS_35
ARRAY16 VLV_ENCODERB_35 2
ARRAY16 VLV_ENCODERC_35 2
DATAF VLV_DISTANCIAC_35
DATAF VLV_DISTANCIAB_35
DATAF VLV_CORRECCION_35
ARRAY16 VLV_VELOCIDAD_35 2
DATAF VLV_DELTAT_35
DATAF VLV_I_35
DATA32 RUNCOUNTER_F_SAFETYTIMERBRAZO_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VPR_GIRO_G1
    MOVEF_F 0.0 VPR_RGB_VALUENEGRO
    MOVEF_F 0.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 0.0 VPR_RGB_RWHITE
    MOVEF_F 0.0 VPR_RGB_GWHITE
    MOVEF_F 0.0 VPR_RGB_BWHITE
    MOVEF_F 0.0 VPR_RECTO_DIAMETRO
    MOVEF_F 0.0 VPR_GIRO_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F 0.0 VPR_SMART_DIAMETRO
    MOVEF_F 0.0 VPR_CONTROL_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F 0.0 VPR_SMART_NEGRO1
    MOVEF_F 0.0 VPR_SMART_NEGRO3
    MOVEF_F 0.0 VPR_SMART_NEGRO4
    MOVEF_F 0.0 VPR_SMART_BLANCO1
    MOVEF_F 0.0 VPR_SMART_BLANCO3
    MOVEF_F 0.0 VPR_SMART_BLANCO4
    MOVEF_F 0.0 VPR_RECTO_NEGRO
    MOVEF_F 0.0 VPR_RECTO_BLANCO
    MOVEF_F 0.0 VPR_GIRO_NEGRO
    MOVEF_F 0.0 VPR_GIRO_BLANCO
    MOVEF_F 0.0 VLV_VELOCIDAD_9
    MOVEF_F 0.0 VLV_TIMER_9
    MOVEF_F 0.0 VLV_VELOCIDAD_10
    MOVEF_F 0.0 VLV_ENCODER_10
    MOVEF_F 0.0 VLV_VELOCIDAD_11
    MOVEF_F 0.0 VLV_ENCODER_11
    MOVEF_F 0.0 VLV_VELOCIDAD1_18
    MOVEF_F 0.0 VLV_VELOCIDAD2_18
    MOVEF_F 0.0 VLV_GRADOS_18
    MOVEF_F 0.0 VLV_VELOCIDAD1_19
    MOVEF_F 0.0 VLV_VELOCIDAD2_19
    MOVEF_F 0.0 VLV_DISTANCIA_19
    MOVEF_F 0.0 VLV_VELOCIDAD_25
    MOVEF_F 0.0 VLV_SENSOR_25
    MOVEF_F 0.0 VLV_VELOCIDAD1_20
    MOVEF_F 0.0 VLV_VELOCIDAD2_20
    MOVEF_F 0.0 VLV_GRADOS_20
    MOVEF_F 0.0 VLV_VELOCIDAD_12
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_ENCODER_13
    MOVEF_F 0.0 VLV_VELOCIDAD_26
    MOVEF_F 0.0 VLV_DISTANCIA_26
    MOVEF_F 0.0 VLV_SENS_33
    MOVEF_F 0.0 VLV_REPS_33
    MOVEF_F 0.0 VLV_COLOR_33
    MOVEF_F 0.0 VLV_VELOCIDAD_27
    MOVEF_F 0.0 VLV_TIEMPO_27
    MOVEF_F 0.0 VLV_VELOCIDAD1_21
    MOVEF_F 0.0 VLV_VELOCIDAD2_21
    MOVEF_F 0.0 VLV_SENS_21
    MOVEF_F 0.0 VLV_VELOCIDAD_14
    MOVEF_F 0.0 VLV_ENCODER_14
    MOVEF_F 0.0 VLV_VELOCIDAD1_22
    MOVEF_F 0.0 VLV_VELOCIDAD2_22
    MOVEF_F 0.0 VLV_DISTANCIA_22
    MOVEF_F 0.0 VLV_VELOCIDAD_28
    MOVEF_F 0.0 VLV_DISTANCIA_28
    MOVEF_F 0.0 VLV_VELOCIDAD_15
    MOVEF_F 0.0 VLV_READER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_29
    MOVEF_F 0.0 VLV_SENSOR_29
    MOVEF_F 0.0 VLV_COLOR_29
    MOVEF_F 0.0 VLV_VELOCIDAD_30
    MOVEF_F 0.0 VLV_SENSOR_30
    MOVEF_F 0.0 VLV_VELOCIDAD_16
    MOVEF_F 0.0 VLV_READER_16
    MOVEF_F 0.0 VLV_VELOCIDAD_31
    MOVEF_F 0.0 VLV_SENSOR_31
    CALL ARRAYCREATE_FLOAT VLV_MARKING_6
    MOVEF_F 0.0 VLV_VELOCIDAD1_23
    MOVEF_F 0.0 VLV_VELOCIDAD2_23
    MOVEF_F 0.0 VLV_TIEMPO_23
    MOVEF_F 0.0 VLV_VELOCIDAD_17
    MOVEF_F 0.0 VLV_ENCODER_17
    MOVEF_F 0.0 VLV_VELOCIDAD1_24
    MOVEF_F 0.0 VLV_VELOCIDAD2_24
    MOVEF_F 0.0 VLV_TIEMPO_24
    MOVEF_F 0.0 VLV_VELOCIDAD_32
    MOVEF_F 0.0 VLV_SENSOR_32
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_DISTANCIAACCEL_35
    MOVEF_F 0.0 VLV_DISTANCIA_35
    MOVEF_F 0.0 VLV_GRADOS_5
    MOVEF_F 0.0 VLV_COLOR_34
    MOVEF_F 0.0 VLV_NUMERO_2
    CALL ARRAYCREATE_FLOAT VLV_MARKING_4
    STRINGS DUPLICATE '' VLV_CODIGO_4
    MOVEF_F 0.0 VGV_MARKINGGRANDE
    STRINGS DUPLICATE '' VLV_CODIGO_6
    MOVEF_F 0.0 VGV_DIAMETRO
    MOVEF_F 0.0 VGV_NEGRO1
    MOVEF_F 0.0 VGV_NEGRO3
    MOVEF_F 0.0 VGV_NEGRO4
    MOVEF_F 0.0 VGV_BLANCO1
    MOVEF_F 0.0 VGV_BLANCO3
    MOVEF_F 0.0 VGV_BLANCO4
    MOVEF_F 0.0 VGV_COLOR
    MOVEF_F 0.0 VLV_VOLTAJE_1
    MOVEF_F 0.0 VLV_AUX_4
    MOVEF_F 0.0 VLV_I_4
    MOVEF_F 0.0 VLV_SIGNO_5
    MOVEF_F 0.0 VLV_ENCDIFF_10
    MOVEF_F 0.0 VLV_SIGNO_10
    MOVEF_F 0.0 VLV_LECTURA1_11
    MOVEF_F 0.0 VLV_LECTURA3_11
    MOVEF_F 0.0 VLV_LECTURA4_11
    MOVEF_F 0.0 VLV_KP_11
    MOVEF_F 0.0 VLV_KD_11
    MOVEF_F 0.0 VLV_ERROR_11
    MOVEF_F 0.0 VLV_OLDERROR_11
    MOVEF_F 0.0 VLV_U_11
    MOVEF_F 0.0 VLV_SENTIDO_11
    MOVEF_F 0.0 VLV_STARTC_11
    MOVEF_F 0.0 VLV_ENCODERC_11
    MOVEF_F 0.0 VLV_SAFETYTIMER_11
    MOVEF_F 0.0 VLV_LECTURA1_12
    MOVEF_F 0.0 VLV_LECTURA3_12
    MOVEF_F 0.0 VLV_LECTURA4_12
    MOVEF_F 0.0 VLV_KP_12
    MOVEF_F 0.0 VLV_KD_12
    MOVEF_F 0.0 VLV_ERROR_12
    MOVEF_F 0.0 VLV_OLDERROR_12
    MOVEF_F 0.0 VLV_U_12
    MOVEF_F 0.0 VLV_SENTIDO_12
    MOVEF_F 0.0 VLV_LECTURA1_13
    MOVEF_F 0.0 VLV_LECTURA3_13
    MOVEF_F 0.0 VLV_LECTURA4_13
    MOVEF_F 0.0 VLV_KP_13
    MOVEF_F 0.0 VLV_KD_13
    MOVEF_F 0.0 VLV_ERROR_13
    MOVEF_F 0.0 VLV_OLDERROR_13
    MOVEF_F 0.0 VLV_U_13
    MOVEF_F 0.0 VLV_SENTIDO_13
    MOVEF_F 0.0 VLV_STARTC_13
    MOVEF_F 0.0 VLV_ENCODERC_13
    MOVEF_F 0.0 VLV_SAFETYTIMER_13
    MOVEF_F 0.0 VLV_LECTURA1_14
    MOVEF_F 0.0 VLV_LECTURA3_14
    MOVEF_F 0.0 VLV_LECTURA4_14
    MOVEF_F 0.0 VLV_KP_14
    MOVEF_F 0.0 VLV_KD_14
    MOVEF_F 0.0 VLV_ERROR_14
    MOVEF_F 0.0 VLV_OLDERROR_14
    MOVEF_F 0.0 VLV_U_14
    MOVEF_F 0.0 VLV_SENTIDO_14
    MOVEF_F 0.0 VLV_STARTC_14
    MOVEF_F 0.0 VLV_ENCODERC_14
    MOVEF_F 0.0 VLV_SAFETYTIMER_14
    MOVEF_F 0.0 VLV_LECTURA1_15
    MOVEF_F 0.0 VLV_LECTURA3_15
    MOVEF_F 0.0 VLV_LECTURA4_15
    MOVEF_F 0.0 VLV_KP_15
    MOVEF_F 0.0 VLV_KD_15
    MOVEF_F 0.0 VLV_ERROR_15
    MOVEF_F 0.0 VLV_OLDERROR_15
    MOVEF_F 0.0 VLV_U_15
    MOVEF_F 0.0 VLV_SENTIDO_15
    MOVEF_F 0.0 VLV_LECTURA_15
    MOVEF_F 0.0 VLV_LECTURAIZQ_15
    MOVEF_F 0.0 VLV_LECTURADCH_15
    MOVEF_F 0.0 VLV_LECTURA1_16
    MOVEF_F 0.0 VLV_LECTURA3_16
    MOVEF_F 0.0 VLV_LECTURA4_16
    MOVEF_F 0.0 VLV_KP_16
    MOVEF_F 0.0 VLV_KD_16
    MOVEF_F 0.0 VLV_ERROR_16
    MOVEF_F 0.0 VLV_OLDERROR_16
    MOVEF_F 0.0 VLV_U_16
    MOVEF_F 0.0 VLV_SENTIDO_16
    MOVEF_F 0.0 VLV_LECTURA_16
    MOVEF_F 0.0 VLV_LECTURAIZQ_16
    MOVEF_F 0.0 VLV_LECTURADCH_16
    MOVEF_F 0.0 VLV_LECTURA1_17
    MOVEF_F 0.0 VLV_LECTURA3_17
    MOVEF_F 0.0 VLV_LECTURA4_17
    MOVEF_F 0.0 VLV_KP_17
    MOVEF_F 0.0 VLV_KD_17
    MOVEF_F 0.0 VLV_ERROR_17
    MOVEF_F 0.0 VLV_OLDERROR_17
    MOVEF_F 0.0 VLV_U_17
    MOVEF_F 0.0 VLV_SENTIDO_17
    MOVEF_F 0.0 VLV_STARTC_17
    MOVEF_F 0.0 VLV_ENCODERC_17
    MOVEF_F 0.0 VLV_SAFETYTIMER_17
    MOVEF_F 0.0 VLV_SIGNO_18
    MOVEF_F 0.0 VLV_VMIN_18
    MOVEF_F 0.0 VLV_VMAX_18
    MOVEF_F 0.0 VLV_ENCODER_18
    MOVEF_F 0.0 VLV_ENCODER_19
    MOVEF_F 0.0 VLV_SIGNO_20
    MOVEF_F 0.0 VLV_VMIN_20
    MOVEF_F 0.0 VLV_VMAX_20
    MOVEF_F 0.0 VLV_ENCODER_20
    MOVEF_F 0.0 VLV_LECTURA_21
    MOVEF_F 0.0 VLV_ENCODER_22
    MOVEF_F 0.0 VLV_CORRECCION_25
    MOVEF_F 0.0 VLV_LECTURA_25
    MOVEF_F 0.0 VLV_SAFETYTIMER_26
    MOVEF_F 0.0 VLV_CORRECCION_26
    MOVEF_F 0.0 VLV_ENC_26
    MOVEF_F 0.0 VLV_C_26
    MOVEF_F 0.0 VLV_CORRECCION_27
    MOVEF_F 0.0 VLV_SAFETYTIMER_28
    MOVEF_F 0.0 VLV_CORRECCION_28
    MOVEF_F 0.0 VLV_ENC_28
    MOVEF_F 0.0 VLV_C_28
    MOVEF_F 0.0 VLV_CORRECCION_29
    MOVEF_F 0.0 VLV_MODE_29
    MOVEF_F 0.0 VLV_CORRECCION_30
    MOVEF_F 0.0 VLV_LECTURA_30
    MOVEF_F 0.0 VLV_CORRECCION_31
    MOVEF_F 0.0 VLV_LECTURA_31
    MOVEF_F 0.0 VLV_CORRECCION_32
    MOVEF_F 0.0 VLV_LECTURA_32
    MOVEF_F 0.0 VLV_SENS_MODE_33
    MOVEF_F 0.0 VLV_RED_33
    MOVEF_F 0.0 VLV_YELLOW_33
    MOVEF_F 0.0 VLV_GREEN_33
    MOVEF_F 0.0 VLV_BLUE_33
    MOVEF_F 0.0 VLV_HUE_33
    MOVEF_F 0.0 VLV_SAT_33
    MOVEF_F 0.0 VLV_VALUE_33
    CALL ARRAYCREATE_FLOAT VLV_RNORMARRAY_33
    CALL ARRAYCREATE_FLOAT VLV_GNORMARRAY_33
    CALL ARRAYCREATE_FLOAT VLV_BNORMARRAY_33
    MOVEF_F 0.0 VLV_J_33
    CALL ARRAYCREATE_FLOAT VLV_RGB_33
    MOVEF_F 0.0 VLV_RRAW_33
    MOVEF_F 0.0 VLV_GRAW_33
    MOVEF_F 0.0 VLV_BRAW_33
    MOVEF_F 0.0 VLV_RNORM_33
    MOVEF_F 0.0 VLV_GNORM_33
    MOVEF_F 0.0 VLV_BNORM_33
    MOVEF_F 0.0 VLV_MAX_33
    MOVEF_F 0.0 VLV_MIN_33
    MOVEF_F 0.0 VLV_RGBGREY_33
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VEL_35
    MOVEF_F 0.0 VLV_KP_35
    MOVEF_F 0.0 VLV_KD_35
    MOVEF_F 0.0 VLV_ERROR_35
    MOVEF_F 0.0 VLV_OLDERROR_35
    MOVEF_F 0.0 VLV_ENCODERACCEL_35
    MOVEF_F 0.0 VLV_ENCODER_35
    MOVEF_F 0.0 VLV_ENCODERCRUCERO_35
    MOVEF_F 0.0 VLV_LOG_35
    MOVEF_F 0.0 VLV_LECTURAS_35
    CALL ARRAYCREATE_FLOAT VLV_ENCODERB_35
    CALL ARRAYCREATE_FLOAT VLV_ENCODERC_35
    MOVEF_F 0.0 VLV_DISTANCIAC_35
    MOVEF_F 0.0 VLV_DISTANCIAB_35
    MOVEF_F 0.0 VLV_CORRECCION_35
    CALL ARRAYCREATE_FLOAT VLV_VELOCIDAD_35
    MOVEF_F 0.0 VLV_DELTAT_35
    MOVEF_F 0.0 VLV_I_35
    MOVE32_32 0 RUNCOUNTER_F_SAFETYTIMERBRAZO_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_SAFETYTIMERBRAZO_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_SAFETYTIMERBRAZO_0 0
    CALL GETANDINC32 RUNCOUNTER_F_SAFETYTIMERBRAZO_0 -1 RUNCOUNTER_F_SAFETYTIMERBRAZO_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_SAFETYTIMERBRAZO_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    DATAS S.2 252
    DATAS S.3 252
    DATAS S.4 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch994
    WRITE32 ENDSUB_F_SAFETYTIMERBRAZO_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SAFETYTIMERBRAZO_0
  dispatch994:
    MOVEF_F 0.0 VPR_GIRO_G1
    MOVEF_F 0.0 VPR_RGB_VALUENEGRO
    MOVEF_F 0.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 0.0 VPR_RGB_RWHITE
    MOVEF_F 0.0 VPR_RGB_GWHITE
    MOVEF_F 0.0 VPR_RGB_BWHITE
    MOVEF_F 0.0 VPR_RECTO_DIAMETRO
    MOVEF_F 0.0 VPR_GIRO_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F 0.0 VPR_SMART_DIAMETRO
    MOVEF_F 0.0 VPR_CONTROL_DIAMETRO
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F 0.0 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F 0.0 VPR_SMART_NEGRO1
    MOVEF_F 0.0 VPR_SMART_NEGRO3
    MOVEF_F 0.0 VPR_SMART_NEGRO4
    MOVEF_F 0.0 VPR_SMART_BLANCO1
    MOVEF_F 0.0 VPR_SMART_BLANCO3
    MOVEF_F 0.0 VPR_SMART_BLANCO4
    MOVEF_F 0.0 VPR_RECTO_NEGRO
    MOVEF_F 0.0 VPR_RECTO_BLANCO
    MOVEF_F 0.0 VPR_GIRO_NEGRO
    MOVEF_F 0.0 VPR_GIRO_BLANCO
    MOVEF_F 0.0 VLV_VELOCIDAD_9
    MOVEF_F 0.0 VLV_TIMER_9
    MOVEF_F 0.0 VLV_VELOCIDAD_10
    MOVEF_F 0.0 VLV_ENCODER_10
    MOVEF_F 0.0 VLV_VELOCIDAD_11
    MOVEF_F 0.0 VLV_ENCODER_11
    MOVEF_F 0.0 VLV_VELOCIDAD1_18
    MOVEF_F 0.0 VLV_VELOCIDAD2_18
    MOVEF_F 0.0 VLV_GRADOS_18
    MOVEF_F 0.0 VLV_VELOCIDAD1_19
    MOVEF_F 0.0 VLV_VELOCIDAD2_19
    MOVEF_F 0.0 VLV_DISTANCIA_19
    MOVEF_F 0.0 VLV_VELOCIDAD_25
    MOVEF_F 0.0 VLV_SENSOR_25
    MOVEF_F 0.0 VLV_VELOCIDAD1_20
    MOVEF_F 0.0 VLV_VELOCIDAD2_20
    MOVEF_F 0.0 VLV_GRADOS_20
    MOVEF_F 0.0 VLV_VELOCIDAD_12
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_ENCODER_13
    MOVEF_F 0.0 VLV_VELOCIDAD_26
    MOVEF_F 0.0 VLV_DISTANCIA_26
    MOVEF_F 0.0 VLV_SENS_33
    MOVEF_F 0.0 VLV_REPS_33
    MOVEF_F 0.0 VLV_COLOR_33
    MOVEF_F 0.0 VLV_VELOCIDAD_27
    MOVEF_F 0.0 VLV_TIEMPO_27
    MOVEF_F 0.0 VLV_VELOCIDAD1_21
    MOVEF_F 0.0 VLV_VELOCIDAD2_21
    MOVEF_F 0.0 VLV_SENS_21
    MOVEF_F 0.0 VLV_VELOCIDAD_14
    MOVEF_F 0.0 VLV_ENCODER_14
    MOVEF_F 0.0 VLV_VELOCIDAD1_22
    MOVEF_F 0.0 VLV_VELOCIDAD2_22
    MOVEF_F 0.0 VLV_DISTANCIA_22
    MOVEF_F 0.0 VLV_VELOCIDAD_28
    MOVEF_F 0.0 VLV_DISTANCIA_28
    MOVEF_F 0.0 VLV_VELOCIDAD_15
    MOVEF_F 0.0 VLV_READER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_29
    MOVEF_F 0.0 VLV_SENSOR_29
    MOVEF_F 0.0 VLV_COLOR_29
    MOVEF_F 0.0 VLV_VELOCIDAD_30
    MOVEF_F 0.0 VLV_SENSOR_30
    MOVEF_F 0.0 VLV_VELOCIDAD_16
    MOVEF_F 0.0 VLV_READER_16
    MOVEF_F 0.0 VLV_VELOCIDAD_31
    MOVEF_F 0.0 VLV_SENSOR_31
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MARKING_6
    MOVEF_F 0.0 VLV_VELOCIDAD1_23
    MOVEF_F 0.0 VLV_VELOCIDAD2_23
    MOVEF_F 0.0 VLV_TIEMPO_23
    MOVEF_F 0.0 VLV_VELOCIDAD_17
    MOVEF_F 0.0 VLV_ENCODER_17
    MOVEF_F 0.0 VLV_VELOCIDAD1_24
    MOVEF_F 0.0 VLV_VELOCIDAD2_24
    MOVEF_F 0.0 VLV_TIEMPO_24
    MOVEF_F 0.0 VLV_VELOCIDAD_32
    MOVEF_F 0.0 VLV_SENSOR_32
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_DISTANCIAACCEL_35
    MOVEF_F 0.0 VLV_DISTANCIA_35
    MOVEF_F 0.0 VLV_GRADOS_5
    MOVEF_F 0.0 VLV_COLOR_34
    MOVEF_F 0.0 VLV_NUMERO_2
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MARKING_4
    STRINGS DUPLICATE '' VLV_CODIGO_4
    MOVEF_F 0.0 VGV_MARKINGGRANDE
    STRINGS DUPLICATE '' VLV_CODIGO_6
    MOVEF_F 0.0 VGV_DIAMETRO
    MOVEF_F 0.0 VGV_NEGRO1
    MOVEF_F 0.0 VGV_NEGRO3
    MOVEF_F 0.0 VGV_NEGRO4
    MOVEF_F 0.0 VGV_BLANCO1
    MOVEF_F 0.0 VGV_BLANCO3
    MOVEF_F 0.0 VGV_BLANCO4
    MOVEF_F 0.0 VGV_COLOR
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB2 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB2:
    WRITE32 ENDSUB_F_PRUEBAVELOCIDAD_0:CALLSUB3 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PRUEBAVELOCIDAD_0
CALLSUB3:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 1.0 no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 2.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 4.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 3.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    DATA8 layer7
	DATA8 no7
	DATA8 mode87
	
	MOVEF_8 4.0 no7
	SUB8 no7 1 no7
	DIV8 no7 4 layer7
	MATH MOD8 no7 4 no7

	MOVEF_8 0.0 mode87
	
	INPUT_DEVICE READY_RAW layer7 no7 0 mode87 0
    MOVEF_F 6.24 VGV_DIAMETRO
    MOVEF_F 2.68055555555556 VPR_GIRO_G1
    MOVEF_F 3.0 VGV_NEGRO1
    MOVEF_F 3.0 VGV_NEGRO3
    MOVEF_F 2.0 VGV_NEGRO4
    MOVEF_F 99.0 VGV_BLANCO1
    MOVEF_F 100.0 VGV_BLANCO3
    MOVEF_F 104.0 VGV_BLANCO4
    MOVEF_F 4.0 VPR_RGB_VALUENEGRO
    MOVEF_F 32.0 VPR_RGB_VALUEBLANCO
    MOVEF_F 57.0 VPR_RGB_RWHITE
    MOVEF_F 71.0 VPR_RGB_GWHITE
    MOVEF_F 73.0 VPR_RGB_BWHITE
    MOVEF_F VGV_DIAMETRO VPR_RECTO_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_GIRO_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_SIGUELINEAS_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_SMART_DIAMETRO
    MOVEF_F VGV_DIAMETRO VPR_CONTROL_DIAMETRO
    MOVEF_F VGV_NEGRO1 VPR_SIGUELINEAS_NEGRO1
    MOVEF_F VGV_NEGRO3 VPR_SIGUELINEAS_NEGRO3
    MOVEF_F VGV_NEGRO4 VPR_SIGUELINEAS_NEGRO4
    MOVEF_F VGV_BLANCO1 VPR_SIGUELINEAS_BLANCO1
    MOVEF_F VGV_BLANCO3 VPR_SIGUELINEAS_BLANCO3
    MOVEF_F VGV_BLANCO4 VPR_SIGUELINEAS_BLANCO4
    MOVEF_F VGV_NEGRO1 VPR_SMART_NEGRO1
    MOVEF_F VGV_NEGRO3 VPR_SMART_NEGRO3
    MOVEF_F VGV_NEGRO4 VPR_SMART_NEGRO4
    MOVEF_F VGV_BLANCO1 VPR_SMART_BLANCO1
    MOVEF_F VGV_BLANCO3 VPR_SMART_BLANCO3
    MOVEF_F VGV_BLANCO4 VPR_SMART_BLANCO4
    ADDF VGV_NEGRO1 VGV_NEGRO3 F.1
    ADDF F.1 VGV_NEGRO4 F.0
    DATAF tmpf10
    DATA8 flag10
    DIVF F.0 3.0 tmpf10
    CP_EQF 0.0 3.0 flag10
    SELECTF flag10 0.0 tmpf10 VPR_RECTO_NEGRO

    ADDF VGV_BLANCO1 VGV_BLANCO3 F.1
    ADDF F.1 VGV_BLANCO4 F.0
    DATAF tmpf13
    DATA8 flag13
    DIVF F.0 3.0 tmpf13
    CP_EQF 0.0 3.0 flag13
    SELECTF flag13 0.0 tmpf13 VPR_RECTO_BLANCO

    ADDF VGV_NEGRO1 VGV_NEGRO3 F.1
    ADDF F.1 VGV_NEGRO4 F.0
    DATAF tmpf16
    DATA8 flag16
    DIVF F.0 3.0 tmpf16
    CP_EQF 0.0 3.0 flag16
    SELECTF flag16 0.0 tmpf16 VPR_GIRO_NEGRO

    ADDF VGV_BLANCO1 VGV_BLANCO3 F.1
    ADDF F.1 VGV_BLANCO4 F.0
    DATAF tmpf19
    DATA8 flag19
    DIVF F.0 3.0 tmpf19
    CP_EQF 0.0 3.0 flag19
    SELECTF flag19 0.0 tmpf19 VPR_GIRO_BLANCO

    MOVEF_F 0.0 VGV_COLOR
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    MOVEF_F 100.0 VLV_VELOCIDAD_9
    MOVEF_F 1000.0 VLV_TIMER_9
    WRITE32 ENDSUB_M_BRAZO_ATIMER_2:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_ATIMER_2
CALLSUB20:
    OUTPUT_CLR_COUNT 0 1
    DATA32 milliseconds22
	MOVEF_32 100.0 milliseconds22
	DATA32 timer22
	TIMER_WAIT milliseconds22 timer22
	TIMER_READY timer22
    MOVEF_F 35.0 VLV_VELOCIDAD_10
    MOVEF_F -200.0 VLV_ENCODER_10
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB23:
    OUTPUT_CLR_COUNT 0 1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Connect'
    SOUND_READY
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_PRUEBAVELOCIDAD_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB27:
    DATA32 milliseconds28
	MOVEF_32 200.0 milliseconds28
	DATA32 timer28
	TIMER_WAIT milliseconds28 timer28
	TIMER_READY timer28
    MOVEF_F 30.0 VLV_VELOCIDAD_10
    MOVEF_F -260.0 VLV_ENCODER_10
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB29:
    DATA32 milliseconds30
	MOVEF_32 1000.0 milliseconds30
	DATA32 timer30
	TIMER_WAIT milliseconds30 timer30
	TIMER_READY timer30
    MOVEF_F 60.0 VLV_VMAX_35
    MOVEF_F 15.0 VLV_DISTANCIAACCEL_35
    MOVEF_F 50.0 VLV_DISTANCIA_35
    WRITE32 ENDSUB_M_CONTROL_LOGSINACCELDECEL_3:CALLSUB31 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_CONTROL_LOGSINACCELDECEL_3
CALLSUB31:
RETSUB_F_PRUEBAVELOCIDAD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PRUEBAVELOCIDAD_0:
SUB_F_SAFETYTIMERBRAZO_0:
    MOVEF_F 30.0 VLV_VELOCIDAD_10
    MOVEF_F -730.0 VLV_ENCODER_10
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB32:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
RETSUB_F_SAFETYTIMERBRAZO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SAFETYTIMERBRAZO_0:
SUB_F_GRITARCOLOR_0:
    MOVEF_F VGV_COLOR VLV_COLOR_34
    WRITE32 ENDSUB_M_RGB_GRITAR_1:CALLSUB34 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RGB_GRITAR_1
CALLSUB34:
RETSUB_F_GRITARCOLOR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GRITARCOLOR_0:
SUB_F_GRITARVOLTAJE_0:
    CALL EV3.BATTERYVOLTAGE VLV_VOLTAJE_1
    MATH FLOOR VLV_VOLTAJE_1 VLV_NUMERO_2
    WRITE32 ENDSUB_F_GRITARNUMERO_1:CALLSUB37 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GRITARNUMERO_1
CALLSUB37:
    MULF VLV_VOLTAJE_1 10.0 F.1
    MATH FLOOR F.1 F.0
    MATH FLOOR VLV_VOLTAJE_1 F.2
    MULF F.2 10.0 F.1
    SUBF F.0 F.1 VLV_NUMERO_2
    WRITE32 ENDSUB_F_GRITARNUMERO_1:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GRITARNUMERO_1
CALLSUB43:
    MULF VLV_VOLTAJE_1 100.0 F.1
    MATH FLOOR F.1 F.0
    MULF VLV_VOLTAJE_1 10.0 F.3
    MATH FLOOR F.3 F.2
    MULF F.2 10.0 F.1
    SUBF F.0 F.1 VLV_NUMERO_2
    WRITE32 ENDSUB_F_GRITARNUMERO_1:CALLSUB50 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GRITARNUMERO_1
CALLSUB50:
RETSUB_F_GRITARVOLTAJE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GRITARVOLTAJE_0:
SUB_F_GRITARNUMERO_1:
    JR_NEQF VLV_NUMERO_2 0.0 else51_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/ZERO'
    JR endif51
  else51_1:
    JR_NEQF VLV_NUMERO_2 1.0 else51_2
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/One'
    JR endif51
  else51_2:
    JR_NEQF VLV_NUMERO_2 2.0 else51_3
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Two'
    JR endif51
  else51_3:
    JR_NEQF VLV_NUMERO_2 3.0 else51_4
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Three'
    JR endif51
  else51_4:
    JR_NEQF VLV_NUMERO_2 4.0 else51_5
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Four'
    JR endif51
  else51_5:
    JR_NEQF VLV_NUMERO_2 5.0 else51_6
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Five'
    JR endif51
  else51_6:
    JR_NEQF VLV_NUMERO_2 6.0 else51_7
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Six'
    JR endif51
  else51_7:
    JR_NEQF VLV_NUMERO_2 7.0 else51_8
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Seven'
    JR endif51
  else51_8:
    JR_NEQF VLV_NUMERO_2 8.0 else51_9
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Eight'
    JR endif51
  else51_9:
    JR_NEQF VLV_NUMERO_2 9.0 else51_10
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Nine'
    JR endif51
  else51_10:
    JR_NEQF VLV_NUMERO_2 10.0 else51_11
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Ten'
  else51_11:
  endif51:
    SOUND_READY
RETSUB_F_GRITARNUMERO_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GRITARNUMERO_1:
SUB_F_BAJARCUADRO_0:
    DATA32 tmp64
    CALL GETANDINC32 RUNCOUNTER_F_SAFETYTIMERBRAZO_0 1  RUNCOUNTER_F_SAFETYTIMERBRAZO_0 tmp64
    JR_NEQ32 0 tmp64 alreadylaunched64
    OBJECT_START TF_SAFETYTIMERBRAZO_0
  alreadylaunched64:
    DATA32 milliseconds65
	MOVEF_32 1300.0 milliseconds65
	DATA32 timer65
	TIMER_WAIT milliseconds65 timer65
	TIMER_READY timer65
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 0
    MOVEF_F 30.0 VLV_VELOCIDAD_10
    MOVEF_F -730.0 VLV_ENCODER_10
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB67:
RETSUB_F_BAJARCUADRO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BAJARCUADRO_0:
SUB_F_CODIGO_2:
    STRINGS DUPLICATE '' VLV_CODIGO_4
    CALL ARRAYGET_FLOAT 2.0 VLV_AUX_4 VLV_MARKING_4
    CALL ARRAYGET_FLOAT 3.0 F.0 VLV_MARKING_4
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_MARKING_4
    CALL ARRAYSTORE_FLOAT 3.0 VLV_AUX_4 VLV_MARKING_4
    MOVEF_F 0.0 VLV_I_4
  for72:
    JR_GTF VLV_I_4 4.0 endfor72
  forbody72:
    CALL ARRAYGET_FLOAT VLV_I_4 F.0 VLV_MARKING_4
    JR_NEQF F.0 2.0 else73_1
    CALL TEXT.APPEND VLV_CODIGO_4 'Z' VLV_CODIGO_4
    JR endif73
  else73_1:
    CALL ARRAYGET_FLOAT VLV_I_4 F.0 VLV_MARKING_4
    JR_NEQF F.0 3.0 else73_2
    CALL TEXT.APPEND VLV_CODIGO_4 'V' VLV_CODIGO_4
    JR endif73
  else73_2:
    CALL ARRAYGET_FLOAT VLV_I_4 F.0 VLV_MARKING_4
    JR_NEQF F.0 4.0 else73_3
    CALL TEXT.APPEND VLV_CODIGO_4 'A' VLV_CODIGO_4
    JR endif73
  else73_3:
    CALL ARRAYGET_FLOAT VLV_I_4 F.0 VLV_MARKING_4
    JR_NEQF F.0 5.0 else73_4
    CALL TEXT.APPEND VLV_CODIGO_4 'R' VLV_CODIGO_4
  else73_4:
  endif73:
    ADDF VLV_I_4 1.0 VLV_I_4
    JR_LTEQF VLV_I_4 4.0 forbody72
  endfor72:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL TEXT.APPEND 'Codigo: ' VLV_CODIGO_4 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_CODIGO_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CODIGO_2:
SUB_F_ROTAR_1:
    MATH ABS VLV_GRADOS_5 F.0
    DATAF tmpf89
    DATA8 flag89
    DIVF VLV_GRADOS_5 F.0 tmpf89
    CP_EQF 0.0 F.0 flag89
    SELECTF flag89 0.0 tmpf89 VLV_SIGNO_5

    WRITE32 ENDSUB_F_BAJARCUADRO_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BAJARCUADRO_0
CALLSUB90:
    DATA32 milliseconds91
	MOVEF_32 100.0 milliseconds91
	DATA32 timer91
	TIMER_WAIT milliseconds91 timer91
	TIMER_READY timer91
    MULF 34.0 VLV_SIGNO_5 F.0
    MATH ABS VLV_GRADOS_5 F.2
    SUBF F.2 4.0 F.1
    CALL MOTOR.SCHEDULE 'D' F.0 0.0 F.1 0.0 'True' 

	DATA8 layer95
	DATA8 nos95
	DATA8 busy95
	CALL MOTORDECODEPORTSDESCRIPTOR 'D' layer95 nos95
	JR_EQ8 0 nos95 motornotbusy95
  motorwaiting95:
	OUTPUT_TEST layer95 nos95 busy95
	JR_EQ8 busy95 0 motornotbusy95
	SLEEP
	JR motorwaiting95
  motornotbusy95:
    DATA32 milliseconds96
	MOVEF_32 200.0 milliseconds96
	DATA32 timer96
	TIMER_WAIT milliseconds96 timer96
	TIMER_READY timer96
    MOVEF_F 30.0 VLV_VELOCIDAD_10
    MOVEF_F -360.0 VLV_ENCODER_10
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB97:
RETSUB_F_ROTAR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ROTAR_1:
SUB_F_ORDENARBLOQUES_1:
    ARRAY COPY VLV_MARKING_6 VLV_MARKING_4
    WRITE32 ENDSUB_F_CODIGO_2:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CODIGO_2
CALLSUB98:
    STRINGS DUPLICATE VLV_CODIGO_4 VLV_CODIGO_6
    CALL EQ_STRING VLV_CODIGO_6 'AZRV' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_1
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB101:
    JR endif99
  else99_1:
    CALL EQ_STRING VLV_CODIGO_6 'VRAZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_2
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB103:
    JR endif99
  else99_2:
    CALL EQ_STRING VLV_CODIGO_6 'VZRA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_3
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB105:
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB106:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB107:
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB108:
    JR endif99
  else99_3:
    CALL EQ_STRING VLV_CODIGO_6 'VZAR' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_4
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB110:
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB111:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB112:
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB113:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB114:
    JR endif99
  else99_4:
    CALL EQ_STRING VLV_CODIGO_6 'VARZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_5
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB116:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB117:
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB118:
    JR endif99
  else99_5:
    CALL EQ_STRING VLV_CODIGO_6 'VAZR' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_6
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB120:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB121:
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB122:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB123:
    JR endif99
  else99_6:
    CALL EQ_STRING VLV_CODIGO_6 'RVZA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_7
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB125:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB126:
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB127:
    JR endif99
  else99_7:
    CALL EQ_STRING VLV_CODIGO_6 'RVAZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_8
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB129:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB130:
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB131:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB132:
    JR endif99
  else99_8:
    CALL EQ_STRING VLV_CODIGO_6 'RZVA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_9
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB134:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB135:
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB136:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB137:
    JR endif99
  else99_9:
    CALL EQ_STRING VLV_CODIGO_6 'RZAV' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_10
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB139:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB140:
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB141:
    JR endif99
  else99_10:
    CALL EQ_STRING VLV_CODIGO_6 'RAVZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_11
    MOVEF_F 90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB143:
    JR endif99
  else99_11:
    CALL EQ_STRING VLV_CODIGO_6 'RAZV' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_12
    MOVEF_F 90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB145:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB146:
    JR endif99
  else99_12:
    CALL EQ_STRING VLV_CODIGO_6 'ZVAR' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_13
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB148:
    JR endif99
  else99_13:
    CALL EQ_STRING VLV_CODIGO_6 'ZVRA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_14
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB150:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB151:
    JR endif99
  else99_14:
    CALL EQ_STRING VLV_CODIGO_6 'ZRVA' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_15
    MOVEF_F 90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB153:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB154:
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB155:
    JR endif99
  else99_15:
    CALL EQ_STRING VLV_CODIGO_6 'ZRAV' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_16
    MOVEF_F 90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB157:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB158:
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB159:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB160:
    JR endif99
  else99_16:
    CALL EQ_STRING VLV_CODIGO_6 'ZAVR' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_17
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB162:
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB163:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB164:
    JR endif99
  else99_17:
    CALL EQ_STRING VLV_CODIGO_6 'ZARV' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_18
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB166:
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB167:
    JR endif99
  else99_18:
    CALL EQ_STRING VLV_CODIGO_6 'AVRZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_19
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB169:
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB170:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB171:
    JR endif99
  else99_19:
    CALL EQ_STRING VLV_CODIGO_6 'AVZR' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_20
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB173:
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB174:
    JR endif99
  else99_20:
    CALL EQ_STRING VLV_CODIGO_6 'ARVZ' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_21
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB176:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB177:
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB178:
    JR endif99
  else99_21:
    CALL EQ_STRING VLV_CODIGO_6 'ARZV' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_22
    MOVEF_F -90.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB180:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB181:
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB182:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB183:
    JR endif99
  else99_22:
    CALL EQ_STRING VLV_CODIGO_6 'AZVR' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else99_23
    MOVEF_F 180.0 VLV_GRADOS_5
    WRITE32 ENDSUB_F_ROTAR_1:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTAR_1
CALLSUB185:
    WRITE32 ENDSUB_F_SWAP_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SWAP_0
CALLSUB186:
    JR endif99
  else99_23:
  else99_24:
  endif99:
    MOVEF_F -20.0 VLV_VELOCIDAD_26
    MOVEF_F 8.0 VLV_DISTANCIA_26
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB187:
    MOVEF_F 15.0 VLV_VELOCIDAD1_20
    MOVEF_F -15.0 VLV_VELOCIDAD2_20
    MOVEF_F 185.0 VLV_GRADOS_20
    WRITE32 ENDSUB_M_GIRO_GRADOS_3:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_GIRO_GRADOS_3
CALLSUB188:
    MOVEF_F -30.0 VLV_VELOCIDAD_26
    MOVEF_F 0.0 VLV_DISTANCIA_26
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB189:
    MOVEF_F 20.0 VLV_VELOCIDAD_10
    MOVEF_F 24.0 VLV_ENCODER_10
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB190:
RETSUB_F_ORDENARBLOQUES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ORDENARBLOQUES_1:
SUB_F_SWAP_0:
    MOVEF_F -15.0 VLV_VELOCIDAD_26
    MOVEF_F 7.5 VLV_DISTANCIA_26
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB191:
    WRITE32 ENDSUB_F_BAJARCUADRO_0:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BAJARCUADRO_0
CALLSUB192:
    MOVEF_F -15.0 VLV_VELOCIDAD_26
    MOVEF_F 2.0 VLV_DISTANCIA_26
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB193:
    CALL MOTOR.SCHEDULE 'D' 50.0 0.0 180.0 0.0 'True' 

	DATA8 layer194
	DATA8 nos194
	DATA8 busy194
	CALL MOTORDECODEPORTSDESCRIPTOR 'D' layer194 nos194
	JR_EQ8 0 nos194 motornotbusy194
  motorwaiting194:
	OUTPUT_TEST layer194 nos194 busy194
	JR_EQ8 busy194 0 motornotbusy194
	SLEEP
	JR motorwaiting194
  motornotbusy194:
    MOVEF_F 30.0 VLV_VELOCIDAD_10
    MOVEF_F -360.0 VLV_ENCODER_10
    WRITE32 ENDSUB_M_BRAZO_AENCODER_2:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_BRAZO_AENCODER_2
CALLSUB195:
    MOVEF_F 15.0 VLV_VELOCIDAD_26
    MOVEF_F 15.0 VLV_DISTANCIA_26
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB196:
    MOVEF_F -15.0 VLV_VELOCIDAD_26
    MOVEF_F 5.0 VLV_DISTANCIA_26
    WRITE32 ENDSUB_M_RECTO_ENCODER_2:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_RECTO_ENCODER_2
CALLSUB197:
RETSUB_F_SWAP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SWAP_0:
SUB_F_S_0:
    UI_BUTTON FLUSH
    UI_BUTTON WAIT_FOR_PRESS
RETSUB_F_S_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_S_0:
SUB_M_BRAZO_ATIMER_2:
    TIMER_READ timeMC1
  while201:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_TIMER_9 endwhile201
  whilebody201:
    MOVEF_8 VLV_VELOCIDAD_9 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_TIMER_9 whilebody201
  endwhile201:
    CALL MOTOR.STOP 'A' 'True'
RETSUB_M_BRAZO_ATIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_BRAZO_ATIMER_2:
SUB_M_BRAZO_AENCODER_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_ENCODER_10 F.0 VLV_ENCDIFF_10
    MATH ABS VLV_ENCDIFF_10 F.0
    DATAF tmpf209
    DATA8 flag209
    DIVF VLV_ENCDIFF_10 F.0 tmpf209
    CP_EQF 0.0 F.0 flag209
    SELECTF flag209 0.0 tmpf209 VLV_SIGNO_10

    JR_EQF VLV_ENCDIFF_10 0.0 else210_1
    MULF VLV_VELOCIDAD_10 VLV_SIGNO_10 F.0
    MATH ABS VLV_ENCDIFF_10 F.1
    CALL MOTOR.SCHEDULE 'A' F.0 0.0 F.1 0.0 'True' 

	DATA8 layer213
	DATA8 nos213
	DATA8 busy213
	CALL MOTORDECODEPORTSDESCRIPTOR 'A' layer213 nos213
	JR_EQ8 0 nos213 motornotbusy213
  motorwaiting213:
	OUTPUT_TEST layer213 nos213 busy213
	JR_EQ8 busy213 0 motornotbusy213
	SLEEP
	JR motorwaiting213
  motornotbusy213:
  else210_1:
  endif210:
    CALL MOTOR.STOP 'A' 'True'
RETSUB_M_BRAZO_AENCODER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_BRAZO_AENCODER_2:
SUB_M_SIGUELINEAS_ENCODER14F_2:
    MULF VLV_VELOCIDAD_11 1.0 VLV_VELOCIDAD_11
    MOVEF_F 50.0 VLV_LECTURA1_11
    MOVEF_F 50.0 VLV_LECTURA3_11
    MOVEF_F 50.0 VLV_LECTURA4_11
    MATH POW VLV_VELOCIDAD_11 0.833333333333333 F.0
    DATAF tmpf217
    DATA8 flag217
    DIVF F.0 210.0 tmpf217
    CP_EQF 0.0 210.0 flag217
    SELECTF flag217 0.0 tmpf217 VLV_KP_11

    MULF VLV_KP_11 50.0 VLV_KD_11
    MOVEF_F 0.0 VLV_ERROR_11
    MOVEF_F 0.0 VLV_OLDERROR_11
    MOVEF_F 0.0 VLV_U_11
    MATH ABS VLV_VELOCIDAD_11 F.0
    DATAF tmpf220
    DATA8 flag220
    DIVF VLV_VELOCIDAD_11 F.0 tmpf220
    CP_EQF 0.0 F.0 flag220
    SELECTF flag220 0.0 tmpf220 VLV_SENTIDO_11

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf223
    DATA8 flag223
    DIVF VLV_ENCODER_11 F.1 tmpf223
    CP_EQF 0.0 F.1 flag223
    SELECTF flag223 0.0 tmpf223 F.0

    MULF F.0 360.0 VLV_ENCODER_11
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_11
    MOVEF_F 0.0 VLV_ENCODERC_11
    DATAF tmpf226
    DATA8 flag226
    DIVF VLV_VELOCIDAD_11 10.0 tmpf226
    CP_EQF 0.0 10.0 flag226
    SELECTF flag226 0.0 tmpf226 F.2

    DATAF tmpf227
    DATA8 flag227
    DIVF 11286.0 F.2 tmpf227
    CP_EQF 0.0 F.2 flag227
    SELECTF flag227 0.0 tmpf227 F.1

    DATAF tmpf228
    DATA8 flag228
    DIVF VLV_ENCODER_11 100.0 tmpf228
    CP_EQF 0.0 100.0 flag228
    SELECTF flag228 0.0 tmpf228 F.2

    MULF F.1 F.2 F.0
    DATAF tmpf230
    DATA8 flag230
    DIVF VPR_SIGUELINEAS_DIAMETRO 6.24 tmpf230
    CP_EQF 0.0 6.24 flag230
    SELECTF flag230 0.0 tmpf230 F.1

    DATAF tmpf231
    DATA8 flag231
    DIVF F.0 F.1 tmpf231
    CP_EQF 0.0 F.1 flag231
    SELECTF flag231 0.0 tmpf231 VLV_SAFETYTIMER_11

    TIMER_READ timeMC4
  while233:
    MATH ABS VLV_ENCODERC_11 F.0
    JR_GTEQF F.0 VLV_ENCODER_11 endwhile233
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_11 2000.0 F.1
    JR_GTEQF F.0 F.1 endwhile233
  whilebody233:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_11 VLV_ENCODERC_11
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf241
    DATA8 flag241
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf241
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag241
    SELECTF flag241 0.0 tmpf241 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_11
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf246
    DATA8 flag246
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf246
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag246
    SELECTF flag246 0.0 tmpf246 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_11
    SUBF VLV_LECTURA1_11 VLV_LECTURA4_11 F.1
    MULF F.1 VLV_SENTIDO_11 F.0
    MULF F.0 1.0 VLV_ERROR_11
    MULF VLV_ERROR_11 VLV_KP_11 F.0
    SUBF VLV_ERROR_11 VLV_OLDERROR_11 F.2
    MULF F.2 VLV_KD_11 F.1
    ADDF F.0 F.1 VLV_U_11
    ADDF VLV_VELOCIDAD_11 VLV_U_11 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_11 VLV_U_11 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_11 VLV_OLDERROR_11
    MATH ABS VLV_ENCODERC_11 F.0
    JR_GTEQF F.0 VLV_ENCODER_11 and260
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_11 2000.0 F.1
    JR_LTF F.0 F.1 whilebody233
  and260:
  endwhile233:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_11 2000.0 F.1
    JR_LTEQF F.0 F.1 else264_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/General alert'
    SOUND_READY
  else264_1:
  endif264:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_SIGUELINEAS_ENCODER14F_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER14F_2:
SUB_M_SIGUELINEAS_CRUCE14_1:
    MULF VLV_VELOCIDAD_12 1.0 VLV_VELOCIDAD_12
    MOVEF_F 50.0 VLV_LECTURA1_12
    MOVEF_F 50.0 VLV_LECTURA3_12
    MOVEF_F 50.0 VLV_LECTURA4_12
    MATH POW VLV_VELOCIDAD_12 0.833333333333333 F.0
    DATAF tmpf272
    DATA8 flag272
    DIVF F.0 210.0 tmpf272
    CP_EQF 0.0 210.0 flag272
    SELECTF flag272 0.0 tmpf272 VLV_KP_12

    MULF VLV_KP_12 50.0 VLV_KD_12
    MOVEF_F 0.0 VLV_ERROR_12
    MOVEF_F 0.0 VLV_OLDERROR_12
    MOVEF_F 0.0 VLV_U_12
    MATH ABS VLV_VELOCIDAD_12 F.0
    DATAF tmpf275
    DATA8 flag275
    DIVF VLV_VELOCIDAD_12 F.0 tmpf275
    CP_EQF 0.0 F.0 flag275
    SELECTF flag275 0.0 tmpf275 VLV_SENTIDO_12

  while276:
    JR_GTF VLV_LECTURA1_12 15.0 or277
    JR_LTEQF VLV_LECTURA4_12 15.0 endwhile276
  or277:
  whilebody276:
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf280
    DATA8 flag280
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf280
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag280
    SELECTF flag280 0.0 tmpf280 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_12
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf285
    DATA8 flag285
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf285
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag285
    SELECTF flag285 0.0 tmpf285 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_12
    SUBF VLV_LECTURA1_12 VLV_LECTURA4_12 F.1
    MULF F.1 VLV_SENTIDO_12 F.0
    MULF F.0 1.0 VLV_ERROR_12
    MULF VLV_ERROR_12 VLV_KP_12 F.0
    SUBF VLV_ERROR_12 VLV_OLDERROR_12 F.2
    MULF F.2 VLV_KD_12 F.1
    ADDF F.0 F.1 VLV_U_12
    ADDF VLV_VELOCIDAD_12 VLV_U_12 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_12 VLV_U_12 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_12 VLV_OLDERROR_12
    JR_GTF VLV_LECTURA1_12 15.0 whilebody276
    JR_GTF VLV_LECTURA4_12 15.0 whilebody276
  endwhile276:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_CRUCE14_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_CRUCE14_1:
SUB_M_SIGUELINEAS_ENCODER31F_2:
    MULF VLV_VELOCIDAD_13 1.0 VLV_VELOCIDAD_13
    MOVEF_F 50.0 VLV_LECTURA1_13
    MOVEF_F 50.0 VLV_LECTURA3_13
    MOVEF_F 50.0 VLV_LECTURA4_13
    MATH POW VLV_VELOCIDAD_13 0.833333333333333 F.0
    DATAF tmpf302
    DATA8 flag302
    DIVF F.0 210.0 tmpf302
    CP_EQF 0.0 210.0 flag302
    SELECTF flag302 0.0 tmpf302 VLV_KP_13

    MULF VLV_KP_13 50.0 VLV_KD_13
    MOVEF_F 0.0 VLV_ERROR_13
    MOVEF_F 0.0 VLV_OLDERROR_13
    MOVEF_F 0.0 VLV_U_13
    MATH ABS VLV_VELOCIDAD_13 F.0
    DATAF tmpf305
    DATA8 flag305
    DIVF VLV_VELOCIDAD_13 F.0 tmpf305
    CP_EQF 0.0 F.0 flag305
    SELECTF flag305 0.0 tmpf305 VLV_SENTIDO_13

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf308
    DATA8 flag308
    DIVF VLV_ENCODER_13 F.1 tmpf308
    CP_EQF 0.0 F.1 flag308
    SELECTF flag308 0.0 tmpf308 F.0

    MULF F.0 360.0 VLV_ENCODER_13
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_13
    MOVEF_F 0.0 VLV_ENCODERC_13
    DATAF tmpf311
    DATA8 flag311
    DIVF VLV_VELOCIDAD_13 10.0 tmpf311
    CP_EQF 0.0 10.0 flag311
    SELECTF flag311 0.0 tmpf311 F.2

    DATAF tmpf312
    DATA8 flag312
    DIVF 11286.0 F.2 tmpf312
    CP_EQF 0.0 F.2 flag312
    SELECTF flag312 0.0 tmpf312 F.1

    DATAF tmpf313
    DATA8 flag313
    DIVF VLV_ENCODER_13 100.0 tmpf313
    CP_EQF 0.0 100.0 flag313
    SELECTF flag313 0.0 tmpf313 F.2

    MULF F.1 F.2 F.0
    DATAF tmpf315
    DATA8 flag315
    DIVF VPR_SIGUELINEAS_DIAMETRO 6.24 tmpf315
    CP_EQF 0.0 6.24 flag315
    SELECTF flag315 0.0 tmpf315 F.1

    DATAF tmpf316
    DATA8 flag316
    DIVF F.0 F.1 tmpf316
    CP_EQF 0.0 F.1 flag316
    SELECTF flag316 0.0 tmpf316 VLV_SAFETYTIMER_13

    TIMER_READ timeMC4
  while318:
    MATH ABS VLV_ENCODERC_13 F.0
    JR_GTEQF F.0 VLV_ENCODER_13 endwhile318
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_13 2000.0 F.1
    JR_GTEQF F.0 F.1 endwhile318
  whilebody318:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_13 VLV_ENCODERC_13
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf326
    DATA8 flag326
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf326
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag326
    SELECTF flag326 0.0 tmpf326 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_13
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO3 F.1
    DATAF tmpf331
    DATA8 flag331
    DIVF F.1 VPR_SIGUELINEAS_BLANCO3 tmpf331
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO3 flag331
    SELECTF flag331 0.0 tmpf331 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_13
    SUBF VLV_LECTURA3_13 VLV_LECTURA1_13 F.1
    MULF F.1 VLV_SENTIDO_13 F.0
    MULF F.0 1.0 VLV_ERROR_13
    MULF VLV_ERROR_13 VLV_KP_13 F.0
    SUBF VLV_ERROR_13 VLV_OLDERROR_13 F.2
    MULF F.2 VLV_KD_13 F.1
    ADDF F.0 F.1 VLV_U_13
    ADDF VLV_VELOCIDAD_13 VLV_U_13 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_13 VLV_U_13 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_13 VLV_OLDERROR_13
    MATH ABS VLV_ENCODERC_13 F.0
    JR_GTEQF F.0 VLV_ENCODER_13 and345
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_13 2000.0 F.1
    JR_LTF F.0 F.1 whilebody318
  and345:
  endwhile318:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_13 2000.0 F.1
    JR_LTEQF F.0 F.1 else349_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/General alert'
    SOUND_READY
  else349_1:
  endif349:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_SIGUELINEAS_ENCODER31F_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER31F_2:
SUB_M_SIGUELINEAS_ENCODER14_2:
    MULF VLV_VELOCIDAD_14 1.0 VLV_VELOCIDAD_14
    MOVEF_F 50.0 VLV_LECTURA1_14
    MOVEF_F 50.0 VLV_LECTURA3_14
    MOVEF_F 50.0 VLV_LECTURA4_14
    MATH POW VLV_VELOCIDAD_14 0.833333333333333 F.0
    DATAF tmpf357
    DATA8 flag357
    DIVF F.0 210.0 tmpf357
    CP_EQF 0.0 210.0 flag357
    SELECTF flag357 0.0 tmpf357 VLV_KP_14

    MULF VLV_KP_14 50.0 VLV_KD_14
    MOVEF_F 0.0 VLV_ERROR_14
    MOVEF_F 0.0 VLV_OLDERROR_14
    MOVEF_F 0.0 VLV_U_14
    MATH ABS VLV_VELOCIDAD_14 F.0
    DATAF tmpf360
    DATA8 flag360
    DIVF VLV_VELOCIDAD_14 F.0 tmpf360
    CP_EQF 0.0 F.0 flag360
    SELECTF flag360 0.0 tmpf360 VLV_SENTIDO_14

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf363
    DATA8 flag363
    DIVF VLV_ENCODER_14 F.1 tmpf363
    CP_EQF 0.0 F.1 flag363
    SELECTF flag363 0.0 tmpf363 F.0

    MULF F.0 360.0 VLV_ENCODER_14
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_14
    MOVEF_F 0.0 VLV_ENCODERC_14
    DATAF tmpf366
    DATA8 flag366
    DIVF VLV_VELOCIDAD_14 10.0 tmpf366
    CP_EQF 0.0 10.0 flag366
    SELECTF flag366 0.0 tmpf366 F.2

    DATAF tmpf367
    DATA8 flag367
    DIVF 11286.0 F.2 tmpf367
    CP_EQF 0.0 F.2 flag367
    SELECTF flag367 0.0 tmpf367 F.1

    DATAF tmpf368
    DATA8 flag368
    DIVF VLV_ENCODER_14 100.0 tmpf368
    CP_EQF 0.0 100.0 flag368
    SELECTF flag368 0.0 tmpf368 F.2

    MULF F.1 F.2 F.0
    DATAF tmpf370
    DATA8 flag370
    DIVF VPR_SIGUELINEAS_DIAMETRO 6.24 tmpf370
    CP_EQF 0.0 6.24 flag370
    SELECTF flag370 0.0 tmpf370 F.1

    DATAF tmpf371
    DATA8 flag371
    DIVF F.0 F.1 tmpf371
    CP_EQF 0.0 F.1 flag371
    SELECTF flag371 0.0 tmpf371 VLV_SAFETYTIMER_14

    TIMER_READ timeMC4
  while373:
    MATH ABS VLV_ENCODERC_14 F.0
    JR_GTEQF F.0 VLV_ENCODER_14 endwhile373
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_14 2000.0 F.1
    JR_GTEQF F.0 F.1 endwhile373
  whilebody373:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_14 VLV_ENCODERC_14
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf381
    DATA8 flag381
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf381
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag381
    SELECTF flag381 0.0 tmpf381 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_14
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf386
    DATA8 flag386
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf386
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag386
    SELECTF flag386 0.0 tmpf386 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_14
    SUBF VLV_LECTURA1_14 VLV_LECTURA4_14 F.1
    MULF F.1 VLV_SENTIDO_14 F.0
    MULF F.0 1.0 VLV_ERROR_14
    MULF VLV_ERROR_14 VLV_KP_14 F.0
    SUBF VLV_ERROR_14 VLV_OLDERROR_14 F.2
    MULF F.2 VLV_KD_14 F.1
    ADDF F.0 F.1 VLV_U_14
    ADDF VLV_VELOCIDAD_14 VLV_U_14 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_14 VLV_U_14 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_14 VLV_OLDERROR_14
    MATH ABS VLV_ENCODERC_14 F.0
    JR_GTEQF F.0 VLV_ENCODER_14 and400
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_14 2000.0 F.1
    JR_LTF F.0 F.1 whilebody373
  and400:
  endwhile373:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_14 2000.0 F.1
    JR_LTEQF F.0 F.1 else404_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/General alert'
    SOUND_READY
  else404_1:
  endif404:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_ENCODER14_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER14_2:
SUB_M_SIGUELINEAS_CRUCE_EXTERNO_2:
    MULF VLV_VELOCIDAD_15 1.0 VLV_VELOCIDAD_15
    MOVEF_F 50.0 VLV_LECTURA1_15
    MOVEF_F 50.0 VLV_LECTURA3_15
    MOVEF_F 50.0 VLV_LECTURA4_15
    MATH POW VLV_VELOCIDAD_15 0.833333333333333 F.0
    DATAF tmpf412
    DATA8 flag412
    DIVF F.0 210.0 tmpf412
    CP_EQF 0.0 210.0 flag412
    SELECTF flag412 0.0 tmpf412 VLV_KP_15

    MULF VLV_KP_15 50.0 VLV_KD_15
    MOVEF_F 0.0 VLV_ERROR_15
    MOVEF_F 0.0 VLV_OLDERROR_15
    MOVEF_F 0.0 VLV_U_15
    MATH ABS VLV_VELOCIDAD_15 F.0
    DATAF tmpf415
    DATA8 flag415
    DIVF VLV_VELOCIDAD_15 F.0 tmpf415
    CP_EQF 0.0 F.0 flag415
    SELECTF flag415 0.0 tmpf415 VLV_SENTIDO_15

    MOVEF_F 50.0 VLV_LECTURA_15
  while416:
    JR_LTEQF VLV_LECTURA_15 15.0 endwhile416
  whilebody416:
    JR_NEQF VLV_READER_15 3.0 else417_1
    MOVEF_F VLV_LECTURA3_15 VLV_LECTURA_15
    MOVEF_F VLV_LECTURA1_15 VLV_LECTURAIZQ_15
    MOVEF_F VLV_LECTURA4_15 VLV_LECTURADCH_15
    JR endif417
  else417_1:
    MOVEF_F VLV_LECTURA4_15 VLV_LECTURA_15
    MOVEF_F VLV_LECTURA3_15 VLV_LECTURAIZQ_15
    MOVEF_F VLV_LECTURA1_15 VLV_LECTURADCH_15
  else417_2:
  endif417:
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf420
    DATA8 flag420
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf420
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag420
    SELECTF flag420 0.0 tmpf420 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_15
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO3 F.1
    DATAF tmpf425
    DATA8 flag425
    DIVF F.1 VPR_SIGUELINEAS_BLANCO3 tmpf425
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO3 flag425
    SELECTF flag425 0.0 tmpf425 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_15
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf430
    DATA8 flag430
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf430
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag430
    SELECTF flag430 0.0 tmpf430 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_15
    SUBF VLV_LECTURAIZQ_15 VLV_LECTURADCH_15 F.1
    MULF F.1 VLV_SENTIDO_15 F.0
    MULF F.0 1.0 VLV_ERROR_15
    MULF VLV_ERROR_15 VLV_KP_15 F.0
    SUBF VLV_ERROR_15 VLV_OLDERROR_15 F.2
    MULF F.2 VLV_KD_15 F.1
    ADDF F.0 F.1 VLV_U_15
    ADDF VLV_VELOCIDAD_15 VLV_U_15 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_15 VLV_U_15 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_15 VLV_OLDERROR_15
    JR_GTF VLV_LECTURA_15 15.0 whilebody416
  endwhile416:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_CRUCE_EXTERNO_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_CRUCE_EXTERNO_2:
SUB_M_SIGUELINEAS_CRUCE_EXTERNOF_2:
    MULF VLV_VELOCIDAD_16 1.0 VLV_VELOCIDAD_16
    MOVEF_F 50.0 VLV_LECTURA1_16
    MOVEF_F 50.0 VLV_LECTURA3_16
    MOVEF_F 50.0 VLV_LECTURA4_16
    MATH POW VLV_VELOCIDAD_16 0.833333333333333 F.0
    DATAF tmpf447
    DATA8 flag447
    DIVF F.0 210.0 tmpf447
    CP_EQF 0.0 210.0 flag447
    SELECTF flag447 0.0 tmpf447 VLV_KP_16

    MULF VLV_KP_16 50.0 VLV_KD_16
    MOVEF_F 0.0 VLV_ERROR_16
    MOVEF_F 0.0 VLV_OLDERROR_16
    MOVEF_F 0.0 VLV_U_16
    MATH ABS VLV_VELOCIDAD_16 F.0
    DATAF tmpf450
    DATA8 flag450
    DIVF VLV_VELOCIDAD_16 F.0 tmpf450
    CP_EQF 0.0 F.0 flag450
    SELECTF flag450 0.0 tmpf450 VLV_SENTIDO_16

    MOVEF_F 50.0 VLV_LECTURA_16
  while451:
    JR_LTEQF VLV_LECTURA_16 15.0 endwhile451
  whilebody451:
    JR_NEQF VLV_READER_16 3.0 else452_1
    MOVEF_F VLV_LECTURA3_16 VLV_LECTURA_16
    MOVEF_F VLV_LECTURA1_16 VLV_LECTURAIZQ_16
    MOVEF_F VLV_LECTURA4_16 VLV_LECTURADCH_16
    JR endif452
  else452_1:
    MOVEF_F VLV_LECTURA4_16 VLV_LECTURA_16
    MOVEF_F VLV_LECTURA3_16 VLV_LECTURAIZQ_16
    MOVEF_F VLV_LECTURA1_16 VLV_LECTURADCH_16
  else452_2:
  endif452:
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf455
    DATA8 flag455
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf455
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag455
    SELECTF flag455 0.0 tmpf455 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_16
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO3 F.1
    DATAF tmpf460
    DATA8 flag460
    DIVF F.1 VPR_SIGUELINEAS_BLANCO3 tmpf460
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO3 flag460
    SELECTF flag460 0.0 tmpf460 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_16
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO4 F.1
    DATAF tmpf465
    DATA8 flag465
    DIVF F.1 VPR_SIGUELINEAS_BLANCO4 tmpf465
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO4 flag465
    SELECTF flag465 0.0 tmpf465 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO4 F.1
    MULF F.0 F.1 VLV_LECTURA4_16
    SUBF VLV_LECTURAIZQ_16 VLV_LECTURADCH_16 F.1
    MULF F.1 VLV_SENTIDO_16 F.0
    MULF F.0 1.0 VLV_ERROR_16
    MULF VLV_ERROR_16 VLV_KP_16 F.0
    SUBF VLV_ERROR_16 VLV_OLDERROR_16 F.2
    MULF F.2 VLV_KD_16 F.1
    ADDF F.0 F.1 VLV_U_16
    ADDF VLV_VELOCIDAD_16 VLV_U_16 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_16 VLV_U_16 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_16 VLV_OLDERROR_16
    JR_GTF VLV_LECTURA_16 15.0 whilebody451
  endwhile451:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_SIGUELINEAS_CRUCE_EXTERNOF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_CRUCE_EXTERNOF_2:
SUB_M_SIGUELINEAS_ENCODER31_2:
    MULF VLV_VELOCIDAD_17 1.0 VLV_VELOCIDAD_17
    MOVEF_F 50.0 VLV_LECTURA1_17
    MOVEF_F 50.0 VLV_LECTURA3_17
    MOVEF_F 50.0 VLV_LECTURA4_17
    MATH POW VLV_VELOCIDAD_17 0.833333333333333 F.0
    DATAF tmpf482
    DATA8 flag482
    DIVF F.0 210.0 tmpf482
    CP_EQF 0.0 210.0 flag482
    SELECTF flag482 0.0 tmpf482 VLV_KP_17

    MULF VLV_KP_17 50.0 VLV_KD_17
    MOVEF_F 0.0 VLV_ERROR_17
    MOVEF_F 0.0 VLV_OLDERROR_17
    MOVEF_F 0.0 VLV_U_17
    MATH ABS VLV_VELOCIDAD_17 F.0
    DATAF tmpf485
    DATA8 flag485
    DIVF VLV_VELOCIDAD_17 F.0 tmpf485
    CP_EQF 0.0 F.0 flag485
    SELECTF flag485 0.0 tmpf485 VLV_SENTIDO_17

    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_SIGUELINEAS_DIAMETRO F.2 F.1
    DATAF tmpf488
    DATA8 flag488
    DIVF VLV_ENCODER_17 F.1 tmpf488
    CP_EQF 0.0 F.1 flag488
    SELECTF flag488 0.0 tmpf488 F.0

    MULF F.0 360.0 VLV_ENCODER_17
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VLV_STARTC_17
    MOVEF_F 0.0 VLV_ENCODERC_17
    DATAF tmpf491
    DATA8 flag491
    DIVF VLV_VELOCIDAD_17 10.0 tmpf491
    CP_EQF 0.0 10.0 flag491
    SELECTF flag491 0.0 tmpf491 F.2

    DATAF tmpf492
    DATA8 flag492
    DIVF 11286.0 F.2 tmpf492
    CP_EQF 0.0 F.2 flag492
    SELECTF flag492 0.0 tmpf492 F.1

    DATAF tmpf493
    DATA8 flag493
    DIVF VLV_ENCODER_17 100.0 tmpf493
    CP_EQF 0.0 100.0 flag493
    SELECTF flag493 0.0 tmpf493 F.2

    MULF F.1 F.2 F.0
    DATAF tmpf495
    DATA8 flag495
    DIVF VPR_SIGUELINEAS_DIAMETRO 6.24 tmpf495
    CP_EQF 0.0 6.24 flag495
    SELECTF flag495 0.0 tmpf495 F.1

    DATAF tmpf496
    DATA8 flag496
    DIVF F.0 F.1 tmpf496
    CP_EQF 0.0 F.1 flag496
    SELECTF flag496 0.0 tmpf496 VLV_SAFETYTIMER_17

    TIMER_READ timeMC4
  while498:
    MATH ABS VLV_ENCODERC_17 F.0
    JR_GTEQF F.0 VLV_ENCODER_17 endwhile498
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_17 2000.0 F.1
    JR_GTEQF F.0 F.1 endwhile498
  whilebody498:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    SUBF F.0 VLV_STARTC_17 VLV_ENCODERC_17
    CALL SENSOR.READPERCENT 1.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO1 F.1
    DATAF tmpf506
    DATA8 flag506
    DIVF F.1 VPR_SIGUELINEAS_BLANCO1 tmpf506
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO1 flag506
    SELECTF flag506 0.0 tmpf506 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO1 F.1
    MULF F.0 F.1 VLV_LECTURA1_17
    CALL SENSOR.READPERCENT 3.0 F.2
    SUBF F.2 VPR_SIGUELINEAS_NEGRO3 F.1
    DATAF tmpf511
    DATA8 flag511
    DIVF F.1 VPR_SIGUELINEAS_BLANCO3 tmpf511
    CP_EQF 0.0 VPR_SIGUELINEAS_BLANCO3 flag511
    SELECTF flag511 0.0 tmpf511 F.0

    SUBF 100.0 VPR_SIGUELINEAS_NEGRO3 F.1
    MULF F.0 F.1 VLV_LECTURA3_17
    SUBF VLV_LECTURA3_17 VLV_LECTURA1_17 F.1
    MULF F.1 VLV_SENTIDO_17 F.0
    MULF F.0 1.0 VLV_ERROR_17
    MULF VLV_ERROR_17 VLV_KP_17 F.0
    SUBF VLV_ERROR_17 VLV_OLDERROR_17 F.2
    MULF F.2 VLV_KD_17 F.1
    ADDF F.0 F.1 VLV_U_17
    ADDF VLV_VELOCIDAD_17 VLV_U_17 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_17 VLV_U_17 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_17 VLV_OLDERROR_17
    MATH ABS VLV_ENCODERC_17 F.0
    JR_GTEQF F.0 VLV_ENCODER_17 and525
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_17 2000.0 F.1
    JR_LTF F.0 F.1 whilebody498
  and525:
  endwhile498:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_17 2000.0 F.1
    JR_LTEQF F.0 F.1 else529_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/General alert'
    SOUND_READY
  else529_1:
  endif529:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_SIGUELINEAS_ENCODER31_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_SIGUELINEAS_ENCODER31_2:
SUB_M_GIRO_GRADOSF_3:
    DATAF tmpf535
    DATA8 flag535
    DIVF VLV_VELOCIDAD1_18 VLV_VELOCIDAD2_18 tmpf535
    CP_EQF 0.0 VLV_VELOCIDAD2_18 flag535
    SELECTF flag535 0.0 tmpf535 F.0

    DATAF tmpf536
    DATA8 flag536
    DIVF VLV_VELOCIDAD1_18 VLV_VELOCIDAD2_18 tmpf536
    CP_EQF 0.0 VLV_VELOCIDAD2_18 flag536
    SELECTF flag536 0.0 tmpf536 F.2

    MATH ABS F.2 F.1
    DATAF tmpf538
    DATA8 flag538
    DIVF F.0 F.1 tmpf538
    CP_EQF 0.0 F.1 flag538
    SELECTF flag538 0.0 tmpf538 VLV_SIGNO_18

    MATH ABS VLV_VELOCIDAD1_18 F.0
    MATH ABS VLV_VELOCIDAD2_18 F.1
    DATA8 flag541
	CP_LTF F.0 F.1 flag541
	SELECTF flag541 F.0 F.1 VLV_VMIN_18
    MATH ABS VLV_VELOCIDAD1_18 F.0
    MATH ABS VLV_VELOCIDAD2_18 F.1
    DATA8 flag544
	CP_GTF F.0 F.1 flag544
	SELECTF flag544 F.0 F.1 VLV_VMAX_18
    MULF VLV_GRADOS_18 VPR_GIRO_G1 F.0
    MULF VLV_SIGNO_18 VLV_VMIN_18 F.4
    DATAF tmpf547
    DATA8 flag547
    DIVF F.4 VLV_VMAX_18 tmpf547
    CP_EQF 0.0 VLV_VMAX_18 flag547
    SELECTF flag547 0.0 tmpf547 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf549
    DATA8 flag549
    DIVF -2.0 F.2 tmpf549
    CP_EQF 0.0 F.2 flag549
    SELECTF flag549 0.0 tmpf549 F.1

    MULF F.0 F.1 VLV_ENCODER_18
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds552
	MOVEF_32 100.0 milliseconds552
	DATA32 timer552
	TIMER_WAIT milliseconds552 timer552
	TIMER_READY timer552
    MATH NEGATE VLV_VELOCIDAD1_18 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_18 VLV_ENCODER_18 'False'

	DATA8 layer554
	DATA8 nos554
	DATA8 busy554
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer554 nos554
	JR_EQ8 0 nos554 motornotbusy554
  motorwaiting554:
	OUTPUT_TEST layer554 nos554 busy554
	JR_EQ8 busy554 0 motornotbusy554
	SLEEP
	JR motorwaiting554
  motornotbusy554:
    MOVEF_F 0.0 VLV_VELOCIDAD1_18
    MOVEF_F 0.0 VLV_VELOCIDAD2_18
    MOVEF_F 0.0 VLV_GRADOS_18
    DATA32 milliseconds555
	MOVEF_32 100.0 milliseconds555
	DATA32 timer555
	TIMER_WAIT milliseconds555 timer555
	TIMER_READY timer555
RETSUB_M_GIRO_GRADOSF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_GRADOSF_3:
SUB_M_GIRO_ENCODER_3:
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_GIRO_DIAMETRO F.2 F.1
    DATAF tmpf558
    DATA8 flag558
    DIVF VLV_DISTANCIA_19 F.1 tmpf558
    CP_EQF 0.0 F.1 flag558
    SELECTF flag558 0.0 tmpf558 F.0

    MULF F.0 360.0 VLV_ENCODER_19
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MATH NEGATE VLV_VELOCIDAD1_19 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_19 VLV_ENCODER_19 'True'

	DATA8 layer562
	DATA8 nos562
	DATA8 busy562
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer562 nos562
	JR_EQ8 0 nos562 motornotbusy562
  motorwaiting562:
	OUTPUT_TEST layer562 nos562 busy562
	JR_EQ8 busy562 0 motornotbusy562
	SLEEP
	JR motorwaiting562
  motornotbusy562:
RETSUB_M_GIRO_ENCODER_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_ENCODER_3:
SUB_M_GIRO_GRADOS_3:
    DATAF tmpf563
    DATA8 flag563
    DIVF VLV_VELOCIDAD1_20 VLV_VELOCIDAD2_20 tmpf563
    CP_EQF 0.0 VLV_VELOCIDAD2_20 flag563
    SELECTF flag563 0.0 tmpf563 F.0

    DATAF tmpf564
    DATA8 flag564
    DIVF VLV_VELOCIDAD1_20 VLV_VELOCIDAD2_20 tmpf564
    CP_EQF 0.0 VLV_VELOCIDAD2_20 flag564
    SELECTF flag564 0.0 tmpf564 F.2

    MATH ABS F.2 F.1
    DATAF tmpf566
    DATA8 flag566
    DIVF F.0 F.1 tmpf566
    CP_EQF 0.0 F.1 flag566
    SELECTF flag566 0.0 tmpf566 VLV_SIGNO_20

    MATH ABS VLV_VELOCIDAD1_20 F.0
    MATH ABS VLV_VELOCIDAD2_20 F.1
    DATA8 flag569
	CP_LTF F.0 F.1 flag569
	SELECTF flag569 F.0 F.1 VLV_VMIN_20
    MATH ABS VLV_VELOCIDAD1_20 F.0
    MATH ABS VLV_VELOCIDAD2_20 F.1
    DATA8 flag572
	CP_GTF F.0 F.1 flag572
	SELECTF flag572 F.0 F.1 VLV_VMAX_20
    MULF VLV_GRADOS_20 VPR_GIRO_G1 F.0
    MULF VLV_SIGNO_20 VLV_VMIN_20 F.4
    DATAF tmpf575
    DATA8 flag575
    DIVF F.4 VLV_VMAX_20 tmpf575
    CP_EQF 0.0 VLV_VMAX_20 flag575
    SELECTF flag575 0.0 tmpf575 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf577
    DATA8 flag577
    DIVF -2.0 F.2 tmpf577
    CP_EQF 0.0 F.2 flag577
    SELECTF flag577 0.0 tmpf577 F.1

    MULF F.0 F.1 VLV_ENCODER_20
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds580
	MOVEF_32 100.0 milliseconds580
	DATA32 timer580
	TIMER_WAIT milliseconds580 timer580
	TIMER_READY timer580
    MATH NEGATE VLV_VELOCIDAD1_20 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_20 VLV_ENCODER_20 'True'

	DATA8 layer582
	DATA8 nos582
	DATA8 busy582
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer582 nos582
	JR_EQ8 0 nos582 motornotbusy582
  motorwaiting582:
	OUTPUT_TEST layer582 nos582 busy582
	JR_EQ8 busy582 0 motornotbusy582
	SLEEP
	JR motorwaiting582
  motornotbusy582:
    MOVEF_F 0.0 VLV_VELOCIDAD1_20
    MOVEF_F 0.0 VLV_VELOCIDAD2_20
    MOVEF_F 0.0 VLV_GRADOS_20
    DATA32 milliseconds583
	MOVEF_32 100.0 milliseconds583
	DATA32 timer583
	TIMER_WAIT milliseconds583 timer583
	TIMER_READY timer583
RETSUB_M_GIRO_GRADOS_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_GRADOS_3:
SUB_M_GIRO_NEGRO1F_3:
    MOVEF_F 50.0 VLV_LECTURA_21
  while584:
    JR_LTEQF VLV_LECTURA_21 15.0 endwhile584
  whilebody584:
    CALL SENSOR.READPERCENT VLV_SENS_21 F.2
    SUBF F.2 VPR_GIRO_NEGRO F.1
    DATAF tmpf587
    DATA8 flag587
    DIVF F.1 VPR_GIRO_BLANCO tmpf587
    CP_EQF 0.0 VPR_GIRO_BLANCO flag587
    SELECTF flag587 0.0 tmpf587 F.0

    SUBF 100.0 VPR_GIRO_NEGRO F.1
    MULF F.0 F.1 VLV_LECTURA_21
    MATH NEGATE VLV_VELOCIDAD1_21 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_21
    JR_GTF VLV_LECTURA_21 15.0 whilebody584
  endwhile584:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_M_GIRO_NEGRO1F_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_NEGRO1F_3:
SUB_M_GIRO_ENCODERF_3:
    MOVEF_F 3.1415926535897932384 F.2
    MULF VPR_GIRO_DIAMETRO F.2 F.1
    DATAF tmpf595
    DATA8 flag595
    DIVF VLV_DISTANCIA_22 F.1 tmpf595
    CP_EQF 0.0 F.1 flag595
    SELECTF flag595 0.0 tmpf595 F.0

    MULF F.0 360.0 VLV_ENCODER_22
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MATH NEGATE VLV_VELOCIDAD1_22 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_22 VLV_ENCODER_22 'False'

	DATA8 layer599
	DATA8 nos599
	DATA8 busy599
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer599 nos599
	JR_EQ8 0 nos599 motornotbusy599
  motorwaiting599:
	OUTPUT_TEST layer599 nos599 busy599
	JR_EQ8 busy599 0 motornotbusy599
	SLEEP
	JR motorwaiting599
  motornotbusy599:
RETSUB_M_GIRO_ENCODERF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_ENCODERF_3:
SUB_M_GIRO_TIEMPO_3:
    TIMER_READ timeMC3
  while601:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_23 endwhile601
  whilebody601:
    MATH NEGATE VLV_VELOCIDAD1_23 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_23
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_23 whilebody601
  endwhile601:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_M_GIRO_TIEMPO_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_TIEMPO_3:
SUB_M_GIRO_TIEMPOF_3:
    TIMER_READ timeMC3
  while608:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_24 endwhile608
  whilebody608:
    MATH NEGATE VLV_VELOCIDAD1_24 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_24
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_24 whilebody608
  endwhile608:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_M_GIRO_TIEMPOF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_TIEMPOF_3:
SUB_M_RECTO_NEGRO1_2:
    MOVEF_F 0.0 VLV_CORRECCION_25
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MOVEF_F 50.0 VLV_LECTURA_25
  while615:
    JR_LTEQF VLV_LECTURA_25 15.0 endwhile615
  whilebody615:
    CALL SENSOR.READPERCENT VLV_SENSOR_25 F.2
    SUBF F.2 VPR_RECTO_NEGRO F.1
    DATAF tmpf618
    DATA8 flag618
    DIVF F.1 VPR_RECTO_BLANCO tmpf618
    CP_EQF 0.0 VPR_RECTO_BLANCO flag618
    SELECTF flag618 0.0 tmpf618 F.0

    SUBF 100.0 VPR_RECTO_NEGRO F.1
    MULF F.0 F.1 VLV_LECTURA_25
    MATH NEGATE VLV_VELOCIDAD_25 F.1
    SUBF 1.0 VLV_CORRECCION_25 F.2
    MULF F.1 F.2 F.0
    SUBF 1.0 VLV_CORRECCION_25 F.2
    MULF VLV_VELOCIDAD_25 F.2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    JR_GTF VLV_LECTURA_25 15.0 whilebody615
  endwhile615:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_NEGRO1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_NEGRO1_2:
SUB_M_RECTO_ENCODER_2:
    DATAF tmpf628
    DATA8 flag628
    DIVF VLV_VELOCIDAD_26 10.0 tmpf628
    CP_EQF 0.0 10.0 flag628
    SELECTF flag628 0.0 tmpf628 F.2

    DATAF tmpf629
    DATA8 flag629
    DIVF 11286.0 F.2 tmpf629
    CP_EQF 0.0 F.2 flag629
    SELECTF flag629 0.0 tmpf629 F.1

    DATAF tmpf630
    DATA8 flag630
    DIVF VLV_DISTANCIA_26 100.0 tmpf630
    CP_EQF 0.0 100.0 flag630
    SELECTF flag630 0.0 tmpf630 F.2

    MULF F.1 F.2 F.0
    DATAF tmpf632
    DATA8 flag632
    DIVF VPR_RECTO_DIAMETRO 6.24 tmpf632
    CP_EQF 0.0 6.24 flag632
    SELECTF flag632 0.0 tmpf632 F.1

    DATAF tmpf633
    DATA8 flag633
    DIVF F.0 F.1 tmpf633
    CP_EQF 0.0 F.1 flag633
    SELECTF flag633 0.0 tmpf633 VLV_SAFETYTIMER_26

    MATH ABS VLV_VELOCIDAD_26 F.1
    SUBF F.1 20.0 F.0
    MULF F.0 0.05 VLV_CORRECCION_26
    SUBF VLV_DISTANCIA_26 VLV_CORRECCION_26 F.2
    MULF F.2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf640
    DATA8 flag640
    DIVF F.1 F.2 tmpf640
    CP_EQF 0.0 F.2 flag640
    SELECTF flag640 0.0 tmpf640 F.0

    DATAF tmpf641
    DATA8 flag641
    DIVF F.0 VPR_RECTO_DIAMETRO tmpf641
    CP_EQF 0.0 VPR_RECTO_DIAMETRO flag641
    SELECTF flag641 0.0 tmpf641 VLV_ENC_26

    OUTPUT_CLR_COUNT 0 2
    OUTPUT_CLR_COUNT 0 4
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds645
	MOVEF_32 100.0 milliseconds645
	DATA32 timer645
	TIMER_WAIT milliseconds645 timer645
	TIMER_READY timer645
    MOVEF_F 0.0 VLV_C_26
    TIMER_READ timeMC4
  while647:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 VLV_ENC_26 endwhile647
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_26 2000.0 F.1
    JR_GTEQF F.0 F.1 endwhile647
  whilebody647:
    MATH NEGATE VLV_VELOCIDAD_26 F.1
    DATAF tmpf653
    DATA8 flag653
    DIVF VLV_C_26 2.0 tmpf653
    CP_EQF 0.0 2.0 flag653
    SELECTF flag653 0.0 tmpf653 F.3

    ADDF 1.0 F.3 F.2
    MULF F.1 F.2 F.0
    DATAF tmpf656
    DATA8 flag656
    DIVF VLV_C_26 2.0 tmpf656
    CP_EQF 0.0 2.0 flag656
    SELECTF flag656 0.0 tmpf656 F.3

    SUBF 1.0 F.3 F.2
    MULF VLV_VELOCIDAD_26 F.2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 VLV_ENC_26 and660
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_26 2000.0 F.1
    JR_LTF F.0 F.1 whilebody647
  and660:
  endwhile647:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_26 2000.0 F.1
    JR_LTEQF F.0 F.1 else665_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/General alert'
    SOUND_READY
  else665_1:
  endif665:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_ENCODER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_ENCODER_2:
SUB_M_RECTO_TIEMPO_2:
    MOVEF_F 0.0 VLV_CORRECCION_27
    TIMER_READ timeMC3
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
  while673:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_27 endwhile673
  whilebody673:
    MATH NEGATE VLV_VELOCIDAD_27 F.1
    SUBF 1.0 VLV_CORRECCION_27 F.2
    MULF F.1 F.2 F.0
    SUBF 1.0 VLV_CORRECCION_27 F.2
    MULF VLV_VELOCIDAD_27 F.2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_27 whilebody673
  endwhile673:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_TIEMPO_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_TIEMPO_2:
SUB_M_RECTO_ENCODERF_2:
    DATAF tmpf683
    DATA8 flag683
    DIVF VLV_VELOCIDAD_28 10.0 tmpf683
    CP_EQF 0.0 10.0 flag683
    SELECTF flag683 0.0 tmpf683 F.2

    DATAF tmpf684
    DATA8 flag684
    DIVF 11286.0 F.2 tmpf684
    CP_EQF 0.0 F.2 flag684
    SELECTF flag684 0.0 tmpf684 F.1

    DATAF tmpf685
    DATA8 flag685
    DIVF VLV_DISTANCIA_28 100.0 tmpf685
    CP_EQF 0.0 100.0 flag685
    SELECTF flag685 0.0 tmpf685 F.2

    MULF F.1 F.2 F.0
    DATAF tmpf687
    DATA8 flag687
    DIVF VPR_RECTO_DIAMETRO 6.24 tmpf687
    CP_EQF 0.0 6.24 flag687
    SELECTF flag687 0.0 tmpf687 F.1

    DATAF tmpf688
    DATA8 flag688
    DIVF F.0 F.1 tmpf688
    CP_EQF 0.0 F.1 flag688
    SELECTF flag688 0.0 tmpf688 VLV_SAFETYTIMER_28

    MATH ABS VLV_VELOCIDAD_28 F.1
    SUBF F.1 20.0 F.0
    MULF F.0 0.05 VLV_CORRECCION_28
    SUBF VLV_DISTANCIA_28 VLV_CORRECCION_28 F.2
    MULF F.2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf695
    DATA8 flag695
    DIVF F.1 F.2 tmpf695
    CP_EQF 0.0 F.2 flag695
    SELECTF flag695 0.0 tmpf695 F.0

    DATAF tmpf696
    DATA8 flag696
    DIVF F.0 VPR_RECTO_DIAMETRO tmpf696
    CP_EQF 0.0 VPR_RECTO_DIAMETRO flag696
    SELECTF flag696 0.0 tmpf696 VLV_ENC_28

    OUTPUT_CLR_COUNT 0 2
    OUTPUT_CLR_COUNT 0 4
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    DATA32 milliseconds700
	MOVEF_32 100.0 milliseconds700
	DATA32 timer700
	TIMER_WAIT milliseconds700 timer700
	TIMER_READY timer700
    MOVEF_F 0.0 VLV_C_28
    TIMER_READ timeMC4
  while702:
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 VLV_ENC_28 endwhile702
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_28 2000.0 F.1
    JR_GTEQF F.0 F.1 endwhile702
  whilebody702:
    MATH NEGATE VLV_VELOCIDAD_28 F.1
    DATAF tmpf708
    DATA8 flag708
    DIVF VLV_C_28 2.0 tmpf708
    CP_EQF 0.0 2.0 flag708
    SELECTF flag708 0.0 tmpf708 F.3

    ADDF 1.0 F.3 F.2
    MULF F.1 F.2 F.0
    DATAF tmpf711
    DATA8 flag711
    DIVF VLV_C_28 2.0 tmpf711
    CP_EQF 0.0 2.0 flag711
    SELECTF flag711 0.0 tmpf711 F.3

    SUBF 1.0 F.3 F.2
    MULF VLV_VELOCIDAD_28 F.2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    MATH ABS F.1 F.0
    JR_GTEQF F.0 VLV_ENC_28 and715
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_28 2000.0 F.1
    JR_LTF F.0 F.1 whilebody702
  and715:
  endwhile702:
    TIMER_READ timeMC4tmp
	SUB32 timeMC4tmp timeMC4 timeMC4tmp
	MOVE32_F timeMC4tmp F.0
    ADDF VLV_SAFETYTIMER_28 2000.0 F.1
    JR_LTEQF F.0 F.1 else720_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/General alert'
    SOUND_READY
  else720_1:
  endif720:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_RECTO_ENCODERF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_ENCODERF_2:
SUB_M_RECTO_COLOR1_3:
    MOVEF_F 0.0 VLV_CORRECCION_29
    CALL SENSOR.GETMODE VLV_SENSOR_29 VLV_MODE_29
    DATA8 layer727
	DATA8 no727
	DATA8 mode8727
	
	MOVEF_8 VLV_SENSOR_29 no727
	SUB8 no727 1 no727
	DIV8 no727 4 layer727
	MATH MOD8 no727 4 no727

	MOVEF_8 2.0 mode8727
	
	INPUT_DEVICE READY_RAW layer727 no727 0 mode8727 0
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
  while729:
    CALL SENSOR.READRAWVALUE VLV_SENSOR_29 0.0 F.0
    JR_EQF F.0 VLV_COLOR_29 endwhile729
  whilebody729:
    MATH NEGATE VLV_VELOCIDAD_29 F.1
    ADDF 1.0 VLV_CORRECCION_29 F.2
    MULF F.1 F.2 F.0
    SUBF 1.0 VLV_CORRECCION_29 F.2
    MULF VLV_VELOCIDAD_29 F.2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READRAWVALUE VLV_SENSOR_29 0.0 F.0
    JR_NEQF F.0 VLV_COLOR_29 whilebody729
  endwhile729:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    DATA8 layer739
	DATA8 no739
	DATA8 mode8739
	
	MOVEF_8 VLV_SENSOR_29 no739
	SUB8 no739 1 no739
	DIV8 no739 4 layer739
	MATH MOD8 no739 4 no739

	MOVEF_8 VLV_MODE_29 mode8739
	
	INPUT_DEVICE READY_RAW layer739 no739 0 mode8739 0
RETSUB_M_RECTO_COLOR1_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_COLOR1_3:
SUB_M_RECTO_BLANCO1F_2:
    MOVEF_F 0.0 VLV_CORRECCION_30
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MOVEF_F 50.0 VLV_LECTURA_30
  while741:
    JR_GTEQF VLV_LECTURA_30 60.0 endwhile741
  whilebody741:
    CALL SENSOR.READPERCENT VLV_SENSOR_30 F.2
    SUBF F.2 VPR_RECTO_NEGRO F.1
    DATAF tmpf744
    DATA8 flag744
    DIVF F.1 VPR_RECTO_BLANCO tmpf744
    CP_EQF 0.0 VPR_RECTO_BLANCO flag744
    SELECTF flag744 0.0 tmpf744 F.0

    SUBF 100.0 VPR_RECTO_NEGRO F.1
    MULF F.0 F.1 VLV_LECTURA_30
    MATH NEGATE VLV_VELOCIDAD_30 F.1
    SUBF 1.0 VLV_CORRECCION_30 F.2
    MULF F.1 F.2 F.0
    SUBF 1.0 VLV_CORRECCION_30 F.2
    MULF VLV_VELOCIDAD_30 F.2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    JR_LTF VLV_LECTURA_30 60.0 whilebody741
  endwhile741:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_RECTO_BLANCO1F_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_BLANCO1F_2:
SUB_M_RECTO_BLANCO1_2:
    MOVEF_F 0.0 VLV_CORRECCION_31
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MOVEF_F 50.0 VLV_LECTURA_31
  while755:
    JR_GTEQF VLV_LECTURA_31 60.0 endwhile755
  whilebody755:
    CALL SENSOR.READPERCENT VLV_SENSOR_31 F.2
    SUBF F.2 VPR_RECTO_NEGRO F.1
    DATAF tmpf758
    DATA8 flag758
    DIVF F.1 VPR_RECTO_BLANCO tmpf758
    CP_EQF 0.0 VPR_RECTO_BLANCO flag758
    SELECTF flag758 0.0 tmpf758 F.0

    SUBF 100.0 VPR_RECTO_NEGRO F.1
    MULF F.0 F.1 VLV_LECTURA_31
    MATH NEGATE VLV_VELOCIDAD_31 F.1
    SUBF 1.0 VLV_CORRECCION_31 F.2
    MULF F.1 F.2 F.0
    SUBF 1.0 VLV_CORRECCION_31 F.2
    MULF VLV_VELOCIDAD_31 F.2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    JR_LTF VLV_LECTURA_31 60.0 whilebody755
  endwhile755:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_RECTO_BLANCO1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_BLANCO1_2:
SUB_M_RECTO_NEGRO1F_2:
    MOVEF_F 0.0 VLV_CORRECCION_32
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    MOVEF_F 50.0 VLV_LECTURA_32
  while769:
    JR_LTEQF VLV_LECTURA_32 15.0 endwhile769
  whilebody769:
    CALL SENSOR.READPERCENT VLV_SENSOR_32 F.2
    SUBF F.2 VPR_RECTO_NEGRO F.1
    DATAF tmpf772
    DATA8 flag772
    DIVF F.1 VPR_RECTO_BLANCO tmpf772
    CP_EQF 0.0 VPR_RECTO_BLANCO flag772
    SELECTF flag772 0.0 tmpf772 F.0

    SUBF 100.0 VPR_RECTO_NEGRO F.1
    MULF F.0 F.1 VLV_LECTURA_32
    MATH NEGATE VLV_VELOCIDAD_32 F.1
    SUBF 1.0 VLV_CORRECCION_32 F.2
    MULF F.1 F.2 F.0
    SUBF 1.0 VLV_CORRECCION_32 F.2
    MULF VLV_VELOCIDAD_32 F.2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    JR_GTF VLV_LECTURA_32 15.0 whilebody769
  endwhile769:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
RETSUB_M_RECTO_NEGRO1F_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RECTO_NEGRO1F_2:
SUB_M_RGB_DETECT_3:
    CALL SENSOR.GETMODE VLV_SENS_33 VLV_SENS_MODE_33
    DATA8 layer783
	DATA8 no783
	DATA8 mode8783
	
	MOVEF_8 VLV_SENS_33 no783
	SUB8 no783 1 no783
	DIV8 no783 4 layer783
	MATH MOD8 no783 4 no783

	MOVEF_8 4.0 mode8783
	
	INPUT_DEVICE READY_RAW layer783 no783 0 mode8783 0
    MOVEF_F 15.0 VLV_RED_33
    MOVEF_F 60.0 VLV_YELLOW_33
    MOVEF_F 170.0 VLV_GREEN_33
    MOVEF_F 330.0 VLV_BLUE_33
    MOVEF_F 0.0 VLV_HUE_33
    MOVEF_F 0.0 VLV_SAT_33
    MOVEF_F 0.0 VLV_VALUE_33
    MOVEF_F 0.0 VLV_COLOR_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMARRAY_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMARRAY_33
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMARRAY_33
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_33
  for788:
    JR_GTF VLV_J_33 VLV_REPS_33 endfor788
  forbody788:
    CALL SENSOR.READRAW VLV_SENS_33 3.0 VLV_RGB_33
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_33 VLV_RGB_33
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_33 VLV_RGB_33
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_33 VLV_RGB_33
    DATAF tmpf793
    DATA8 flag793
    DIVF VLV_RRAW_33 VPR_RGB_RWHITE tmpf793
    CP_EQF 0.0 VPR_RGB_RWHITE flag793
    SELECTF flag793 0.0 tmpf793 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_33 F.0 VLV_RNORMARRAY_33
    DATAF tmpf797
    DATA8 flag797
    DIVF VLV_GRAW_33 VPR_RGB_GWHITE tmpf797
    CP_EQF 0.0 VPR_RGB_GWHITE flag797
    SELECTF flag797 0.0 tmpf797 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_33 F.0 VLV_GNORMARRAY_33
    DATAF tmpf801
    DATA8 flag801
    DIVF VLV_BRAW_33 VPR_RGB_BWHITE tmpf801
    CP_EQF 0.0 VPR_RGB_BWHITE flag801
    SELECTF flag801 0.0 tmpf801 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_33 F.0 VLV_BNORMARRAY_33
    DATA32 milliseconds805
	MOVEF_32 5.0 milliseconds805
	DATA32 timer805
	TIMER_WAIT milliseconds805 timer805
	TIMER_READY timer805
    ADDF VLV_J_33 1.0 VLV_J_33
    JR_LTEQF VLV_J_33 VLV_REPS_33 forbody788
  endfor788:
    MOVEF_F 1.0 VLV_J_33
  for807:
    JR_GTF VLV_J_33 VLV_REPS_33 endfor807
  forbody807:
    CALL ARRAYGET_FLOAT VLV_J_33 F.0 VLV_RNORMARRAY_33
    ADDF VLV_J_33 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMARRAY_33
    ADDF F.0 F.1 VLV_RNORM_33
    CALL ARRAYGET_FLOAT VLV_J_33 F.0 VLV_GNORMARRAY_33
    ADDF VLV_J_33 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMARRAY_33
    ADDF F.0 F.1 VLV_GNORM_33
    CALL ARRAYGET_FLOAT VLV_J_33 F.0 VLV_BNORMARRAY_33
    ADDF VLV_J_33 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMARRAY_33
    ADDF F.0 F.1 VLV_BNORM_33
    ADDF VLV_J_33 2.0 VLV_J_33
    JR_LTEQF VLV_J_33 VLV_REPS_33 forbody807
  endfor807:
    DATAF tmpf821
    DATA8 flag821
    DIVF VLV_RNORM_33 VLV_REPS_33 tmpf821
    CP_EQF 0.0 VLV_REPS_33 flag821
    SELECTF flag821 0.0 tmpf821 VLV_RNORM_33

    DATAF tmpf822
    DATA8 flag822
    DIVF VLV_GNORM_33 VLV_REPS_33 tmpf822
    CP_EQF 0.0 VLV_REPS_33 flag822
    SELECTF flag822 0.0 tmpf822 VLV_GNORM_33

    DATAF tmpf823
    DATA8 flag823
    DIVF VLV_BNORM_33 VLV_REPS_33 tmpf823
    CP_EQF 0.0 VLV_REPS_33 flag823
    SELECTF flag823 0.0 tmpf823 VLV_BNORM_33

    DATA8 flag824
	CP_GTF VLV_RNORM_33 VLV_GNORM_33 flag824
	SELECTF flag824 VLV_RNORM_33 VLV_GNORM_33 F.0
    DATA8 flag825
	CP_GTF F.0 VLV_BNORM_33 flag825
	SELECTF flag825 F.0 VLV_BNORM_33 VLV_MAX_33
    DATA8 flag826
	CP_LTF VLV_RNORM_33 VLV_GNORM_33 flag826
	SELECTF flag826 VLV_RNORM_33 VLV_GNORM_33 F.0
    DATA8 flag827
	CP_LTF F.0 VLV_BNORM_33 flag827
	SELECTF flag827 F.0 VLV_BNORM_33 VLV_MIN_33
    JR_NEQF VLV_MAX_33 VLV_MIN_33 else828_1
    MOVEF_F 0.0 VLV_HUE_33
    JR endif828
  else828_1:
    JR_NEQF VLV_MAX_33 VLV_RNORM_33 else828_2
    JR_LTF VLV_GNORM_33 VLV_BNORM_33 else829_1
    SUBF VLV_GNORM_33 VLV_BNORM_33 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_33 VLV_MIN_33 F.1
    DATAF tmpf833
    DATA8 flag833
    DIVF F.0 F.1 tmpf833
    CP_EQF 0.0 F.1 flag833
    SELECTF flag833 0.0 tmpf833 VLV_HUE_33

    JR endif829
  else829_1:
    SUBF VLV_GNORM_33 VLV_BNORM_33 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_33 VLV_MIN_33 F.2
    DATAF tmpf837
    DATA8 flag837
    DIVF F.1 F.2 tmpf837
    CP_EQF 0.0 F.2 flag837
    SELECTF flag837 0.0 tmpf837 F.0

    ADDF F.0 360.0 VLV_HUE_33
  else829_2:
  endif829:
    JR endif828
  else828_2:
    JR_NEQF VLV_MAX_33 VLV_GNORM_33 else828_3
    SUBF VLV_BNORM_33 VLV_RNORM_33 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_33 VLV_MIN_33 F.2
    DATAF tmpf842
    DATA8 flag842
    DIVF F.1 F.2 tmpf842
    CP_EQF 0.0 F.2 flag842
    SELECTF flag842 0.0 tmpf842 F.0

    ADDF F.0 120.0 VLV_HUE_33
    JR endif828
  else828_3:
    SUBF VLV_RNORM_33 VLV_GNORM_33 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_33 VLV_MIN_33 F.2
    DATAF tmpf847
    DATA8 flag847
    DIVF F.1 F.2 tmpf847
    CP_EQF 0.0 F.2 flag847
    SELECTF flag847 0.0 tmpf847 F.0

    ADDF F.0 240.0 VLV_HUE_33
  else828_4:
  endif828:
    JR_NEQF VLV_MAX_33 0.0 else849_1
    MOVEF_F 0.0 VLV_SAT_33
    JR endif849
  else849_1:
    DATAF tmpf850
    DATA8 flag850
    DIVF VLV_MIN_33 VLV_MAX_33 tmpf850
    CP_EQF 0.0 VLV_MAX_33 flag850
    SELECTF flag850 0.0 tmpf850 F.0

    SUBF 1.0 F.0 VLV_SAT_33
  else849_2:
  endif849:
    MOVEF_F VLV_MAX_33 VLV_VALUE_33
    ADDF VPR_RGB_VALUEBLANCO VPR_RGB_VALUENEGRO F.0
    DATAF tmpf853
    DATA8 flag853
    DIVF F.0 2.0 tmpf853
    CP_EQF 0.0 2.0 flag853
    SELECTF flag853 0.0 tmpf853 VLV_RGBGREY_33

    ADDF VLV_RRAW_33 VLV_GRAW_33 F.1
    ADDF F.1 VLV_BRAW_33 F.0
    JR_GTF F.0 3.0 else854_1
    MOVEF_F 0.0 VLV_COLOR_33
    JR endif854
  else854_1:
    JR_GTEQF VLV_SAT_33 0.3 else857_1
    JR_LTEQF VLV_VALUE_33 VLV_RGBGREY_33 else858_1
    MOVEF_F 6.0 VLV_COLOR_33
    JR endif858
  else858_1:
    MOVEF_F 1.0 VLV_COLOR_33
  else858_2:
  endif858:
    JR endif857
  else857_1:
    JR_LTF VLV_HUE_33 0.0 else859_1
    JR_GTEQF VLV_HUE_33 VLV_RED_33 else859_1
    MOVEF_F 5.0 VLV_COLOR_33
    JR endif859
  else859_1:
    JR_LTF VLV_HUE_33 VLV_RED_33 else859_2
    JR_GTEQF VLV_HUE_33 VLV_YELLOW_33 else859_2
    MOVEF_F 4.0 VLV_COLOR_33
    JR endif859
  else859_2:
    JR_LTF VLV_HUE_33 VLV_YELLOW_33 else859_3
    JR_GTEQF VLV_HUE_33 VLV_GREEN_33 else859_3
    MOVEF_F 3.0 VLV_COLOR_33
    JR endif859
  else859_3:
    JR_LTF VLV_HUE_33 VLV_GREEN_33 else859_4
    JR_GTEQF VLV_HUE_33 VLV_BLUE_33 else859_4
    MOVEF_F 2.0 VLV_COLOR_33
    JR endif859
  else859_4:
    MOVEF_F 5.0 VLV_COLOR_33
  else859_5:
  endif859:
  else857_2:
  endif857:
  else854_2:
  endif854:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_RRAW_33 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_33 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_33 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_33 '%g' 99 S.1
    CALL TEXT.APPEND 'color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_33 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA8 layer878
	DATA8 no878
	DATA8 mode8878
	
	MOVEF_8 VLV_SENS_33 no878
	SUB8 no878 1 no878
	DIV8 no878 4 layer878
	MATH MOD8 no878 4 no878

	MOVEF_8 VLV_SENS_MODE_33 mode8878
	
	INPUT_DEVICE READY_RAW layer878 no878 0 mode8878 0
RETSUB_M_RGB_DETECT_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RGB_DETECT_3:
SUB_M_RGB_GRITAR_1:
    JR_NEQF VLV_COLOR_34 0.0 else879_1
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Zero'
    JR endif879
  else879_1:
    JR_NEQF VLV_COLOR_34 1.0 else879_2
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Black'
    JR endif879
  else879_2:
    JR_NEQF VLV_COLOR_34 2.0 else879_3
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/BLUE'
    JR endif879
  else879_3:
    JR_NEQF VLV_COLOR_34 3.0 else879_4
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/GREEN'
    JR endif879
  else879_4:
    JR_NEQF VLV_COLOR_34 4.0 else879_5
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/YELLOW'
    JR endif879
  else879_5:
    JR_NEQF VLV_COLOR_34 5.0 else879_6
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/RED'
    JR endif879
  else879_6:
    JR_NEQF VLV_COLOR_34 6.0 else879_7
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/White'
    JR endif879
  else879_7:
    JR_NEQF VLV_COLOR_34 7.0 else879_8
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Brown'
  else879_8:
  endif879:
    SOUND_READY
RETSUB_M_RGB_GRITAR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_RGB_GRITAR_1:
SUB_M_CONTROL_LOGSINACCELDECEL_3:
    OUTPUT_CLR_COUNT 0 2
    OUTPUT_CLR_COUNT 0 4
    MATH ABS VLV_VMAX_35 F.0
    DATAF tmpf892
    DATA8 flag892
    DIVF VLV_VMAX_35 F.0 tmpf892
    CP_EQF 0.0 F.0 flag892
    SELECTF flag892 0.0 tmpf892 VLV_SIGNO_35

    MATH ABS VLV_VMAX_35 F.1
    DATA8 flag894
	CP_LTF 90.0 F.1 flag894
	SELECTF flag894 90.0 F.1 F.0
    MULF F.0 VLV_SIGNO_35 VLV_VMAX_35
    MOVEF_F 0.0 VLV_VEL_35
    MOVEF_F 0.4 VLV_KP_35
    MOVEF_F 1.0 VLV_KD_35
    MOVEF_F 0.0 VLV_ERROR_35
    MOVEF_F 0.0 VLV_OLDERROR_35
    MULF VLV_DISTANCIAACCEL_35 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF F.2 VPR_CONTROL_DIAMETRO F.1
    DATAF tmpf899
    DATA8 flag899
    DIVF F.0 F.1 tmpf899
    CP_EQF 0.0 F.1 flag899
    SELECTF flag899 0.0 tmpf899 VLV_ENCODERACCEL_35

    MULF VLV_DISTANCIA_35 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF F.2 VPR_CONTROL_DIAMETRO F.1
    DATAF tmpf903
    DATA8 flag903
    DIVF F.0 F.1 tmpf903
    CP_EQF 0.0 F.1 flag903
    SELECTF flag903 0.0 tmpf903 VLV_ENCODER_35

    MULF 2.0 VLV_ENCODERACCEL_35 F.0
    SUBF VLV_ENCODER_35 F.0 VLV_ENCODERCRUCERO_35
    CALL EV3FILE.OPENWRITE 'WRO2025/Files/LecturasAccelDecel.txt' VLV_LOG_35
    MOVEF_F 0.0 VLV_LECTURAS_35
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_ENCODERB_35
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_ENCODERC_35
    MOVEF_F 0.0 VLV_DISTANCIAC_35
    CALL SPEAKER.PLAY 100.0 'WRO2025/Media/Start'
    SOUND_READY
    TIMER_READ timeMC8
  while912:
    MATH ABS VLV_DISTANCIAC_35 F.0
    JR_GTEQF F.0 VLV_ENCODER_35 endwhile912
  whilebody912:
    CALL MOTOR.GETCOUNT 'B' VLV_DISTANCIAB_35
    CALL MOTOR.GETCOUNT 'C' VLV_DISTANCIAC_35
    MATH ABS VLV_DISTANCIAC_35 F.0
    DATAF tmpf918
    DATA8 flag918
    DIVF VLV_ENCODERACCEL_35 2.0 tmpf918
    CP_EQF 0.0 2.0 flag918
    SELECTF flag918 0.0 tmpf918 F.1

    JR_GTEQF F.0 F.1 else916_1
    MULF 2.0 VLV_VMAX_35 F.3
    DATAF tmpf920
    DATA8 flag920
    DIVF F.3 5.0 tmpf920
    CP_EQF 0.0 5.0 flag920
    SELECTF flag920 0.0 tmpf920 F.2

    MULF -1.0 F.2 F.1
    MOVEF_F 3.1415926535897932384 F.6
    MULF 2.0 F.6 F.5
    MULF F.5 VLV_DISTANCIAC_35 F.4
    DATAF tmpf925
    DATA8 flag925
    DIVF F.4 VLV_ENCODERACCEL_35 tmpf925
    CP_EQF 0.0 VLV_ENCODERACCEL_35 flag925
    SELECTF flag925 0.0 tmpf925 F.3

    DATAF tmpf926
	MULF F.3 57.295779513082 tmpf926
	MATH COS tmpf926 F.2
    MULF F.1 F.2 F.0
    MULF 3.0 VLV_VMAX_35 F.2
    DATAF tmpf929
    DATA8 flag929
    DIVF F.2 5.0 tmpf929
    CP_EQF 0.0 5.0 flag929
    SELECTF flag929 0.0 tmpf929 F.1

    ADDF F.0 F.1 VLV_VEL_35
    JR endif916
  else916_1:
    MATH ABS VLV_DISTANCIAC_35 F.0
    ADDF VLV_ENCODERACCEL_35 VLV_ENCODERCRUCERO_35 F.1
    JR_GTEQF F.0 F.1 else916_2
    MOVEF_F VLV_VMAX_35 VLV_VEL_35
    JR endif916
  else916_2:
    MULF 2.0 VLV_VMAX_35 F.3
    DATAF tmpf934
    DATA8 flag934
    DIVF F.3 5.0 tmpf934
    CP_EQF 0.0 5.0 flag934
    SELECTF flag934 0.0 tmpf934 F.2

    MULF -1.0 F.2 F.1
    MOVEF_F 3.1415926535897932384 F.5
    SUBF VLV_DISTANCIAC_35 VLV_ENCODERCRUCERO_35 F.6
    MULF F.5 F.6 F.4
    DATAF tmpf939
    DATA8 flag939
    DIVF F.4 VLV_ENCODERACCEL_35 tmpf939
    CP_EQF 0.0 VLV_ENCODERACCEL_35 flag939
    SELECTF flag939 0.0 tmpf939 F.3

    DATAF tmpf940
	MULF F.3 57.295779513082 tmpf940
	MATH COS tmpf940 F.2
    MULF F.1 F.2 F.0
    MULF 3.0 VLV_VMAX_35 F.2
    DATAF tmpf943
    DATA8 flag943
    DIVF F.2 5.0 tmpf943
    CP_EQF 0.0 5.0 flag943
    SELECTF flag943 0.0 tmpf943 F.1

    ADDF F.0 F.1 VLV_VEL_35
  else916_3:
  endif916:
    SUBF VLV_DISTANCIAB_35 VLV_DISTANCIAC_35 VLV_ERROR_35
    MULF VLV_ERROR_35 VLV_KP_35 F.0
    SUBF VLV_ERROR_35 VLV_OLDERROR_35 F.2
    MULF F.2 VLV_KD_35 F.1
    ADDF F.0 F.1 VLV_CORRECCION_35
    SUBF VLV_VEL_35 VLV_CORRECCION_35 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VEL_35 VLV_CORRECCION_35 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MOVEF_F VLV_ERROR_35 VLV_OLDERROR_35
    CALL ARRAYSTORE_FLOAT VLV_LECTURAS_35 VLV_VEL_35 VLV_VELOCIDAD_35
    CALL ARRAYSTORE_FLOAT VLV_LECTURAS_35 VLV_DISTANCIAB_35 VLV_ENCODERB_35
    CALL ARRAYSTORE_FLOAT VLV_LECTURAS_35 VLV_DISTANCIAC_35 VLV_ENCODERC_35
    ADDF VLV_LECTURAS_35 1.0 VLV_LECTURAS_35
    MATH ABS VLV_DISTANCIAC_35 F.0
    JR_LTF F.0 VLV_ENCODER_35 whilebody912
  endwhile912:
    TIMER_READ timeMC8tmp
	SUB32 timeMC8tmp timeMC8 timeMC8tmp
	MOVE32_F timeMC8tmp VLV_DELTAT_35
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    CALL EV3FILE.WRITELINE VLV_LOG_35 'encoderB;encoderC;velocidad'
    MOVEF_F 0.0 VLV_I_35
  for962:
    SUBF VLV_LECTURAS_35 1.0 F.0
    JR_GTF VLV_I_35 F.0 endfor962
  forbody962:
    CALL ARRAYGET_FLOAT VLV_LECTURAS_35 F.2 VLV_ENCODERB_35
    DATAF tmpf965
    DATA8 flag965
    DIVF F.2 360.0 tmpf965
    CP_EQF 0.0 360.0 flag965
    SELECTF flag965 0.0 tmpf965 F.1

    MOVEF_F 3.1415926535897932384 F.3
    MULF F.3 VPR_CONTROL_DIAMETRO F.2
    MULF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_LECTURAS_35 F.0 VLV_ENCODERB_35
    CALL ARRAYGET_FLOAT VLV_LECTURAS_35 F.2 VLV_ENCODERC_35
    DATAF tmpf971
    DATA8 flag971
    DIVF F.2 360.0 tmpf971
    CP_EQF 0.0 360.0 flag971
    SELECTF flag971 0.0 tmpf971 F.1

    MOVEF_F 3.1415926535897932384 F.3
    MULF F.3 VPR_CONTROL_DIAMETRO F.2
    MULF F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_LECTURAS_35 F.0 VLV_ENCODERC_35
    CALL ARRAYGET_FLOAT VLV_I_35 F.0 VLV_ENCODERB_35
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.4
    CALL TEXT.APPEND S.4 ';' S.3
    CALL ARRAYGET_FLOAT VLV_I_35 F.0 VLV_ENCODERC_35
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.4
    CALL TEXT.APPEND S.3 S.4 S.2
    CALL TEXT.APPEND S.2 ';' S.1
    CALL ARRAYGET_FLOAT VLV_I_35 F.0 VLV_VELOCIDAD_35
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.2
    CALL TEXT.APPEND S.1 S.2 S.0
    CALL EV3FILE.WRITELINE VLV_LOG_35 S.0
    ADDF VLV_I_35 1.0 VLV_I_35
    SUBF VLV_LECTURAS_35 1.0 F.0
    JR_LTEQF VLV_I_35 F.0 forbody962
  endfor962:
    DATAF tmpf989
    DATA8 flag989
    DIVF VLV_LECTURAS_35 VLV_DELTAT_35 tmpf989
    CP_EQF 0.0 VLV_DELTAT_35 flag989
    SELECTF flag989 0.0 tmpf989 F.1

    MULF F.1 1000.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.0
    CALL EV3FILE.WRITELINE VLV_LOG_35 S.0
    CALL EV3FILE.CLOSE VLV_LOG_35
RETSUB_M_CONTROL_LOGSINACCELDECEL_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_CONTROL_LOGSINACCELDECEL_3:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.GETMODE		// FF
{
	IN_F port
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 type
	DATA8 mode
	
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	
	INPUT_DEVICE GET_TYPEMODE layer no type mode
	MOVE8_F mode result
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall EV3FILE.OPENWRITE       // SF
{
	IN_S filename 252
	OUT_F handle

	DATAS fullname 300
	DATA16 handle16

	STRINGS DUPLICATE filename fullname
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/'
	STRINGS ADD '/home/root/lms2012/prjs/' filename fullname
absolutepath:
	FILE OPEN_WRITE fullname handle16

	MOVE16_F handle16 handle
}
subcall EV3FILE.WRITELINE     // FSV
{
	IN_F handle
	IN_S text 252

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE WRITE_TEXT handle16 6 text
invalidhandle:
}
subcall EV3FILE.CLOSE          // FV
{
	IN_F handle

	JR_LTF handle 1.0 invalidhandle
	JR_GTF handle 32767.0 invalidhandle
	DATA16 handle16
	MOVEF_16 handle handle16
	FILE CLOSE handle16
invalidhandle:
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
