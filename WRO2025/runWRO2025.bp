folder "prjs""WRO2025"

import "modules/Siguelineas"
import "modules/Giro"
import "modules/Recto"
import "modules/Shift"
import "modules/Brazo"
import "modules/Smart"
import "modules/RGB"

'Motor A: Brazo Izq y araña (-)
'Motor D: Brazo Dch (+)

#region Entorno de Ejecución

Setup()
Main()

#EndRegion

#region Programas de Inicio

  Sub Setup
  
    Sensor.SetMode(1, 0)
    Sensor.SetMode(2, 4)
    Sensor.SetMode(3, 0)
    Sensor.SetMode(4, 0)

    diametro = 6.24

    '965
    Giro.G1 = 1065 / 360

    negro1 = 10
    negro3 = 9
    negro4 = 8

    blanco1 = 65
    blanco3 = 59
    blanco4 = 55

    RGB.VALUENEGRO = 4
    RGB.VALUEBLANCO = 32
    RGB.RWHITE = 57
    RGB.GWHITE = 71
    RGB.BWHITE = 73

    'Auto definición de propiedades

    Recto.diametro = diametro
    Giro.diametro = diametro
    Siguelineas.diametro = diametro
    Smart.diametro = diametro

    Siguelineas.negro1 = negro1
    Siguelineas.negro3 = negro3
    Siguelineas.negro4 = negro4

    Siguelineas.blanco1 = blanco1
    Siguelineas.blanco3 = blanco3
    Siguelineas.blanco4 = blanco4

    Smart.negro1 = negro1
    Smart.negro3 = negro3
    Smart.negro4 = negro4

    Smart.blanco1 = blanco1
    Smart.blanco3 = blanco3
    Smart.blanco4 = blanco4

    Recto.negro = (negro1 + negro3 + negro4) / 3
    Recto.blanco = (blanco1 + blanco3 + blanco4) / 3

    Giro.negro = (negro1 + negro3 + negro4) / 3
    Giro.blanco = (blanco1 + blanco3 + blanco4) / 3

  EndSub

  Sub StartArm
  
    Brazo.ADTimer(50,-50,250)
  MotorA.ResetCount()
  MotorD.ResetCount()
  Speaker.Play(100,"Connect")
  Speaker.Wait()
  EndSub

#EndRegion

#region Subrutinas de Ejecución

Sub Main
  
  StartArm()
  s()
  'Sale de casa
  Recto.Encoder(50,30)
  
  'Dos arcos para acercarse a puerta amarilla
  Giro.Grados(10,40,60)
  Giro.Grados(40,10,60)
  
  'Anda hasta linea y abre puerta
  Recto.EncoderF(50,40)
  Recto.Negro1(70,4)
  
  'Gira hacia cruce y toma referencia
  Giro.Grados(40,-20,90)
  Siguelineas.Cruce14(60)
  
  'Media vuelta
  Giro.Grados(70,-62,180)
  
  'Anda por linea para acercarse a marking de bloque grande
  Siguelineas.Encoder31(40,52)
  
  'Se acerca a marking
  Giro.Grados(-30,30,90)
  Recto.Encoder(60,14)
  
  'Gira y lee
  Giro.Grados(30,-30,90)
  RGB.Detect(2,5,markingGrande)
  RGB.Gritar(markingGrande)
  
  'Dos arcos para alejarse de pared
  
  Giro.Grados(40,10,35)
  Giro.Grados(10,40,33)
  
  'Anda a markings y los lee
  Recto.Encoder(20,15)
  RGB.Detect(2,5,marking[0])
  RGB.Gritar(marking[0])
  
  Recto.Tiempo(20,700)
  RGB.Detect(2,5,marking[1])
  RGB.Gritar(marking[1])
  
  'Echa atrás y gira
  Recto.Encoder(-30,35)
  Giro.Grados(30,-30,90)
  
  'Se acerca para leer 3 y 4 marking
  Recto.Encoder(30,7)
  Giro.Grados(30,-30,85)
  
  'Choca con pared y lee
  Recto.Encoder(-70,30)
  Recto.Tiempo(-20,500)
  
  'Lee 3 marking
  Recto.Encoder(20,4)
  RGB.Detect(2,5,marking[2])
  RGB.Gritar(marking[2])
  
  'Lee 4 marking
  Recto.Encoder(20,8)
  RGB.Detect(2,5,marking[2])
  RGB.Gritar(marking[2])
  
  'Avanzamos a línea
  Recto.EncoderF(70,66)
  
  'Doble arco atrás para tirar del rojo
  Giro.Grados(-10,-50,70)
  Giro.Grados(-50,-10,70)
  
  'Retrocede y baja araña
  Brazo.AEncoder(20,-250)
  
  'Tira de la barrera, retrocede y levanta araña
  Recto.Encoder(20,20)
  Recto.Encoder(-20,5)
  Brazo.AEncoder(20,-50)
  
  'Avanza a linea
  Recto.Encoder(40,12)
  Recto.Negro1(40,1)
  
  'Gira hacia barreras
  Giro.Grados(-30,40,90)
  Siguelineas.Encoder14(30,10)
  Siguelineas.Cruce_Externo(30,3)
  
  'Media vuelta y coge barreras
  Giro.Grados(-30,30,175)
  Recto.Encoder(-10,20)
  Recto.Encoder(10,1.5)
  Brazo.AEncoder(20,-350)
  Recto.Encoder(10,3)
  
  'Medio pivote avance y arco
  Giro.Grados(30,0,30)
  Recto.Encoder(20,15)
  Giro.Grados(15,-15,75)
  
  'Va a línea y sigue
  Recto.Negro1(30,1)
  Siguelineas.Encoder14(30,35)
  Recto.Encoder(40,12)
  
  'Gira y deja la barrera amarilla
  Giro.Grados(-30,0,-45)
  Recto.Encoder(-20,13)
  Brazo.AEncoder(30,-50)
  Recto.Encoder(10,6.5)
  Brazo.AEncoder(30,-350)
  
  'Deja barrera roja
  Giro.Grados(30,0,45)
  Recto.Encoder(-30,4)
  Giro.Grados(-15,15,124)
  Recto.Encoder(-30,12)
  Brazo.AEncoder(30,-50)
  
EndSub

Sub MainPrueba
  StartArm()
  Siguelineas.Encoder14(30,10)
  Siguelineas.Cruce_Externo(30,3)
  
  'Media vuelta y coge barreras
  Giro.Grados(-30,30,175)
  Recto.Encoder(-10,20)
  Recto.Encoder(10,1.5)
  Brazo.AEncoder(20,-350)
  Recto.Encoder(10,3)
  
  'Medio pivote avance y arco
  Giro.Grados(30,0,30)
  Recto.Encoder(20,15)
  Giro.Grados(15,-15,75)
  
  'Va a línea y sigue
  Recto.Negro1(30,1)
  Siguelineas.Encoder14(30,35)
  Recto.Encoder(40,12)
  
  'Gira y deja la barrera amarilla
  Giro.Grados(-30,0,-45)
  Recto.Encoder(-20,13)
  Brazo.AEncoder(30,-50)
  Recto.Encoder(10,6.5)
  Brazo.AEncoder(30,-350)
  
  'Deja barrera roja
  Giro.Grados(30,0,45)
  Recto.Encoder(-30,4)
  Giro.Grados(-15,15,124)
  Recto.Encoder(-30,12)
  Brazo.AEncoder(30,-50)
  
EndSub

#endregion

Sub MostrarVel
  While "true"
    LCD.StopUpdate()
    LCD.Clear()
    LCD.Write(5,5,"Vel = "+MotorC.GetSpeed())
    LCD.Update()
    EndWhile
EndSub

Function Coger()
  Brazo.AEncoder(30,-400)
  Program.Delay(300)
  Brazo.AEncoder(20,-470)
  Program.Delay(800)
  Brazo.AEncoder(10,-100)
  Brazo.AEncoder(8,10)
  Program.Delay(300)
  Brazo.AEncoder(10,-320)
EndFunction

Function s()
  Buttons.Flush()
  Buttons.Wait()
EndFunction
