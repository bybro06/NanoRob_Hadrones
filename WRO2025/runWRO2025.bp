folder "prjs""WRO2025"

import "modules/Siguelineas"
import "modules/Giro"
import "modules/Recto"
import "modules/Shift"
import "modules/Brazo"
import "modules/Smart"
import "modules/RGB"
import "modules/Control"

'Motor A: Subir brazo / Bajar araña (+)
'Motor D: Abrir brazo (+)

'Disposición de tornillos
'
'   0\       |2
'   1|       \3
'

#region Entorno de Ejecución

Setup()
PruebaVelocidad()

#EndRegion

#region Programas de Inicio

Sub Setup
  
  Sensor.SetMode(1, 0)
  Sensor.SetMode(2, 4)
  Sensor.SetMode(3, 0)
  Sensor.SetMode(4, 0)
  
  diametro = 6.24
  
  '965
  Giro.G1 = 965 / 360
  
  negro1 = 3
  negro3 = 3
  negro4 = 2
  
  blanco1 = 99
  blanco3 = 100
  blanco4 = 104
  
  RGB.VALUENEGRO = 4
  RGB.VALUEBLANCO = 32
  RGB.RWHITE = 57
  RGB.GWHITE = 71
  RGB.BWHITE = 73
  
  'Auto definición de propiedades
  
  Recto.diametro = diametro
  Giro.diametro = diametro
  Siguelineas.diametro = diametro
  Smart.diametro = diametro
  Control.diametro = diametro
  
  Siguelineas.negro1 = negro1
  Siguelineas.negro3 = negro3
  Siguelineas.negro4 = negro4
  
  Siguelineas.blanco1 = blanco1
  Siguelineas.blanco3 = blanco3
  Siguelineas.blanco4 = blanco4
  
  Smart.negro1 = negro1
  Smart.negro3 = negro3
  Smart.negro4 = negro4
  
  Smart.blanco1 = blanco1
  Smart.blanco3 = blanco3
  Smart.blanco4 = blanco4
  
  Recto.negro = (negro1 + negro3 + negro4) / 3
  Recto.blanco = (blanco1 + blanco3 + blanco4) / 3
  
  Giro.negro = (negro1 + negro3 + negro4) / 3
  Giro.blanco = (blanco1 + blanco3 + blanco4) / 3
  color = 0
  
EndSub

Sub StartArm
  
  Brazo.ATimer(100,1000)
  MotorA.ResetCount()
  Program.Delay(100)
  Brazo.AEncoder(35,-200)
  MotorA.ResetCount()
  Speaker.Play(100,"Connect")
  Speaker.Wait()
EndSub

#EndRegion

#region Subrutinas de Ejecución

Sub Main
  
  'INICIALIZACIÓN DEL ROBOT
  
  GritarVoltaje()
  StartArm()
  Speaker.Play(100,"One")
  s()
  
  Time.Reset9()
  Program.Delay(100) 'Habían 150ms
  Brazo.AEncoder(35,-290) 'eran -260
  
  'SALE DE CASA SIGUIENDO LINEA
  
  'Giro.EncoderF(81,80,17)
  'Recto.Encoder(30,7)
  Siguelineas.Encoder14F(80,17)
  Siguelineas.Encoder14F(30,7)
  
  'SE APROXIMA A PUERTA AMARILLA
  
  Giro.GradosF(10*0.75,45*0.75,64.5)
  Giro.GradosF(24,5,65)

  'ABRE PUERTA AMARILLA Y LLEGA HASTA LINEA
  
  Giro.Encoder(51,49,44)
  Recto.Negro1(50,4)
  
  'GIRA A CRUCE PARA TOMAR REFERENCIA
  
  Giro.Grados(50,-25,90)
  Siguelineas.Cruce14(40)
  Giro.Grados(70,-62,180)
  
  'RECORRE LINEA Y ENTRA EN REGIÓN DE MARKINGS
  
  Siguelineas.Encoder31F(60,40)
  Recto.Encoder(30,8)
  
  'APROXIMACIÓN AL MARKING GRANDE
  
  Giro.Grados(-30,30,96)
  Recto.Encoder(20,13)
  Giro.Grados(20,-20,95)
  
  'LECTURA DEL MARKING GRANDE
  
  RGB.Detect(2,5,markingGrande)
  color = markingGrande
  Thread.run = GritarColor
  marking[0] = 0
  
  'APROXIMACIÓN AL 1º MARKING
  
  Giro.Grados(40,9,34)
  Giro.Grados(9,40,41)
  Giro.Encoder(42,40,12)
  
  'CUADRA CON PARED
  
  Recto.Tiempo(80,300)
  Recto.Encoder(-30,7)
  
  'LECTURA DEL 1º MARKING
  
  RGB.Detect(2,5,marking[1])
  color = marking[1]
  Thread.run = GritarColor
  
  'APROXIMACIÓN A 3º Y 4º MARKING
  
  Recto.Encoder(-30,5.8)
  Giro.Grados(30,-30,90)
  Recto.Encoder(30,8)
  Giro.Grados(30,-30,90)
  Recto.Tiempo(-20,500)
  
  'LECTURA DEL 3º MARKING
  
  RGB.Detect(2,5,marking[2])
  color = marking[2]
  Thread.run = GritarColor
  
  'APROXIMACIÓN A 4º MARKING
  
  Recto.Encoder(20,8)
  
  'LECTURA DEL 4º MARKING
  
  RGB.Detect(2,5,marking[3])
  color = marking[3]
  Thread.run = GritarColor
  
  'CÁLCULO DEL 2º MARKING (MEDIANTE DESCARTE)
  
  marking[0] = 14 - (marking[1] + marking[2] + marking[3])
  
  'INCORPORACIÓN A LINEA PRINCIPAL
  
  Giro.Negro1F(52,48,1)
  Siguelineas.Cruce14(60)
  Giro.Grados(-41,30,87)
  'MotorBC.OffAndBrake()
  'Program.Delay(100)
  
  'SIGUELINEAS HASTA MISIÓN DE PALANCA ROJA
  
  Siguelineas.Encoder14(30,24)
  
  'SE DESVÍA A PALANCA ROJA
  
  Giro.Grados(60*0.75,-40*0.75,94)
  Giro.EncoderF(-80,-80,34)
  Recto.Encoder(-30,5)
  
  'BAJA ARAÑA
  
  Brazo.AEncoder(30,20)
  Program.Delay(100) 'Habían 200ms
  
  'TIRA DE LA PALANCA, RETROCEDE Y LEVANTA ARAÑA
  
  Recto.EncoderF(30,17)
  Recto.Tiempo(10,400)
  Recto.Encoder(-20,3)
  Brazo.AEncoder(20,-310)
  
  'INCORPORACIÓN A LINEA PRINCIPAL
  
  Giro.Encoder(40,18,15.5)
  Giro.Encoder(18,40,15.5)
  Recto.Negro1(20,1)
  Giro.Grados(-9,20,96)
  
  'SIGUELINEAS HACIA BARRERAS
  
  Siguelineas.Encoder14F(10,5)
  Siguelineas.Cruce_Externo(12,3)
  Program.Delay(350) 'Habían 300ms
  
  'APROXIMACIÓN A BARRERAS
  
  Giro.Encoder(32,23,12)
  Giro.Encoder(22,32,11.5)
  Giro.Encoder(13,12,7.5)
  Recto.Encoder(-10,6)
  
  'COGE BARRERAS
  
  BajarCuadro()
  
  'LLEVA BARRERAS HASTA FINAL DE LINEA
  
  Recto.Encoder(-35,16.5)
  Giro.Grados(-20,20,95) 
  Siguelineas.Encoder14(45,30)
  Giro.Encoder(50,50,14)
  
  'GIRA PARA DEJAR LA BARRERA AMARILLA
  
  Giro.Grados(30,0,144)
  Recto.Encoder(20,1.5)
  'Recto.Color1(20,1,4)
  'Recto.Encoder(-20,9)
  Brazo.AEncoder(35,-330)
  
  'RECOGE LA BARRERA ROJA
  
  Recto.Encoder(-25,6.5)
  BajarCuadro()
  'Program.Delay(100) 'Habían 400ms
  
  'GIRA PARA DEJAR LA BARRERA ROJA
  
  Giro.Grados(-40,20,81)
  Brazo.AEncoder(40,-300)
  Recto.EncoderF(60,8)
  Recto.Color1(30,1,5)
  
  'VUELVE A CARRIL CENTRAL
  
  Recto.Encoder(-50,14)
  Giro.Grados(35,-35,180)
  Giro.EncoderF(67*1.35,70*1.35,65)
  
  'CUADRA CON PARED
  
  Recto.Tiempo(80,300)
  Recto.EncoderF(-80,13) 'Había -50, 14
  Recto.Blanco1F(-40,1)
  Recto.Negro1(-30,1)
  Giro.Grados(41,-22,92)
  
  'RECORRE LINEA PRINCIPAL ENTERA
  
  Siguelineas.Encoder31F(70,10)
  Siguelineas.Cruce_ExternoF(90,4)
  Siguelineas.Encoder31F(90,82)
  Siguelineas.Encoder31F(30,13)
  Giro.Encoder(20,19,21)
  
  'APROXIMACIÓN A BLOQUE DE COMBUSTIBLE
  
  Giro.Grados(15,-15,93.5)
  Recto.Encoder(20,8)

  'COGER BLOQUE Y ROTAR ARAÑA PARA COINCIDIR COLOR
  
    Brazo.AEncoder(30,-740)
    If markingGrande = 5 Then
      Motor.Move("D", -60, 90, "true")
    Else 
      Motor.Move("D", 60, (markingGrande - 2)*90, "true")
    EndIf
  
  'APROXIMACIÓN PARA COLOCAR BLOQUE
  
  Giro.Encoder(84,80,28)
  Recto.Blanco1(40,1)
  Recto.Encoder(-20,1)
  Motor.Stop("BC","True")
  Program.Delay(100) 'Habían 150ms
  Giro.Grados(15,-15,86)
  Giro.Encoder(82,81,23)
  
  'LEVANTA ARAÑA PARA DEJAR BLOQUE Y RECOLOCA LA ROTACIÓN

  Brazo.AEncoder(40,-500)
  If markingGrande = 5 or markingGrande = 3 Then
    Motor.Move("D", 60, -90, "true")
  EndIf
  Brazo.AEncoder(40,-330)

  
  'SE APROXIMA PARA LEVANTAR LA 1º BANDERA
  
  Giro.Grados(20,-20,97)
  Giro.Encoder(-70,-73,12)
  Recto.Tiempo(-30,800)
  Recto.Encoder(30,2)

  'LEVANTA LA 1º BANDERA
  
  Brazo.ATimer(100,600)
  Brazo.AEncoder(100,-300)
  
  'PIVOTA HACIA LINEA Y SE APROXIMA A LOS TORNILLOS
  
  Giro.Grados(32,-6,98)
  Siguelineas.Encoder31F(15,5)
  Siguelineas.Cruce_ExternoF(15,4)
  Giro.Grados(30,-10,92)
  Recto.Encoder(20,7.5)
  Program.Delay(100) 'Habían 200ms
  
  'ORDENA LOS TORNILLOS Y LOS RECOGE
  
  OrdenarBloques(marking)
  Giro.Encoder(30,33,10)
  
  'VUELVE A LINEA CON LOS TORNILLOS
  
  Siguelineas.Cruce_Externo(30,3)
  Giro.Grados(-16,30,95)
  Siguelineas.Encoder14(35,20)
  Giro.Encoder(36,34,10)
  Giro.Encoder(36*1.75,34*1.75,42)
  Giro.Encoder(-36,-34,7)
  
  'GIRA Y SE POSICIONA ENTRE BANDERAS Y MARKINGS
  
  Giro.Grados(-20,20,102)
  Giro.Encoder(30,24,15)
  Giro.Encoder(24,30,15)
  Giro.Tiempo(60,60,600)
  
  'SE RECOLOCA PARA SOLTAR LOS TORNILLOS
  
  Recto.Encoder(-20,12)
  Giro.Grados(-20,20,95)
  Giro.Tiempo(40,37,700)
  
  'BAJA ARAÑA, RETROCEDE, AVANZA, LEVANTA ARAÑA
  
  Brazo.AEncoder(50,-330)
  Giro.Encoder(-17,-15,13)
  Recto.Encoder(15,8)
  Brazo.AEncoder(30,0)
  
  'RETROCEDE Y EMPUJA A TORNILLOS PARA COLOCARLOS
  
  Recto.Encoder(-15,7.5)
  Recto.Encoder(30,16)
  
  'APROXIMA PARA LEVANTAR LA 2º BANDERA
  
  Recto.Encoder(-15,10)
  Giro.Grados(-5,15,90)
  Recto.Tiempo(-30,500)
  Recto.Encoder(15,12)
  Giro.Grados(-10,10,16)
  
  'SUBE ARAÑA Y LEVANTA LA 2º BANDERA
  
  Brazo.AEncoder(20,-210)
  Program.Delay(400)
  Recto.Encoder(10,8.5)
 
  
  'RETROCEDE, LEVANTA ARAÑA Y SALE
  
  Recto.Encoder(-40,8)
  Brazo.AEncoder(50,0)
  Giro.Grados(30,-30,10)
  
  'VUELVE A LINEA PRINCIPAL PARA DEJAR LOS ÚLTIMOS TORNILLOS
  
  Giro.EncoderF(82,81,83)
  Giro.Tiempo(82,81,300)
  Recto.EncoderF(-80,13) 'Había -50, 14
  Recto.Blanco1F(-40,1)
  Recto.Negro1(-30,1)
  Giro.Grados(-20,41,106)
  
  'RECORRE LINEA PRINCIPAL
  
  Siguelineas.Encoder14F(30,8)
  Siguelineas.Cruce_ExternoF(85,3)
  Siguelineas.Encoder14F(85,35)
  Siguelineas.Cruce_Externo(40,3)
  Recto.Encoder(20,2)
  
  'ABANDONA LINEA PRINCIPAL, RECORRE LINEA Y SE APROXIMA ÚLTIMOS TORNILLOS
  
  Giro.Grados(-15,30,103)
  Siguelineas.Encoder31(50,40)
  Giro.Encoder(52,50,30)
  Recto.Tiempo(40,700)
  Giro.Grados(8,-32,100)
  
  'BAJA ARAÑA, AVANZA, LEVANTA ARAÑA

  Brazo.AEncoder(30,-300)
  Recto.Encoder(30,17)
  Brazo.AEncoder(30,0)
  
  'RETROCEDE Y EMPUJA A TORNILLOS PARA COLOCARLOS
  Recto.Encoder(-30,14)
  
EndSub

Sub MainPrueba
  markingGrande=5
  marking[0]=4
  marking[1]=3
  marking[2]=5
  marking[3]=2
  GritarVoltaje()
  StartArm()
  Speaker.Play(100,"Two")
  s()
  Program.Delay(150)
  MotorD.ResetCount()
  Brazo.AEncoder(35,-250)
  MotorA.OffAndBrake()
  Program.Delay(500)
  
  Siguelineas.Cruce_ExternoF(15,4)
  Giro.Grados(30,-7,92)
  Recto.Encoder(20,7.5)
  Program.Delay(100) 'Habían 200ms
  
  'ORDENA LOS TORNILLOS Y LOS RECOGE
  
  OrdenarBloques(marking)
  Recto.Encoder(30,10)
  
  'VUELVE A LINEA CON LOS TORNILLOS
  
  Siguelineas.Cruce_Externo(30,3)
  Giro.Grados(-16,30,95)
  Siguelineas.Encoder14(35,20)
  Giro.Encoder(36,34,43)
  
  'GIRA Y SE POSICIONA ENTRE BANDERAS Y MARKINGS
  
  Giro.Grados(-20,20,90)
  Giro.TiempoF(30,26,1500)
  Giro.Tiempo(60,60,300)
  
  'SE RECOLOCA PARA SOLTAR LOS TORNILLOS
  
  Recto.Encoder(-20,11)
  Giro.Grados(-20,20,100)
  Recto.Tiempo(40,500)
  
  'BAJA ARAÑA, RETROCEDE, AVANZA, LEVANTA ARAÑA
  
  Brazo.AEncoder(50,-330)
  Giro.Encoder(-15,-16,12)
  Recto.Encoder(15,8)
  Brazo.AEncoder(30,0)
  
  'RETROCEDE Y EMPUJA A TORNILLOS PARA COLOCARLOS
  
  Recto.Encoder(-15,8)
  Recto.Encoder(15,17)
  
  'APROXIMA PARA LEVANTAR LA 2º BANDERA
  
  Recto.Encoder(-15,5)
  Giro.Grados(-15,15,88)
  Recto.Tiempo(-30,500)
  Recto.Encoder(15,12)
  Giro.Grados(-10,10,9)
  
  'BAJA ARAÑA Y LEVANTA LA 2º BANDERA
  
  Brazo.AEncoder(30,-160)
  Recto.Encoder(10,6)
 
  
  'RETROCEDE, LEVANTA ARAÑA Y SALE
  
  Recto.Encoder(-40,8)
  Brazo.AEncoder(50,0)
  Giro.Grados(10,-10,29)
  
  'VUELVE A LINEA PRINCIPAL PARA DEJAR LOS ÚLTIMOS TORNILLOS
  
  Recto.EncoderF(100,65)
  Recto.Blanco1F(40,1)
  Recto.Negro1F(20,1)
  Giro.Grados(-15,30,93)
  
  'RECORRE LINEA PRINCIPAL
  
  Siguelineas.Encoder14F(30,8)
  Siguelineas.Encoder14F(85,74)
  Siguelineas.Cruce_Externo(40,3)
  Recto.Encoder(20,2)
  
  'ABANDONA LINEA PRINCIPAL, RECORRE LINEA Y SE APROXIMA ÚLTIMOS TORNILLOS
  
  Giro.Grados(-16,30,93)
  Siguelineas.Encoder31(50,40)
  Giro.Encoder(52,50,30)
  Recto.Tiempo(40,700)
  Giro.Grados(8,-32,100)
  
  'BAJA ARAÑA, AVANZA, LEVANTA ARAÑA

  Brazo.AEncoder(30,-300)
  Recto.Encoder(30,17)
  Brazo.AEncoder(30,0)
  
  'RETROCEDE Y EMPUJA A TORNILLOS PARA COLOCARLOS
  Recto.Encoder(-30,12)
  
EndSub

Sub PruebaVelocidad
  'Time.Reset5()
  'Motor.Move("A",-30,300,"True")
  'tiempo = Time.Get5()
  'LCD.StopUpdate()
  'LCD.Clear()
  'LCD.Write(5,5,"Tiempo: "+tiempo)
  'LCD.Update()
  's()
  StartArm()
  Program.Delay(200)
  Brazo.AEncoder(30,-260)
  Program.Delay(1000)
  Control.logSinAccelDecel(60,15,50)
EndSub

Sub PruebaBloques
  StartArm()
  Brazo.AEncoder(35,-260)
  Siguelineas.Cruce_ExternoF(15,4)
  Giro.Grados(30,-7,92)
  Recto.Encoder(20,7.25)
  Program.Delay(100) 'Habían 200ms
  
  'ORDENA LOS TORNILLOS Y LOS RECOGE
  
  While "True"
    If Buttons.Current = "D" Then
      Rotar(180)
    ElseIf Buttons.Current = "U" Then
      Swap()
    ElseIf Buttons.Current = "L" Then
      Rotar(-90)
    ElseIf Buttons.Current = "R" Then
      Rotar(180)
    EndIf

  EndWhile
  
EndSub

#endregion

Sub MostrarVel
  While "true"
    LCD.StopUpdate()
    LCD.Clear()
    LCD.Write(5,5,"Vel = "+MotorC.GetSpeed())
    LCD.Update()
  EndWhile
EndSub

Function GritarVoltaje()
  
  voltaje = EV3.BatteryVoltage
  GritarNumero(Math.Floor(voltaje))
  GritarNumero(Math.Floor(voltaje * 10) - Math.Floor(voltaje) * 10)
  GritarNumero(Math.Floor(voltaje * 100) - Math.Floor(voltaje * 10) * 10)
  
EndFunction

Function GritarNumero(in number numero)
  If numero = 0 Then
    Speaker.Play(100, "ZERO")
  ElseIf numero = 1 Then
    Speaker.Play(100, "One")
  ElseIf numero = 2 Then
    Speaker.Play(100, "Two")
  ElseIf numero = 3 Then
    Speaker.Play(100, "Three")
  ElseIf numero = 4 Then
    Speaker.Play(100, "Four")
  ElseIf numero = 5 Then
    Speaker.Play(100, "Five")
  ElseIf numero = 6 Then
    Speaker.Play(100, "Six")
  ElseIf numero = 7 Then
    Speaker.Play(100, "Seven")
  ElseIf numero = 8 Then
    Speaker.Play(100, "Eight")
  ElseIf numero = 9 Then
    Speaker.Play(100, "Nine")
  ElseIf numero = 10 Then
    Speaker.Play(100, "Ten")
  EndIf
  
  Speaker.Wait()
EndFunction

Function BajarCuadro()
  Thread.Run = SafetyTimerBrazo
  Program.Delay(1300)
  MotorA.Off()
  Brazo.AEncoder(30,-730)
EndFunction

Sub SafetyTimerBrazo
  Brazo.AEncoder(30,-730)
  MotorA.OffAndBrake()
EndSub

Function Codigo(in number[] marking, out string codigo)
  
  codigo = ""
  
  'Intercambio 2 por 3
  aux = marking[2]
  marking[2] = marking[3]
  marking[3] = aux
  
  For i = 0 To 4
    If marking[i] = 2 Then
      codigo = codigo + "Z"
    ElseIf marking[i] = 3 Then
      codigo = codigo + "V"
    ElseIf marking[i] = 4 Then
      codigo = codigo + "A"
    ElseIf marking[i] = 5 Then
      codigo = codigo + "R"
    EndIf
  EndFor
  
  LCD.StopUpdate()
  LCD.Clear()
  LCD.Write(5,5,"Codigo: "+codigo)
  LCD.Update()
  
EndFunction

Function Rotar(in number grados)
    signo = grados/Math.Abs(grados)
  BajarCuadro()
  Program.Delay(100)
  Motor.Move("D",34*signo,Math.Abs(grados)-4,"True")
  Program.Delay(200)
    Brazo.AEncoder(30,-360)
EndFunction

Function OrdenarBloques(in number[] marking)
  
  Codigo(marking,codigo)
  
  If codigo = "AZRV" Then
    Rotar(180)
  ElseIf codigo = "VRAZ" Then
    Swap()
  ElseIf codigo = "VZRA" Then
    Swap()
    Rotar(180)
    Swap()
    Rotar(-90) 'Horario
  ElseIf codigo = "VZAR" Then
    Swap()
    Rotar(180)
    Swap()
    Rotar(-90)
    Swap()
  ElseIf codigo = "VARZ" Then
    Rotar(180)
    Swap()
    Rotar(-90)
  ElseIf codigo = "VAZR" Then
    Rotar(180)
    Swap()
    Rotar(-90)
    Swap()
  ElseIf codigo = "RVZA" Then
    Rotar(180)
    Swap()
    Rotar(180)
  ElseIf codigo = "RVAZ" Then
    Rotar(180)
    Swap()
    Rotar(180)
    Swap()
  ElseIf codigo = "RZVA" Then
    Rotar(-90)
    Swap()
    Rotar(-90)
    Swap()
  ElseIf codigo = "RZAV" Then
    Rotar(-90)
    Swap()
    Rotar(-90)
  ElseIf codigo = "RAVZ" Then
    Rotar(90)
  ElseIf codigo = "RAZV" Then
    Rotar(90)
    Swap()
   ElseIf codigo = "ZVAR" Then
    Rotar(-90)

  ElseIf codigo = "ZVRA" Then
    Rotar(-90)
    Swap()
  ElseIf codigo = "ZRVA" Then
    Rotar(90)
    Swap()
    Rotar(-90)
  ElseIf codigo = "ZRAV" Then
    Rotar(90)
    Swap()
    Rotar(-90)
    Swap()
  ElseIf codigo = "ZAVR" Then
    Swap()
    Rotar(180)
    Swap()
  ElseIf codigo = "ZARV" Then
    Swap()
    Rotar(180)
  ElseIf codigo = "AVRZ" Then
    Swap()
    Rotar(-90)
    Swap()
  ElseIf codigo = "AVZR" Then
    Swap()
    Rotar(-90)
  ElseIf codigo = "ARVZ" Then
    Rotar(-90)
    Swap()
    Rotar(180)
  ElseIf codigo = "ARZV" Then
    Rotar(-90)
    Swap()
    Rotar(180)
    Swap()
  ElseIf codigo = "AZVR" Then
    Rotar(180)
    Swap()
  Else
    'Directo
  EndIf
  
  'Recogida
  
  Recto.Encoder(-20,8)
  Giro.Grados(15,-15,185)
  Recto.Encoder(-30,0)
  Brazo.AEncoder(20,24)

EndFunction

Function Swap()
  Recto.Encoder(-15,7.5)
  BajarCuadro()
  Recto.Encoder(-15,2)
  Motor.Move("D",50,180,"True")
  Brazo.AEncoder(30,-360)
  
  Recto.Encoder(15,15)
  Recto.Encoder(-15,5)
EndFunction

Function s()
  Buttons.Flush()
  Buttons.Wait()
EndFunction

Sub GritarColor
 
  RGB.gritar(color)
 
EndSub