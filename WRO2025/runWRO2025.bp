folder "prjs""WRO2025"

import "modules/Siguelineas"
import "modules/Giro"
import "modules/Recto"
import "modules/Shift"
import "modules/Brazo"
import "modules/Smart"
import "modules/RGB"

'Motor A: Subir brazo / Bajar araña (+)
'Motor D: Abrir brazo (+)

'Disposición de tornillos
'
'   0\       |2
'   1|       \3
'

#region Entorno de Ejecución

Setup()
Main()

#EndRegion

#region Programas de Inicio

Sub Setup
  
  Sensor.SetMode(1, 0)
  Sensor.SetMode(2, 4)
  Sensor.SetMode(3, 0)
  Sensor.SetMode(4, 0)
  
  diametro = 6.24
  
  '965
  Giro.G1 = 965 / 360
  
  negro1 = 10
  negro3 = 9
  negro4 = 8
  
  blanco1 = 65
  blanco3 = 59
  blanco4 = 55
  
  RGB.VALUENEGRO = 4
  RGB.VALUEBLANCO = 32
  RGB.RWHITE = 57
  RGB.GWHITE = 71
  RGB.BWHITE = 73
  
  'Auto definición de propiedades
  
  Recto.diametro = diametro
  Giro.diametro = diametro
  Siguelineas.diametro = diametro
  Smart.diametro = diametro
  
  Siguelineas.negro1 = negro1
  Siguelineas.negro3 = negro3
  Siguelineas.negro4 = negro4
  
  Siguelineas.blanco1 = blanco1
  Siguelineas.blanco3 = blanco3
  Siguelineas.blanco4 = blanco4
  
  Smart.negro1 = negro1
  Smart.negro3 = negro3
  Smart.negro4 = negro4
  
  Smart.blanco1 = blanco1
  Smart.blanco3 = blanco3
  Smart.blanco4 = blanco4
  
  Recto.negro = (negro1 + negro3 + negro4) / 3
  Recto.blanco = (blanco1 + blanco3 + blanco4) / 3
  
  Giro.negro = (negro1 + negro3 + negro4) / 3
  Giro.blanco = (blanco1 + blanco3 + blanco4) / 3
  
  color = 0
  
EndSub

Sub StartArm
  
  Brazo.ATimer(100,1000)
  MotorA.ResetCount()
  Program.Delay(100)
  Brazo.AEncoder(35,-200)
  MotorA.ResetCount()
  Speaker.Play(100,"Connect")
  Speaker.Wait()
EndSub

#EndRegion

#region Subrutinas de Ejecución

Sub Main
  GritarVoltaje()
  StartArm()
  Speaker.Play(100,"One")
  s()
  Program.Delay(150)
  
  Brazo.AEncoder(35,-310)
  'Sale de casa
  Recto.EncoderF(50,5)
  Siguelineas.Encoder14(50,23)
  
  'Dos arcos para acercarse a puerta amarilla
  Giro.Grados(10,45,68)
  'Motor.Stop("BC","True")
  'Program.Delay(200)
  Giro.Grados(22.5,5,78)
  'Program.Delay(200)
  'Anda hasta linea y abre puerta
  
  Giro.Encoder(50,49,44)
  Recto.Negro1(50,4)
  
  'Gira hacia cruce y toma referencia
  Giro.Grados(50,-17,94)
  Siguelineas.Cruce14(40)
  
  'Media vuelta
  Giro.Grados(70,-62,185)
  
  'Anda por linea para acercarse a marking de bloque grande
  Siguelineas.Encoder31F(30,40)
  Recto.Encoder(30,9)
  
  'Se acerca a marking
  Giro.Grados(-30,30,90)
  Recto.Encoder(20,13)
  
  'Gira y lee
  Giro.Grados(20,-20,90)
  Program.Delay(100)
  Recto.Encoder(-40,2)
  RGB.Detect(2,5,markingGrande)
  color = markingGrande
  Thread.run = GritarColor
  
  marking[0] = 0
  'Dos arcos para alejarse de pared
  Giro.Grados(40,9,45)
  Giro.Grados(9,40,36)
  
  'Anda a markings y los lee
  Giro.Encoder(21,20,15)
  RGB.Detect(2,5,marking[1])
  color = marking[1]
  Thread.run = GritarColor
  
  'Echa atrás y gira
  Recto.Encoder(-30,5.8)
  Giro.Grados(30,-30,98)
  
  'Se acerca para leer 3 y 4 marking
  Recto.Encoder(30,8)
  Giro.Grados(30,-30,90)
  
  'Choca con pared y lee
  Recto.Tiempo(-20,500)
  
  'Lee 3 marking
  RGB.Detect(2,5,marking[2])
  color = marking[2]
  Thread.run = GritarColor
  
  'Lee 4 marking
  Recto.Encoder(20,8)
  RGB.Detect(2,5,marking[3])
  color = marking[3]
  Thread.run = GritarColor
  
  marking[0] = 14 - (marking[1] + marking[2] + marking[3])
  
  'Avanzamos a línea
  Giro.Negro1F(50,43,1)
  Giro.Negro1F(5,25,4)
  Siguelineas.Encoder14F(20,3)
  Siguelineas.Cruce14(60)
  
  'Doble arco atrás para tirar del rojo
  Giro.Grados(-25,30,86)
  MotorBC.OffAndBrake()
  Program.Delay(100)
  Siguelineas.Encoder14(30,21)
  
  Giro.Grados(60,-40,89)
  
  'Retrocede y baja araña
  Recto.EncoderF(-50,35)
  Recto.Encoder(-30,5)
  Brazo.AEncoder(20,40)
  Program.Delay(200)
  
  'Tira de la barrera, retrocede y levanta araña
  Recto.EncoderF(30,17)
  Recto.Tiempo(10,400)
  
  Recto.Encoder(-20,3)
  Brazo.AEncoder(20,-310)
  
  'Avanza a linea
  Giro.Encoder(30,20,13)
  Giro.Encoder(20,30,13)
  Recto.Negro1(20,1)
  
  'Gira hacia barreras
  Giro.Grados(-8,20,85)
  Giro.Negro1(-20,20,4)
  Giro.Grados(20,0,10)
  Siguelineas.Encoder14(15,10)
  Siguelineas.Cruce_Externo(15,3)
  Program.Delay(300)
  
  'Media vuelta y coge barreras
  Giro.Encoder(32,26,15)
  Giro.Encoder(27,32,11)
  Recto.Encoder(12,4)
  Recto.Encoder(-10,6)
  BajarCuadro()
  Program.Delay(400)
  Recto.Encoder(-25,17.5)
  
  'Medio pivote avance y arco
  Giro.Grados(-20,20,95)
  
  Siguelineas.Encoder14(35,30)
  Recto.Encoder(40,13)
  
  'Gira y deja la barrera amarilla
  
  Giro.Grados(30,0,144)
  Recto.Encoder(20,1)
  Brazo.AEncoder(35,-330)
  Recto.Encoder(-25,6.5)
  BajarCuadro()
  Program.Delay(400)
  
  'Deja barrera roja
  Giro.Grados(-40,20,80)
  Recto.Encoder(40,8)
  Brazo.AEncoder(40,-330)
  
  'Vuelve al pasillo central
  Giro.Grados(35,-35,168)
  Giro.EncoderF(63,70,65.5)
  Giro.EncoderF(60*0.5,70*0.5,3.5)
  Recto.Blanco1(30,4)
  Giro.Grados(30,-31,85)
  'Giro.Negro1(20,-20,3)
  
  'Coge referencia en el cruce y siguelineas hasta azul
  Siguelineas.Encoder31F(30,10)
  Siguelineas.Cruce_ExternoF(40,4)
  Siguelineas.Encoder31F(80,80)
  Siguelineas.Encoder31F(30,15)
  'Anda alante y coge bloque
  Recto.Encoder(20,20)
  Giro.Grados(15,-15,92)
  Recto.Encoder(20,8)
  Brazo.AEncoder(30,-740)
  
    If markingGrande = 5 Then
      Motor.Move("D", -60, 90, "true")
    Else 
      Motor.Move("D", 60, (markingGrande - 2)*90, "true")
    EndIf
  
  
  'Coge bloque grande y toma linea referencia
  Recto.Encoder(80,28)
  Recto.Blanco1(40,1)
  Recto.Encoder(-20,1)
  Motor.Stop("BC","True")
  
  Program.Delay(150)
  Giro.Grados(15,-15,97)
  
  'Anda hasta linea para dejar bloque
  Recto.Encoder(80,54)
  
  'MotorC.ResetCount()
  'While Motor.GetCount("C") <= 400 or Sensor.ReadPercent(1)<5
    'Motor.StartSync("BC",-20,20)
  'EndWhile
  
  'Recto.Encoder(-10,6)   
  Brazo.AEncoder(40,-500)
  If markingGrande = 5 or markingGrande = 3 Then
    Motor.Move("D", 60, -90, "true")
  EndIf
  Brazo.AEncoder(40,-330)
  Recto.Encoder(-10,10)
  
  
  'Se coloca para levantar bandera
  Giro.Grados(30,-30,180)
    
    Giro.Encoder(30,17,23)
    Giro.Encoder(17,30,20)
    
  Recto.Encoder(-50,17)
  
  Giro.Grados(-30,30,90)
  Recto.Tiempo(-30,500)
  Recto.EncoderF(30,3)
  
   'Levanta primera bandera
  Brazo.ATimer(100,600)
  Brazo.AEncoder(100,-300)
  
  'Vuelve a linea para coger los 4 bloques
  Giro.Grados(35,-3,95)
  Siguelineas.Cruce_ExternoF(20,4)
  
  Giro.Grados(30,-10,90)
  Siguelineas.Encoder31F(10,6)
  
  Giro.Encoder(13*0.75,30*0.75,6.5)
  Giro.Encoder(30*0.75,13*0.75,6.5)
  
  Recto.Encoder(-20,6)
  Program.Delay(200)
  
  'Coge y ordena los bloques
  OrdenarBloques(marking)
  Recto.Encoder(30,10)
  
  'Vuelve a línea para dejar luego los bloques
  Siguelineas.Cruce_Externo(30,3)
  Giro.Grados(-14,30,95)
  
  Siguelineas.Encoder14(35,20)
  Giro.Encoder(35,34,44)
  
  'Gira al lado de las banderas para dejar bloques
  Giro.Grados(10,-10,105)
  Recto.Tiempo(-60,1000)
  
  'Deja los bloques
  Recto.Encoder(20,3.5)
  Giro.Grados(20,-20,105)
  Recto.Tiempo(35,700)
  Brazo.AEncoder(50,-330)
  Recto.Encoder(-15,9)
  Recto.Encoder(15,8)
  Brazo.AEncoder(30,0)
  Recto.Encoder(-15,9)
  Recto.Encoder(15,17)
  Recto.Encoder(-15,5)
  'Gira para levatar banderas
  Giro.Grados(-15,15,88)
  
  'Cuadra con pared y la levanta
  Recto.Tiempo(-30,500)
  Recto.Encoder(15,12)
  Giro.Grados(-10,10,9)
  Brazo.AEncoder(30,-250)
  Recto.Encoder(10,5)
  Recto.Encoder(-10,5)
  Brazo.AEncoder(50,0)
  Giro.Grados(10,-10,15)
  
  'Vuelve a linea y va a dejar los otros bloques
  Recto.EncoderF(100,60)
  Recto.Blanco1F(40,1)
  Recto.Negro1F(20,1)
  
  Giro.Grados(-18,30,93)
  
  Siguelineas.Encoder14F(40,10)
  Siguelineas.Encoder14F(80,70)
  Siguelineas.Cruce_Externo(40,3)
  
  'Llega a la otra parte del mapa
  Recto.Encoder(20,2)
  Giro.Grados(-16,30,93)
  
  Siguelineas.Encoder31(50,40)
  Recto.Encoder(50,30)
  
  'cuadramos con pared para dejar los bloques
  Recto.Tiempo(40,1000)
  Giro.Grados(8,-32,94)
  Brazo.AEncoder(30,-300)
  
  Recto.Encoder(30,20)
  Brazo.AEncoder(30,0)
  Recto.Encoder(-30,13.2)
  
EndSub

Sub MainPrueba
  markingGrande=5
  marking[0]=3
  marking[1]=4
  marking[2]=2
  marking[3]=5
  GritarVoltaje()
  StartArm()
  Speaker.Play(100,"Two")
  s()
  MotorD.ResetCount()
  Program.Delay(150)
  Brazo.AEncoder(35,-330)
  MotorA.OffAndBrake()
  Program.Delay(500)
  
  Siguelineas.Cruce_ExternoF(20,4)
  
  Giro.Grados(30,-14,90)
  Siguelineas.Encoder31F(10,6)
  
  Giro.Encoder(13*0.75,30*0.75,6.5)
  Giro.Encoder(30*0.75,13*0.75,6.5)
  
  Recto.Encoder(-20,6)
  Program.Delay(200)
  
  'Coge y ordena los bloques
  OrdenarBloques(marking)
  Recto.Encoder(30,10)
  
  'Vuelve a línea para dejar luego los bloques
  Siguelineas.Cruce_Externo(30,3)
  Giro.Grados(-14,30,95)
  
  Siguelineas.Encoder14(35,20)
  Giro.Encoder(35,34,44)
  
  'Gira al lado de las banderas para dejar bloques
  Giro.Grados(10,-10,105)
  Recto.Tiempo(-60,1000)
  
  'Deja los bloques
  Recto.Encoder(20,3.5)
  Giro.Grados(20,-20,105)
  Recto.Tiempo(35,700)
  Brazo.AEncoder(50,-330)
  Recto.Encoder(-15,9)
  Recto.Encoder(15,8)
  Brazo.AEncoder(30,0)
  Recto.Encoder(-15,9)
  Recto.Encoder(15,17)
  Recto.Encoder(-15,5)
  s()
  'Gira para levatar banderas
  Giro.Grados(-15,15,85)
  
  'Cuadra con pared y la levanta
  Recto.Tiempo(-30,500)
  Recto.Encoder(15,12)
  Giro.Grados(-10,10,7)
  Brazo.AEncoder(30,-200)
  Recto.Encoder(10,5)
  Recto.Encoder(-10,5)
  Brazo.AEncoder(50,0)
  Giro.Grados(10,-10,15)
  
  'Vuelve a linea y va a dejar los otros bloques
  Recto.EncoderF(100,60)
  Recto.Blanco1F(40,1)
  Recto.Negro1F(20,1)
  
  Giro.Grados(-12,30,90)
  
  Siguelineas.Encoder14F(40,10)
  Siguelineas.Encoder14F(80,70)
  Siguelineas.Cruce_Externo(40,3)
  
  'Llega a la otra parte del mapa
  Recto.Encoder(20,2)
  Giro.Grados(-30,30,93)
  
  Siguelineas.Encoder31(50,40)
  Recto.Encoder(50,30)
  
  'cuadramos con pared para dejar los bloques
  Recto.Tiempo(40,1000)
  Giro.Grados(8,-32,94)
  Brazo.AEncoder(30,-300)
  
  Recto.Encoder(30,20)
  Brazo.AEncoder(30,0)
  Recto.Encoder(-30,13.2)
EndSub

Sub PruebaVelocidad
  Time.Reset5()
  Motor.Move("A",-30,300,"True")
  tiempo = Time.Get5()
  LCD.StopUpdate()
  LCD.Clear()
  LCD.Write(5,5,"Tiempo: "+tiempo)
  LCD.Update()
  s()
EndSub

#endregion

Sub MostrarVel
  While "true"
    LCD.StopUpdate()
    LCD.Clear()
    LCD.Write(5,5,"Vel = "+MotorC.GetSpeed())
    LCD.Update()
  EndWhile
EndSub

Function GritarVoltaje()
  
  voltaje = EV3.BatteryVoltage
  GritarNumero(Math.Floor(voltaje))
  GritarNumero(Math.Floor(voltaje * 10) - Math.Floor(voltaje) * 10)
  GritarNumero(Math.Floor(voltaje * 100) - Math.Floor(voltaje * 10) * 10)
  
EndFunction

Function GritarNumero(in number numero)
  If numero = 0 Then
    Speaker.Play(100, "ZERO")
  ElseIf numero = 1 Then
    Speaker.Play(100, "One")
  ElseIf numero = 2 Then
    Speaker.Play(100, "Two")
  ElseIf numero = 3 Then
    Speaker.Play(100, "Three")
  ElseIf numero = 4 Then
    Speaker.Play(100, "Four")
  ElseIf numero = 5 Then
    Speaker.Play(100, "Five")
  ElseIf numero = 6 Then
    Speaker.Play(100, "Six")
  ElseIf numero = 7 Then
    Speaker.Play(100, "Seven")
  ElseIf numero = 8 Then
    Speaker.Play(100, "Eight")
  ElseIf numero = 9 Then
    Speaker.Play(100, "Nine")
  ElseIf numero = 10 Then
    Speaker.Play(100, "Ten")
  EndIf
  
  Speaker.Wait()
EndFunction

Function BajarCuadro()
  Brazo.AEncoder(30,-780)
EndFunction

Function Codigo(in number[] marking, out string codigo)
  
  codigo = ""
  
  'Intercambio 2 por 3
  aux = marking[2]
  marking[2] = marking[3]
  marking[3] = aux
  
  For i = 0 To 4
    If marking[i] = 2 Then
      codigo = codigo + "Z"
    ElseIf marking[i] = 3 Then
      codigo = codigo + "V"
    ElseIf marking[i] = 4 Then
      codigo = codigo + "A"
    ElseIf marking[i] = 5 Then
      codigo = codigo + "R"
    EndIf
  EndFor
  
  LCD.StopUpdate()
  LCD.Clear()
  LCD.Write(5,5,"Codigo: "+codigo)
  LCD.Update()
  
EndFunction

Function Rotar(in number grados)
    signo = grados/Math.Abs(grados)
  BajarCuadro()
  Program.Delay(100)
  Motor.Move("D",34*signo,Math.Abs(grados)-8,"True")
  Program.Delay(200)
    Brazo.AEncoder(30,-360)
EndFunction

Function OrdenarBloques(in number[] marking)
  
  Codigo(marking,codigo)
  
  If codigo = "VRZA" Then
    'Directo
  ElseIf codigo = "VRAZ" Then
    Swap()
  ElseIf codigo = "VZRA" Then
    Swap()
    Rotar(180)
    Swap()
    Rotar(-90) 'Horario
  ElseIf codigo = "VZAR" Then
    Swap()
    Rotar(180)
    Swap()
    Rotar(-90)
    Swap()
  ElseIf codigo = "VARZ" Then
    Rotar(180)
    Swap()
    Rotar(-90)
  ElseIf codigo = "VAZR" Then
    Rotar(180)
    Swap()
    Rotar(-90)
    Swap()
  ElseIf codigo = "RVZA" Then
    Rotar(180)
    Swap()
    Rotar(180)
  ElseIf codigo = "RVAZ" Then
    Rotar(180)
    Swap()
    Rotar(180)
    Swap()
  ElseIf codigo = "RZVA" Then
    Rotar(-90)
    Swap()
    Rotar(-90)
    Swap()
  ElseIf codigo = "RZAV" Then
    Rotar(-90)
    Swap()
    Rotar(-90)
  ElseIf codigo = "RAVZ" Then
    Rotar(90)
  ElseIf codigo = "RAZV" Then
    Rotar(90)
    Swap()
   ElseIf codigo = "ZVAR" Then
    Rotar(-90)

  ElseIf codigo = "ZVRA" Then
    Rotar(-90)
    Swap()
  ElseIf codigo = "ZRVA" Then
    Rotar(90)
    Swap()
    Rotar(-90)
  ElseIf codigo = "ZRAV" Then
    Rotar(90)
    Swap()
    Rotar(-90)
    Swap()
  ElseIf codigo = "ZAVR" Then
    Swap()
    Rotar(180)
    Swap()
  ElseIf codigo = "ZARV" Then
    Swap()
    Rotar(180)
  ElseIf codigo = "AVRZ" Then
    Swap()
    Rotar(-90)
    Swap()
  ElseIf codigo = "AVZR" Then
    Swap()
    Rotar(-90)
  ElseIf codigo = "ARVZ" Then
    Rotar(-90)
    Swap()
    Rotar(180)
  ElseIf codigo = "ARZV" Then
    Rotar(-90)
    Swap()
    Rotar(180)
    Swap()
  ElseIf codigo = "AZVR" Then
    Rotar(180)
    Swap()
  Else
    Rotar(180)
  EndIf
  
  'Recogida
  
  Recto.Encoder(-20,8)
  Giro.Grados(15,-15,182)
  Recto.Encoder(-30,23)
  Brazo.AEncoder(20,24)

EndFunction

Function Swap()
  Recto.Encoder(-15,5)
  BajarCuadro()
  Recto.Encoder(-15,10)
  Motor.Move("D",50,180,"True")
  Brazo.AEncoder(30,-360)
  
  Recto.Encoder(15,21)
  Recto.Encoder(-15,5)
EndFunction

Function s()
  Buttons.Flush()
  Buttons.Wait()
EndFunction

Sub GritarColor
 
  RGB.gritar(color)
 
EndSub