DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_105
DATAF VLV_AENC_105
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V1_35
DATAF VLV_V2_35
DATAF VLV_ANGLE_35
DATAF VLV_VELOCIDAD_2
DATAF VLV_DISTANCIA_2
DATAF VLV_REPS_110
DATAF VLV_COLOR_110
DATAF VLV_COLOR_122
DATAF VLV_VELOCIDAD1_15
DATAF VLV_VELOCIDAD2_15
DATAF VLV_ENCODER_15
DATAF VLV_VELOCIDAD_3
DATAF VLV_SENS_3
DATAF VLV_V_95
DATAF VLV_AENC_95
DATAF VLV_VELOCIDAD_39
DATAF VLV_V_101
DATAF VLV_VELOCIDAD_13
DATAF VLV_TIEMPO_13
DATAF VLV_READ_131
DATAF VLV_VELOCIDAD_75
DATAF VLV_KP_75
DATAF VLV_KI_75
DATAF VLV_KD_75
DATAF VLV_ENCODER_75
DATAF VLV_VELOCIDAD_5
DATAF VLV_SENS_5
DATAF VLV_VEL_33
DATAF VLV_VELOCIDAD_82
DATAF VLV_KP_82
DATAF VLV_KI_82
DATAF VLV_KD_82
DATAF VLV_LADO_82
DATAF VLV_SENS_82
DATAF VLV_V_104
DATAF VLV_GRADOS_104
DATAF VLV_V0_56
DATAF VLV_VMAX_56
DATAF VLV_KP_56
DATAF VLV_KI_56
DATAF VLV_KD_56
DATAF VLV_ACCELENCODER_56
DATAF VLV_VELOCIDAD_72
DATAF VLV_KP_72
DATAF VLV_KI_72
DATAF VLV_KD_72
DATAF VLV_VELOCIDAD_76
DATAF VLV_KP_76
DATAF VLV_KI_76
DATAF VLV_KD_76
DATAF VLV_ENCODER_76
DATAF VLV_VMAX_88
DATAF VLV_KP_88
DATAF VLV_KI_88
DATAF VLV_KD_88
DATAF VLV_REPS_111
DATAF VLV_COLOR_111
DATAF VLV_REPS_112
DATAF VLV_COLOR_112
DATAF VLV_REPS_113
DATAF VLV_COLOR_113
ARRAY16 VLV_M_134 2
DATAF VLV_K_134
ARRAY16 VLV_S_134 2
ARRAY16 VLV_M_132 2
ARRAY16 VLV_S_132 2
ARRAY16 VLV_M_133 2
ARRAY16 VLV_S_133 2
DATAF VLV_V_108
DATAF VLV_T_108
DATAF VLV_V_109
DATAF VLV_AENC_109
DATAF VGV_CASO
DATAF VGV_BLOQUE
DATAF VLV_COLOR_114
DATAF VLV_COLOR_115
DATAF VLV_COLOR_116
DATAF VLV_COLOR_117
ARRAY16 VLV_VELI_123 2
ARRAY16 VLV_VELD_123 2
ARRAY16 VLV_OMEGAI_K1_123 2
ARRAY16 VLV_OMEGAD_K1_123 2
ARRAY16 VLV_V_123 2
ARRAY16 VLV_DH_T_123 2
ARRAY16 VLV_S_INV_123 2
DATAF VGV_CENTRO
DATAF VGV_XTIME
DATAF VGV_YTIME
DATAF VGV_THETATIME
DATAF VGV_XTCORRECT
DATAF VGV_YTCORRECT
DATAF VGV_THETATCORRECT
DATAF VGV_SENTIDO_D
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DW
DATAF VGV_DIAMETER
DATAF VGV_D_T
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_G1
DATAF VGV_ROJOS
DATAF VGV_AMARILLOS
DATAF VGV_VERDES
DATAF VGV_AZULES
ARRAY16 VGV_BOMBOCLAT 2
DATAF VGV_NUMERO_BLOQUES
ARRAY16 VGV_ALPHA_L 2
ARRAY16 VGV_ALPHA_R 2
DATAF VGV_OLDB
DATAF VGV_OLDC
ARRAY16 VGV_XT 2
ARRAY16 VGV_YT 2
ARRAY16 VGV_THETAT 2
DATAF VGV_I
DATAF VGV_D_L
DATAF VGV_D_R
DATAF VGV_D
DATAF VGV_DELTA_THETA
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAF VLV_DIAMETRO_2
DATAF VLV_ENC_2
DATAF VLV_START_B_2
DATAF VLV_START_C_2
DATAF VLV_ENCODER_C_2
DATAF VLV_ENCODER_B_2
DATAF VLV_ERROR_2
DATAF VLV_PROPORCIAL_2
DATAF VLV_START_B_3
DATAF VLV_START_C_3
DATAF VLV_ENCODER_B_3
DATAF VLV_ENCODER_C_3
DATAF VLV_ERROR_3
DATAF VLV_PROPORCIAL_3
DATAF VLV_START_B_5
DATAF VLV_START_C_5
DATAF VLV_ENCODER_B_5
DATAF VLV_ENCODER_C_5
DATAF VLV_ERROR_5
DATAF VLV_PROPORCIAL_5
DATAF VLV_START_B_13
DATAF VLV_START_C_13
DATAF VLV_ENCODER_B_13
DATAF VLV_ENCODER_C_13
DATAF VLV_ERROR_13
DATAF VLV_PROPORCIAL_13
DATAF VLV_DIAMETRO_15
DATAF VLV_DISTANCIA_15
DATAF VLV_AVANCE_33
DATAF VLV_GINICIO_33
DATAF VLV_AJUSTE_33
DATAS VLV_I_35 252
DATAS VLV_D_35 252
DATAF VLV_SIGNO_35
DATAF VLV_VMIN_35
DATAF VLV_VMAX_35
DATAF VLV_ENCODR_35
DATAS VLV_I_39 252
DATAS VLV_D_39 252
DATAF VLV_ENCODR_39
DATAF VLV_ANGLE_39
DATAS VLV_I_56 252
DATAS VLV_D_56 252
DATAF VLV_U_56
DATAF VLV_ERROR_56
DATAF VLV_OLDERROR_56
DATAF VLV_ERRSUM_56
DATAF VLV_VEL_56
DATAF VLV_SENTIDO_56
DATAS VLV_I_72 252
DATAS VLV_D_72 252
DATAF VLV_ERROR_72
DATAF VLV_OLDERROR_72
DATAF VLV_ERRSUM_72
DATAF VLV_U_72
DATAF VLV_SENTIDO_72
DATAS VLV_I_75 252
DATAS VLV_D_75 252
DATAF VLV_ERROR_75
DATAF VLV_OLDERROR_75
DATAF VLV_ERRSUM_75
DATAF VLV_U_75
DATAF VLV_SENTIDO_75
DATAF VLV_START_C_75
DATAF VLV_ENCODER_C_75
DATAS VLV_I_76 252
DATAS VLV_D_76 252
DATAF VLV_ERROR_76
DATAF VLV_OLDERROR_76
DATAF VLV_ERRSUM_76
DATAF VLV_U_76
DATAF VLV_SENTIDO_76
DATAF VLV_START_C_76
DATAF VLV_ENCODER_C_76
DATAS VLV_I_82 252
DATAS VLV_D_82 252
DATAF VLV_ERROR_82
DATAF VLV_OLDERROR_82
DATAF VLV_ERRSUM_82
DATAF VLV_U_82
DATAF VLV_SENTIDO_82
DATAF VLV_READER_82
DATAS VLV_I_88 252
DATAS VLV_D_88 252
DATAF VLV_V0_88
DATAF VLV_ACCELENCODER_88
DATAF VLV_U_88
DATAF VLV_ERRSUM_88
DATAF VLV_OLDERROR_88
DATAF VLV_VEL_88
DATAF VLV_SENTIDO_88
DATAF VLV_ERROR_88
DATAF VLV_ENCDIFF_95
DATAF VLV_SIGNO_95
DATAF VLV_AENC_101
DATAF VLV_DIFFA_104
DATAF VLV_DIFFD_104
DATAF VLV_SAFETYTIMER_104
DATAF VLV_SIGNOA_104
DATAF VLV_SIGNOD_104
DATAF VLV_VELA_104
DATAF VLV_VELD_104
DATAF VLV_ENCDIFF_105
DATAF VLV_SIGNO_105
DATAF VLV_ENCDIFF_109
DATAF VLV_SIGNO_109
DATAF VLV_SAFETYTIMER_109
DATAF VLV_RED_110
DATAF VLV_YELLOW_110
DATAF VLV_GREEN_110
DATAF VLV_BLUE_110
DATAF VLV_VALUENEGRO_110
DATAF VLV_VALUEBLANCO_110
DATAF VLV_RWHITE_110
DATAF VLV_GWHITE_110
DATAF VLV_BWHITE_110
DATAF VLV_HUE_110
DATAF VLV_SAT_110
DATAF VLV_VALUE_110
ARRAY16 VLV_RNORMA_110 2
ARRAY16 VLV_GNORMA_110 2
ARRAY16 VLV_BNORMA_110 2
ARRAY16 VLV_MAXA_110 2
DATAF VLV_J_110
ARRAY16 VLV_RGB_110 2
DATAF VLV_RRAW_110
DATAF VLV_GRAW_110
DATAF VLV_BRAW_110
DATAF VLV_RNORM_110
DATAF VLV_GNORM_110
DATAF VLV_BNORM_110
DATAF VLV_MAX_110
DATAF VLV_MIN_110
DATAF VLV_RGBGREY_110
DATAF VLV_RED_111
DATAF VLV_YELLOW_111
DATAF VLV_GREEN_111
DATAF VLV_BLUE_111
DATAF VLV_VALUENEGRO_111
DATAF VLV_VALUEBLANCO_111
DATAF VLV_RWHITE_111
DATAF VLV_GWHITE_111
DATAF VLV_BWHITE_111
DATAF VLV_HUE_111
DATAF VLV_SAT_111
DATAF VLV_VALUE_111
ARRAY16 VLV_RNORMA_111 2
ARRAY16 VLV_GNORMA_111 2
ARRAY16 VLV_BNORMA_111 2
ARRAY16 VLV_MAXA_111 2
DATAF VLV_J_111
ARRAY16 VLV_RGB_111 2
DATAF VLV_RRAW_111
DATAF VLV_GRAW_111
DATAF VLV_BRAW_111
DATAF VLV_RNORM_111
DATAF VLV_GNORM_111
DATAF VLV_BNORM_111
DATAF VLV_MAX_111
DATAF VLV_MIN_111
DATAF VLV_RGBGREY_111
DATAF VLV_RED_112
DATAF VLV_YELLOW_112
DATAF VLV_GREEN_112
DATAF VLV_BLUE_112
DATAF VLV_VALUENEGRO_112
DATAF VLV_VALUEBLANCO_112
DATAF VLV_RWHITE_112
DATAF VLV_GWHITE_112
DATAF VLV_BWHITE_112
DATAF VLV_HUE_112
DATAF VLV_SAT_112
DATAF VLV_VALUE_112
ARRAY16 VLV_RNORMA_112 2
ARRAY16 VLV_GNORMA_112 2
ARRAY16 VLV_BNORMA_112 2
ARRAY16 VLV_MAXA_112 2
DATAF VLV_J_112
ARRAY16 VLV_RGB_112 2
DATAF VLV_RRAW_112
DATAF VLV_GRAW_112
DATAF VLV_BRAW_112
DATAF VLV_RNORM_112
DATAF VLV_GNORM_112
DATAF VLV_BNORM_112
DATAF VLV_MAX_112
DATAF VLV_MIN_112
DATAF VLV_RGBGREY_112
DATAF VLV_RED_113
DATAF VLV_YELLOW_113
DATAF VLV_GREEN_113
DATAF VLV_BLUE_113
DATAF VLV_VALUENEGRO_113
DATAF VLV_VALUEBLANCO_113
DATAF VLV_RWHITE_113
DATAF VLV_GWHITE_113
DATAF VLV_BWHITE_113
DATAF VLV_HUE_113
DATAF VLV_SAT_113
DATAF VLV_VALUE_113
ARRAY16 VLV_RNORMA_113 2
ARRAY16 VLV_GNORMA_113 2
ARRAY16 VLV_BNORMA_113 2
ARRAY16 VLV_MAXA_113 2
DATAF VLV_J_113
ARRAY16 VLV_RGB_113 2
DATAF VLV_RRAW_113
DATAF VLV_GRAW_113
DATAF VLV_BRAW_113
DATAF VLV_RNORM_113
DATAF VLV_GNORM_113
DATAF VLV_BNORM_113
DATAF VLV_MAX_113
DATAF VLV_MIN_113
DATAF VLV_RGBGREY_113
DATAF VLV_DETERMINANTE_133
DATAF VLV_I_134
DATA32 RUNCOUNTER_F_ODOMETRY_0
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_READ_131
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_LADO_82
    MOVEF_F 0.0 VLV_SENS_82
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYCREATE_FLOAT VLV_M_134
    MOVEF_F 0.0 VLV_K_134
    CALL ARRAYCREATE_FLOAT VLV_S_134
    CALL ARRAYCREATE_FLOAT VLV_M_132
    CALL ARRAYCREATE_FLOAT VLV_S_132
    CALL ARRAYCREATE_FLOAT VLV_M_133
    CALL ARRAYCREATE_FLOAT VLV_S_133
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VGV_CASO
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYCREATE_FLOAT VLV_VELI_123
    CALL ARRAYCREATE_FLOAT VLV_VELD_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAI_K1_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAD_K1_123
    CALL ARRAYCREATE_FLOAT VLV_V_123
    CALL ARRAYCREATE_FLOAT VLV_DH_T_123
    CALL ARRAYCREATE_FLOAT VLV_S_INV_123
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    CALL ARRAYCREATE_FLOAT VGV_BOMBOCLAT
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_L
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYCREATE_FLOAT VGV_XT
    CALL ARRAYCREATE_FLOAT VGV_YT
    CALL ARRAYCREATE_FLOAT VGV_THETAT
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_D_L
    MOVEF_F 0.0 VGV_D_R
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_DELTA_THETA
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    MOVEF_F 0.0 VLV_DIAMETRO_2
    MOVEF_F 0.0 VLV_ENC_2
    MOVEF_F 0.0 VLV_START_B_2
    MOVEF_F 0.0 VLV_START_C_2
    MOVEF_F 0.0 VLV_ENCODER_C_2
    MOVEF_F 0.0 VLV_ENCODER_B_2
    MOVEF_F 0.0 VLV_ERROR_2
    MOVEF_F 0.0 VLV_PROPORCIAL_2
    MOVEF_F 0.0 VLV_START_B_3
    MOVEF_F 0.0 VLV_START_C_3
    MOVEF_F 0.0 VLV_ENCODER_B_3
    MOVEF_F 0.0 VLV_ENCODER_C_3
    MOVEF_F 0.0 VLV_ERROR_3
    MOVEF_F 0.0 VLV_PROPORCIAL_3
    MOVEF_F 0.0 VLV_START_B_5
    MOVEF_F 0.0 VLV_START_C_5
    MOVEF_F 0.0 VLV_ENCODER_B_5
    MOVEF_F 0.0 VLV_ENCODER_C_5
    MOVEF_F 0.0 VLV_ERROR_5
    MOVEF_F 0.0 VLV_PROPORCIAL_5
    MOVEF_F 0.0 VLV_START_B_13
    MOVEF_F 0.0 VLV_START_C_13
    MOVEF_F 0.0 VLV_ENCODER_B_13
    MOVEF_F 0.0 VLV_ENCODER_C_13
    MOVEF_F 0.0 VLV_ERROR_13
    MOVEF_F 0.0 VLV_PROPORCIAL_13
    MOVEF_F 0.0 VLV_DIAMETRO_15
    MOVEF_F 0.0 VLV_DISTANCIA_15
    MOVEF_F 0.0 VLV_AVANCE_33
    MOVEF_F 0.0 VLV_GINICIO_33
    MOVEF_F 0.0 VLV_AJUSTE_33
    STRINGS DUPLICATE '' VLV_I_35
    STRINGS DUPLICATE '' VLV_D_35
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VMIN_35
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_ENCODR_35
    STRINGS DUPLICATE '' VLV_I_39
    STRINGS DUPLICATE '' VLV_D_39
    MOVEF_F 0.0 VLV_ENCODR_39
    MOVEF_F 0.0 VLV_ANGLE_39
    STRINGS DUPLICATE '' VLV_I_56
    STRINGS DUPLICATE '' VLV_D_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    MOVEF_F 0.0 VLV_VEL_56
    MOVEF_F 0.0 VLV_SENTIDO_56
    STRINGS DUPLICATE '' VLV_I_72
    STRINGS DUPLICATE '' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MOVEF_F 0.0 VLV_SENTIDO_72
    STRINGS DUPLICATE '' VLV_I_75
    STRINGS DUPLICATE '' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MOVEF_F 0.0 VLV_SENTIDO_75
    MOVEF_F 0.0 VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
    STRINGS DUPLICATE '' VLV_I_76
    STRINGS DUPLICATE '' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MOVEF_F 0.0 VLV_SENTIDO_76
    MOVEF_F 0.0 VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
    STRINGS DUPLICATE '' VLV_I_82
    STRINGS DUPLICATE '' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MOVEF_F 0.0 VLV_SENTIDO_82
    MOVEF_F 0.0 VLV_READER_82
    STRINGS DUPLICATE '' VLV_I_88
    STRINGS DUPLICATE '' VLV_D_88
    MOVEF_F 0.0 VLV_V0_88
    MOVEF_F 0.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    MOVEF_F 0.0 VLV_VEL_88
    MOVEF_F 0.0 VLV_SENTIDO_88
    MOVEF_F 0.0 VLV_ERROR_88
    MOVEF_F 0.0 VLV_ENCDIFF_95
    MOVEF_F 0.0 VLV_SIGNO_95
    MOVEF_F 0.0 VLV_AENC_101
    MOVEF_F 0.0 VLV_DIFFA_104
    MOVEF_F 0.0 VLV_DIFFD_104
    MOVEF_F 0.0 VLV_SAFETYTIMER_104
    MOVEF_F 0.0 VLV_SIGNOA_104
    MOVEF_F 0.0 VLV_SIGNOD_104
    MOVEF_F 0.0 VLV_VELA_104
    MOVEF_F 0.0 VLV_VELD_104
    MOVEF_F 0.0 VLV_ENCDIFF_105
    MOVEF_F 0.0 VLV_SIGNO_105
    MOVEF_F 0.0 VLV_ENCDIFF_109
    MOVEF_F 0.0 VLV_SIGNO_109
    MOVEF_F 0.0 VLV_SAFETYTIMER_109
    MOVEF_F 0.0 VLV_RED_110
    MOVEF_F 0.0 VLV_YELLOW_110
    MOVEF_F 0.0 VLV_GREEN_110
    MOVEF_F 0.0 VLV_BLUE_110
    MOVEF_F 0.0 VLV_VALUENEGRO_110
    MOVEF_F 0.0 VLV_VALUEBLANCO_110
    MOVEF_F 0.0 VLV_RWHITE_110
    MOVEF_F 0.0 VLV_GWHITE_110
    MOVEF_F 0.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_MAXA_110
    MOVEF_F 0.0 VLV_J_110
    CALL ARRAYCREATE_FLOAT VLV_RGB_110
    MOVEF_F 0.0 VLV_RRAW_110
    MOVEF_F 0.0 VLV_GRAW_110
    MOVEF_F 0.0 VLV_BRAW_110
    MOVEF_F 0.0 VLV_RNORM_110
    MOVEF_F 0.0 VLV_GNORM_110
    MOVEF_F 0.0 VLV_BNORM_110
    MOVEF_F 0.0 VLV_MAX_110
    MOVEF_F 0.0 VLV_MIN_110
    MOVEF_F 0.0 VLV_RGBGREY_110
    MOVEF_F 0.0 VLV_RED_111
    MOVEF_F 0.0 VLV_YELLOW_111
    MOVEF_F 0.0 VLV_GREEN_111
    MOVEF_F 0.0 VLV_BLUE_111
    MOVEF_F 0.0 VLV_VALUENEGRO_111
    MOVEF_F 0.0 VLV_VALUEBLANCO_111
    MOVEF_F 0.0 VLV_RWHITE_111
    MOVEF_F 0.0 VLV_GWHITE_111
    MOVEF_F 0.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_MAXA_111
    MOVEF_F 0.0 VLV_J_111
    CALL ARRAYCREATE_FLOAT VLV_RGB_111
    MOVEF_F 0.0 VLV_RRAW_111
    MOVEF_F 0.0 VLV_GRAW_111
    MOVEF_F 0.0 VLV_BRAW_111
    MOVEF_F 0.0 VLV_RNORM_111
    MOVEF_F 0.0 VLV_GNORM_111
    MOVEF_F 0.0 VLV_BNORM_111
    MOVEF_F 0.0 VLV_MAX_111
    MOVEF_F 0.0 VLV_MIN_111
    MOVEF_F 0.0 VLV_RGBGREY_111
    MOVEF_F 0.0 VLV_RED_112
    MOVEF_F 0.0 VLV_YELLOW_112
    MOVEF_F 0.0 VLV_GREEN_112
    MOVEF_F 0.0 VLV_BLUE_112
    MOVEF_F 0.0 VLV_VALUENEGRO_112
    MOVEF_F 0.0 VLV_VALUEBLANCO_112
    MOVEF_F 0.0 VLV_RWHITE_112
    MOVEF_F 0.0 VLV_GWHITE_112
    MOVEF_F 0.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_MAXA_112
    MOVEF_F 0.0 VLV_J_112
    CALL ARRAYCREATE_FLOAT VLV_RGB_112
    MOVEF_F 0.0 VLV_RRAW_112
    MOVEF_F 0.0 VLV_GRAW_112
    MOVEF_F 0.0 VLV_BRAW_112
    MOVEF_F 0.0 VLV_RNORM_112
    MOVEF_F 0.0 VLV_GNORM_112
    MOVEF_F 0.0 VLV_BNORM_112
    MOVEF_F 0.0 VLV_MAX_112
    MOVEF_F 0.0 VLV_MIN_112
    MOVEF_F 0.0 VLV_RGBGREY_112
    MOVEF_F 0.0 VLV_RED_113
    MOVEF_F 0.0 VLV_YELLOW_113
    MOVEF_F 0.0 VLV_GREEN_113
    MOVEF_F 0.0 VLV_BLUE_113
    MOVEF_F 0.0 VLV_VALUENEGRO_113
    MOVEF_F 0.0 VLV_VALUEBLANCO_113
    MOVEF_F 0.0 VLV_RWHITE_113
    MOVEF_F 0.0 VLV_GWHITE_113
    MOVEF_F 0.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_MAXA_113
    MOVEF_F 0.0 VLV_J_113
    CALL ARRAYCREATE_FLOAT VLV_RGB_113
    MOVEF_F 0.0 VLV_RRAW_113
    MOVEF_F 0.0 VLV_GRAW_113
    MOVEF_F 0.0 VLV_BRAW_113
    MOVEF_F 0.0 VLV_RNORM_113
    MOVEF_F 0.0 VLV_GNORM_113
    MOVEF_F 0.0 VLV_BNORM_113
    MOVEF_F 0.0 VLV_MAX_113
    MOVEF_F 0.0 VLV_MIN_113
    MOVEF_F 0.0 VLV_RGBGREY_113
    MOVEF_F 0.0 VLV_DETERMINANTE_133
    MOVEF_F 0.0 VLV_I_134
    MOVE32_32 0 RUNCOUNTER_F_ODOMETRY_0
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_ODOMETRY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ODOMETRY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 -1 RUNCOUNTER_F_ODOMETRY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_ODOMETRY_0
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    DATAF F.7
    DATAF F.8
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1441
    WRITE32 ENDSUB_F_ODOMETRY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ODOMETRY_0
  dispatch1441:
    JR_NEQ32 SUBPROGRAM 1 dispatch1442
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1442:
    JR_NEQ32 SUBPROGRAM 2 dispatch1443
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1443:
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_READ_131
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_LADO_82
    MOVEF_F 0.0 VLV_SENS_82
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_134
    MOVEF_F 0.0 VLV_K_134
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_134
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_132
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_133
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_133
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VGV_CASO
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELI_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELD_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAI_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAD_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_DH_T_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_INV_123
    MOVEF_F 0.0 VLV_READ_131
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 1.0 VGV_SENTIDO_D
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0001 VGV_KI
    MOVEF_F 1.0 VGV_KD
    MOVEF_F 102.0 VGV_DW
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.47222222222222 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB14:
    DATA32 tmp15
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 1  RUNCOUNTER_F_ODOMETRY_0 tmp15
    JR_NEQ32 0 tmp15 alreadylaunched15
    OBJECT_START TF_ODOMETRY_0
  alreadylaunched15:
    DATA32 tmp16
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp16
    JR_NEQ32 0 tmp16 alreadylaunched16
    OBJECT_START TF_DISPLAY_0
  alreadylaunched16:
    DATA32 tmp17
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp17
    JR_NEQ32 0 tmp17 alreadylaunched17
    OBJECT_START TF_STOP_0
  alreadylaunched17:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB18 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB18:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer19
	DATA8 no19
	DATA8 mode819
	
	MOVEF_8 1.0 no19
	SUB8 no19 1 no19
	DIV8 no19 4 layer19
	MATH MOD8 no19 4 no19

	MOVEF_8 0.0 mode819
	
	INPUT_DEVICE READY_RAW layer19 no19 0 mode819 0
    DATA8 layer20
	DATA8 no20
	DATA8 mode820
	
	MOVEF_8 2.0 no20
	SUB8 no20 1 no20
	DIV8 no20 4 layer20
	MATH MOD8 no20 4 no20

	MOVEF_8 4.0 mode820
	
	INPUT_DEVICE READY_RAW layer20 no20 0 mode820 0
    DATA8 layer21
	DATA8 no21
	DATA8 mode821
	
	MOVEF_8 3.0 no21
	SUB8 no21 1 no21
	DIV8 no21 4 layer21
	MATH MOD8 no21 4 no21

	MOVEF_8 4.0 mode821
	
	INPUT_DEVICE READY_RAW layer21 no21 0 mode821 0
    DATA8 layer22
	DATA8 no22
	DATA8 mode822
	
	MOVEF_8 4.0 no22
	SUB8 no22 1 no22
	DIV8 no22 4 layer22
	MATH MOD8 no22 4 no22

	MOVEF_8 0.0 mode822
	
	INPUT_DEVICE READY_RAW layer22 no22 0 mode822 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while24:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 850.0 endwhile24
  whilebody24:
    MOVEF_8 30.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 30.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 850.0 whilebody24
  endwhile24:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -360.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB32:
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds34
	MOVEF_32 100.0 milliseconds34
	DATA32 timer34
	TIMER_WAIT milliseconds34 timer34
	TIMER_READY timer34
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_ODOMETRY_0:
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_L
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_XT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_YT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_THETAT
    MOVEF_F 0.0 VGV_I
  while40:
  whilebody40:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.2
    MULF F.2 -1.0 F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_L
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_R
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_L
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_L
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf53
    DATA8 flag53
    DIVF F.0 2.0 tmpf53
    CP_EQF 0.0 2.0 flag53
    SELECTF flag53 0.0 tmpf53 VGV_D_L

    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_R
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_R
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf59
    DATA8 flag59
    DIVF F.0 2.0 tmpf59
    CP_EQF 0.0 2.0 flag59
    SELECTF flag59 0.0 tmpf59 VGV_D_R

    ADDF VGV_D_L VGV_D_R F.0
    DATAF tmpf61
    DATA8 flag61
    DIVF F.0 2.0 tmpf61
    CP_EQF 0.0 2.0 flag61
    SELECTF flag61 0.0 tmpf61 VGV_D

    SUBF VGV_D_R VGV_D_L F.0
    MULF 2.0 VGV_DW F.1
    DATAF tmpf64
    DATA8 flag64
    DIVF F.0 F.1 tmpf64
    CP_EQF 0.0 F.1 flag64
    SELECTF flag64 0.0 tmpf64 VGV_DELTA_THETA

    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf67
    DATA8 flag67
    DIVF VGV_DELTA_THETA 2.0 tmpf67
    CP_EQF 0.0 2.0 flag67
    SELECTF flag67 0.0 tmpf67 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf69
	MULF F.4 57.295779513082  tmpf69
	MATH SIN  tmpf69 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf76
    DATA8 flag76
    DIVF VGV_DELTA_THETA 2.0 tmpf76
    CP_EQF 0.0 2.0 flag76
    SELECTF flag76 0.0 tmpf76 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf78
	MULF F.4 57.295779513082 tmpf78
	MATH COS tmpf78 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_THETAT
    ADDF F.2 VGV_DELTA_THETA F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_THETAT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_XTIME VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_YTIME VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_THETATIME VGV_THETAT
    ADDF VGV_I 1.0 VGV_I
    DATA32 milliseconds94
	MOVEF_32 10.0 milliseconds94
	DATA32 timer94
	TIMER_WAIT milliseconds94 timer94
	TIMER_READY timer94
    JR whilebody40
  endwhile40:
RETSUB_F_ODOMETRY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ODOMETRY_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while95:
  whilebody95:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf101
    DATA8 flag101
    DIVF F.1 100.0 tmpf101
    CP_EQF 0.0 100.0 flag101
    SELECTF flag101 0.0 tmpf101 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'xt: ' S.1 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf108
    DATA8 flag108
    DIVF F.1 100.0 tmpf108
    CP_EQF 0.0 100.0 flag108
    SELECTF flag108 0.0 tmpf108 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'yt: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.1 VGV_THETAT
    MULF F.1 57.295779513082 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'thetat: ' S.1 S.0
    CALL LCD.WRITE 5.0 25.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf132
    DATA8 flag132
    DIVF F.2 0.05 tmpf132
    CP_EQF 0.0 0.05 flag132
    SELECTF flag132 0.0 tmpf132 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf140
    DATA8 flag140
    DIVF F.1 0.05 tmpf140
    CP_EQF 0.0 0.05 flag140
    SELECTF flag140 0.0 tmpf140 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    STRINGS VALUE_FORMATTED VGV_D_T '%g' 99 S.1
    CALL TEXT.APPEND 'Delta T:  ' S.1 S.0
    CALL LCD.WRITE 5.0 105.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds157
	MOVEF_32 50.0 milliseconds157
	DATA32 timer157
	TIMER_WAIT milliseconds157 timer157
	TIMER_READY timer157
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody95
  endwhile95:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB160:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 35.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB162:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 81.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB165:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_2
    MOVEF_F 10.0 VLV_DISTANCIA_2
    WRITE32 ENDSUB_F_ENCODERRECTOMMF_2:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMMF_2
CALLSUB167:
    MOVEF_F 5.0 VLV_REPS_110
    WRITE32 ENDSUB_F_RGBDETECT1_2:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RGBDETECT1_2
CALLSUB168:
    MOVEF_F VLV_COLOR_110 VGV_CASO
    MOVEF_F VGV_CASO VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB169:
    DATA8 layer170
	DATA8 no170
	DATA8 mode8170
	
	MOVEF_8 1.0 no170
	SUB8 no170 1 no170
	DIV8 no170 4 layer170
	MATH MOD8 no170 4 no170

	MOVEF_8 0.0 mode8170
	
	INPUT_DEVICE READY_RAW layer170 no170 0 mode8170 0
    JR_NEQF VGV_CASO 3.0 else171_1
    WRITE32 ENDSUB_F_CASO_ARRIBA_0:CALLSUB172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASO_ARRIBA_0
CALLSUB172:
    JR endif171
  else171_1:
    WRITE32 ENDSUB_F_CASO_ABAJO_0:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASO_ABAJO_0
CALLSUB173:
  else171_2:
  endif171:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_CASO_ARRIBA_0:
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 170.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB176:
    DATA32 milliseconds177
	MOVEF_32 500.0 milliseconds177
	DATA32 timer177
	TIMER_WAIT milliseconds177 timer177
	TIMER_READY timer177
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB179:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.375 VLV_VELOCIDAD2_15
    MOVEF_F 34.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB182:
    MULF VGV_VELOCIDAD 0.375 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD2_15
    MOVEF_F 32.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB185:
    DATA32 milliseconds186
	MOVEF_32 500.0 milliseconds186
	DATA32 timer186
	TIMER_WAIT milliseconds186 timer186
	TIMER_READY timer186
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_3
    MOVEF_F 4.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB188:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB190:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -300.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB191:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB192:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_35
    MULF VGV_VELOCIDAD 0.2 VLV_V2_35
    MOVEF_F 16.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB195:
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB197:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -580.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB198:
    DATA32 milliseconds199
	MOVEF_32 1000.0 milliseconds199
	DATA32 timer199
	TIMER_WAIT milliseconds199 timer199
	TIMER_READY timer199
    MOVEF_F 10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB200:
    MOVEF_F -10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB201:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 24.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB203:
    MOVEF_F 40.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB204:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 97.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB207:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 3000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB209:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB211:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 93.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB214:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 31.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB216:
    DATA32 milliseconds217
	MOVEF_32 1000.0 milliseconds217
	DATA32 timer217
	TIMER_WAIT milliseconds217 timer217
	TIMER_READY timer217
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB218:
    MOVEF_F VLV_READ_131 VGV_BLOQUE
    CALL ARRAYSTORE_FLOAT 0.0 VGV_BLOQUE VGV_BOMBOCLAT
    JR_NEQF VGV_BLOQUE 0.0 else220_1
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    JR endif220
  else220_1:
    MOVEF_F 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_BLOQUE 3.0 else221_1
    ADDF VGV_VERDES 1.0 VGV_VERDES
    JR endif221
  else221_1:
    ADDF VGV_AZULES 1.0 VGV_AZULES
  else221_2:
  endif221:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB224:
  else220_2:
  endif220:
    MULF VGV_VELOCIDAD -0.2 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB226:
    MOVEF_F 20.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB227:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB229:
    MOVEF_F -20.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB230:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 14.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB232:
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB233:
    MOVEF_F VLV_READ_131 VGV_BLOQUE
    JR_NEQF VGV_BLOQUE 0.0 else234_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    JR endif234
  else234_1:
    CALL ARRAYSTORE_FLOAT 1.0 VGV_BLOQUE VGV_BOMBOCLAT
    ADDF VGV_NUMERO_BLOQUES 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else240_1
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB241:
    JR endif240
  else240_1:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB242:
  else240_2:
  endif240:
  else234_2:
  endif234:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 160.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB245:
    MULF VGV_VELOCIDAD 0.5 VLV_VELOCIDAD_1
    MOVEF_F 54.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB247:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 15.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB249:
    JR_LTEQF VGV_NUMERO_BLOQUES 0.0 else250_1
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 86.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB253:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 20.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB255:
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else256_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else257_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB261:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB262:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB265:
    JR endif257
  else257_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB268:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB269:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB272:
  else257_2:
  endif257:
    JR endif256
  else256_1:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYGET_FLOAT 1.0 F.1 VGV_BOMBOCLAT
    JR_NEQF F.0 F.1 else273_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else276_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB280:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB281:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB284:
    JR endif276
  else276_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB287:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB288:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB291:
  else276_2:
  endif276:
    JR endif273
  else273_1:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else292_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB296:
    WRITE32 ENDSUB_F_SOLTAR_UNO_0:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_UNO_0
CALLSUB297:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB300:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB303:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB304:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB307:
    JR endif292
  else292_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB310:
    WRITE32 ENDSUB_F_SOLTAR_UNO_0:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_UNO_0
CALLSUB311:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB314:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB317:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB318:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 15.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB321:
  else292_2:
  endif292:
  else273_2:
  endif273:
  else256_2:
  endif256:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB323:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB325:
    MULF VGV_VELOCIDAD 0.3 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB327:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 10.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB329:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 1.0 VLV_LADO_82
    MOVEF_F 1.0 VLV_SENS_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_6:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_6
CALLSUB331:
    JR endif250
  else250_1:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 1.0 VLV_LADO_82
    MOVEF_F 1.0 VLV_SENS_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_6:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_6
CALLSUB333:
  else250_2:
  endif250:
RETSUB_F_CASO_ARRIBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASO_ARRIBA_0:
SUB_F_CASO_ABAJO_0:
RETSUB_F_CASO_ABAJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASO_ABAJO_0:
SUB_F_STOP_0:
  while334:
  whilebody334:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else335_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    WRITE32 ENDSUB_F_BMOVEADSAFE_2:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEADSAFE_2
CALLSUB340:
    PROGRAM_STOP -1
  else335_1:
  endif335:
    JR whilebody334
  endwhile334:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf345
    DATA8 flag345
    DIVF F.1 F.2 tmpf345
    CP_EQF 0.0 F.2 flag345
    SELECTF flag345 0.0 tmpf345 F.0

    DATAF tmpf346
    DATA8 flag346
    DIVF F.0 VLV_DIAMETRO_1 tmpf346
    CP_EQF 0.0 VLV_DIAMETRO_1 flag346
    SELECTF flag346 0.0 tmpf346 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while352:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile352
  whilebody352:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 2.0 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody352
  endwhile352:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_ENCODERRECTOMMF_2:
    MULF VLV_VELOCIDAD_2 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_2
    MOVEF_F 5.6 VLV_DIAMETRO_2
    MULF VLV_DISTANCIA_2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf371
    DATA8 flag371
    DIVF F.1 F.2 tmpf371
    CP_EQF 0.0 F.2 flag371
    SELECTF flag371 0.0 tmpf371 F.0

    DATAF tmpf372
    DATA8 flag372
    DIVF F.0 VLV_DIAMETRO_2 tmpf372
    CP_EQF 0.0 VLV_DIAMETRO_2 flag372
    SELECTF flag372 0.0 tmpf372 VLV_ENC_2

    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_2
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
  while378:
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_GTEQF F.0 VLV_ENC_2 endwhile378
  whilebody378:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_2 VLV_ENCODER_B_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
    SUBF VLV_ENCODER_B_2 VLV_ENCODER_C_2 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_2
    MULF VLV_ERROR_2 2.0 VLV_PROPORCIAL_2
    SUBF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_LTF F.0 VLV_ENC_2 whilebody378
  endwhile378:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMMF_2:
SUB_F_1NEGRORECTOMM_2:
    MULF VLV_VELOCIDAD_3 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_3
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_3
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_3
  while398:
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_LTEQF F.0 10.0 endwhile398
  whilebody398:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_3 VLV_ENCODER_B_3
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_3 VLV_ENCODER_C_3
    SUBF VLV_ENCODER_B_3 VLV_ENCODER_C_3 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_3
    MULF VLV_ERROR_3 2.0 VLV_PROPORCIAL_3
    SUBF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_GTF F.0 10.0 whilebody398
  endwhile398:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGRORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMM_2:
SUB_F_1BLANCORECTOMM_2:
    MULF VLV_VELOCIDAD_5 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_5
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_5
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_5
  while418:
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_GTEQF F.0 40.0 endwhile418
  whilebody418:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_5 VLV_ENCODER_B_5
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_5 VLV_ENCODER_C_5
    SUBF VLV_ENCODER_B_5 VLV_ENCODER_C_5 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_5
    MULF VLV_ERROR_5 2.0 VLV_PROPORCIAL_5
    SUBF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_LTF F.0 40.0 whilebody418
  endwhile418:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1BLANCORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMM_2:
SUB_F_TIEMPORECTOMM_2:
    MULF VLV_VELOCIDAD_13 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_13
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_13
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_13
    TIMER_READ timeMC3
  while439:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_13 endwhile439
  whilebody439:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_13 VLV_ENCODER_B_13
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_13 VLV_ENCODER_C_13
    SUBF VLV_ENCODER_B_13 VLV_ENCODER_C_13 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_13
    MULF VLV_ERROR_13 2.0 VLV_PROPORCIAL_13
    SUBF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_13 whilebody439
  endwhile439:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPORECTOMM_2:
SUB_F_ENCODERGIROMM_3:
    MULF VLV_VELOCIDAD1_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_15
    MULF VLV_VELOCIDAD2_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_15
    MOVEF_F 5.6 VLV_DIAMETRO_15
    MOVEF_F 3.1415926535897932384 F.2
    MULF VLV_DIAMETRO_15 F.2 F.1
    DATAF tmpf459
    DATA8 flag459
    DIVF VLV_ENCODER_15 F.1 tmpf459
    CP_EQF 0.0 F.1 flag459
    SELECTF flag459 0.0 tmpf459 F.0

    MULF F.0 360.0 VLV_DISTANCIA_15
    MATH NEGATE VLV_VELOCIDAD1_15 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_15 VLV_DISTANCIA_15 'True'

	DATA8 layer462
	DATA8 nos462
	DATA8 busy462
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer462 nos462
	JR_EQ8 0 nos462 motornotbusy462
  motorwaiting462:
	OUTPUT_TEST layer462 nos462 busy462
	JR_EQ8 busy462 0 motornotbusy462
	SLEEP
	JR motorwaiting462
  motornotbusy462:
RETSUB_F_ENCODERGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERGIROMM_3:
SUB_F_GPERFDDEFINITIVOMM_1:
    MOVEF_F 100.0 VLV_AVANCE_33
    MOVEF_F 200.0 VLV_GINICIO_33
    MOVEF_F 70.0 VLV_AJUSTE_33
    DATA8 flag463
	CP_LTF 40.0 VLV_VEL_33 flag463
	SELECTF flag463 40.0 VLV_VEL_33 VLV_VEL_33
    MULF VLV_VEL_33 0.75 VLV_VEL_33
    MULF VLV_VEL_33 VGV_SENTIDO_MOTORES VLV_VEL_33
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VEL_33 VLV_AVANCE_33 'True'

	DATA8 layer467
	DATA8 nos467
	DATA8 busy467
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer467 nos467
	JR_EQ8 0 nos467 motornotbusy467
  motorwaiting467:
	OUTPUT_TEST layer467 nos467 busy467
	JR_EQ8 busy467 0 motornotbusy467
	SLEEP
	JR motorwaiting467
  motornotbusy467:
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_GINICIO_33 0.0 'False' 

	DATA8 layer469
	DATA8 nos469
	DATA8 busy469
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer469 nos469
	JR_EQ8 0 nos469 motornotbusy469
  motorwaiting469:
	OUTPUT_TEST layer469 nos469 busy469
	JR_EQ8 busy469 0 motornotbusy469
	SLEEP
	JR motorwaiting469
  motornotbusy469:
  while470:
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 10.0 endwhile470
  whilebody470:
    MATH NEGATE VLV_VEL_33 F.0
    MATH NEGATE VLV_VEL_33 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 10.0 whilebody470
  endwhile470:
    CALL MOTOR.STOP 'BC' 'False'
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_AJUSTE_33 0.0 'True' 

	DATA8 layer478
	DATA8 nos478
	DATA8 busy478
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer478 nos478
	JR_EQ8 0 nos478 motornotbusy478
  motorwaiting478:
	OUTPUT_TEST layer478 nos478 busy478
	JR_EQ8 busy478 0 motornotbusy478
	SLEEP
	JR motorwaiting478
  motornotbusy478:
RETSUB_F_GPERFDDEFINITIVOMM_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GPERFDDEFINITIVOMM_1:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_35
    STRINGS DUPLICATE 'C' VLV_D_35
    DATAF tmpf479
    DATA8 flag479
    DIVF VLV_V1_35 VLV_V2_35 tmpf479
    CP_EQF 0.0 VLV_V2_35 flag479
    SELECTF flag479 0.0 tmpf479 F.0

    DATAF tmpf480
    DATA8 flag480
    DIVF VLV_V1_35 VLV_V2_35 tmpf480
    CP_EQF 0.0 VLV_V2_35 flag480
    SELECTF flag480 0.0 tmpf480 F.2

    MATH ABS F.2 F.1
    DATAF tmpf482
    DATA8 flag482
    DIVF F.0 F.1 tmpf482
    CP_EQF 0.0 F.1 flag482
    SELECTF flag482 0.0 tmpf482 VLV_SIGNO_35

    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag485
	CP_LTF F.0 F.1 flag485
	SELECTF flag485 F.0 F.1 VLV_VMIN_35
    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag488
	CP_GTF F.0 F.1 flag488
	SELECTF flag488 F.0 F.1 VLV_VMAX_35
    MULF VLV_ANGLE_35 VGV_G1 F.0
    MULF VLV_SIGNO_35 VLV_VMIN_35 F.4
    DATAF tmpf491
    DATA8 flag491
    DIVF F.4 VLV_VMAX_35 tmpf491
    CP_EQF 0.0 VLV_VMAX_35 flag491
    SELECTF flag491 0.0 tmpf491 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf493
    DATA8 flag493
    DIVF -2.0 F.2 tmpf493
    CP_EQF 0.0 F.2 flag493
    SELECTF flag493 0.0 tmpf493 F.1

    MULF F.0 F.1 VLV_ENCODR_35
    CALL TEXT.APPEND VLV_I_35 VLV_D_35 S.0
    MATH NEGATE VLV_V1_35 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_35 VLV_ENCODR_35 'True'

	DATA8 layer497
	DATA8 nos497
	DATA8 busy497
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer497 nos497
	JR_EQ8 0 nos497 motornotbusy497
  motorwaiting497:
	OUTPUT_TEST layer497 nos497 busy497
	JR_EQ8 busy497 0 motornotbusy497
	SLEEP
	JR motorwaiting497
  motornotbusy497:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_SPIN90_1:
    STRINGS DUPLICATE 'B' VLV_I_39
    STRINGS DUPLICATE 'C' VLV_D_39
    MULF 84.0 VGV_G1 VLV_ENCODR_39
    CALL TEXT.APPEND VLV_I_39 VLV_D_39 S.0
    MATH NEGATE VLV_VELOCIDAD_39 F.0
    CALL MOTOR.SCHEDULE S.0 F.0 0.0 VLV_ENCODR_39 0.0 'True' 

	DATA8 layer501
	DATA8 nos501
	DATA8 busy501
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer501 nos501
	JR_EQ8 0 nos501 motornotbusy501
  motorwaiting501:
	OUTPUT_TEST layer501 nos501 busy501
	JR_EQ8 busy501 0 motornotbusy501
	SLEEP
	JR motorwaiting501
  motornotbusy501:
    MOVEF_F 0.0 VLV_ANGLE_39
RETSUB_F_SPIN90_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN90_1:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_56
    STRINGS DUPLICATE 'C' VLV_D_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf504
    DATA8 flag504
    DIVF VLV_ACCELENCODER_56 F.1 tmpf504
    CP_EQF 0.0 F.1 flag504
    SELECTF flag504 0.0 tmpf504 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    CALL MOTOR.RESETCOUNT 'C'
  while507:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or508
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile507
  or508:
  whilebody507:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf512
    DATA8 flag512
    DIVF F.3 VLV_ACCELENCODER_56 tmpf512
    CP_EQF 0.0 VLV_ACCELENCODER_56 flag512
    SELECTF flag512 0.0 tmpf512 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_56 VLV_V0_56 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_56 VLV_VEL_56
    DATA8 flag517
	CP_LTF VLV_VEL_56 VLV_VMAX_56 flag517
	SELECTF flag517 VLV_VEL_56 VLV_VMAX_56 VLV_VEL_56
    MATH ABS VLV_VEL_56 F.0
    DATAF tmpf519
    DATA8 flag519
    DIVF VLV_VEL_56 F.0 tmpf519
    CP_EQF 0.0 F.0 flag519
    SELECTF flag519 0.0 tmpf519 VLV_SENTIDO_56

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_56 VLV_ERROR_56
    ADDF VLV_ERRSUM_56 VLV_ERROR_56 VLV_ERRSUM_56
    MULF VLV_ERROR_56 VLV_KP_56 F.1
    SUBF VLV_ERROR_56 VLV_OLDERROR_56 F.3
    MULF F.3 VLV_KD_56 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_56 VLV_KI_56 F.1
    ADDF F.0 F.1 VLV_U_56
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    ADDF VLV_VEL_56 VLV_U_56 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_56 VLV_U_56 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_56 VLV_OLDERROR_56
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody507
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody507
  endwhile507:
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_72 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_72
    STRINGS DUPLICATE 'B' VLV_I_72
    STRINGS DUPLICATE 'C' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MATH ABS VLV_VELOCIDAD_72 F.0
    DATAF tmpf544
    DATA8 flag544
    DIVF VLV_VELOCIDAD_72 F.0 tmpf544
    CP_EQF 0.0 F.0 flag544
    SELECTF flag544 0.0 tmpf544 VLV_SENTIDO_72

  while545:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or546
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile545
  or546:
  whilebody545:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_72 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_72
    ADDF VLV_ERRSUM_72 VLV_ERROR_72 VLV_ERRSUM_72
    MULF VLV_ERROR_72 VLV_KP_72 F.1
    SUBF VLV_ERROR_72 VLV_OLDERROR_72 F.3
    MULF F.3 VLV_KD_72 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_72 VLV_KI_72 F.1
    ADDF F.0 F.1 VLV_U_72
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    ADDF VLV_VELOCIDAD_72 VLV_U_72 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_72 VLV_U_72 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_72 VLV_OLDERROR_72
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody545
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody545
  endwhile545:
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_75 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_75
    STRINGS DUPLICATE 'B' VLV_I_75
    STRINGS DUPLICATE 'C' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MATH ABS VLV_VELOCIDAD_75 F.0
    DATAF tmpf572
    DATA8 flag572
    DIVF VLV_VELOCIDAD_75 F.0 tmpf572
    CP_EQF 0.0 F.0 flag572
    SELECTF flag572 0.0 tmpf572 VLV_SENTIDO_75

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf575
    DATA8 flag575
    DIVF VLV_ENCODER_75 F.1 tmpf575
    CP_EQF 0.0 F.1 flag575
    SELECTF flag575 0.0 tmpf575 F.0

    MULF F.0 360.0 VLV_ENCODER_75
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
  while578:
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_GTEQF F.0 VLV_ENCODER_75 endwhile578
  whilebody578:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_75 VLV_ENCODER_C_75
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_75 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_75
    ADDF VLV_ERRSUM_75 VLV_ERROR_75 VLV_ERRSUM_75
    MULF VLV_ERROR_75 VLV_KP_75 F.1
    SUBF VLV_ERROR_75 VLV_OLDERROR_75 F.3
    MULF F.3 VLV_KD_75 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_75 VLV_KI_75 F.1
    ADDF F.0 F.1 VLV_U_75
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    ADDF VLV_VELOCIDAD_75 VLV_U_75 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_75 VLV_U_75 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_75 VLV_OLDERROR_75
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_LTF F.0 VLV_ENCODER_75 whilebody578
  endwhile578:
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_76 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_76
    STRINGS DUPLICATE 'B' VLV_I_76
    STRINGS DUPLICATE 'C' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MATH ABS VLV_VELOCIDAD_76 F.0
    DATAF tmpf604
    DATA8 flag604
    DIVF VLV_VELOCIDAD_76 F.0 tmpf604
    CP_EQF 0.0 F.0 flag604
    SELECTF flag604 0.0 tmpf604 VLV_SENTIDO_76

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf607
    DATA8 flag607
    DIVF VLV_ENCODER_76 F.1 tmpf607
    CP_EQF 0.0 F.1 flag607
    SELECTF flag607 0.0 tmpf607 F.0

    MULF F.0 360.0 VLV_ENCODER_76
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
  while610:
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_GTEQF F.0 VLV_ENCODER_76 endwhile610
  whilebody610:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_76 VLV_ENCODER_C_76
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_76 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_76
    ADDF VLV_ERRSUM_76 VLV_ERROR_76 VLV_ERRSUM_76
    MULF VLV_ERROR_76 VLV_KP_76 F.1
    SUBF VLV_ERROR_76 VLV_OLDERROR_76 F.3
    MULF F.3 VLV_KD_76 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_76 VLV_KI_76 F.1
    ADDF F.0 F.1 VLV_U_76
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    ADDF VLV_VELOCIDAD_76 VLV_U_76 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_76 VLV_U_76 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_76 VLV_OLDERROR_76
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_LTF F.0 VLV_ENCODER_76 whilebody610
  endwhile610:
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL1SPIDCROSSF_6:
    MULF VLV_VELOCIDAD_82 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_82
    STRINGS DUPLICATE 'B' VLV_I_82
    STRINGS DUPLICATE 'C' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MATH ABS VLV_VELOCIDAD_82 F.0
    DATAF tmpf636
    DATA8 flag636
    DIVF VLV_VELOCIDAD_82 F.0 tmpf636
    CP_EQF 0.0 F.0 flag636
    SELECTF flag636 0.0 tmpf636 VLV_SENTIDO_82

    JR_NEQF VLV_SENS_82 1.0 else637_1
    MOVEF_F 4.0 VLV_READER_82
    JR endif637
  else637_1:
    MOVEF_F 1.0 VLV_READER_82
  else637_2:
  endif637:
  while638:
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_LTEQF F.0 20.0 endwhile638
  whilebody638:
    CALL SENSOR.READPERCENT VLV_SENS_82 F.3
    SUBF F.3 50.0 F.2
    MULF F.2 VLV_SENTIDO_82 F.1
    MULF F.1 VLV_LADO_82 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_82
    ADDF VLV_ERRSUM_82 VLV_ERROR_82 VLV_ERRSUM_82
    MULF VLV_ERROR_82 VLV_KP_82 F.1
    SUBF VLV_ERROR_82 VLV_OLDERROR_82 F.3
    MULF F.3 VLV_KD_82 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_82 VLV_KI_82 F.1
    ADDF F.0 F.1 VLV_U_82
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    ADDF VLV_VELOCIDAD_82 VLV_U_82 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_82 VLV_U_82 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_82 VLV_OLDERROR_82
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_GTF F.0 20.0 whilebody638
  endwhile638:
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL1SPIDCROSSF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSSF_6:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_88 VGV_SENTIDO_MOTORES VLV_VMAX_88
    STRINGS DUPLICATE 'B' VLV_I_88
    STRINGS DUPLICATE 'C' VLV_D_88
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_88
    MOVEF_F 150.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    CALL MOTOR.RESETCOUNT 'C'
  while663:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or664
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile663
  or664:
  whilebody663:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf668
    DATA8 flag668
    DIVF F.2 VLV_ACCELENCODER_88 tmpf668
    CP_EQF 0.0 VLV_ACCELENCODER_88 flag668
    SELECTF flag668 0.0 tmpf668 F.1

    ADDF VLV_VMAX_88 VLV_V0_88 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_88 VLV_VEL_88
    DATA8 flag672
	CP_LTF VLV_VEL_88 VLV_VMAX_88 flag672
	SELECTF flag672 VLV_VEL_88 VLV_VMAX_88 VLV_VEL_88
    MATH ABS VLV_VEL_88 F.0
    DATAF tmpf674
    DATA8 flag674
    DIVF VLV_VEL_88 F.0 tmpf674
    CP_EQF 0.0 F.0 flag674
    SELECTF flag674 0.0 tmpf674 VLV_SENTIDO_88

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_88 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_88
    MULF VLV_ERRSUM_88 0.9 F.0
    ADDF F.0 VLV_ERROR_88 VLV_ERRSUM_88
    MULF VLV_ERROR_88 VLV_KP_88 F.1
    SUBF VLV_ERROR_88 VLV_OLDERROR_88 F.3
    MULF F.3 VLV_KD_88 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_88 VLV_KI_88 F.1
    ADDF F.0 F.1 VLV_U_88
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    ADDF VLV_VEL_88 VLV_U_88 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_88 VLV_U_88 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_88 VLV_OLDERROR_88
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody663
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody663
  endwhile663:
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_95 F.0 VLV_ENCDIFF_95
    MATH ABS VLV_ENCDIFF_95 F.0
    DATAF tmpf700
    DATA8 flag700
    DIVF VLV_ENCDIFF_95 F.0 tmpf700
    CP_EQF 0.0 F.0 flag700
    SELECTF flag700 0.0 tmpf700 VLV_SIGNO_95

    JR_EQF VLV_ENCDIFF_95 0.0 else701_1
  while702:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile702
  whilebody702:
    MULF VLV_SIGNO_95 VLV_V_95 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody702
  endwhile702:
    CALL MOTOR.STOP 'A' 'True'
  else701_1:
  endif701:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEAD0_1:
    MOVEF_F -10.0 VLV_AENC_101
  while712:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 or713
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENC_101 endwhile712
  or713:
  whilebody712:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_GTEQF F.0 VLV_AENC_101 else716_1
    DATAF tmpf718
    DATA8 flag718
    DIVF VLV_V_101 2.0 tmpf718
    CP_EQF 0.0 2.0 flag718
    SELECTF flag718 0.0 tmpf718 F.2

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf721
    DATA8 flag721
    DIVF F.4 10.0 tmpf721
    CP_EQF 0.0 10.0 flag721
    SELECTF flag721 0.0 tmpf721 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag723
	CP_LTF VLV_V_101 F.1 flag723
	SELECTF flag723 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif716
  else716_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_LTEQF F.0 VLV_AENC_101 else716_2
    DATAF tmpf726
    DATA8 flag726
    DIVF VLV_V_101 2.0 tmpf726
    CP_EQF 0.0 2.0 flag726
    SELECTF flag726 0.0 tmpf726 F.3

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf729
    DATA8 flag729
    DIVF F.5 10.0 tmpf729
    CP_EQF 0.0 10.0 flag729
    SELECTF flag729 0.0 tmpf729 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag731
	CP_LTF VLV_V_101 F.2 flag731
	SELECTF flag731 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif716
  else716_2:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else716_3:
  endif716:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_GTEQF F.0 VLV_AENC_101 else735_1
    DATAF tmpf737
    DATA8 flag737
    DIVF VLV_V_101 2.0 tmpf737
    CP_EQF 0.0 2.0 flag737
    SELECTF flag737 0.0 tmpf737 F.2

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf740
    DATA8 flag740
    DIVF F.4 10.0 tmpf740
    CP_EQF 0.0 10.0 flag740
    SELECTF flag740 0.0 tmpf740 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag742
	CP_LTF VLV_V_101 F.1 flag742
	SELECTF flag742 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif735
  else735_1:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_LTEQF F.0 VLV_AENC_101 else735_2
    DATAF tmpf745
    DATA8 flag745
    DIVF VLV_V_101 2.0 tmpf745
    CP_EQF 0.0 2.0 flag745
    SELECTF flag745 0.0 tmpf745 F.3

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf748
    DATA8 flag748
    DIVF F.5 10.0 tmpf748
    CP_EQF 0.0 10.0 flag748
    SELECTF flag748 0.0 tmpf748 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag750
	CP_LTF VLV_V_101 F.2 flag750
	SELECTF flag750 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif735
  else735_2:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else735_3:
  endif735:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 whilebody712
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_NEQF F.0 VLV_AENC_101 whilebody712
  endwhile712:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEAD0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD0_1:
SUB_F_BMOVEADSAFE_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    MATH ABS VLV_DIFFA_104 F.5
    MATH ABS VLV_DIFFD_104 F.6
    DATA8 flag763
	CP_GTF F.5 F.6 flag763
	SELECTF flag763 F.5 F.6 F.4
    DATAF tmpf764
    DATA8 flag764
    DIVF F.4 100.0 tmpf764
    CP_EQF 0.0 100.0 flag764
    SELECTF flag764 0.0 tmpf764 F.3

    DATAF tmpf765
    DATA8 flag765
    DIVF VLV_V_104 20.0 tmpf765
    CP_EQF 0.0 20.0 flag765
    SELECTF flag765 0.0 tmpf765 F.4

    DATAF tmpf766
    DATA8 flag766
    DIVF F.3 F.4 tmpf766
    CP_EQF 0.0 F.4 flag766
    SELECTF flag766 0.0 tmpf766 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag769
	CP_GTF F.0 400.0 flag769
	SELECTF flag769 F.0 400.0 VLV_SAFETYTIMER_104
    MATH ABS VLV_DIFFA_104 F.0
    DATAF tmpf771
    DATA8 flag771
    DIVF VLV_DIFFA_104 F.0 tmpf771
    CP_EQF 0.0 F.0 flag771
    SELECTF flag771 0.0 tmpf771 VLV_SIGNOA_104

    MATH ABS VLV_DIFFD_104 F.0
    DATAF tmpf773
    DATA8 flag773
    DIVF VLV_DIFFD_104 F.0 tmpf773
    CP_EQF 0.0 F.0 flag773
    SELECTF flag773 0.0 tmpf773 VLV_SIGNOD_104

    MULF VLV_V_104 VLV_SIGNOA_104 VLV_VELA_104
    MULF VLV_V_104 VLV_SIGNOD_104 VLV_VELD_104
    CALL MOTOR.SCHEDULESYNC 'AD' VLV_VELA_104 VLV_VELD_104 5.0 'False'

	DATA8 layer776
	DATA8 nos776
	DATA8 busy776
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer776 nos776
	JR_EQ8 0 nos776 motornotbusy776
  motorwaiting776:
	OUTPUT_TEST layer776 nos776 busy776
	JR_EQ8 busy776 0 motornotbusy776
	SLEEP
	JR motorwaiting776
  motornotbusy776:
    CALL LCD.CLEAR
    TIMER_READ timeMC3
  while779:
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 or780
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_EQF F.0 0.0 endwhile779
  or780:
  whilebody779:
    MULF VLV_DIFFA_104 VLV_SIGNOA_104 F.0
    JR_LTEQF F.0 0.0 else783_1
    MOVEF_8 VLV_VELA_104 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif783
  else783_1:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else783_2:
  endif783:
    MULF VLV_DIFFD_104 VLV_SIGNOD_104 F.0
    JR_LTEQF F.0 0.0 else787_1
    MOVEF_8 VLV_VELD_104 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif787
  else787_1:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else787_2:
  endif787:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTEQF F.0 VLV_SAFETYTIMER_104 else791_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
  else791_1:
  endif791:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_104 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 whilebody779
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_NEQF F.0 0.0 whilebody779
  endwhile779:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEADSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEADSAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_105 F.0 VLV_ENCDIFF_105
    MATH ABS VLV_ENCDIFF_105 F.0
    DATAF tmpf808
    DATA8 flag808
    DIVF VLV_ENCDIFF_105 F.0 tmpf808
    CP_EQF 0.0 F.0 flag808
    SELECTF flag808 0.0 tmpf808 VLV_SIGNO_105

    JR_EQF VLV_ENCDIFF_105 0.0 else809_1
    MULF VLV_SIGNO_105 VLV_V_105 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while812:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile812
  whilebody812:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody812
  endwhile812:
    CALL MOTOR.STOP 'D' 'True'
  else809_1:
  endif809:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while821:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_108 endwhile821
  whilebody821:
    MOVEF_8 VLV_V_108 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_108 whilebody821
  endwhile821:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_109 F.0 VLV_ENCDIFF_109
    MATH ABS VLV_ENCDIFF_109 F.0
    DATAF tmpf829
    DATA8 flag829
    DIVF VLV_ENCDIFF_109 F.0 tmpf829
    CP_EQF 0.0 F.0 flag829
    SELECTF flag829 0.0 tmpf829 VLV_SIGNO_109

    MATH ABS VLV_ENCDIFF_109 F.4
    DATAF tmpf831
    DATA8 flag831
    DIVF F.4 100.0 tmpf831
    CP_EQF 0.0 100.0 flag831
    SELECTF flag831 0.0 tmpf831 F.3

    DATAF tmpf832
    DATA8 flag832
    DIVF VLV_V_109 20.0 tmpf832
    CP_EQF 0.0 20.0 flag832
    SELECTF flag832 0.0 tmpf832 F.4

    DATAF tmpf833
    DATA8 flag833
    DIVF F.3 F.4 tmpf833
    CP_EQF 0.0 F.4 flag833
    SELECTF flag833 0.0 tmpf833 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag836
	CP_GTF F.0 400.0 flag836
	SELECTF flag836 F.0 400.0 VLV_SAFETYTIMER_109
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_109 0.0 else838_1
  while839:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile839
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_109 endwhile839
  whilebody839:
    MULF VLV_SIGNO_109 VLV_V_109 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_109 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and850
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_109 whilebody839
  and850:
  endwhile839:
    CALL MOTOR.STOP 'D' 'True'
  else838_1:
  endif838:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer856
	DATA8 no856
	DATA8 mode8856
	
	MOVEF_8 1.0 no856
	SUB8 no856 1 no856
	DIV8 no856 4 layer856
	MATH MOD8 no856 4 no856

	MOVEF_8 4.0 mode8856
	
	INPUT_DEVICE READY_RAW layer856 no856 0 mode8856 0
    MOVEF_F 15.0 VLV_RED_110
    MOVEF_F 60.0 VLV_YELLOW_110
    MOVEF_F 170.0 VLV_GREEN_110
    MOVEF_F 330.0 VLV_BLUE_110
    MOVEF_F 10.0 VLV_VALUENEGRO_110
    MOVEF_F 100.0 VLV_VALUEBLANCO_110
    MOVEF_F 147.0 VLV_RWHITE_110
    MOVEF_F 143.0 VLV_GWHITE_110
    MOVEF_F 160.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    MOVEF_F 0.0 VLV_COLOR_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_110
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_110
  for862:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor862
  forbody862:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_110
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_110 VLV_RGB_110
    DATAF tmpf867
    DATA8 flag867
    DIVF VLV_RRAW_110 VLV_RWHITE_110 tmpf867
    CP_EQF 0.0 VLV_RWHITE_110 flag867
    SELECTF flag867 0.0 tmpf867 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    DATAF tmpf871
    DATA8 flag871
    DIVF VLV_GRAW_110 VLV_GWHITE_110 tmpf871
    CP_EQF 0.0 VLV_GWHITE_110 flag871
    SELECTF flag871 0.0 tmpf871 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    DATAF tmpf875
    DATA8 flag875
    DIVF VLV_BRAW_110 VLV_BWHITE_110 tmpf875
    CP_EQF 0.0 VLV_BWHITE_110 flag875
    SELECTF flag875 0.0 tmpf875 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_RNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.3 VLV_GNORMA_110
    DATA8 flag881
	CP_GTF F.2 F.3 flag881
	SELECTF flag881 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_BNORMA_110
    DATA8 flag883
	CP_GTF F.1 F.2 flag883
	SELECTF flag883 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    DATA32 milliseconds885
	MOVEF_32 5.0 milliseconds885
	DATA32 timer885
	TIMER_WAIT milliseconds885 timer885
	TIMER_READY timer885
    ADDF VLV_J_110 1.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody862
  endfor862:
    MOVEF_F 1.0 VLV_J_110
  for887:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor887
  forbody887:
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_110
    ADDF F.0 F.1 VLV_RNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_110
    ADDF F.0 F.1 VLV_GNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_110
    ADDF F.0 F.1 VLV_BNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_110
    ADDF F.0 F.1 VLV_MAX_110
    ADDF VLV_J_110 2.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody887
  endfor887:
    DATAF tmpf905
    DATA8 flag905
    DIVF VLV_RNORM_110 VLV_REPS_110 tmpf905
    CP_EQF 0.0 VLV_REPS_110 flag905
    SELECTF flag905 0.0 tmpf905 VLV_RNORM_110

    DATAF tmpf906
    DATA8 flag906
    DIVF VLV_GNORM_110 VLV_REPS_110 tmpf906
    CP_EQF 0.0 VLV_REPS_110 flag906
    SELECTF flag906 0.0 tmpf906 VLV_GNORM_110

    DATAF tmpf907
    DATA8 flag907
    DIVF VLV_BNORM_110 VLV_REPS_110 tmpf907
    CP_EQF 0.0 VLV_REPS_110 flag907
    SELECTF flag907 0.0 tmpf907 VLV_BNORM_110

    DATAF tmpf908
    DATA8 flag908
    DIVF VLV_MAX_110 VLV_REPS_110 tmpf908
    CP_EQF 0.0 VLV_REPS_110 flag908
    SELECTF flag908 0.0 tmpf908 VLV_MAX_110

    DATA8 flag909
	CP_LTF VLV_RNORM_110 VLV_GNORM_110 flag909
	SELECTF flag909 VLV_RNORM_110 VLV_GNORM_110 F.0
    DATA8 flag910
	CP_LTF F.0 VLV_BNORM_110 flag910
	SELECTF flag910 F.0 VLV_BNORM_110 VLV_MIN_110
    JR_NEQF VLV_MAX_110 VLV_MIN_110 else911_1
    MOVEF_F 0.0 VLV_HUE_110
    JR endif911
  else911_1:
    JR_NEQF VLV_MAX_110 VLV_RNORM_110 else911_2
    JR_LTF VLV_GNORM_110 VLV_BNORM_110 else912_1
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_110 VLV_MIN_110 F.1
    DATAF tmpf916
    DATA8 flag916
    DIVF F.0 F.1 tmpf916
    CP_EQF 0.0 F.1 flag916
    SELECTF flag916 0.0 tmpf916 VLV_HUE_110

    JR endif912
  else912_1:
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf920
    DATA8 flag920
    DIVF F.1 F.2 tmpf920
    CP_EQF 0.0 F.2 flag920
    SELECTF flag920 0.0 tmpf920 F.0

    ADDF F.0 360.0 VLV_HUE_110
  else912_2:
  endif912:
    JR endif911
  else911_2:
    JR_NEQF VLV_MAX_110 VLV_GNORM_110 else911_3
    SUBF VLV_BNORM_110 VLV_RNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf925
    DATA8 flag925
    DIVF F.1 F.2 tmpf925
    CP_EQF 0.0 F.2 flag925
    SELECTF flag925 0.0 tmpf925 F.0

    ADDF F.0 120.0 VLV_HUE_110
    JR endif911
  else911_3:
    SUBF VLV_RNORM_110 VLV_GNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf930
    DATA8 flag930
    DIVF F.1 F.2 tmpf930
    CP_EQF 0.0 F.2 flag930
    SELECTF flag930 0.0 tmpf930 F.0

    ADDF F.0 240.0 VLV_HUE_110
  else911_4:
  endif911:
    JR_NEQF VLV_MAX_110 0.0 else932_1
    MOVEF_F 0.0 VLV_SAT_110
    JR endif932
  else932_1:
    DATAF tmpf933
    DATA8 flag933
    DIVF VLV_MIN_110 VLV_MAX_110 tmpf933
    CP_EQF 0.0 VLV_MAX_110 flag933
    SELECTF flag933 0.0 tmpf933 F.0

    SUBF 1.0 F.0 VLV_SAT_110
  else932_2:
  endif932:
    MOVEF_F VLV_MAX_110 VLV_VALUE_110
    ADDF VLV_VALUEBLANCO_110 VLV_VALUENEGRO_110 F.0
    DATAF tmpf936
    DATA8 flag936
    DIVF F.0 2.0 tmpf936
    CP_EQF 0.0 2.0 flag936
    SELECTF flag936 0.0 tmpf936 VLV_RGBGREY_110

    ADDF VLV_RNORM_110 VLV_GNORM_110 F.1
    ADDF F.1 VLV_BNORM_110 F.0
    JR_GTF F.0 3.0 else937_1
    MOVEF_F 0.0 VLV_COLOR_110
    JR endif937
  else937_1:
    JR_GTEQF VLV_SAT_110 0.4 else940_1
    JR_LTEQF VLV_VALUE_110 VLV_RGBGREY_110 else941_1
    MOVEF_F 6.0 VLV_COLOR_110
    JR endif941
  else941_1:
    MOVEF_F 1.0 VLV_COLOR_110
  else941_2:
  endif941:
    JR endif940
  else940_1:
    JR_LTF VLV_HUE_110 0.0 else942_1
    JR_GTEQF VLV_HUE_110 VLV_RED_110 else942_1
    MOVEF_F 5.0 VLV_COLOR_110
    JR endif942
  else942_1:
    JR_LTF VLV_HUE_110 VLV_RED_110 else942_2
    JR_GTEQF VLV_HUE_110 VLV_YELLOW_110 else942_2
    MOVEF_F 4.0 VLV_COLOR_110
    JR endif942
  else942_2:
    JR_LTF VLV_HUE_110 VLV_YELLOW_110 else942_3
    JR_GTEQF VLV_HUE_110 VLV_GREEN_110 else942_3
    MOVEF_F 3.0 VLV_COLOR_110
    JR endif942
  else942_3:
    JR_LTF VLV_HUE_110 VLV_GREEN_110 else942_4
    JR_GTEQF VLV_HUE_110 VLV_BLUE_110 else942_4
    MOVEF_F 2.0 VLV_COLOR_110
    JR endif942
  else942_4:
    MOVEF_F 5.0 VLV_COLOR_110
  else942_5:
  endif942:
  else940_2:
  endif940:
  else937_2:
  endif937:
    STRINGS VALUE_FORMATTED VLV_RRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_110 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB958:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer959
	DATA8 no959
	DATA8 mode8959
	
	MOVEF_8 2.0 no959
	SUB8 no959 1 no959
	DIV8 no959 4 layer959
	MATH MOD8 no959 4 no959

	MOVEF_8 4.0 mode8959
	
	INPUT_DEVICE READY_RAW layer959 no959 0 mode8959 0
    MOVEF_F 15.0 VLV_RED_111
    MOVEF_F 60.0 VLV_YELLOW_111
    MOVEF_F 170.0 VLV_GREEN_111
    MOVEF_F 330.0 VLV_BLUE_111
    MOVEF_F 10.0 VLV_VALUENEGRO_111
    MOVEF_F 100.0 VLV_VALUEBLANCO_111
    MOVEF_F 147.0 VLV_RWHITE_111
    MOVEF_F 143.0 VLV_GWHITE_111
    MOVEF_F 160.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    MOVEF_F 0.0 VLV_COLOR_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_111
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_111
  for965:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor965
  forbody965:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_111
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_111 VLV_RGB_111
    DATAF tmpf970
    DATA8 flag970
    DIVF VLV_RRAW_111 VLV_RWHITE_111 tmpf970
    CP_EQF 0.0 VLV_RWHITE_111 flag970
    SELECTF flag970 0.0 tmpf970 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    DATAF tmpf974
    DATA8 flag974
    DIVF VLV_GRAW_111 VLV_GWHITE_111 tmpf974
    CP_EQF 0.0 VLV_GWHITE_111 flag974
    SELECTF flag974 0.0 tmpf974 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    DATAF tmpf978
    DATA8 flag978
    DIVF VLV_BRAW_111 VLV_BWHITE_111 tmpf978
    CP_EQF 0.0 VLV_BWHITE_111 flag978
    SELECTF flag978 0.0 tmpf978 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_RNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.3 VLV_GNORMA_111
    DATA8 flag984
	CP_GTF F.2 F.3 flag984
	SELECTF flag984 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_BNORMA_111
    DATA8 flag986
	CP_GTF F.1 F.2 flag986
	SELECTF flag986 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    DATA32 milliseconds988
	MOVEF_32 5.0 milliseconds988
	DATA32 timer988
	TIMER_WAIT milliseconds988 timer988
	TIMER_READY timer988
    ADDF VLV_J_111 1.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody965
  endfor965:
    MOVEF_F 1.0 VLV_J_111
  for990:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor990
  forbody990:
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_111
    ADDF F.0 F.1 VLV_RNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_111
    ADDF F.0 F.1 VLV_GNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_111
    ADDF F.0 F.1 VLV_BNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_111
    ADDF F.0 F.1 VLV_MAX_111
    ADDF VLV_J_111 2.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody990
  endfor990:
    DATAF tmpf1008
    DATA8 flag1008
    DIVF VLV_RNORM_111 VLV_REPS_111 tmpf1008
    CP_EQF 0.0 VLV_REPS_111 flag1008
    SELECTF flag1008 0.0 tmpf1008 VLV_RNORM_111

    DATAF tmpf1009
    DATA8 flag1009
    DIVF VLV_GNORM_111 VLV_REPS_111 tmpf1009
    CP_EQF 0.0 VLV_REPS_111 flag1009
    SELECTF flag1009 0.0 tmpf1009 VLV_GNORM_111

    DATAF tmpf1010
    DATA8 flag1010
    DIVF VLV_BNORM_111 VLV_REPS_111 tmpf1010
    CP_EQF 0.0 VLV_REPS_111 flag1010
    SELECTF flag1010 0.0 tmpf1010 VLV_BNORM_111

    DATAF tmpf1011
    DATA8 flag1011
    DIVF VLV_MAX_111 VLV_REPS_111 tmpf1011
    CP_EQF 0.0 VLV_REPS_111 flag1011
    SELECTF flag1011 0.0 tmpf1011 VLV_MAX_111

    DATA8 flag1012
	CP_LTF VLV_RNORM_111 VLV_GNORM_111 flag1012
	SELECTF flag1012 VLV_RNORM_111 VLV_GNORM_111 F.0
    DATA8 flag1013
	CP_LTF F.0 VLV_BNORM_111 flag1013
	SELECTF flag1013 F.0 VLV_BNORM_111 VLV_MIN_111
    JR_NEQF VLV_MAX_111 VLV_MIN_111 else1014_1
    MOVEF_F 0.0 VLV_HUE_111
    JR endif1014
  else1014_1:
    JR_NEQF VLV_MAX_111 VLV_RNORM_111 else1014_2
    JR_LTF VLV_GNORM_111 VLV_BNORM_111 else1015_1
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_111 VLV_MIN_111 F.1
    DATAF tmpf1019
    DATA8 flag1019
    DIVF F.0 F.1 tmpf1019
    CP_EQF 0.0 F.1 flag1019
    SELECTF flag1019 0.0 tmpf1019 VLV_HUE_111

    JR endif1015
  else1015_1:
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1023
    DATA8 flag1023
    DIVF F.1 F.2 tmpf1023
    CP_EQF 0.0 F.2 flag1023
    SELECTF flag1023 0.0 tmpf1023 F.0

    ADDF F.0 360.0 VLV_HUE_111
  else1015_2:
  endif1015:
    JR endif1014
  else1014_2:
    JR_NEQF VLV_MAX_111 VLV_GNORM_111 else1014_3
    SUBF VLV_BNORM_111 VLV_RNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1028
    DATA8 flag1028
    DIVF F.1 F.2 tmpf1028
    CP_EQF 0.0 F.2 flag1028
    SELECTF flag1028 0.0 tmpf1028 F.0

    ADDF F.0 120.0 VLV_HUE_111
    JR endif1014
  else1014_3:
    SUBF VLV_RNORM_111 VLV_GNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1033
    DATA8 flag1033
    DIVF F.1 F.2 tmpf1033
    CP_EQF 0.0 F.2 flag1033
    SELECTF flag1033 0.0 tmpf1033 F.0

    ADDF F.0 240.0 VLV_HUE_111
  else1014_4:
  endif1014:
    JR_NEQF VLV_MAX_111 0.0 else1035_1
    MOVEF_F 0.0 VLV_SAT_111
    JR endif1035
  else1035_1:
    DATAF tmpf1036
    DATA8 flag1036
    DIVF VLV_MIN_111 VLV_MAX_111 tmpf1036
    CP_EQF 0.0 VLV_MAX_111 flag1036
    SELECTF flag1036 0.0 tmpf1036 F.0

    SUBF 1.0 F.0 VLV_SAT_111
  else1035_2:
  endif1035:
    MOVEF_F VLV_MAX_111 VLV_VALUE_111
    ADDF VLV_VALUEBLANCO_111 VLV_VALUENEGRO_111 F.0
    DATAF tmpf1039
    DATA8 flag1039
    DIVF F.0 2.0 tmpf1039
    CP_EQF 0.0 2.0 flag1039
    SELECTF flag1039 0.0 tmpf1039 VLV_RGBGREY_111

    ADDF VLV_RNORM_111 VLV_GNORM_111 F.1
    ADDF F.1 VLV_BNORM_111 F.0
    JR_GTF F.0 3.0 else1040_1
    MOVEF_F 0.0 VLV_COLOR_111
    JR endif1040
  else1040_1:
    JR_GTEQF VLV_SAT_111 0.4 else1043_1
    JR_LTEQF VLV_VALUE_111 VLV_RGBGREY_111 else1044_1
    MOVEF_F 6.0 VLV_COLOR_111
    JR endif1044
  else1044_1:
    MOVEF_F 1.0 VLV_COLOR_111
  else1044_2:
  endif1044:
    JR endif1043
  else1043_1:
    JR_LTF VLV_HUE_111 0.0 else1045_1
    JR_GTEQF VLV_HUE_111 VLV_RED_111 else1045_1
    MOVEF_F 5.0 VLV_COLOR_111
    JR endif1045
  else1045_1:
    JR_LTF VLV_HUE_111 VLV_RED_111 else1045_2
    JR_GTEQF VLV_HUE_111 VLV_YELLOW_111 else1045_2
    MOVEF_F 4.0 VLV_COLOR_111
    JR endif1045
  else1045_2:
    JR_LTF VLV_HUE_111 VLV_YELLOW_111 else1045_3
    JR_GTEQF VLV_HUE_111 VLV_GREEN_111 else1045_3
    MOVEF_F 3.0 VLV_COLOR_111
    JR endif1045
  else1045_3:
    JR_LTF VLV_HUE_111 VLV_GREEN_111 else1045_4
    JR_GTEQF VLV_HUE_111 VLV_BLUE_111 else1045_4
    MOVEF_F 2.0 VLV_COLOR_111
    JR endif1045
  else1045_4:
    MOVEF_F 5.0 VLV_COLOR_111
  else1045_5:
  endif1045:
  else1043_2:
  endif1043:
  else1040_2:
  endif1040:
    STRINGS VALUE_FORMATTED VLV_RRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_111 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1061 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1061:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer1062
	DATA8 no1062
	DATA8 mode81062
	
	MOVEF_8 3.0 no1062
	SUB8 no1062 1 no1062
	DIV8 no1062 4 layer1062
	MATH MOD8 no1062 4 no1062

	MOVEF_8 4.0 mode81062
	
	INPUT_DEVICE READY_RAW layer1062 no1062 0 mode81062 0
    MOVEF_F 15.0 VLV_RED_112
    MOVEF_F 60.0 VLV_YELLOW_112
    MOVEF_F 170.0 VLV_GREEN_112
    MOVEF_F 330.0 VLV_BLUE_112
    MOVEF_F 10.0 VLV_VALUENEGRO_112
    MOVEF_F 100.0 VLV_VALUEBLANCO_112
    MOVEF_F 147.0 VLV_RWHITE_112
    MOVEF_F 143.0 VLV_GWHITE_112
    MOVEF_F 160.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    MOVEF_F 0.0 VLV_COLOR_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_112
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_112
  for1068:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1068
  forbody1068:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_112
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_112 VLV_RGB_112
    DATAF tmpf1073
    DATA8 flag1073
    DIVF VLV_RRAW_112 VLV_RWHITE_112 tmpf1073
    CP_EQF 0.0 VLV_RWHITE_112 flag1073
    SELECTF flag1073 0.0 tmpf1073 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    DATAF tmpf1077
    DATA8 flag1077
    DIVF VLV_GRAW_112 VLV_GWHITE_112 tmpf1077
    CP_EQF 0.0 VLV_GWHITE_112 flag1077
    SELECTF flag1077 0.0 tmpf1077 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    DATAF tmpf1081
    DATA8 flag1081
    DIVF VLV_BRAW_112 VLV_BWHITE_112 tmpf1081
    CP_EQF 0.0 VLV_BWHITE_112 flag1081
    SELECTF flag1081 0.0 tmpf1081 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_RNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.3 VLV_GNORMA_112
    DATA8 flag1087
	CP_GTF F.2 F.3 flag1087
	SELECTF flag1087 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_BNORMA_112
    DATA8 flag1089
	CP_GTF F.1 F.2 flag1089
	SELECTF flag1089 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    DATA32 milliseconds1091
	MOVEF_32 5.0 milliseconds1091
	DATA32 timer1091
	TIMER_WAIT milliseconds1091 timer1091
	TIMER_READY timer1091
    ADDF VLV_J_112 1.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1068
  endfor1068:
    MOVEF_F 1.0 VLV_J_112
  for1093:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1093
  forbody1093:
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_112
    ADDF F.0 F.1 VLV_RNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_112
    ADDF F.0 F.1 VLV_GNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_112
    ADDF F.0 F.1 VLV_BNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_112
    ADDF F.0 F.1 VLV_MAX_112
    ADDF VLV_J_112 2.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1093
  endfor1093:
    DATAF tmpf1111
    DATA8 flag1111
    DIVF VLV_RNORM_112 VLV_REPS_112 tmpf1111
    CP_EQF 0.0 VLV_REPS_112 flag1111
    SELECTF flag1111 0.0 tmpf1111 VLV_RNORM_112

    DATAF tmpf1112
    DATA8 flag1112
    DIVF VLV_GNORM_112 VLV_REPS_112 tmpf1112
    CP_EQF 0.0 VLV_REPS_112 flag1112
    SELECTF flag1112 0.0 tmpf1112 VLV_GNORM_112

    DATAF tmpf1113
    DATA8 flag1113
    DIVF VLV_BNORM_112 VLV_REPS_112 tmpf1113
    CP_EQF 0.0 VLV_REPS_112 flag1113
    SELECTF flag1113 0.0 tmpf1113 VLV_BNORM_112

    DATAF tmpf1114
    DATA8 flag1114
    DIVF VLV_MAX_112 VLV_REPS_112 tmpf1114
    CP_EQF 0.0 VLV_REPS_112 flag1114
    SELECTF flag1114 0.0 tmpf1114 VLV_MAX_112

    DATA8 flag1115
	CP_LTF VLV_RNORM_112 VLV_GNORM_112 flag1115
	SELECTF flag1115 VLV_RNORM_112 VLV_GNORM_112 F.0
    DATA8 flag1116
	CP_LTF F.0 VLV_BNORM_112 flag1116
	SELECTF flag1116 F.0 VLV_BNORM_112 VLV_MIN_112
    JR_NEQF VLV_MAX_112 VLV_MIN_112 else1117_1
    MOVEF_F 0.0 VLV_HUE_112
    JR endif1117
  else1117_1:
    JR_NEQF VLV_MAX_112 VLV_RNORM_112 else1117_2
    JR_LTF VLV_GNORM_112 VLV_BNORM_112 else1118_1
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_112 VLV_MIN_112 F.1
    DATAF tmpf1122
    DATA8 flag1122
    DIVF F.0 F.1 tmpf1122
    CP_EQF 0.0 F.1 flag1122
    SELECTF flag1122 0.0 tmpf1122 VLV_HUE_112

    JR endif1118
  else1118_1:
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1126
    DATA8 flag1126
    DIVF F.1 F.2 tmpf1126
    CP_EQF 0.0 F.2 flag1126
    SELECTF flag1126 0.0 tmpf1126 F.0

    ADDF F.0 360.0 VLV_HUE_112
  else1118_2:
  endif1118:
    JR endif1117
  else1117_2:
    JR_NEQF VLV_MAX_112 VLV_GNORM_112 else1117_3
    SUBF VLV_BNORM_112 VLV_RNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1131
    DATA8 flag1131
    DIVF F.1 F.2 tmpf1131
    CP_EQF 0.0 F.2 flag1131
    SELECTF flag1131 0.0 tmpf1131 F.0

    ADDF F.0 120.0 VLV_HUE_112
    JR endif1117
  else1117_3:
    SUBF VLV_RNORM_112 VLV_GNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1136
    DATA8 flag1136
    DIVF F.1 F.2 tmpf1136
    CP_EQF 0.0 F.2 flag1136
    SELECTF flag1136 0.0 tmpf1136 F.0

    ADDF F.0 240.0 VLV_HUE_112
  else1117_4:
  endif1117:
    JR_NEQF VLV_MAX_112 0.0 else1138_1
    MOVEF_F 0.0 VLV_SAT_112
    JR endif1138
  else1138_1:
    DATAF tmpf1139
    DATA8 flag1139
    DIVF VLV_MIN_112 VLV_MAX_112 tmpf1139
    CP_EQF 0.0 VLV_MAX_112 flag1139
    SELECTF flag1139 0.0 tmpf1139 F.0

    SUBF 1.0 F.0 VLV_SAT_112
  else1138_2:
  endif1138:
    MOVEF_F VLV_MAX_112 VLV_VALUE_112
    ADDF VLV_VALUEBLANCO_112 VLV_VALUENEGRO_112 F.0
    DATAF tmpf1142
    DATA8 flag1142
    DIVF F.0 2.0 tmpf1142
    CP_EQF 0.0 2.0 flag1142
    SELECTF flag1142 0.0 tmpf1142 VLV_RGBGREY_112

    ADDF VLV_RNORM_112 VLV_GNORM_112 F.1
    ADDF F.1 VLV_BNORM_112 F.0
    JR_GTF F.0 3.0 else1143_1
    MOVEF_F 0.0 VLV_COLOR_112
    JR endif1143
  else1143_1:
    JR_GTEQF VLV_SAT_112 0.4 else1146_1
    JR_LTEQF VLV_VALUE_112 VLV_RGBGREY_112 else1147_1
    MOVEF_F 6.0 VLV_COLOR_112
    JR endif1147
  else1147_1:
    MOVEF_F 1.0 VLV_COLOR_112
  else1147_2:
  endif1147:
    JR endif1146
  else1146_1:
    JR_LTF VLV_HUE_112 0.0 else1148_1
    JR_GTEQF VLV_HUE_112 VLV_RED_112 else1148_1
    MOVEF_F 5.0 VLV_COLOR_112
    JR endif1148
  else1148_1:
    JR_LTF VLV_HUE_112 VLV_RED_112 else1148_2
    JR_GTEQF VLV_HUE_112 VLV_YELLOW_112 else1148_2
    MOVEF_F 4.0 VLV_COLOR_112
    JR endif1148
  else1148_2:
    JR_LTF VLV_HUE_112 VLV_YELLOW_112 else1148_3
    JR_GTEQF VLV_HUE_112 VLV_GREEN_112 else1148_3
    MOVEF_F 3.0 VLV_COLOR_112
    JR endif1148
  else1148_3:
    JR_LTF VLV_HUE_112 VLV_GREEN_112 else1148_4
    JR_GTEQF VLV_HUE_112 VLV_BLUE_112 else1148_4
    MOVEF_F 2.0 VLV_COLOR_112
    JR endif1148
  else1148_4:
    MOVEF_F 5.0 VLV_COLOR_112
  else1148_5:
  endif1148:
  else1146_2:
  endif1146:
  else1143_2:
  endif1143:
    STRINGS VALUE_FORMATTED VLV_RRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_112 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1164:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer1165
	DATA8 no1165
	DATA8 mode81165
	
	MOVEF_8 4.0 no1165
	SUB8 no1165 1 no1165
	DIV8 no1165 4 layer1165
	MATH MOD8 no1165 4 no1165

	MOVEF_8 4.0 mode81165
	
	INPUT_DEVICE READY_RAW layer1165 no1165 0 mode81165 0
    MOVEF_F 15.0 VLV_RED_113
    MOVEF_F 60.0 VLV_YELLOW_113
    MOVEF_F 170.0 VLV_GREEN_113
    MOVEF_F 330.0 VLV_BLUE_113
    MOVEF_F 10.0 VLV_VALUENEGRO_113
    MOVEF_F 100.0 VLV_VALUEBLANCO_113
    MOVEF_F 147.0 VLV_RWHITE_113
    MOVEF_F 143.0 VLV_GWHITE_113
    MOVEF_F 160.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_113
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_113
  for1171:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1171
  forbody1171:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_113
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_113 VLV_RGB_113
    DATAF tmpf1176
    DATA8 flag1176
    DIVF VLV_RRAW_113 VLV_RWHITE_113 tmpf1176
    CP_EQF 0.0 VLV_RWHITE_113 flag1176
    SELECTF flag1176 0.0 tmpf1176 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    DATAF tmpf1180
    DATA8 flag1180
    DIVF VLV_GRAW_113 VLV_GWHITE_113 tmpf1180
    CP_EQF 0.0 VLV_GWHITE_113 flag1180
    SELECTF flag1180 0.0 tmpf1180 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    DATAF tmpf1184
    DATA8 flag1184
    DIVF VLV_BRAW_113 VLV_BWHITE_113 tmpf1184
    CP_EQF 0.0 VLV_BWHITE_113 flag1184
    SELECTF flag1184 0.0 tmpf1184 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_RNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.3 VLV_GNORMA_113
    DATA8 flag1190
	CP_GTF F.2 F.3 flag1190
	SELECTF flag1190 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_BNORMA_113
    DATA8 flag1192
	CP_GTF F.1 F.2 flag1192
	SELECTF flag1192 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    DATA32 milliseconds1194
	MOVEF_32 5.0 milliseconds1194
	DATA32 timer1194
	TIMER_WAIT milliseconds1194 timer1194
	TIMER_READY timer1194
    ADDF VLV_J_113 1.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1171
  endfor1171:
    MOVEF_F 1.0 VLV_J_113
  for1196:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1196
  forbody1196:
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_113
    ADDF F.0 F.1 VLV_RNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_113
    ADDF F.0 F.1 VLV_GNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_113
    ADDF F.0 F.1 VLV_BNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_113
    ADDF F.0 F.1 VLV_MAX_113
    ADDF VLV_J_113 2.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1196
  endfor1196:
    DATAF tmpf1214
    DATA8 flag1214
    DIVF VLV_RNORM_113 VLV_REPS_113 tmpf1214
    CP_EQF 0.0 VLV_REPS_113 flag1214
    SELECTF flag1214 0.0 tmpf1214 VLV_RNORM_113

    DATAF tmpf1215
    DATA8 flag1215
    DIVF VLV_GNORM_113 VLV_REPS_113 tmpf1215
    CP_EQF 0.0 VLV_REPS_113 flag1215
    SELECTF flag1215 0.0 tmpf1215 VLV_GNORM_113

    DATAF tmpf1216
    DATA8 flag1216
    DIVF VLV_BNORM_113 VLV_REPS_113 tmpf1216
    CP_EQF 0.0 VLV_REPS_113 flag1216
    SELECTF flag1216 0.0 tmpf1216 VLV_BNORM_113

    DATAF tmpf1217
    DATA8 flag1217
    DIVF VLV_MAX_113 VLV_REPS_113 tmpf1217
    CP_EQF 0.0 VLV_REPS_113 flag1217
    SELECTF flag1217 0.0 tmpf1217 VLV_MAX_113

    DATA8 flag1218
	CP_LTF VLV_RNORM_113 VLV_GNORM_113 flag1218
	SELECTF flag1218 VLV_RNORM_113 VLV_GNORM_113 F.0
    DATA8 flag1219
	CP_LTF F.0 VLV_BNORM_113 flag1219
	SELECTF flag1219 F.0 VLV_BNORM_113 VLV_MIN_113
    JR_NEQF VLV_MAX_113 VLV_MIN_113 else1220_1
    MOVEF_F 0.0 VLV_HUE_113
    JR endif1220
  else1220_1:
    JR_NEQF VLV_MAX_113 VLV_RNORM_113 else1220_2
    JR_LTF VLV_GNORM_113 VLV_BNORM_113 else1221_1
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_113 VLV_MIN_113 F.1
    DATAF tmpf1225
    DATA8 flag1225
    DIVF F.0 F.1 tmpf1225
    CP_EQF 0.0 F.1 flag1225
    SELECTF flag1225 0.0 tmpf1225 VLV_HUE_113

    JR endif1221
  else1221_1:
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1229
    DATA8 flag1229
    DIVF F.1 F.2 tmpf1229
    CP_EQF 0.0 F.2 flag1229
    SELECTF flag1229 0.0 tmpf1229 F.0

    ADDF F.0 360.0 VLV_HUE_113
  else1221_2:
  endif1221:
    JR endif1220
  else1220_2:
    JR_NEQF VLV_MAX_113 VLV_GNORM_113 else1220_3
    SUBF VLV_BNORM_113 VLV_RNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1234
    DATA8 flag1234
    DIVF F.1 F.2 tmpf1234
    CP_EQF 0.0 F.2 flag1234
    SELECTF flag1234 0.0 tmpf1234 F.0

    ADDF F.0 120.0 VLV_HUE_113
    JR endif1220
  else1220_3:
    SUBF VLV_RNORM_113 VLV_GNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1239
    DATA8 flag1239
    DIVF F.1 F.2 tmpf1239
    CP_EQF 0.0 F.2 flag1239
    SELECTF flag1239 0.0 tmpf1239 F.0

    ADDF F.0 240.0 VLV_HUE_113
  else1220_4:
  endif1220:
    JR_NEQF VLV_MAX_113 0.0 else1241_1
    MOVEF_F 0.0 VLV_SAT_113
    JR endif1241
  else1241_1:
    DATAF tmpf1242
    DATA8 flag1242
    DIVF VLV_MIN_113 VLV_MAX_113 tmpf1242
    CP_EQF 0.0 VLV_MAX_113 flag1242
    SELECTF flag1242 0.0 tmpf1242 F.0

    SUBF 1.0 F.0 VLV_SAT_113
  else1241_2:
  endif1241:
    MOVEF_F VLV_MAX_113 VLV_VALUE_113
    ADDF VLV_VALUEBLANCO_113 VLV_VALUENEGRO_113 F.0
    DATAF tmpf1245
    DATA8 flag1245
    DIVF F.0 2.0 tmpf1245
    CP_EQF 0.0 2.0 flag1245
    SELECTF flag1245 0.0 tmpf1245 VLV_RGBGREY_113

    ADDF VLV_RNORM_113 VLV_GNORM_113 F.1
    ADDF F.1 VLV_BNORM_113 F.0
    JR_GTF F.0 3.0 else1246_1
    MOVEF_F 0.0 VLV_COLOR_113
    JR endif1246
  else1246_1:
    JR_GTEQF VLV_SAT_113 0.4 else1249_1
    JR_LTEQF VLV_VALUE_113 VLV_RGBGREY_113 else1250_1
    MOVEF_F 6.0 VLV_COLOR_113
    JR endif1250
  else1250_1:
    MOVEF_F 1.0 VLV_COLOR_113
  else1250_2:
  endif1250:
    JR endif1249
  else1249_1:
    JR_LTF VLV_HUE_113 0.0 else1251_1
    JR_GTEQF VLV_HUE_113 VLV_RED_113 else1251_1
    MOVEF_F 5.0 VLV_COLOR_113
    JR endif1251
  else1251_1:
    JR_LTF VLV_HUE_113 VLV_RED_113 else1251_2
    JR_GTEQF VLV_HUE_113 VLV_YELLOW_113 else1251_2
    MOVEF_F 4.0 VLV_COLOR_113
    JR endif1251
  else1251_2:
    JR_LTF VLV_HUE_113 VLV_YELLOW_113 else1251_3
    JR_GTEQF VLV_HUE_113 VLV_GREEN_113 else1251_3
    MOVEF_F 3.0 VLV_COLOR_113
    JR endif1251
  else1251_3:
    JR_LTF VLV_HUE_113 VLV_GREEN_113 else1251_4
    JR_GTEQF VLV_HUE_113 VLV_BLUE_113 else1251_4
    MOVEF_F 2.0 VLV_COLOR_113
    JR endif1251
  else1251_4:
    MOVEF_F 5.0 VLV_COLOR_113
  else1251_5:
  endif1251:
  else1249_2:
  endif1249:
  else1246_2:
  endif1246:
    STRINGS VALUE_FORMATTED VLV_RRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_113 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1267:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_122 0.0 else1268_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1268
  else1268_1:
    JR_NEQF VLV_COLOR_122 1.0 else1268_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1268
  else1268_2:
    JR_NEQF VLV_COLOR_122 2.0 else1268_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1268
  else1268_3:
    JR_NEQF VLV_COLOR_122 3.0 else1268_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1268
  else1268_4:
    JR_NEQF VLV_COLOR_122 4.0 else1268_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1268
  else1268_5:
    JR_NEQF VLV_COLOR_122 5.0 else1268_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1268
  else1268_6:
    JR_NEQF VLV_COLOR_122 6.0 else1268_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1268
  else1268_7:
    JR_NEQF VLV_COLOR_122 7.0 else1268_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1268_8:
  endif1268:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_ABAJO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1277:
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -220.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1278:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1279:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 350.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1280:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -300.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1281:
RETSUB_F_COGER_ABAJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_0:
SUB_F_COGER_ARRIBA_0:
    MOVEF_F -20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1282:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -670.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1283:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -200.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1284:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1285:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1286:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 400.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1287:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -400.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1288:
RETSUB_F_COGER_ARRIBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ARRIBA_0:
SUB_F_SOLTAR_TODO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1289:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -750.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1290:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1291:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1292:
RETSUB_F_SOLTAR_TODO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_TODO_0:
SUB_F_SOLTAR_UNO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1293:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -760.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1294:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1295:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -660.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1296:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1297:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 200.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1298:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1299:
RETSUB_F_SOLTAR_UNO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_UNO_0:
SUB_F_LECTURA_1:
    MOVEF_F 15.0 VLV_V_95
    MOVEF_F -650.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1300:
    MOVEF_F 5.0 VLV_REPS_111
    WRITE32 ENDSUB_F_RGBDETECT2_2:CALLSUB1301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RGBDETECT2_2
CALLSUB1301:
    MOVEF_F VLV_COLOR_111 VLV_READ_131
    MOVEF_F VLV_READ_131 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1302:
    MOVEF_F 15.0 VLV_V_95
    MOVEF_F -200.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1303:
RETSUB_F_LECTURA_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LECTURA_1:
SUB_F_TRASPMATVECT3X3_2:
    CALL VECTOR.INIT 9.0 0.0 VLV_S_132
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 3.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 6.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 4.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 7.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 5.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 8.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_132
RETSUB_F_TRASPMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TRASPMATVECT3X3_2:
SUB_F_INVMATVECT3X3_2:
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.6 VLV_M_133
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 5.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    CALL ARRAYGET_FLOAT 5.0 F.7 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.8 VLV_M_133
    MULF F.7 F.8 F.6
    SUBF F.5 F.6 F.4
    MULF F.3 F.4 F.2
    SUBF F.1 F.2 F.0
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.6 VLV_M_133
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 4.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    ADDF F.0 F.1 VLV_DETERMINANTE_133
    JR_EQF VLV_DETERMINANTE_133 0.0 else1352_1
    CALL ARRAYGET_FLOAT 4.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1360
    DATA8 flag1360
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1360
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1360
    SELECTF flag1360 0.0 tmpf1360 F.0

    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1369
    DATA8 flag1369
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1369
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1369
    SELECTF flag1369 0.0 tmpf1369 F.0

    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1378
    DATA8 flag1378
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1378
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1378
    SELECTF flag1378 0.0 tmpf1378 F.0

    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1387
    DATA8 flag1387
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1387
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1387
    SELECTF flag1387 0.0 tmpf1387 F.0

    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1396
    DATA8 flag1396
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1396
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1396
    SELECTF flag1396 0.0 tmpf1396 F.0

    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1405
    DATA8 flag1405
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1405
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1405
    SELECTF flag1405 0.0 tmpf1405 F.0

    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1414
    DATA8 flag1414
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1414
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1414
    SELECTF flag1414 0.0 tmpf1414 F.0

    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1423
    DATA8 flag1423
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1423
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1423
    SELECTF flag1423 0.0 tmpf1423 F.0

    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1432
    DATA8 flag1432
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1432
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1432
    SELECTF flag1432 0.0 tmpf1432 F.0

    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_133
  else1352_1:
  endif1352:
RETSUB_F_INVMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_INVMATVECT3X3_2:
SUB_F_MULTIMATRIZCOEF_3:
    MOVEF_F 0.0 VLV_I_134
  while1434:
    CALL ARRAYGET_FLOAT VLV_I_134 F.0 VLV_M_134
    JR_EQF F.0 0.0 endwhile1434
  whilebody1434:
    CALL ARRAYGET_FLOAT VLV_I_134 F.1 VLV_M_134
    MULF VLV_K_134 F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_I_134 F.0 VLV_S_134
    ADDF VLV_I_134 1.0 VLV_I_134
    CALL ARRAYGET_FLOAT VLV_I_134 F.0 VLV_M_134
    JR_NEQF F.0 0.0 whilebody1434
  endwhile1434:
RETSUB_F_MULTIMATRIZCOEF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MULTIMATRIZCOEF_3:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall VECTOR.INIT       // FFA
{
	IN_F size
	IN_F value
	IN_16 a

	DATA32 size32
	MOVEF_32 size size32
	JR_LTEQ32 size32 0 empty

	ARRAY RESIZE a size32
	ARRAY FILL a value
	RETURN

empty:
    ARRAY RESIZE a 0
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
