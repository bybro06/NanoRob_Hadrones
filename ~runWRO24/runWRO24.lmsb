DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_105
DATAF VLV_AENC_105
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V1_35
DATAF VLV_V2_35
DATAF VLV_ANGLE_35
DATAF VLV_V_95
DATAF VLV_AENC_95
DATAF VLV_VELOCIDAD_2
DATAF VLV_DISTANCIA_2
DATAF VLV_REPS_110
DATAF VLV_COLOR_110
DATAF VLV_COLOR_122
DATAF VLV_READ_131
DATAF VLV_V_101
DATAF VLV_VELOCIDAD1_15
DATAF VLV_VELOCIDAD2_15
DATAF VLV_ENCODER_15
DATAF VLV_VELOCIDAD1_25
DATAF VLV_VELOCIDAD2_25
DATAF VLV_TIEMPO_25
DATAF VLV_VELOCIDAD_39
DATAF VLV_VELOCIDAD_13
DATAF VLV_TIEMPO_13
DATAF VLV_VELOCIDAD_5
DATAF VLV_SENS_5
DATAF VLV_VELOCIDAD_3
DATAF VLV_SENS_3
DATAF VLV_VEL_33
DATAF VLV_VELOCIDAD_75
DATAF VLV_KP_75
DATAF VLV_KI_75
DATAF VLV_KD_75
DATAF VLV_ENCODER_75
DATAF VLV_VELOCIDAD_82
DATAF VLV_KP_82
DATAF VLV_KI_82
DATAF VLV_KD_82
DATAF VLV_LADO_82
DATAF VLV_SENS_82
DATAF VLV_VELOCIDAD_37
DATAF VLV_VELOCIDAD_6
DATAF VLV_SENS_6
DATAF VLV_VELOCIDAD_4
DATAF VLV_SENS_4
DATAF VLV_VELOCIDAD_81
DATAF VLV_KP_81
DATAF VLV_KI_81
DATAF VLV_KD_81
DATAF VLV_LADO_81
DATAF VLV_SENS_81
DATAF VLV_V_96
DATAF VLV_V0_48
DATAF VLV_VMAX_48
DATAF VLV_DISTANCIA_48
DATAF VLV_VELOCIDAD1_16
DATAF VLV_VELOCIDAD2_16
DATAF VLV_ENCODER_16
DATAF VLV_V_106
DATAF VLV_V_104
DATAF VLV_GRADOS_104
DATAF VLV_V0_56
DATAF VLV_VMAX_56
DATAF VLV_KP_56
DATAF VLV_KI_56
DATAF VLV_KD_56
DATAF VLV_ACCELENCODER_56
DATAF VLV_VELOCIDAD_72
DATAF VLV_KP_72
DATAF VLV_KI_72
DATAF VLV_KD_72
DATAF VLV_VELOCIDAD_76
DATAF VLV_KP_76
DATAF VLV_KI_76
DATAF VLV_KD_76
DATAF VLV_ENCODER_76
DATAF VLV_VMAX_88
DATAF VLV_KP_88
DATAF VLV_KI_88
DATAF VLV_KD_88
DATAF VLV_REPS_111
DATAF VLV_COLOR_111
DATAF VLV_REPS_112
DATAF VLV_COLOR_112
DATAF VLV_REPS_113
DATAF VLV_COLOR_113
ARRAY16 VLV_M_134 2
DATAF VLV_K_134
ARRAY16 VLV_S_134 2
ARRAY16 VLV_M_132 2
ARRAY16 VLV_S_132 2
ARRAY16 VLV_M_133 2
ARRAY16 VLV_S_133 2
DATAF VLV_V_108
DATAF VLV_T_108
DATAF VLV_V_109
DATAF VLV_AENC_109
DATAF VGV_CASO
DATAF VGV_BLOQUE
DATAF VLV_COLOR_114
DATAF VLV_COLOR_115
DATAF VLV_COLOR_116
DATAF VLV_COLOR_117
ARRAY16 VLV_VELI_123 2
ARRAY16 VLV_VELD_123 2
ARRAY16 VLV_OMEGAI_K1_123 2
ARRAY16 VLV_OMEGAD_K1_123 2
ARRAY16 VLV_V_123 2
ARRAY16 VLV_DH_T_123 2
ARRAY16 VLV_S_INV_123 2
DATAF VGV_CENTRO
DATAF VGV_XTIME
DATAF VGV_YTIME
DATAF VGV_THETATIME
DATAF VGV_XTCORRECT
DATAF VGV_YTCORRECT
DATAF VGV_THETATCORRECT
DATAF VGV_SENTIDO_D
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DW
DATAF VGV_DIAMETER
DATAF VGV_D_T
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_G1
DATAF VGV_ROJOS
DATAF VGV_AMARILLOS
DATAF VGV_VERDES
DATAF VGV_AZULES
DATAF VGV_NUMERO_BLOQUES
ARRAY16 VGV_BOMBOCLAT 2
ARRAY16 VGV_ALPHA_L 2
ARRAY16 VGV_ALPHA_R 2
DATAF VGV_OLDB
DATAF VGV_OLDC
ARRAY16 VGV_XT 2
ARRAY16 VGV_YT 2
ARRAY16 VGV_THETAT 2
DATAF VGV_I
DATAF VGV_D_L
DATAF VGV_D_R
DATAF VGV_D
DATAF VGV_DELTA_THETA
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAF VLV_DIAMETRO_2
DATAF VLV_ENC_2
DATAF VLV_START_B_2
DATAF VLV_START_C_2
DATAF VLV_ENCODER_C_2
DATAF VLV_ENCODER_B_2
DATAF VLV_ERROR_2
DATAF VLV_PROPORCIAL_2
DATAF VLV_START_B_3
DATAF VLV_START_C_3
DATAF VLV_ENCODER_B_3
DATAF VLV_ENCODER_C_3
DATAF VLV_ERROR_3
DATAF VLV_PROPORCIAL_3
DATAF VLV_START_B_4
DATAF VLV_START_C_4
DATAF VLV_ENCODER_B_4
DATAF VLV_ENCODER_C_4
DATAF VLV_ERROR_4
DATAF VLV_PROPORCIAL_4
DATAF VLV_START_B_5
DATAF VLV_START_C_5
DATAF VLV_ENCODER_B_5
DATAF VLV_ENCODER_C_5
DATAF VLV_ERROR_5
DATAF VLV_PROPORCIAL_5
DATAF VLV_START_B_6
DATAF VLV_START_C_6
DATAF VLV_ENCODER_B_6
DATAF VLV_ENCODER_C_6
DATAF VLV_ERROR_6
DATAF VLV_PROPORCIAL_6
DATAF VLV_START_B_13
DATAF VLV_START_C_13
DATAF VLV_ENCODER_B_13
DATAF VLV_ENCODER_C_13
DATAF VLV_ERROR_13
DATAF VLV_PROPORCIAL_13
DATAF VLV_DIAMETRO_15
DATAF VLV_DISTANCIA_15
DATAF VLV_DIAMETRO_16
DATAF VLV_DISTANCIA_16
DATAF VLV_AVANCE_33
DATAF VLV_GINICIO_33
DATAF VLV_AJUSTE_33
DATAS VLV_I_35 252
DATAS VLV_D_35 252
DATAF VLV_SIGNO_35
DATAF VLV_VMIN_35
DATAF VLV_VMAX_35
DATAF VLV_ENCODR_35
DATAS VLV_I_37 252
DATAS VLV_D_37 252
DATAF VLV_ENCODR_37
DATAF VLV_ANGLE_37
DATAS VLV_I_39 252
DATAS VLV_D_39 252
DATAF VLV_ENCODR_39
DATAF VLV_ANGLE_39
DATAF VLV_GRADOS_48
DATAF VLV_START_B_48
DATAF VLV_START_C_48
DATAF VLV_ENCODER_B_48
DATAF VLV_ENCODER_C_48
DATAF VLV_VEL_48
DATAF VLV_KP_48
DATAF VLV_KI_48
DATAF VLV_KD_48
DATAF VLV_ERROR_48
DATAF VLV_OLDERROR_48
DATAF VLV_ERRSUM_48
DATAF VLV_CORRECCION_48
DATAS VLV_I_56 252
DATAS VLV_D_56 252
DATAF VLV_U_56
DATAF VLV_ERROR_56
DATAF VLV_OLDERROR_56
DATAF VLV_ERRSUM_56
DATAF VLV_VEL_56
DATAF VLV_SENTIDO_56
DATAS VLV_I_72 252
DATAS VLV_D_72 252
DATAF VLV_ERROR_72
DATAF VLV_OLDERROR_72
DATAF VLV_ERRSUM_72
DATAF VLV_U_72
DATAF VLV_SENTIDO_72
DATAS VLV_I_75 252
DATAS VLV_D_75 252
DATAF VLV_ERROR_75
DATAF VLV_OLDERROR_75
DATAF VLV_ERRSUM_75
DATAF VLV_U_75
DATAF VLV_SENTIDO_75
DATAF VLV_START_C_75
DATAF VLV_ENCODER_C_75
DATAS VLV_I_76 252
DATAS VLV_D_76 252
DATAF VLV_ERROR_76
DATAF VLV_OLDERROR_76
DATAF VLV_ERRSUM_76
DATAF VLV_U_76
DATAF VLV_SENTIDO_76
DATAF VLV_START_C_76
DATAF VLV_ENCODER_C_76
DATAS VLV_I_81 252
DATAS VLV_D_81 252
DATAF VLV_ERROR_81
DATAF VLV_OLDERROR_81
DATAF VLV_ERRSUM_81
DATAF VLV_U_81
DATAF VLV_SENTIDO_81
DATAF VLV_READER_81
DATAS VLV_I_82 252
DATAS VLV_D_82 252
DATAF VLV_ERROR_82
DATAF VLV_OLDERROR_82
DATAF VLV_ERRSUM_82
DATAF VLV_U_82
DATAF VLV_SENTIDO_82
DATAF VLV_READER_82
DATAS VLV_I_88 252
DATAS VLV_D_88 252
DATAF VLV_V0_88
DATAF VLV_ACCELENCODER_88
DATAF VLV_U_88
DATAF VLV_ERRSUM_88
DATAF VLV_OLDERROR_88
DATAF VLV_VEL_88
DATAF VLV_SENTIDO_88
DATAF VLV_ERROR_88
DATAF VLV_ENCDIFF_95
DATAF VLV_SIGNO_95
DATAF VLV_ENCDIFF_96
DATAF VLV_SIGNO_96
DATAF VLV_AENC_101
DATAF VLV_DIFFA_104
DATAF VLV_DIFFD_104
DATAF VLV_SAFETYTIMER_104
DATAF VLV_SIGNOA_104
DATAF VLV_SIGNOD_104
DATAF VLV_VELA_104
DATAF VLV_VELD_104
DATAF VLV_ENCDIFF_105
DATAF VLV_SIGNO_105
DATAF VLV_ENCDIFF_109
DATAF VLV_SIGNO_109
DATAF VLV_SAFETYTIMER_109
DATAF VLV_RED_110
DATAF VLV_YELLOW_110
DATAF VLV_GREEN_110
DATAF VLV_BLUE_110
DATAF VLV_VALUENEGRO_110
DATAF VLV_VALUEBLANCO_110
DATAF VLV_RWHITE_110
DATAF VLV_GWHITE_110
DATAF VLV_BWHITE_110
DATAF VLV_HUE_110
DATAF VLV_SAT_110
DATAF VLV_VALUE_110
ARRAY16 VLV_RNORMA_110 2
ARRAY16 VLV_GNORMA_110 2
ARRAY16 VLV_BNORMA_110 2
ARRAY16 VLV_MAXA_110 2
DATAF VLV_J_110
ARRAY16 VLV_RGB_110 2
DATAF VLV_RRAW_110
DATAF VLV_GRAW_110
DATAF VLV_BRAW_110
DATAF VLV_RNORM_110
DATAF VLV_GNORM_110
DATAF VLV_BNORM_110
DATAF VLV_MAX_110
DATAF VLV_MIN_110
DATAF VLV_RGBGREY_110
DATAF VLV_RED_111
DATAF VLV_YELLOW_111
DATAF VLV_GREEN_111
DATAF VLV_BLUE_111
DATAF VLV_VALUENEGRO_111
DATAF VLV_VALUEBLANCO_111
DATAF VLV_RWHITE_111
DATAF VLV_GWHITE_111
DATAF VLV_BWHITE_111
DATAF VLV_HUE_111
DATAF VLV_SAT_111
DATAF VLV_VALUE_111
ARRAY16 VLV_RNORMA_111 2
ARRAY16 VLV_GNORMA_111 2
ARRAY16 VLV_BNORMA_111 2
ARRAY16 VLV_MAXA_111 2
DATAF VLV_J_111
ARRAY16 VLV_RGB_111 2
DATAF VLV_RRAW_111
DATAF VLV_GRAW_111
DATAF VLV_BRAW_111
DATAF VLV_RNORM_111
DATAF VLV_GNORM_111
DATAF VLV_BNORM_111
DATAF VLV_MAX_111
DATAF VLV_MIN_111
DATAF VLV_RGBGREY_111
DATAF VLV_RED_112
DATAF VLV_YELLOW_112
DATAF VLV_GREEN_112
DATAF VLV_BLUE_112
DATAF VLV_VALUENEGRO_112
DATAF VLV_VALUEBLANCO_112
DATAF VLV_RWHITE_112
DATAF VLV_GWHITE_112
DATAF VLV_BWHITE_112
DATAF VLV_HUE_112
DATAF VLV_SAT_112
DATAF VLV_VALUE_112
ARRAY16 VLV_RNORMA_112 2
ARRAY16 VLV_GNORMA_112 2
ARRAY16 VLV_BNORMA_112 2
ARRAY16 VLV_MAXA_112 2
DATAF VLV_J_112
ARRAY16 VLV_RGB_112 2
DATAF VLV_RRAW_112
DATAF VLV_GRAW_112
DATAF VLV_BRAW_112
DATAF VLV_RNORM_112
DATAF VLV_GNORM_112
DATAF VLV_BNORM_112
DATAF VLV_MAX_112
DATAF VLV_MIN_112
DATAF VLV_RGBGREY_112
DATAF VLV_RED_113
DATAF VLV_YELLOW_113
DATAF VLV_GREEN_113
DATAF VLV_BLUE_113
DATAF VLV_VALUENEGRO_113
DATAF VLV_VALUEBLANCO_113
DATAF VLV_RWHITE_113
DATAF VLV_GWHITE_113
DATAF VLV_BWHITE_113
DATAF VLV_HUE_113
DATAF VLV_SAT_113
DATAF VLV_VALUE_113
ARRAY16 VLV_RNORMA_113 2
ARRAY16 VLV_GNORMA_113 2
ARRAY16 VLV_BNORMA_113 2
ARRAY16 VLV_MAXA_113 2
DATAF VLV_J_113
ARRAY16 VLV_RGB_113 2
DATAF VLV_RRAW_113
DATAF VLV_GRAW_113
DATAF VLV_BRAW_113
DATAF VLV_RNORM_113
DATAF VLV_GNORM_113
DATAF VLV_BNORM_113
DATAF VLV_MAX_113
DATAF VLV_MIN_113
DATAF VLV_RGBGREY_113
DATAF VLV_DETERMINANTE_133
DATAF VLV_I_134
DATA32 RUNCOUNTER_F_ODOMETRY_0
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_READ_131
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD1_25
    MOVEF_F 0.0 VLV_VELOCIDAD2_25
    MOVEF_F 0.0 VLV_TIEMPO_25
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_LADO_82
    MOVEF_F 0.0 VLV_SENS_82
    MOVEF_F 0.0 VLV_VELOCIDAD_37
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_SENS_6
    MOVEF_F 0.0 VLV_VELOCIDAD_4
    MOVEF_F 0.0 VLV_SENS_4
    MOVEF_F 0.0 VLV_VELOCIDAD_81
    MOVEF_F 0.0 VLV_KP_81
    MOVEF_F 0.0 VLV_KI_81
    MOVEF_F 0.0 VLV_KD_81
    MOVEF_F 0.0 VLV_LADO_81
    MOVEF_F 0.0 VLV_SENS_81
    MOVEF_F 0.0 VLV_V_96
    MOVEF_F 0.0 VLV_V0_48
    MOVEF_F 0.0 VLV_VMAX_48
    MOVEF_F 0.0 VLV_DISTANCIA_48
    MOVEF_F 0.0 VLV_VELOCIDAD1_16
    MOVEF_F 0.0 VLV_VELOCIDAD2_16
    MOVEF_F 0.0 VLV_ENCODER_16
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYCREATE_FLOAT VLV_M_134
    MOVEF_F 0.0 VLV_K_134
    CALL ARRAYCREATE_FLOAT VLV_S_134
    CALL ARRAYCREATE_FLOAT VLV_M_132
    CALL ARRAYCREATE_FLOAT VLV_S_132
    CALL ARRAYCREATE_FLOAT VLV_M_133
    CALL ARRAYCREATE_FLOAT VLV_S_133
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VGV_CASO
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYCREATE_FLOAT VLV_VELI_123
    CALL ARRAYCREATE_FLOAT VLV_VELD_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAI_K1_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAD_K1_123
    CALL ARRAYCREATE_FLOAT VLV_V_123
    CALL ARRAYCREATE_FLOAT VLV_DH_T_123
    CALL ARRAYCREATE_FLOAT VLV_S_INV_123
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYCREATE_FLOAT VGV_BOMBOCLAT
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_L
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYCREATE_FLOAT VGV_XT
    CALL ARRAYCREATE_FLOAT VGV_YT
    CALL ARRAYCREATE_FLOAT VGV_THETAT
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_D_L
    MOVEF_F 0.0 VGV_D_R
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_DELTA_THETA
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    MOVEF_F 0.0 VLV_DIAMETRO_2
    MOVEF_F 0.0 VLV_ENC_2
    MOVEF_F 0.0 VLV_START_B_2
    MOVEF_F 0.0 VLV_START_C_2
    MOVEF_F 0.0 VLV_ENCODER_C_2
    MOVEF_F 0.0 VLV_ENCODER_B_2
    MOVEF_F 0.0 VLV_ERROR_2
    MOVEF_F 0.0 VLV_PROPORCIAL_2
    MOVEF_F 0.0 VLV_START_B_3
    MOVEF_F 0.0 VLV_START_C_3
    MOVEF_F 0.0 VLV_ENCODER_B_3
    MOVEF_F 0.0 VLV_ENCODER_C_3
    MOVEF_F 0.0 VLV_ERROR_3
    MOVEF_F 0.0 VLV_PROPORCIAL_3
    MOVEF_F 0.0 VLV_START_B_4
    MOVEF_F 0.0 VLV_START_C_4
    MOVEF_F 0.0 VLV_ENCODER_B_4
    MOVEF_F 0.0 VLV_ENCODER_C_4
    MOVEF_F 0.0 VLV_ERROR_4
    MOVEF_F 0.0 VLV_PROPORCIAL_4
    MOVEF_F 0.0 VLV_START_B_5
    MOVEF_F 0.0 VLV_START_C_5
    MOVEF_F 0.0 VLV_ENCODER_B_5
    MOVEF_F 0.0 VLV_ENCODER_C_5
    MOVEF_F 0.0 VLV_ERROR_5
    MOVEF_F 0.0 VLV_PROPORCIAL_5
    MOVEF_F 0.0 VLV_START_B_6
    MOVEF_F 0.0 VLV_START_C_6
    MOVEF_F 0.0 VLV_ENCODER_B_6
    MOVEF_F 0.0 VLV_ENCODER_C_6
    MOVEF_F 0.0 VLV_ERROR_6
    MOVEF_F 0.0 VLV_PROPORCIAL_6
    MOVEF_F 0.0 VLV_START_B_13
    MOVEF_F 0.0 VLV_START_C_13
    MOVEF_F 0.0 VLV_ENCODER_B_13
    MOVEF_F 0.0 VLV_ENCODER_C_13
    MOVEF_F 0.0 VLV_ERROR_13
    MOVEF_F 0.0 VLV_PROPORCIAL_13
    MOVEF_F 0.0 VLV_DIAMETRO_15
    MOVEF_F 0.0 VLV_DISTANCIA_15
    MOVEF_F 0.0 VLV_DIAMETRO_16
    MOVEF_F 0.0 VLV_DISTANCIA_16
    MOVEF_F 0.0 VLV_AVANCE_33
    MOVEF_F 0.0 VLV_GINICIO_33
    MOVEF_F 0.0 VLV_AJUSTE_33
    STRINGS DUPLICATE '' VLV_I_35
    STRINGS DUPLICATE '' VLV_D_35
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VMIN_35
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_ENCODR_35
    STRINGS DUPLICATE '' VLV_I_37
    STRINGS DUPLICATE '' VLV_D_37
    MOVEF_F 0.0 VLV_ENCODR_37
    MOVEF_F 0.0 VLV_ANGLE_37
    STRINGS DUPLICATE '' VLV_I_39
    STRINGS DUPLICATE '' VLV_D_39
    MOVEF_F 0.0 VLV_ENCODR_39
    MOVEF_F 0.0 VLV_ANGLE_39
    MOVEF_F 0.0 VLV_GRADOS_48
    MOVEF_F 0.0 VLV_START_B_48
    MOVEF_F 0.0 VLV_START_C_48
    MOVEF_F 0.0 VLV_ENCODER_B_48
    MOVEF_F 0.0 VLV_ENCODER_C_48
    MOVEF_F 0.0 VLV_VEL_48
    MOVEF_F 0.0 VLV_KP_48
    MOVEF_F 0.0 VLV_KI_48
    MOVEF_F 0.0 VLV_KD_48
    MOVEF_F 0.0 VLV_ERROR_48
    MOVEF_F 0.0 VLV_OLDERROR_48
    MOVEF_F 0.0 VLV_ERRSUM_48
    MOVEF_F 0.0 VLV_CORRECCION_48
    STRINGS DUPLICATE '' VLV_I_56
    STRINGS DUPLICATE '' VLV_D_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    MOVEF_F 0.0 VLV_VEL_56
    MOVEF_F 0.0 VLV_SENTIDO_56
    STRINGS DUPLICATE '' VLV_I_72
    STRINGS DUPLICATE '' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MOVEF_F 0.0 VLV_SENTIDO_72
    STRINGS DUPLICATE '' VLV_I_75
    STRINGS DUPLICATE '' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MOVEF_F 0.0 VLV_SENTIDO_75
    MOVEF_F 0.0 VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
    STRINGS DUPLICATE '' VLV_I_76
    STRINGS DUPLICATE '' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MOVEF_F 0.0 VLV_SENTIDO_76
    MOVEF_F 0.0 VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
    STRINGS DUPLICATE '' VLV_I_81
    STRINGS DUPLICATE '' VLV_D_81
    MOVEF_F 0.0 VLV_ERROR_81
    MOVEF_F 0.0 VLV_OLDERROR_81
    MOVEF_F 0.0 VLV_ERRSUM_81
    MOVEF_F 0.0 VLV_U_81
    MOVEF_F 0.0 VLV_SENTIDO_81
    MOVEF_F 0.0 VLV_READER_81
    STRINGS DUPLICATE '' VLV_I_82
    STRINGS DUPLICATE '' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MOVEF_F 0.0 VLV_SENTIDO_82
    MOVEF_F 0.0 VLV_READER_82
    STRINGS DUPLICATE '' VLV_I_88
    STRINGS DUPLICATE '' VLV_D_88
    MOVEF_F 0.0 VLV_V0_88
    MOVEF_F 0.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    MOVEF_F 0.0 VLV_VEL_88
    MOVEF_F 0.0 VLV_SENTIDO_88
    MOVEF_F 0.0 VLV_ERROR_88
    MOVEF_F 0.0 VLV_ENCDIFF_95
    MOVEF_F 0.0 VLV_SIGNO_95
    MOVEF_F 0.0 VLV_ENCDIFF_96
    MOVEF_F 0.0 VLV_SIGNO_96
    MOVEF_F 0.0 VLV_AENC_101
    MOVEF_F 0.0 VLV_DIFFA_104
    MOVEF_F 0.0 VLV_DIFFD_104
    MOVEF_F 0.0 VLV_SAFETYTIMER_104
    MOVEF_F 0.0 VLV_SIGNOA_104
    MOVEF_F 0.0 VLV_SIGNOD_104
    MOVEF_F 0.0 VLV_VELA_104
    MOVEF_F 0.0 VLV_VELD_104
    MOVEF_F 0.0 VLV_ENCDIFF_105
    MOVEF_F 0.0 VLV_SIGNO_105
    MOVEF_F 0.0 VLV_ENCDIFF_109
    MOVEF_F 0.0 VLV_SIGNO_109
    MOVEF_F 0.0 VLV_SAFETYTIMER_109
    MOVEF_F 0.0 VLV_RED_110
    MOVEF_F 0.0 VLV_YELLOW_110
    MOVEF_F 0.0 VLV_GREEN_110
    MOVEF_F 0.0 VLV_BLUE_110
    MOVEF_F 0.0 VLV_VALUENEGRO_110
    MOVEF_F 0.0 VLV_VALUEBLANCO_110
    MOVEF_F 0.0 VLV_RWHITE_110
    MOVEF_F 0.0 VLV_GWHITE_110
    MOVEF_F 0.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_MAXA_110
    MOVEF_F 0.0 VLV_J_110
    CALL ARRAYCREATE_FLOAT VLV_RGB_110
    MOVEF_F 0.0 VLV_RRAW_110
    MOVEF_F 0.0 VLV_GRAW_110
    MOVEF_F 0.0 VLV_BRAW_110
    MOVEF_F 0.0 VLV_RNORM_110
    MOVEF_F 0.0 VLV_GNORM_110
    MOVEF_F 0.0 VLV_BNORM_110
    MOVEF_F 0.0 VLV_MAX_110
    MOVEF_F 0.0 VLV_MIN_110
    MOVEF_F 0.0 VLV_RGBGREY_110
    MOVEF_F 0.0 VLV_RED_111
    MOVEF_F 0.0 VLV_YELLOW_111
    MOVEF_F 0.0 VLV_GREEN_111
    MOVEF_F 0.0 VLV_BLUE_111
    MOVEF_F 0.0 VLV_VALUENEGRO_111
    MOVEF_F 0.0 VLV_VALUEBLANCO_111
    MOVEF_F 0.0 VLV_RWHITE_111
    MOVEF_F 0.0 VLV_GWHITE_111
    MOVEF_F 0.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_MAXA_111
    MOVEF_F 0.0 VLV_J_111
    CALL ARRAYCREATE_FLOAT VLV_RGB_111
    MOVEF_F 0.0 VLV_RRAW_111
    MOVEF_F 0.0 VLV_GRAW_111
    MOVEF_F 0.0 VLV_BRAW_111
    MOVEF_F 0.0 VLV_RNORM_111
    MOVEF_F 0.0 VLV_GNORM_111
    MOVEF_F 0.0 VLV_BNORM_111
    MOVEF_F 0.0 VLV_MAX_111
    MOVEF_F 0.0 VLV_MIN_111
    MOVEF_F 0.0 VLV_RGBGREY_111
    MOVEF_F 0.0 VLV_RED_112
    MOVEF_F 0.0 VLV_YELLOW_112
    MOVEF_F 0.0 VLV_GREEN_112
    MOVEF_F 0.0 VLV_BLUE_112
    MOVEF_F 0.0 VLV_VALUENEGRO_112
    MOVEF_F 0.0 VLV_VALUEBLANCO_112
    MOVEF_F 0.0 VLV_RWHITE_112
    MOVEF_F 0.0 VLV_GWHITE_112
    MOVEF_F 0.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_MAXA_112
    MOVEF_F 0.0 VLV_J_112
    CALL ARRAYCREATE_FLOAT VLV_RGB_112
    MOVEF_F 0.0 VLV_RRAW_112
    MOVEF_F 0.0 VLV_GRAW_112
    MOVEF_F 0.0 VLV_BRAW_112
    MOVEF_F 0.0 VLV_RNORM_112
    MOVEF_F 0.0 VLV_GNORM_112
    MOVEF_F 0.0 VLV_BNORM_112
    MOVEF_F 0.0 VLV_MAX_112
    MOVEF_F 0.0 VLV_MIN_112
    MOVEF_F 0.0 VLV_RGBGREY_112
    MOVEF_F 0.0 VLV_RED_113
    MOVEF_F 0.0 VLV_YELLOW_113
    MOVEF_F 0.0 VLV_GREEN_113
    MOVEF_F 0.0 VLV_BLUE_113
    MOVEF_F 0.0 VLV_VALUENEGRO_113
    MOVEF_F 0.0 VLV_VALUEBLANCO_113
    MOVEF_F 0.0 VLV_RWHITE_113
    MOVEF_F 0.0 VLV_GWHITE_113
    MOVEF_F 0.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_MAXA_113
    MOVEF_F 0.0 VLV_J_113
    CALL ARRAYCREATE_FLOAT VLV_RGB_113
    MOVEF_F 0.0 VLV_RRAW_113
    MOVEF_F 0.0 VLV_GRAW_113
    MOVEF_F 0.0 VLV_BRAW_113
    MOVEF_F 0.0 VLV_RNORM_113
    MOVEF_F 0.0 VLV_GNORM_113
    MOVEF_F 0.0 VLV_BNORM_113
    MOVEF_F 0.0 VLV_MAX_113
    MOVEF_F 0.0 VLV_MIN_113
    MOVEF_F 0.0 VLV_RGBGREY_113
    MOVEF_F 0.0 VLV_DETERMINANTE_133
    MOVEF_F 0.0 VLV_I_134
    MOVE32_32 0 RUNCOUNTER_F_ODOMETRY_0
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_ODOMETRY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ODOMETRY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 -1 RUNCOUNTER_F_ODOMETRY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_ODOMETRY_0
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    DATAF F.7
    DATAF F.8
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1761
    WRITE32 ENDSUB_F_ODOMETRY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ODOMETRY_0
  dispatch1761:
    JR_NEQ32 SUBPROGRAM 1 dispatch1762
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1762:
    JR_NEQ32 SUBPROGRAM 2 dispatch1763
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1763:
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_READ_131
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD1_25
    MOVEF_F 0.0 VLV_VELOCIDAD2_25
    MOVEF_F 0.0 VLV_TIEMPO_25
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_LADO_82
    MOVEF_F 0.0 VLV_SENS_82
    MOVEF_F 0.0 VLV_VELOCIDAD_37
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_SENS_6
    MOVEF_F 0.0 VLV_VELOCIDAD_4
    MOVEF_F 0.0 VLV_SENS_4
    MOVEF_F 0.0 VLV_VELOCIDAD_81
    MOVEF_F 0.0 VLV_KP_81
    MOVEF_F 0.0 VLV_KI_81
    MOVEF_F 0.0 VLV_KD_81
    MOVEF_F 0.0 VLV_LADO_81
    MOVEF_F 0.0 VLV_SENS_81
    MOVEF_F 0.0 VLV_V_96
    MOVEF_F 0.0 VLV_V0_48
    MOVEF_F 0.0 VLV_VMAX_48
    MOVEF_F 0.0 VLV_DISTANCIA_48
    MOVEF_F 0.0 VLV_VELOCIDAD1_16
    MOVEF_F 0.0 VLV_VELOCIDAD2_16
    MOVEF_F 0.0 VLV_ENCODER_16
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_134
    MOVEF_F 0.0 VLV_K_134
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_134
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_132
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_133
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_133
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VGV_CASO
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELI_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELD_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAI_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAD_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_DH_T_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_INV_123
    MOVEF_F 0.0 VLV_READ_131
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 1.0 VGV_SENTIDO_D
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0001 VGV_KI
    MOVEF_F 1.0 VGV_KD
    MOVEF_F 102.0 VGV_DW
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.47222222222222 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB14:
    DATA32 tmp15
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 1  RUNCOUNTER_F_ODOMETRY_0 tmp15
    JR_NEQ32 0 tmp15 alreadylaunched15
    OBJECT_START TF_ODOMETRY_0
  alreadylaunched15:
    DATA32 tmp16
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp16
    JR_NEQ32 0 tmp16 alreadylaunched16
    OBJECT_START TF_DISPLAY_0
  alreadylaunched16:
    DATA32 tmp17
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp17
    JR_NEQ32 0 tmp17 alreadylaunched17
    OBJECT_START TF_STOP_0
  alreadylaunched17:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB18 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB18:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer19
	DATA8 no19
	DATA8 mode819
	
	MOVEF_8 1.0 no19
	SUB8 no19 1 no19
	DIV8 no19 4 layer19
	MATH MOD8 no19 4 no19

	MOVEF_8 0.0 mode819
	
	INPUT_DEVICE READY_RAW layer19 no19 0 mode819 0
    DATA8 layer20
	DATA8 no20
	DATA8 mode820
	
	MOVEF_8 2.0 no20
	SUB8 no20 1 no20
	DIV8 no20 4 layer20
	MATH MOD8 no20 4 no20

	MOVEF_8 4.0 mode820
	
	INPUT_DEVICE READY_RAW layer20 no20 0 mode820 0
    DATA8 layer21
	DATA8 no21
	DATA8 mode821
	
	MOVEF_8 3.0 no21
	SUB8 no21 1 no21
	DIV8 no21 4 layer21
	MATH MOD8 no21 4 no21

	MOVEF_8 4.0 mode821
	
	INPUT_DEVICE READY_RAW layer21 no21 0 mode821 0
    DATA8 layer22
	DATA8 no22
	DATA8 mode822
	
	MOVEF_8 4.0 no22
	SUB8 no22 1 no22
	DIV8 no22 4 layer22
	MATH MOD8 no22 4 no22

	MOVEF_8 0.0 mode822
	
	INPUT_DEVICE READY_RAW layer22 no22 0 mode822 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while24:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 850.0 endwhile24
  whilebody24:
    MOVEF_8 30.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 30.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 850.0 whilebody24
  endwhile24:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -360.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB32:
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds34
	MOVEF_32 100.0 milliseconds34
	DATA32 timer34
	TIMER_WAIT milliseconds34 timer34
	TIMER_READY timer34
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_ODOMETRY_0:
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_L
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_XT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_YT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_THETAT
    MOVEF_F 0.0 VGV_I
  while40:
  whilebody40:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.2
    MULF F.2 -1.0 F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_L
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_R
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_L
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_L
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf53
    DATA8 flag53
    DIVF F.0 2.0 tmpf53
    CP_EQF 0.0 2.0 flag53
    SELECTF flag53 0.0 tmpf53 VGV_D_L

    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_R
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_R
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf59
    DATA8 flag59
    DIVF F.0 2.0 tmpf59
    CP_EQF 0.0 2.0 flag59
    SELECTF flag59 0.0 tmpf59 VGV_D_R

    ADDF VGV_D_L VGV_D_R F.0
    DATAF tmpf61
    DATA8 flag61
    DIVF F.0 2.0 tmpf61
    CP_EQF 0.0 2.0 flag61
    SELECTF flag61 0.0 tmpf61 VGV_D

    SUBF VGV_D_R VGV_D_L F.0
    MULF 2.0 VGV_DW F.1
    DATAF tmpf64
    DATA8 flag64
    DIVF F.0 F.1 tmpf64
    CP_EQF 0.0 F.1 flag64
    SELECTF flag64 0.0 tmpf64 VGV_DELTA_THETA

    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf67
    DATA8 flag67
    DIVF VGV_DELTA_THETA 2.0 tmpf67
    CP_EQF 0.0 2.0 flag67
    SELECTF flag67 0.0 tmpf67 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf69
	MULF F.4 57.295779513082  tmpf69
	MATH SIN  tmpf69 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf76
    DATA8 flag76
    DIVF VGV_DELTA_THETA 2.0 tmpf76
    CP_EQF 0.0 2.0 flag76
    SELECTF flag76 0.0 tmpf76 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf78
	MULF F.4 57.295779513082 tmpf78
	MATH COS tmpf78 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_THETAT
    ADDF F.2 VGV_DELTA_THETA F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_THETAT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_XTIME VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_YTIME VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_THETATIME VGV_THETAT
    ADDF VGV_I 1.0 VGV_I
    DATA32 milliseconds94
	MOVEF_32 10.0 milliseconds94
	DATA32 timer94
	TIMER_WAIT milliseconds94 timer94
	TIMER_READY timer94
    JR whilebody40
  endwhile40:
RETSUB_F_ODOMETRY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ODOMETRY_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while95:
  whilebody95:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf101
    DATA8 flag101
    DIVF F.1 100.0 tmpf101
    CP_EQF 0.0 100.0 flag101
    SELECTF flag101 0.0 tmpf101 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'xt: ' S.1 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf108
    DATA8 flag108
    DIVF F.1 100.0 tmpf108
    CP_EQF 0.0 100.0 flag108
    SELECTF flag108 0.0 tmpf108 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'yt: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.1 VGV_THETAT
    MULF F.1 57.295779513082 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'thetat: ' S.1 S.0
    CALL LCD.WRITE 5.0 25.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf132
    DATA8 flag132
    DIVF F.2 0.05 tmpf132
    CP_EQF 0.0 0.05 flag132
    SELECTF flag132 0.0 tmpf132 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf140
    DATA8 flag140
    DIVF F.1 0.05 tmpf140
    CP_EQF 0.0 0.05 flag140
    SELECTF flag140 0.0 tmpf140 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    STRINGS VALUE_FORMATTED VGV_D_T '%g' 99 S.1
    CALL TEXT.APPEND 'Delta T:  ' S.1 S.0
    CALL LCD.WRITE 5.0 105.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds157
	MOVEF_32 50.0 milliseconds157
	DATA32 timer157
	TIMER_WAIT milliseconds157 timer157
	TIMER_READY timer157
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody95
  endwhile95:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB160:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 35.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB162:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 81.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB165:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -100.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB166:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_2
    MOVEF_F 10.0 VLV_DISTANCIA_2
    WRITE32 ENDSUB_F_ENCODERRECTOMMF_2:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMMF_2
CALLSUB168:
    MOVEF_F 5.0 VLV_REPS_110
    WRITE32 ENDSUB_F_RGBDETECT1_2:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RGBDETECT1_2
CALLSUB169:
    MOVEF_F VLV_COLOR_110 VGV_CASO
    MOVEF_F VGV_CASO VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB170:
    DATA8 layer171
	DATA8 no171
	DATA8 mode8171
	
	MOVEF_8 1.0 no171
	SUB8 no171 1 no171
	DIV8 no171 4 layer171
	MATH MOD8 no171 4 no171

	MOVEF_8 0.0 mode8171
	
	INPUT_DEVICE READY_RAW layer171 no171 0 mode8171 0
    JR_NEQF VGV_CASO 3.0 else172_1
    WRITE32 ENDSUB_F_CASO_VERDE_0:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASO_VERDE_0
CALLSUB173:
    JR endif172
  else172_1:
    WRITE32 ENDSUB_F_CASO_ROJO_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASO_ROJO_0
CALLSUB174:
  else172_2:
  endif172:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_CASO_VERDE_0:
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 173.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB177:
    DATA32 milliseconds178
	MOVEF_32 500.0 milliseconds178
	DATA32 timer178
	TIMER_WAIT milliseconds178 timer178
	TIMER_READY timer178
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 1.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB180:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.425 VLV_VELOCIDAD2_15
    MOVEF_F 34.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB183:
    MULF VGV_VELOCIDAD 0.375 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.27 VLV_VELOCIDAD2_15
    MOVEF_F 31.5 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB186:
    DATA32 milliseconds187
	MOVEF_32 500.0 milliseconds187
	DATA32 timer187
	TIMER_WAIT milliseconds187 timer187
	TIMER_READY timer187
    MULF VGV_VELOCIDAD -0.12 VLV_VELOCIDAD_1
    MOVEF_F 10.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB189:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -300.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB190:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB191:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 30.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB194:
    DATA32 milliseconds195
	MOVEF_32 1000.0 milliseconds195
	DATA32 timer195
	TIMER_WAIT milliseconds195 timer195
	TIMER_READY timer195
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB197:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -820.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB198:
    MULF VGV_VELOCIDAD 0.1 VLV_VELOCIDAD1_25
    MULF VGV_VELOCIDAD -0.1 VLV_VELOCIDAD2_25
    MOVEF_F 800.0 VLV_TIEMPO_25
    WRITE32 ENDSUB_F_TIEMPOGIROMM_3:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPOGIROMM_3
CALLSUB201:
    MULF VGV_VELOCIDAD -0.05 VLV_V1_35
    MULF VGV_VELOCIDAD 0.05 VLV_V2_35
    MOVEF_F 5.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB204:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -580.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB205:
    DATA32 milliseconds206
	MOVEF_32 1000.0 milliseconds206
	DATA32 timer206
	TIMER_WAIT milliseconds206 timer206
	TIMER_READY timer206
    MOVEF_F 10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB207:
    MOVEF_F -10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB208:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 24.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB210:
    MOVEF_F 40.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB211:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB214:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 2000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB216:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB218:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 500.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB220:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 5.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB222:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 101.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB225:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 31.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB227:
    DATA32 milliseconds228
	MOVEF_32 1000.0 milliseconds228
	DATA32 timer228
	TIMER_WAIT milliseconds228 timer228
	TIMER_READY timer228
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB229:
    MOVEF_F VLV_READ_131 VGV_BLOQUE
    JR_EQF VGV_BLOQUE 3.0 else230_1
    JR_EQF VGV_BLOQUE 2.0 else230_1
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    JR endif230
  else230_1:
    CALL ARRAYSTORE_FLOAT 0.0 VGV_BLOQUE VGV_BOMBOCLAT
    MOVEF_F 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_BLOQUE 3.0 else233_1
    ADDF VGV_VERDES 1.0 VGV_VERDES
    JR endif233
  else233_1:
    ADDF VGV_AZULES 1.0 VGV_AZULES
  else233_2:
  endif233:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB236:
  else230_2:
  endif230:
    MULF VGV_VELOCIDAD -0.2 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB238:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 92.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB241:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 1000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB243:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB245:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 500.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB247:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 13.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB249:
    MOVEF_F -20.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB250:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB252:
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB253:
    MOVEF_F VLV_READ_131 VGV_BLOQUE
    JR_EQF VGV_BLOQUE 3.0 else254_1
    JR_EQF VGV_BLOQUE 2.0 else254_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    JR endif254
  else254_1:
    CALL ARRAYSTORE_FLOAT 1.0 VGV_BLOQUE VGV_BOMBOCLAT
    ADDF VGV_NUMERO_BLOQUES 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else260_1
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB261:
    JR endif260
  else260_1:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB262:
  else260_2:
  endif260:
  else254_2:
  endif254:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 171.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB265:
    MULF VGV_VELOCIDAD 0.5 VLV_VELOCIDAD_1
    MOVEF_F 72.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB267:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_35
    MULF VGV_VELOCIDAD 0.2 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB270:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB272:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB274:
    MULF VGV_VELOCIDAD 0.2 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB276:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 15.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB278:
    JR_LTEQF VGV_NUMERO_BLOQUES 0.0 else279_1
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 1.0 VLV_LADO_82
    MOVEF_F 1.0 VLV_SENS_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_6:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_6
CALLSUB281:
    MOVEF_F 30.0 VLV_VELOCIDAD_37
    WRITE32 ENDSUB_F_SPIN180_1:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN180_1
CALLSUB282:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 30.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB284:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 86.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB287:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB289:
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else290_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else291_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB295:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB296:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB299:
    JR endif291
  else291_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB302:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB303:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB306:
  else291_2:
  endif291:
    JR endif290
  else290_1:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYGET_FLOAT 1.0 F.1 VGV_BOMBOCLAT
    JR_NEQF F.0 F.1 else307_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else310_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB314:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB315:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB318:
    JR endif310
  else310_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB321:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB322:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB325:
  else310_2:
  endif310:
    JR endif307
  else307_1:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 3.0 else326_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB330:
    WRITE32 ENDSUB_F_SOLTAR_UNO_0:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_UNO_0
CALLSUB331:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB334:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB337:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB338:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB341:
    JR endif326
  else326_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB344:
    WRITE32 ENDSUB_F_SOLTAR_UNO_0:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_UNO_0
CALLSUB345:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB348:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 25.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB351:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB352:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 25.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB355:
  else326_2:
  endif326:
  else307_2:
  endif307:
  else290_2:
  endif290:
    MOVEF_F 20.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB356:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB358:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB360:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB362:
    MULF VGV_VELOCIDAD 0.3 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB364:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 10.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB366:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 1.0 VLV_LADO_82
    MOVEF_F 1.0 VLV_SENS_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_6:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_6
CALLSUB368:
    JR endif279
  else279_1:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 8.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB370:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 1.0 VLV_LADO_82
    MOVEF_F 1.0 VLV_SENS_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_6:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_6
CALLSUB372:
  else279_2:
  endif279:
RETSUB_F_CASO_VERDE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASO_VERDE_0:
SUB_F_CASO_ROJO_0:
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 173.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB375:
    DATA32 milliseconds376
	MOVEF_32 500.0 milliseconds376
	DATA32 timer376
	TIMER_WAIT milliseconds376 timer376
	TIMER_READY timer376
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 1.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB378:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.475 VLV_VELOCIDAD2_15
    MOVEF_F 41.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB381:
    MULF VGV_VELOCIDAD 0.425 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.27 VLV_VELOCIDAD2_15
    MOVEF_F 32.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB384:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB386:
    DATA32 milliseconds387
	MOVEF_32 500.0 milliseconds387
	DATA32 timer387
	TIMER_WAIT milliseconds387 timer387
	TIMER_READY timer387
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -300.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB388:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB389:
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 3.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB391:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 30.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB394:
    DATA32 milliseconds395
	MOVEF_32 1000.0 milliseconds395
	DATA32 timer395
	TIMER_WAIT milliseconds395 timer395
	TIMER_READY timer395
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 9.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB397:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -820.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB398:
    MULF VGV_VELOCIDAD 0.1 VLV_VELOCIDAD1_25
    MULF VGV_VELOCIDAD -0.1 VLV_VELOCIDAD2_25
    MOVEF_F 800.0 VLV_TIEMPO_25
    WRITE32 ENDSUB_F_TIEMPOGIROMM_3:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPOGIROMM_3
CALLSUB401:
    DATA32 milliseconds402
	MOVEF_32 500.0 milliseconds402
	DATA32 timer402
	TIMER_WAIT milliseconds402 timer402
	TIMER_READY timer402
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 6.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB405:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -580.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB406:
    DATA32 milliseconds407
	MOVEF_32 1000.0 milliseconds407
	DATA32 timer407
	TIMER_WAIT milliseconds407 timer407
	TIMER_READY timer407
    MOVEF_F 10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB408:
    MOVEF_F -10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB409:
    MOVEF_F 30.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB410:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 30.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB412:
    MOVEF_F 30.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB413:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 105.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB416:
    DATA32 milliseconds417
	MOVEF_32 1000.0 milliseconds417
	DATA32 timer417
	TIMER_WAIT milliseconds417 timer417
	TIMER_READY timer417
    MULF VGV_VELOCIDAD 0.6 VLV_VELOCIDAD_1
    MOVEF_F 24.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB419:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_6
    MOVEF_F 1.0 VLV_SENS_6
    WRITE32 ENDSUB_F_1BLANCORECTOMMF_2:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMMF_2
CALLSUB421:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_4
    MOVEF_F 1.0 VLV_SENS_4
    WRITE32 ENDSUB_F_1NEGRORECTOMMF_2:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMMF_2
CALLSUB423:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB425:
    MULF VGV_VELOCIDAD 0.3 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB427:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_75
    MULF VGV_KP 1.25 VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 10.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB430:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_81
    MOVEF_F VGV_KP VLV_KP_81
    MOVEF_F VGV_KI VLV_KI_81
    MOVEF_F VGV_KD VLV_KD_81
    MOVEF_F 4.0 VLV_LADO_81
    MOVEF_F 1.0 VLV_SENS_81
    WRITE32 ENDSUB_F_SL1SPIDCROSS_6:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_6
CALLSUB432:
    MULF VGV_VELOCIDAD 0.7 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 36.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB434:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD2_15
    MOVEF_F 22.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB437:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD2_15
    MOVEF_F 25.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB440:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 25.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB442:
    WRITE32 ENDSUB_F_COGER_ABAJO_BASURA_0:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_BASURA_0
CALLSUB443:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB444:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB446:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 10.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB449:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -580.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB450:
    DATA32 milliseconds451
	MOVEF_32 1000.0 milliseconds451
	DATA32 timer451
	TIMER_WAIT milliseconds451 timer451
	TIMER_READY timer451
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.0 VLV_V2_35
    MOVEF_F 50.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB454:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.0 VLV_V2_35
    MOVEF_F 50.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB457:
    MOVEF_F 30.0 VLV_V_96
    WRITE32 ENDSUB_F_BMOVEA0_1:CALLSUB458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA0_1
CALLSUB458:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 130.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB461:
    MULF VGV_VELOCIDAD 0.2 VLV_V0_48
    MULF VGV_VELOCIDAD 0.9 VLV_VMAX_48
    MOVEF_F 20.0 VLV_DISTANCIA_48
    WRITE32 ENDSUB_F_SINACCELMMF_3:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SINACCELMMF_3
CALLSUB464:
    MULF VGV_VELOCIDAD 0.8 VLV_VELOCIDAD1_16
    MULF VGV_VELOCIDAD 0.82 VLV_VELOCIDAD2_16
    MOVEF_F 140.0 VLV_ENCODER_16
    WRITE32 ENDSUB_F_ENCODERGIROMMF_3:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMMF_3
CALLSUB467:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.21 VLV_VELOCIDAD2_15
    MOVEF_F 20.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB470:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB471:
    MOVEF_F 20.0 VLV_V_106
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB472:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB474:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 50.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB477:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 50.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB480:
    MULF VGV_VELOCIDAD -0.2 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB482:
RETSUB_F_CASO_ROJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASO_ROJO_0:
SUB_F_STOP_0:
  while483:
  whilebody483:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else484_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    WRITE32 ENDSUB_F_BMOVEADSAFE_2:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEADSAFE_2
CALLSUB489:
    PROGRAM_STOP -1
  else484_1:
  endif484:
    JR whilebody483
  endwhile483:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf494
    DATA8 flag494
    DIVF F.1 F.2 tmpf494
    CP_EQF 0.0 F.2 flag494
    SELECTF flag494 0.0 tmpf494 F.0

    DATAF tmpf495
    DATA8 flag495
    DIVF F.0 VLV_DIAMETRO_1 tmpf495
    CP_EQF 0.0 VLV_DIAMETRO_1 flag495
    SELECTF flag495 0.0 tmpf495 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while501:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile501
  whilebody501:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 1.5 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody501
  endwhile501:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_ENCODERRECTOMMF_2:
    MULF VLV_VELOCIDAD_2 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_2
    MOVEF_F 5.6 VLV_DIAMETRO_2
    MULF VLV_DISTANCIA_2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf520
    DATA8 flag520
    DIVF F.1 F.2 tmpf520
    CP_EQF 0.0 F.2 flag520
    SELECTF flag520 0.0 tmpf520 F.0

    DATAF tmpf521
    DATA8 flag521
    DIVF F.0 VLV_DIAMETRO_2 tmpf521
    CP_EQF 0.0 VLV_DIAMETRO_2 flag521
    SELECTF flag521 0.0 tmpf521 VLV_ENC_2

    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_2
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
  while527:
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_GTEQF F.0 VLV_ENC_2 endwhile527
  whilebody527:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_2 VLV_ENCODER_B_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
    SUBF VLV_ENCODER_B_2 VLV_ENCODER_C_2 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_2
    MULF VLV_ERROR_2 1.5 VLV_PROPORCIAL_2
    SUBF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_LTF F.0 VLV_ENC_2 whilebody527
  endwhile527:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMMF_2:
SUB_F_1NEGRORECTOMM_2:
    MULF VLV_VELOCIDAD_3 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_3
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_3
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_3
  while547:
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_LTEQF F.0 10.0 endwhile547
  whilebody547:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_3 VLV_ENCODER_B_3
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_3 VLV_ENCODER_C_3
    SUBF VLV_ENCODER_B_3 VLV_ENCODER_C_3 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_3
    MULF VLV_ERROR_3 1.5 VLV_PROPORCIAL_3
    SUBF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_GTF F.0 10.0 whilebody547
  endwhile547:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGRORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMM_2:
SUB_F_1NEGRORECTOMMF_2:
    MULF VLV_VELOCIDAD_4 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_4
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_4
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_4
  while567:
    CALL SENSOR.READPERCENT VLV_SENS_4 F.0
    JR_LTEQF F.0 10.0 endwhile567
  whilebody567:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_4 VLV_ENCODER_B_4
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_4 VLV_ENCODER_C_4
    SUBF VLV_ENCODER_B_4 VLV_ENCODER_C_4 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_4
    MULF VLV_ERROR_4 1.5 VLV_PROPORCIAL_4
    SUBF VLV_VELOCIDAD_4 VLV_PROPORCIAL_4 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_4 VLV_PROPORCIAL_4 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_4 F.0
    JR_GTF F.0 10.0 whilebody567
  endwhile567:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_F_1NEGRORECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMMF_2:
SUB_F_1BLANCORECTOMM_2:
    MULF VLV_VELOCIDAD_5 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_5
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_5
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_5
  while587:
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_GTEQF F.0 40.0 endwhile587
  whilebody587:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_5 VLV_ENCODER_B_5
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_5 VLV_ENCODER_C_5
    SUBF VLV_ENCODER_B_5 VLV_ENCODER_C_5 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_5
    MULF VLV_ERROR_5 1.5 VLV_PROPORCIAL_5
    SUBF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_LTF F.0 40.0 whilebody587
  endwhile587:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1BLANCORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMM_2:
SUB_F_1BLANCORECTOMMF_2:
    MULF VLV_VELOCIDAD_6 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_6
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_6
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_6
  while607:
    CALL SENSOR.READPERCENT VLV_SENS_6 F.0
    JR_GTEQF F.0 40.0 endwhile607
  whilebody607:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_6 VLV_ENCODER_B_6
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_6 VLV_ENCODER_C_6
    SUBF VLV_ENCODER_B_6 VLV_ENCODER_C_6 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_6
    MULF VLV_ERROR_6 1.5 VLV_PROPORCIAL_6
    SUBF VLV_VELOCIDAD_6 VLV_PROPORCIAL_6 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_6 VLV_PROPORCIAL_6 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_6 F.0
    JR_LTF F.0 40.0 whilebody607
  endwhile607:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_F_1BLANCORECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMMF_2:
SUB_F_TIEMPORECTOMM_2:
    MULF VLV_VELOCIDAD_13 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_13
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_13
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_13
    TIMER_READ timeMC3
  while628:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_13 endwhile628
  whilebody628:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_13 VLV_ENCODER_B_13
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_13 VLV_ENCODER_C_13
    SUBF VLV_ENCODER_B_13 VLV_ENCODER_C_13 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_13
    MULF VLV_ERROR_13 1.5 VLV_PROPORCIAL_13
    SUBF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_13 whilebody628
  endwhile628:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPORECTOMM_2:
SUB_F_ENCODERGIROMM_3:
    MULF VLV_VELOCIDAD1_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_15
    MULF VLV_VELOCIDAD2_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_15
    MOVEF_F 5.6 VLV_DIAMETRO_15
    MOVEF_F 3.1415926535897932384 F.2
    MULF VLV_DIAMETRO_15 F.2 F.1
    DATAF tmpf648
    DATA8 flag648
    DIVF VLV_ENCODER_15 F.1 tmpf648
    CP_EQF 0.0 F.1 flag648
    SELECTF flag648 0.0 tmpf648 F.0

    MULF F.0 360.0 VLV_DISTANCIA_15
    MATH NEGATE VLV_VELOCIDAD1_15 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_15 VLV_DISTANCIA_15 'True'

	DATA8 layer651
	DATA8 nos651
	DATA8 busy651
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer651 nos651
	JR_EQ8 0 nos651 motornotbusy651
  motorwaiting651:
	OUTPUT_TEST layer651 nos651 busy651
	JR_EQ8 busy651 0 motornotbusy651
	SLEEP
	JR motorwaiting651
  motornotbusy651:
RETSUB_F_ENCODERGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERGIROMM_3:
SUB_F_ENCODERGIROMMF_3:
    MULF VLV_VELOCIDAD1_16 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_16
    MULF VLV_VELOCIDAD2_16 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_16
    MOVEF_F 5.6 VLV_DIAMETRO_16
    MOVEF_F 3.1415926535897932384 F.2
    MULF VLV_DIAMETRO_16 F.2 F.1
    DATAF tmpf656
    DATA8 flag656
    DIVF VLV_ENCODER_16 F.1 tmpf656
    CP_EQF 0.0 F.1 flag656
    SELECTF flag656 0.0 tmpf656 F.0

    MULF F.0 360.0 VLV_DISTANCIA_16
    MATH NEGATE VLV_VELOCIDAD1_16 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_16 VLV_DISTANCIA_16 'False'

	DATA8 layer659
	DATA8 nos659
	DATA8 busy659
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer659 nos659
	JR_EQ8 0 nos659 motornotbusy659
  motorwaiting659:
	OUTPUT_TEST layer659 nos659 busy659
	JR_EQ8 busy659 0 motornotbusy659
	SLEEP
	JR motorwaiting659
  motornotbusy659:
RETSUB_F_ENCODERGIROMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERGIROMMF_3:
SUB_F_TIEMPOGIROMM_3:
    TIMER_READ timeMC3
    MULF VLV_VELOCIDAD1_25 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_25
    MULF VLV_VELOCIDAD2_25 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_25
  while663:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_25 endwhile663
  whilebody663:
    MATH NEGATE VLV_VELOCIDAD1_25 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_25
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_25 whilebody663
  endwhile663:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPOGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPOGIROMM_3:
SUB_F_GPERFDDEFINITIVOMM_1:
    MOVEF_F 100.0 VLV_AVANCE_33
    MOVEF_F 200.0 VLV_GINICIO_33
    MOVEF_F 70.0 VLV_AJUSTE_33
    DATA8 flag669
	CP_LTF 40.0 VLV_VEL_33 flag669
	SELECTF flag669 40.0 VLV_VEL_33 VLV_VEL_33
    MULF VLV_VEL_33 0.75 VLV_VEL_33
    MULF VLV_VEL_33 VGV_SENTIDO_MOTORES VLV_VEL_33
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VEL_33 VLV_AVANCE_33 'True'

	DATA8 layer673
	DATA8 nos673
	DATA8 busy673
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer673 nos673
	JR_EQ8 0 nos673 motornotbusy673
  motorwaiting673:
	OUTPUT_TEST layer673 nos673 busy673
	JR_EQ8 busy673 0 motornotbusy673
	SLEEP
	JR motorwaiting673
  motornotbusy673:
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_GINICIO_33 0.0 'False' 

	DATA8 layer675
	DATA8 nos675
	DATA8 busy675
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer675 nos675
	JR_EQ8 0 nos675 motornotbusy675
  motorwaiting675:
	OUTPUT_TEST layer675 nos675 busy675
	JR_EQ8 busy675 0 motornotbusy675
	SLEEP
	JR motorwaiting675
  motornotbusy675:
  while676:
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 10.0 endwhile676
  whilebody676:
    MATH NEGATE VLV_VEL_33 F.0
    MATH NEGATE VLV_VEL_33 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 10.0 whilebody676
  endwhile676:
    CALL MOTOR.STOP 'BC' 'False'
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_AJUSTE_33 0.0 'True' 

	DATA8 layer684
	DATA8 nos684
	DATA8 busy684
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer684 nos684
	JR_EQ8 0 nos684 motornotbusy684
  motorwaiting684:
	OUTPUT_TEST layer684 nos684 busy684
	JR_EQ8 busy684 0 motornotbusy684
	SLEEP
	JR motorwaiting684
  motornotbusy684:
RETSUB_F_GPERFDDEFINITIVOMM_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GPERFDDEFINITIVOMM_1:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_35
    STRINGS DUPLICATE 'C' VLV_D_35
    DATAF tmpf685
    DATA8 flag685
    DIVF VLV_V1_35 VLV_V2_35 tmpf685
    CP_EQF 0.0 VLV_V2_35 flag685
    SELECTF flag685 0.0 tmpf685 F.0

    DATAF tmpf686
    DATA8 flag686
    DIVF VLV_V1_35 VLV_V2_35 tmpf686
    CP_EQF 0.0 VLV_V2_35 flag686
    SELECTF flag686 0.0 tmpf686 F.2

    MATH ABS F.2 F.1
    DATAF tmpf688
    DATA8 flag688
    DIVF F.0 F.1 tmpf688
    CP_EQF 0.0 F.1 flag688
    SELECTF flag688 0.0 tmpf688 VLV_SIGNO_35

    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag691
	CP_LTF F.0 F.1 flag691
	SELECTF flag691 F.0 F.1 VLV_VMIN_35
    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag694
	CP_GTF F.0 F.1 flag694
	SELECTF flag694 F.0 F.1 VLV_VMAX_35
    MULF VLV_ANGLE_35 VGV_G1 F.0
    MULF VLV_SIGNO_35 VLV_VMIN_35 F.4
    DATAF tmpf697
    DATA8 flag697
    DIVF F.4 VLV_VMAX_35 tmpf697
    CP_EQF 0.0 VLV_VMAX_35 flag697
    SELECTF flag697 0.0 tmpf697 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf699
    DATA8 flag699
    DIVF -2.0 F.2 tmpf699
    CP_EQF 0.0 F.2 flag699
    SELECTF flag699 0.0 tmpf699 F.1

    MULF F.0 F.1 VLV_ENCODR_35
    CALL TEXT.APPEND VLV_I_35 VLV_D_35 S.0
    MATH NEGATE VLV_V1_35 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_35 VLV_ENCODR_35 'True'

	DATA8 layer703
	DATA8 nos703
	DATA8 busy703
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer703 nos703
	JR_EQ8 0 nos703 motornotbusy703
  motorwaiting703:
	OUTPUT_TEST layer703 nos703 busy703
	JR_EQ8 busy703 0 motornotbusy703
	SLEEP
	JR motorwaiting703
  motornotbusy703:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_SPIN180_1:
    STRINGS DUPLICATE 'B' VLV_I_37
    STRINGS DUPLICATE 'C' VLV_D_37
    MULF 180.0 VGV_G1 VLV_ENCODR_37
    CALL TEXT.APPEND VLV_I_37 VLV_D_37 S.0
    MATH NEGATE VLV_VELOCIDAD_37 F.0
    CALL MOTOR.SCHEDULE S.0 F.0 0.0 VLV_ENCODR_37 0.0 'True' 

	DATA8 layer707
	DATA8 nos707
	DATA8 busy707
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer707 nos707
	JR_EQ8 0 nos707 motornotbusy707
  motorwaiting707:
	OUTPUT_TEST layer707 nos707 busy707
	JR_EQ8 busy707 0 motornotbusy707
	SLEEP
	JR motorwaiting707
  motornotbusy707:
    MOVEF_F 0.0 VLV_ANGLE_37
RETSUB_F_SPIN180_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN180_1:
SUB_F_SPIN90_1:
    STRINGS DUPLICATE 'B' VLV_I_39
    STRINGS DUPLICATE 'C' VLV_D_39
    MULF 84.0 VGV_G1 VLV_ENCODR_39
    CALL TEXT.APPEND VLV_I_39 VLV_D_39 S.0
    MATH NEGATE VLV_VELOCIDAD_39 F.0
    CALL MOTOR.SCHEDULE S.0 F.0 0.0 VLV_ENCODR_39 0.0 'True' 

	DATA8 layer711
	DATA8 nos711
	DATA8 busy711
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer711 nos711
	JR_EQ8 0 nos711 motornotbusy711
  motorwaiting711:
	OUTPUT_TEST layer711 nos711 busy711
	JR_EQ8 busy711 0 motornotbusy711
	SLEEP
	JR motorwaiting711
  motornotbusy711:
    MOVEF_F 0.0 VLV_ANGLE_39
RETSUB_F_SPIN90_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN90_1:
SUB_F_SINACCELMMF_3:
    MULF VLV_DISTANCIA_48 360.0 F.1
    DATAF tmpf713
    DATA8 flag713
    DIVF F.1 5.6 tmpf713
    CP_EQF 0.0 5.6 flag713
    SELECTF flag713 0.0 tmpf713 F.0

    MOVEF_F 3.1415926535897932384 F.1
    DATAF tmpf715
    DATA8 flag715
    DIVF F.0 F.1 tmpf715
    CP_EQF 0.0 F.1 flag715
    SELECTF flag715 0.0 tmpf715 VLV_GRADOS_48

    CALL MOTOR.GETCOUNT 'B' VLV_START_B_48
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_48
    MOVEF_F 0.0 VLV_ENCODER_B_48
    MOVEF_F 0.0 VLV_ENCODER_C_48
    DATA8 flag718
	CP_GTF 8.0 VLV_V0_48 flag718
	SELECTF flag718 8.0 VLV_V0_48 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_V0_48
    DATA8 flag720
	CP_LTF 90.0 VLV_VMAX_48 flag720
	SELECTF flag720 90.0 VLV_VMAX_48 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_VMAX_48
    MOVEF_F 0.0 VLV_VEL_48
    MOVEF_F 3.0 VLV_KP_48
    MOVEF_F 0.001 VLV_KI_48
    ADDF VLV_VMAX_48 5.0 F.0
    DATAF tmpf723
    DATA8 flag723
    DIVF 250.0 F.0 tmpf723
    CP_EQF 0.0 F.0 flag723
    SELECTF flag723 0.0 tmpf723 VLV_KD_48

    MOVEF_F 0.0 VLV_ERROR_48
    MOVEF_F 0.0 VLV_OLDERROR_48
    MOVEF_F 0.0 VLV_ERRSUM_48
  while724:
    JR_GTEQF VLV_ENCODER_C_48 VLV_GRADOS_48 endwhile724
  whilebody724:
    CALL MOTOR.GETCOUNT 'B' F.0
    SUBF F.0 VLV_START_B_48 VLV_ENCODER_B_48
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_48 VLV_ENCODER_C_48
    SUBF VLV_VMAX_48 VLV_V0_48 F.1
    MOVEF_F 3.1415926535897932384 F.6
    MULF F.6 VLV_ENCODER_C_48 F.5
    DATAF tmpf732
    DATA8 flag732
    DIVF F.5 VLV_GRADOS_48 tmpf732
    CP_EQF 0.0 VLV_GRADOS_48 flag732
    SELECTF flag732 0.0 tmpf732 F.4

    DATAF tmpf733
    DATA8 flag733
    DIVF F.4 2.0 tmpf733
    CP_EQF 0.0 2.0 flag733
    SELECTF flag733 0.0 tmpf733 F.3

    DATAF tmpf734
	MULF F.3 57.295779513082  tmpf734
	MATH SIN  tmpf734 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_48 VLV_VEL_48
    MULF -1.0 VLV_ENCODER_B_48 F.1
    SUBF F.1 VLV_ENCODER_C_48 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_48
    ADDF VLV_ERRSUM_48 VLV_ERROR_48 VLV_ERRSUM_48
    MULF VLV_ERROR_48 VLV_KP_48 F.1
    SUBF VLV_ERROR_48 VLV_OLDERROR_48 F.3
    MULF F.3 VLV_KD_48 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_48 VLV_KI_48 F.1
    ADDF F.0 F.1 VLV_CORRECCION_48
    MOVEF_F VLV_ERROR_48 VLV_OLDERROR_48
    SUBF VLV_VEL_48 VLV_CORRECCION_48 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VEL_48 VLV_CORRECCION_48 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    JR_LTF VLV_ENCODER_C_48 VLV_GRADOS_48 whilebody724
  endwhile724:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 0
    CALL LCD.CLEAR
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    MULF F.3 5.6 F.2
    MOVEF_F 3.1415926535897932384 F.3
    MULF F.2 F.3 F.1
    DATAF tmpf757
    DATA8 flag757
    DIVF F.1 360.0 tmpf757
    CP_EQF 0.0 360.0 flag757
    SELECTF flag757 0.0 tmpf757 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Distancia cm: ' S.1 S.0
    CALL LCD.WRITE 5.0 10.0 S.0
RETSUB_F_SINACCELMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SINACCELMMF_3:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_56
    STRINGS DUPLICATE 'C' VLV_D_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf763
    DATA8 flag763
    DIVF VLV_ACCELENCODER_56 F.1 tmpf763
    CP_EQF 0.0 F.1 flag763
    SELECTF flag763 0.0 tmpf763 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    CALL MOTOR.RESETCOUNT 'C'
  while766:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or767
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile766
  or767:
  whilebody766:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf771
    DATA8 flag771
    DIVF F.3 VLV_ACCELENCODER_56 tmpf771
    CP_EQF 0.0 VLV_ACCELENCODER_56 flag771
    SELECTF flag771 0.0 tmpf771 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_56 VLV_V0_56 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_56 VLV_VEL_56
    DATA8 flag776
	CP_LTF VLV_VEL_56 VLV_VMAX_56 flag776
	SELECTF flag776 VLV_VEL_56 VLV_VMAX_56 VLV_VEL_56
    MATH ABS VLV_VEL_56 F.0
    DATAF tmpf778
    DATA8 flag778
    DIVF VLV_VEL_56 F.0 tmpf778
    CP_EQF 0.0 F.0 flag778
    SELECTF flag778 0.0 tmpf778 VLV_SENTIDO_56

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_56 VLV_ERROR_56
    ADDF VLV_ERRSUM_56 VLV_ERROR_56 VLV_ERRSUM_56
    MULF VLV_ERROR_56 VLV_KP_56 F.1
    SUBF VLV_ERROR_56 VLV_OLDERROR_56 F.3
    MULF F.3 VLV_KD_56 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_56 VLV_KI_56 F.1
    ADDF F.0 F.1 VLV_U_56
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    ADDF VLV_VEL_56 VLV_U_56 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_56 VLV_U_56 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_56 VLV_OLDERROR_56
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody766
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody766
  endwhile766:
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_72 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_72
    STRINGS DUPLICATE 'B' VLV_I_72
    STRINGS DUPLICATE 'C' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MATH ABS VLV_VELOCIDAD_72 F.0
    DATAF tmpf803
    DATA8 flag803
    DIVF VLV_VELOCIDAD_72 F.0 tmpf803
    CP_EQF 0.0 F.0 flag803
    SELECTF flag803 0.0 tmpf803 VLV_SENTIDO_72

  while804:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or805
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile804
  or805:
  whilebody804:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_72 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_72
    ADDF VLV_ERRSUM_72 VLV_ERROR_72 VLV_ERRSUM_72
    MULF VLV_ERROR_72 VLV_KP_72 F.1
    SUBF VLV_ERROR_72 VLV_OLDERROR_72 F.3
    MULF F.3 VLV_KD_72 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_72 VLV_KI_72 F.1
    ADDF F.0 F.1 VLV_U_72
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    ADDF VLV_VELOCIDAD_72 VLV_U_72 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_72 VLV_U_72 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_72 VLV_OLDERROR_72
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody804
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody804
  endwhile804:
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_75 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_75
    STRINGS DUPLICATE 'B' VLV_I_75
    STRINGS DUPLICATE 'C' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MATH ABS VLV_VELOCIDAD_75 F.0
    DATAF tmpf831
    DATA8 flag831
    DIVF VLV_VELOCIDAD_75 F.0 tmpf831
    CP_EQF 0.0 F.0 flag831
    SELECTF flag831 0.0 tmpf831 VLV_SENTIDO_75

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf834
    DATA8 flag834
    DIVF VLV_ENCODER_75 F.1 tmpf834
    CP_EQF 0.0 F.1 flag834
    SELECTF flag834 0.0 tmpf834 F.0

    MULF F.0 360.0 VLV_ENCODER_75
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
  while837:
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_GTEQF F.0 VLV_ENCODER_75 endwhile837
  whilebody837:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_75 VLV_ENCODER_C_75
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_75 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_75
    ADDF VLV_ERRSUM_75 VLV_ERROR_75 VLV_ERRSUM_75
    MULF VLV_ERROR_75 VLV_KP_75 F.1
    SUBF VLV_ERROR_75 VLV_OLDERROR_75 F.3
    MULF F.3 VLV_KD_75 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_75 VLV_KI_75 F.1
    ADDF F.0 F.1 VLV_U_75
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    ADDF VLV_VELOCIDAD_75 VLV_U_75 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_75 VLV_U_75 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_75 VLV_OLDERROR_75
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_LTF F.0 VLV_ENCODER_75 whilebody837
  endwhile837:
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_76 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_76
    STRINGS DUPLICATE 'B' VLV_I_76
    STRINGS DUPLICATE 'C' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MATH ABS VLV_VELOCIDAD_76 F.0
    DATAF tmpf863
    DATA8 flag863
    DIVF VLV_VELOCIDAD_76 F.0 tmpf863
    CP_EQF 0.0 F.0 flag863
    SELECTF flag863 0.0 tmpf863 VLV_SENTIDO_76

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf866
    DATA8 flag866
    DIVF VLV_ENCODER_76 F.1 tmpf866
    CP_EQF 0.0 F.1 flag866
    SELECTF flag866 0.0 tmpf866 F.0

    MULF F.0 360.0 VLV_ENCODER_76
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
  while869:
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_GTEQF F.0 VLV_ENCODER_76 endwhile869
  whilebody869:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_76 VLV_ENCODER_C_76
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_76 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_76
    ADDF VLV_ERRSUM_76 VLV_ERROR_76 VLV_ERRSUM_76
    MULF VLV_ERROR_76 VLV_KP_76 F.1
    SUBF VLV_ERROR_76 VLV_OLDERROR_76 F.3
    MULF F.3 VLV_KD_76 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_76 VLV_KI_76 F.1
    ADDF F.0 F.1 VLV_U_76
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    ADDF VLV_VELOCIDAD_76 VLV_U_76 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_76 VLV_U_76 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_76 VLV_OLDERROR_76
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_LTF F.0 VLV_ENCODER_76 whilebody869
  endwhile869:
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL1SPIDCROSS_6:
    MULF VLV_VELOCIDAD_81 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_81
    STRINGS DUPLICATE 'B' VLV_I_81
    STRINGS DUPLICATE 'C' VLV_D_81
    MOVEF_F 0.0 VLV_ERROR_81
    MOVEF_F 0.0 VLV_OLDERROR_81
    MOVEF_F 0.0 VLV_ERRSUM_81
    MOVEF_F 0.0 VLV_U_81
    MATH ABS VLV_VELOCIDAD_81 F.0
    DATAF tmpf895
    DATA8 flag895
    DIVF VLV_VELOCIDAD_81 F.0 tmpf895
    CP_EQF 0.0 F.0 flag895
    SELECTF flag895 0.0 tmpf895 VLV_SENTIDO_81

    JR_NEQF VLV_SENS_81 1.0 else896_1
    MOVEF_F 4.0 VLV_READER_81
    JR endif896
  else896_1:
    MOVEF_F 1.0 VLV_READER_81
  else896_2:
  endif896:
  while897:
    CALL SENSOR.READPERCENT VLV_READER_81 F.0
    JR_LTEQF F.0 15.0 endwhile897
  whilebody897:
    CALL SENSOR.READPERCENT VLV_SENS_81 F.3
    SUBF F.3 50.0 F.2
    MULF F.2 VLV_SENTIDO_81 F.1
    MULF F.1 VLV_LADO_81 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_81
    ADDF VLV_ERRSUM_81 VLV_ERROR_81 VLV_ERRSUM_81
    MULF VLV_ERROR_81 VLV_KP_81 F.1
    SUBF VLV_ERROR_81 VLV_OLDERROR_81 F.3
    MULF F.3 VLV_KD_81 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_81 VLV_KI_81 F.1
    ADDF F.0 F.1 VLV_U_81
    CALL TEXT.APPEND VLV_I_81 VLV_D_81 S.0
    ADDF VLV_VELOCIDAD_81 VLV_U_81 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_81 VLV_U_81 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_81 VLV_OLDERROR_81
    CALL SENSOR.READPERCENT VLV_READER_81 F.0
    JR_GTF F.0 15.0 whilebody897
  endwhile897:
    CALL TEXT.APPEND VLV_I_81 VLV_D_81 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL1SPIDCROSS_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSS_6:
SUB_F_SL1SPIDCROSSF_6:
    MULF VLV_VELOCIDAD_82 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_82
    STRINGS DUPLICATE 'B' VLV_I_82
    STRINGS DUPLICATE 'C' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MATH ABS VLV_VELOCIDAD_82 F.0
    DATAF tmpf921
    DATA8 flag921
    DIVF VLV_VELOCIDAD_82 F.0 tmpf921
    CP_EQF 0.0 F.0 flag921
    SELECTF flag921 0.0 tmpf921 VLV_SENTIDO_82

    JR_NEQF VLV_SENS_82 1.0 else922_1
    MOVEF_F 4.0 VLV_READER_82
    JR endif922
  else922_1:
    MOVEF_F 1.0 VLV_READER_82
  else922_2:
  endif922:
  while923:
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_LTEQF F.0 20.0 endwhile923
  whilebody923:
    CALL SENSOR.READPERCENT VLV_SENS_82 F.3
    SUBF F.3 50.0 F.2
    MULF F.2 VLV_SENTIDO_82 F.1
    MULF F.1 VLV_LADO_82 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_82
    ADDF VLV_ERRSUM_82 VLV_ERROR_82 VLV_ERRSUM_82
    MULF VLV_ERROR_82 VLV_KP_82 F.1
    SUBF VLV_ERROR_82 VLV_OLDERROR_82 F.3
    MULF F.3 VLV_KD_82 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_82 VLV_KI_82 F.1
    ADDF F.0 F.1 VLV_U_82
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    ADDF VLV_VELOCIDAD_82 VLV_U_82 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_82 VLV_U_82 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_82 VLV_OLDERROR_82
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_GTF F.0 20.0 whilebody923
  endwhile923:
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL1SPIDCROSSF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSSF_6:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_88 VGV_SENTIDO_MOTORES VLV_VMAX_88
    STRINGS DUPLICATE 'B' VLV_I_88
    STRINGS DUPLICATE 'C' VLV_D_88
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_88
    MOVEF_F 150.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    CALL MOTOR.RESETCOUNT 'C'
  while948:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or949
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile948
  or949:
  whilebody948:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf953
    DATA8 flag953
    DIVF F.2 VLV_ACCELENCODER_88 tmpf953
    CP_EQF 0.0 VLV_ACCELENCODER_88 flag953
    SELECTF flag953 0.0 tmpf953 F.1

    ADDF VLV_VMAX_88 VLV_V0_88 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_88 VLV_VEL_88
    DATA8 flag957
	CP_LTF VLV_VEL_88 VLV_VMAX_88 flag957
	SELECTF flag957 VLV_VEL_88 VLV_VMAX_88 VLV_VEL_88
    MATH ABS VLV_VEL_88 F.0
    DATAF tmpf959
    DATA8 flag959
    DIVF VLV_VEL_88 F.0 tmpf959
    CP_EQF 0.0 F.0 flag959
    SELECTF flag959 0.0 tmpf959 VLV_SENTIDO_88

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_88 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_88
    MULF VLV_ERRSUM_88 0.9 F.0
    ADDF F.0 VLV_ERROR_88 VLV_ERRSUM_88
    MULF VLV_ERROR_88 VLV_KP_88 F.1
    SUBF VLV_ERROR_88 VLV_OLDERROR_88 F.3
    MULF F.3 VLV_KD_88 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_88 VLV_KI_88 F.1
    ADDF F.0 F.1 VLV_U_88
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    ADDF VLV_VEL_88 VLV_U_88 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_88 VLV_U_88 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_88 VLV_OLDERROR_88
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody948
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody948
  endwhile948:
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_95 F.0 VLV_ENCDIFF_95
    MATH ABS VLV_ENCDIFF_95 F.0
    DATAF tmpf985
    DATA8 flag985
    DIVF VLV_ENCDIFF_95 F.0 tmpf985
    CP_EQF 0.0 F.0 flag985
    SELECTF flag985 0.0 tmpf985 VLV_SIGNO_95

    JR_EQF VLV_ENCDIFF_95 0.0 else986_1
  while987:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile987
  whilebody987:
    MULF VLV_SIGNO_95 VLV_V_95 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody987
  endwhile987:
    CALL MOTOR.STOP 'A' 'True'
  else986_1:
  endif986:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEA0_1:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF -5.0 F.0 VLV_ENCDIFF_96
    MATH ABS VLV_ENCDIFF_96 F.0
    DATAF tmpf1000
    DATA8 flag1000
    DIVF VLV_ENCDIFF_96 F.0 tmpf1000
    CP_EQF 0.0 F.0 flag1000
    SELECTF flag1000 0.0 tmpf1000 VLV_SIGNO_96

    JR_EQF VLV_ENCDIFF_96 0.0 else1001_1
    MULF VLV_SIGNO_96 VLV_V_96 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
  while1004:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 5.0 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile1004
  whilebody1004:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 5.0 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody1004
  endwhile1004:
    CALL MOTOR.STOP 'A' 'True'
  else1001_1:
  endif1001:
RETSUB_F_BMOVEA0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA0_1:
SUB_F_BMOVEAD0_1:
    MOVEF_F -10.0 VLV_AENC_101
  while1012:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 or1013
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENC_101 endwhile1012
  or1013:
  whilebody1012:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_GTEQF F.0 VLV_AENC_101 else1016_1
    DATAF tmpf1018
    DATA8 flag1018
    DIVF VLV_V_101 2.0 tmpf1018
    CP_EQF 0.0 2.0 flag1018
    SELECTF flag1018 0.0 tmpf1018 F.2

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf1021
    DATA8 flag1021
    DIVF F.4 10.0 tmpf1021
    CP_EQF 0.0 10.0 flag1021
    SELECTF flag1021 0.0 tmpf1021 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag1023
	CP_LTF VLV_V_101 F.1 flag1023
	SELECTF flag1023 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif1016
  else1016_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_LTEQF F.0 VLV_AENC_101 else1016_2
    DATAF tmpf1026
    DATA8 flag1026
    DIVF VLV_V_101 2.0 tmpf1026
    CP_EQF 0.0 2.0 flag1026
    SELECTF flag1026 0.0 tmpf1026 F.3

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf1029
    DATA8 flag1029
    DIVF F.5 10.0 tmpf1029
    CP_EQF 0.0 10.0 flag1029
    SELECTF flag1029 0.0 tmpf1029 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag1031
	CP_LTF VLV_V_101 F.2 flag1031
	SELECTF flag1031 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif1016
  else1016_2:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else1016_3:
  endif1016:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_GTEQF F.0 VLV_AENC_101 else1035_1
    DATAF tmpf1037
    DATA8 flag1037
    DIVF VLV_V_101 2.0 tmpf1037
    CP_EQF 0.0 2.0 flag1037
    SELECTF flag1037 0.0 tmpf1037 F.2

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf1040
    DATA8 flag1040
    DIVF F.4 10.0 tmpf1040
    CP_EQF 0.0 10.0 flag1040
    SELECTF flag1040 0.0 tmpf1040 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag1042
	CP_LTF VLV_V_101 F.1 flag1042
	SELECTF flag1042 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif1035
  else1035_1:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_LTEQF F.0 VLV_AENC_101 else1035_2
    DATAF tmpf1045
    DATA8 flag1045
    DIVF VLV_V_101 2.0 tmpf1045
    CP_EQF 0.0 2.0 flag1045
    SELECTF flag1045 0.0 tmpf1045 F.3

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf1048
    DATA8 flag1048
    DIVF F.5 10.0 tmpf1048
    CP_EQF 0.0 10.0 flag1048
    SELECTF flag1048 0.0 tmpf1048 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag1050
	CP_LTF VLV_V_101 F.2 flag1050
	SELECTF flag1050 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif1035
  else1035_2:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else1035_3:
  endif1035:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 whilebody1012
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_NEQF F.0 VLV_AENC_101 whilebody1012
  endwhile1012:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEAD0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD0_1:
SUB_F_BMOVEADSAFE_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    MATH ABS VLV_DIFFA_104 F.5
    MATH ABS VLV_DIFFD_104 F.6
    DATA8 flag1063
	CP_GTF F.5 F.6 flag1063
	SELECTF flag1063 F.5 F.6 F.4
    DATAF tmpf1064
    DATA8 flag1064
    DIVF F.4 100.0 tmpf1064
    CP_EQF 0.0 100.0 flag1064
    SELECTF flag1064 0.0 tmpf1064 F.3

    DATAF tmpf1065
    DATA8 flag1065
    DIVF VLV_V_104 20.0 tmpf1065
    CP_EQF 0.0 20.0 flag1065
    SELECTF flag1065 0.0 tmpf1065 F.4

    DATAF tmpf1066
    DATA8 flag1066
    DIVF F.3 F.4 tmpf1066
    CP_EQF 0.0 F.4 flag1066
    SELECTF flag1066 0.0 tmpf1066 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag1069
	CP_GTF F.0 400.0 flag1069
	SELECTF flag1069 F.0 400.0 VLV_SAFETYTIMER_104
    MATH ABS VLV_DIFFA_104 F.0
    DATAF tmpf1071
    DATA8 flag1071
    DIVF VLV_DIFFA_104 F.0 tmpf1071
    CP_EQF 0.0 F.0 flag1071
    SELECTF flag1071 0.0 tmpf1071 VLV_SIGNOA_104

    MATH ABS VLV_DIFFD_104 F.0
    DATAF tmpf1073
    DATA8 flag1073
    DIVF VLV_DIFFD_104 F.0 tmpf1073
    CP_EQF 0.0 F.0 flag1073
    SELECTF flag1073 0.0 tmpf1073 VLV_SIGNOD_104

    MULF VLV_V_104 VLV_SIGNOA_104 VLV_VELA_104
    MULF VLV_V_104 VLV_SIGNOD_104 VLV_VELD_104
    CALL MOTOR.SCHEDULESYNC 'AD' VLV_VELA_104 VLV_VELD_104 5.0 'False'

	DATA8 layer1076
	DATA8 nos1076
	DATA8 busy1076
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer1076 nos1076
	JR_EQ8 0 nos1076 motornotbusy1076
  motorwaiting1076:
	OUTPUT_TEST layer1076 nos1076 busy1076
	JR_EQ8 busy1076 0 motornotbusy1076
	SLEEP
	JR motorwaiting1076
  motornotbusy1076:
    CALL LCD.CLEAR
    TIMER_READ timeMC3
  while1079:
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 or1080
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_EQF F.0 0.0 endwhile1079
  or1080:
  whilebody1079:
    MULF VLV_DIFFA_104 VLV_SIGNOA_104 F.0
    JR_LTEQF F.0 0.0 else1083_1
    MOVEF_8 VLV_VELA_104 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif1083
  else1083_1:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else1083_2:
  endif1083:
    MULF VLV_DIFFD_104 VLV_SIGNOD_104 F.0
    JR_LTEQF F.0 0.0 else1087_1
    MOVEF_8 VLV_VELD_104 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif1087
  else1087_1:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else1087_2:
  endif1087:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTEQF F.0 VLV_SAFETYTIMER_104 else1091_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
  else1091_1:
  endif1091:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_104 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 whilebody1079
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_NEQF F.0 0.0 whilebody1079
  endwhile1079:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEADSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEADSAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_105 F.0 VLV_ENCDIFF_105
    MATH ABS VLV_ENCDIFF_105 F.0
    DATAF tmpf1108
    DATA8 flag1108
    DIVF VLV_ENCDIFF_105 F.0 tmpf1108
    CP_EQF 0.0 F.0 flag1108
    SELECTF flag1108 0.0 tmpf1108 VLV_SIGNO_105

    JR_EQF VLV_ENCDIFF_105 0.0 else1109_1
    MULF VLV_SIGNO_105 VLV_V_105 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while1112:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile1112
  whilebody1112:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody1112
  endwhile1112:
    CALL MOTOR.STOP 'D' 'True'
  else1109_1:
  endif1109:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVED0_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 else1120_1
  while1122:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 endwhile1122
  whilebody1122:
    MATH NEGATE VLV_V_106 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTF F.0 -10.0 whilebody1122
  endwhile1122:
    CALL MOTOR.STOP 'D' 'True'
    JR endif1120
  else1120_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 else1120_2
  while1129:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 endwhile1129
  whilebody1129:
    MOVEF_8 VLV_V_106 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTF F.0 -10.0 whilebody1129
  endwhile1129:
    CALL MOTOR.STOP 'D' 'True'
    JR endif1120
  else1120_2:
    CALL MOTOR.STOP 'D' 'True'
  else1120_3:
  endif1120:
RETSUB_F_BMOVED0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED0_1:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while1136:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_108 endwhile1136
  whilebody1136:
    MOVEF_8 VLV_V_108 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_108 whilebody1136
  endwhile1136:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_109 F.0 VLV_ENCDIFF_109
    MATH ABS VLV_ENCDIFF_109 F.0
    DATAF tmpf1144
    DATA8 flag1144
    DIVF VLV_ENCDIFF_109 F.0 tmpf1144
    CP_EQF 0.0 F.0 flag1144
    SELECTF flag1144 0.0 tmpf1144 VLV_SIGNO_109

    MATH ABS VLV_ENCDIFF_109 F.4
    DATAF tmpf1146
    DATA8 flag1146
    DIVF F.4 100.0 tmpf1146
    CP_EQF 0.0 100.0 flag1146
    SELECTF flag1146 0.0 tmpf1146 F.3

    DATAF tmpf1147
    DATA8 flag1147
    DIVF VLV_V_109 20.0 tmpf1147
    CP_EQF 0.0 20.0 flag1147
    SELECTF flag1147 0.0 tmpf1147 F.4

    DATAF tmpf1148
    DATA8 flag1148
    DIVF F.3 F.4 tmpf1148
    CP_EQF 0.0 F.4 flag1148
    SELECTF flag1148 0.0 tmpf1148 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag1151
	CP_GTF F.0 400.0 flag1151
	SELECTF flag1151 F.0 400.0 VLV_SAFETYTIMER_109
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_109 0.0 else1153_1
  while1154:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile1154
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_109 endwhile1154
  whilebody1154:
    MULF VLV_SIGNO_109 VLV_V_109 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_109 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and1165
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_109 whilebody1154
  and1165:
  endwhile1154:
    CALL MOTOR.STOP 'D' 'True'
  else1153_1:
  endif1153:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer1171
	DATA8 no1171
	DATA8 mode81171
	
	MOVEF_8 1.0 no1171
	SUB8 no1171 1 no1171
	DIV8 no1171 4 layer1171
	MATH MOD8 no1171 4 no1171

	MOVEF_8 4.0 mode81171
	
	INPUT_DEVICE READY_RAW layer1171 no1171 0 mode81171 0
    MOVEF_F 15.0 VLV_RED_110
    MOVEF_F 60.0 VLV_YELLOW_110
    MOVEF_F 170.0 VLV_GREEN_110
    MOVEF_F 330.0 VLV_BLUE_110
    MOVEF_F 10.0 VLV_VALUENEGRO_110
    MOVEF_F 100.0 VLV_VALUEBLANCO_110
    MOVEF_F 147.0 VLV_RWHITE_110
    MOVEF_F 143.0 VLV_GWHITE_110
    MOVEF_F 160.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    MOVEF_F 0.0 VLV_COLOR_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_110
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_110
  for1177:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor1177
  forbody1177:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_110
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_110 VLV_RGB_110
    DATAF tmpf1182
    DATA8 flag1182
    DIVF VLV_RRAW_110 VLV_RWHITE_110 tmpf1182
    CP_EQF 0.0 VLV_RWHITE_110 flag1182
    SELECTF flag1182 0.0 tmpf1182 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    DATAF tmpf1186
    DATA8 flag1186
    DIVF VLV_GRAW_110 VLV_GWHITE_110 tmpf1186
    CP_EQF 0.0 VLV_GWHITE_110 flag1186
    SELECTF flag1186 0.0 tmpf1186 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    DATAF tmpf1190
    DATA8 flag1190
    DIVF VLV_BRAW_110 VLV_BWHITE_110 tmpf1190
    CP_EQF 0.0 VLV_BWHITE_110 flag1190
    SELECTF flag1190 0.0 tmpf1190 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_RNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.3 VLV_GNORMA_110
    DATA8 flag1196
	CP_GTF F.2 F.3 flag1196
	SELECTF flag1196 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_BNORMA_110
    DATA8 flag1198
	CP_GTF F.1 F.2 flag1198
	SELECTF flag1198 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    DATA32 milliseconds1200
	MOVEF_32 5.0 milliseconds1200
	DATA32 timer1200
	TIMER_WAIT milliseconds1200 timer1200
	TIMER_READY timer1200
    ADDF VLV_J_110 1.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody1177
  endfor1177:
    MOVEF_F 1.0 VLV_J_110
  for1202:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor1202
  forbody1202:
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_110
    ADDF F.0 F.1 VLV_RNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_110
    ADDF F.0 F.1 VLV_GNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_110
    ADDF F.0 F.1 VLV_BNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_110
    ADDF F.0 F.1 VLV_MAX_110
    ADDF VLV_J_110 2.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody1202
  endfor1202:
    DATAF tmpf1220
    DATA8 flag1220
    DIVF VLV_RNORM_110 VLV_REPS_110 tmpf1220
    CP_EQF 0.0 VLV_REPS_110 flag1220
    SELECTF flag1220 0.0 tmpf1220 VLV_RNORM_110

    DATAF tmpf1221
    DATA8 flag1221
    DIVF VLV_GNORM_110 VLV_REPS_110 tmpf1221
    CP_EQF 0.0 VLV_REPS_110 flag1221
    SELECTF flag1221 0.0 tmpf1221 VLV_GNORM_110

    DATAF tmpf1222
    DATA8 flag1222
    DIVF VLV_BNORM_110 VLV_REPS_110 tmpf1222
    CP_EQF 0.0 VLV_REPS_110 flag1222
    SELECTF flag1222 0.0 tmpf1222 VLV_BNORM_110

    DATAF tmpf1223
    DATA8 flag1223
    DIVF VLV_MAX_110 VLV_REPS_110 tmpf1223
    CP_EQF 0.0 VLV_REPS_110 flag1223
    SELECTF flag1223 0.0 tmpf1223 VLV_MAX_110

    DATA8 flag1224
	CP_LTF VLV_RNORM_110 VLV_GNORM_110 flag1224
	SELECTF flag1224 VLV_RNORM_110 VLV_GNORM_110 F.0
    DATA8 flag1225
	CP_LTF F.0 VLV_BNORM_110 flag1225
	SELECTF flag1225 F.0 VLV_BNORM_110 VLV_MIN_110
    JR_NEQF VLV_MAX_110 VLV_MIN_110 else1226_1
    MOVEF_F 0.0 VLV_HUE_110
    JR endif1226
  else1226_1:
    JR_NEQF VLV_MAX_110 VLV_RNORM_110 else1226_2
    JR_LTF VLV_GNORM_110 VLV_BNORM_110 else1227_1
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_110 VLV_MIN_110 F.1
    DATAF tmpf1231
    DATA8 flag1231
    DIVF F.0 F.1 tmpf1231
    CP_EQF 0.0 F.1 flag1231
    SELECTF flag1231 0.0 tmpf1231 VLV_HUE_110

    JR endif1227
  else1227_1:
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf1235
    DATA8 flag1235
    DIVF F.1 F.2 tmpf1235
    CP_EQF 0.0 F.2 flag1235
    SELECTF flag1235 0.0 tmpf1235 F.0

    ADDF F.0 360.0 VLV_HUE_110
  else1227_2:
  endif1227:
    JR endif1226
  else1226_2:
    JR_NEQF VLV_MAX_110 VLV_GNORM_110 else1226_3
    SUBF VLV_BNORM_110 VLV_RNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf1240
    DATA8 flag1240
    DIVF F.1 F.2 tmpf1240
    CP_EQF 0.0 F.2 flag1240
    SELECTF flag1240 0.0 tmpf1240 F.0

    ADDF F.0 120.0 VLV_HUE_110
    JR endif1226
  else1226_3:
    SUBF VLV_RNORM_110 VLV_GNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf1245
    DATA8 flag1245
    DIVF F.1 F.2 tmpf1245
    CP_EQF 0.0 F.2 flag1245
    SELECTF flag1245 0.0 tmpf1245 F.0

    ADDF F.0 240.0 VLV_HUE_110
  else1226_4:
  endif1226:
    JR_NEQF VLV_MAX_110 0.0 else1247_1
    MOVEF_F 0.0 VLV_SAT_110
    JR endif1247
  else1247_1:
    DATAF tmpf1248
    DATA8 flag1248
    DIVF VLV_MIN_110 VLV_MAX_110 tmpf1248
    CP_EQF 0.0 VLV_MAX_110 flag1248
    SELECTF flag1248 0.0 tmpf1248 F.0

    SUBF 1.0 F.0 VLV_SAT_110
  else1247_2:
  endif1247:
    MOVEF_F VLV_MAX_110 VLV_VALUE_110
    ADDF VLV_VALUEBLANCO_110 VLV_VALUENEGRO_110 F.0
    DATAF tmpf1251
    DATA8 flag1251
    DIVF F.0 2.0 tmpf1251
    CP_EQF 0.0 2.0 flag1251
    SELECTF flag1251 0.0 tmpf1251 VLV_RGBGREY_110

    ADDF VLV_RNORM_110 VLV_GNORM_110 F.1
    ADDF F.1 VLV_BNORM_110 F.0
    JR_GTF F.0 3.0 else1252_1
    MOVEF_F 0.0 VLV_COLOR_110
    JR endif1252
  else1252_1:
    JR_GTEQF VLV_SAT_110 0.4 else1255_1
    JR_LTEQF VLV_VALUE_110 VLV_RGBGREY_110 else1256_1
    MOVEF_F 6.0 VLV_COLOR_110
    JR endif1256
  else1256_1:
    MOVEF_F 1.0 VLV_COLOR_110
  else1256_2:
  endif1256:
    JR endif1255
  else1255_1:
    JR_LTF VLV_HUE_110 0.0 else1257_1
    JR_GTEQF VLV_HUE_110 VLV_RED_110 else1257_1
    MOVEF_F 5.0 VLV_COLOR_110
    JR endif1257
  else1257_1:
    JR_LTF VLV_HUE_110 VLV_RED_110 else1257_2
    JR_GTEQF VLV_HUE_110 VLV_YELLOW_110 else1257_2
    MOVEF_F 4.0 VLV_COLOR_110
    JR endif1257
  else1257_2:
    JR_LTF VLV_HUE_110 VLV_YELLOW_110 else1257_3
    JR_GTEQF VLV_HUE_110 VLV_GREEN_110 else1257_3
    MOVEF_F 3.0 VLV_COLOR_110
    JR endif1257
  else1257_3:
    JR_LTF VLV_HUE_110 VLV_GREEN_110 else1257_4
    JR_GTEQF VLV_HUE_110 VLV_BLUE_110 else1257_4
    MOVEF_F 2.0 VLV_COLOR_110
    JR endif1257
  else1257_4:
    MOVEF_F 5.0 VLV_COLOR_110
  else1257_5:
  endif1257:
  else1255_2:
  endif1255:
  else1252_2:
  endif1252:
    STRINGS VALUE_FORMATTED VLV_RRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_110 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1273:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer1274
	DATA8 no1274
	DATA8 mode81274
	
	MOVEF_8 2.0 no1274
	SUB8 no1274 1 no1274
	DIV8 no1274 4 layer1274
	MATH MOD8 no1274 4 no1274

	MOVEF_8 4.0 mode81274
	
	INPUT_DEVICE READY_RAW layer1274 no1274 0 mode81274 0
    MOVEF_F 15.0 VLV_RED_111
    MOVEF_F 60.0 VLV_YELLOW_111
    MOVEF_F 170.0 VLV_GREEN_111
    MOVEF_F 330.0 VLV_BLUE_111
    MOVEF_F 10.0 VLV_VALUENEGRO_111
    MOVEF_F 100.0 VLV_VALUEBLANCO_111
    MOVEF_F 147.0 VLV_RWHITE_111
    MOVEF_F 143.0 VLV_GWHITE_111
    MOVEF_F 160.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    MOVEF_F 0.0 VLV_COLOR_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_111
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_111
  for1280:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor1280
  forbody1280:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_111
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_111 VLV_RGB_111
    DATAF tmpf1285
    DATA8 flag1285
    DIVF VLV_RRAW_111 VLV_RWHITE_111 tmpf1285
    CP_EQF 0.0 VLV_RWHITE_111 flag1285
    SELECTF flag1285 0.0 tmpf1285 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    DATAF tmpf1289
    DATA8 flag1289
    DIVF VLV_GRAW_111 VLV_GWHITE_111 tmpf1289
    CP_EQF 0.0 VLV_GWHITE_111 flag1289
    SELECTF flag1289 0.0 tmpf1289 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    DATAF tmpf1293
    DATA8 flag1293
    DIVF VLV_BRAW_111 VLV_BWHITE_111 tmpf1293
    CP_EQF 0.0 VLV_BWHITE_111 flag1293
    SELECTF flag1293 0.0 tmpf1293 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_RNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.3 VLV_GNORMA_111
    DATA8 flag1299
	CP_GTF F.2 F.3 flag1299
	SELECTF flag1299 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_BNORMA_111
    DATA8 flag1301
	CP_GTF F.1 F.2 flag1301
	SELECTF flag1301 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    DATA32 milliseconds1303
	MOVEF_32 5.0 milliseconds1303
	DATA32 timer1303
	TIMER_WAIT milliseconds1303 timer1303
	TIMER_READY timer1303
    ADDF VLV_J_111 1.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody1280
  endfor1280:
    MOVEF_F 1.0 VLV_J_111
  for1305:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor1305
  forbody1305:
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_111
    ADDF F.0 F.1 VLV_RNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_111
    ADDF F.0 F.1 VLV_GNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_111
    ADDF F.0 F.1 VLV_BNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_111
    ADDF F.0 F.1 VLV_MAX_111
    ADDF VLV_J_111 2.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody1305
  endfor1305:
    DATAF tmpf1323
    DATA8 flag1323
    DIVF VLV_RNORM_111 VLV_REPS_111 tmpf1323
    CP_EQF 0.0 VLV_REPS_111 flag1323
    SELECTF flag1323 0.0 tmpf1323 VLV_RNORM_111

    DATAF tmpf1324
    DATA8 flag1324
    DIVF VLV_GNORM_111 VLV_REPS_111 tmpf1324
    CP_EQF 0.0 VLV_REPS_111 flag1324
    SELECTF flag1324 0.0 tmpf1324 VLV_GNORM_111

    DATAF tmpf1325
    DATA8 flag1325
    DIVF VLV_BNORM_111 VLV_REPS_111 tmpf1325
    CP_EQF 0.0 VLV_REPS_111 flag1325
    SELECTF flag1325 0.0 tmpf1325 VLV_BNORM_111

    DATAF tmpf1326
    DATA8 flag1326
    DIVF VLV_MAX_111 VLV_REPS_111 tmpf1326
    CP_EQF 0.0 VLV_REPS_111 flag1326
    SELECTF flag1326 0.0 tmpf1326 VLV_MAX_111

    DATA8 flag1327
	CP_LTF VLV_RNORM_111 VLV_GNORM_111 flag1327
	SELECTF flag1327 VLV_RNORM_111 VLV_GNORM_111 F.0
    DATA8 flag1328
	CP_LTF F.0 VLV_BNORM_111 flag1328
	SELECTF flag1328 F.0 VLV_BNORM_111 VLV_MIN_111
    JR_NEQF VLV_MAX_111 VLV_MIN_111 else1329_1
    MOVEF_F 0.0 VLV_HUE_111
    JR endif1329
  else1329_1:
    JR_NEQF VLV_MAX_111 VLV_RNORM_111 else1329_2
    JR_LTF VLV_GNORM_111 VLV_BNORM_111 else1330_1
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_111 VLV_MIN_111 F.1
    DATAF tmpf1334
    DATA8 flag1334
    DIVF F.0 F.1 tmpf1334
    CP_EQF 0.0 F.1 flag1334
    SELECTF flag1334 0.0 tmpf1334 VLV_HUE_111

    JR endif1330
  else1330_1:
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1338
    DATA8 flag1338
    DIVF F.1 F.2 tmpf1338
    CP_EQF 0.0 F.2 flag1338
    SELECTF flag1338 0.0 tmpf1338 F.0

    ADDF F.0 360.0 VLV_HUE_111
  else1330_2:
  endif1330:
    JR endif1329
  else1329_2:
    JR_NEQF VLV_MAX_111 VLV_GNORM_111 else1329_3
    SUBF VLV_BNORM_111 VLV_RNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1343
    DATA8 flag1343
    DIVF F.1 F.2 tmpf1343
    CP_EQF 0.0 F.2 flag1343
    SELECTF flag1343 0.0 tmpf1343 F.0

    ADDF F.0 120.0 VLV_HUE_111
    JR endif1329
  else1329_3:
    SUBF VLV_RNORM_111 VLV_GNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1348
    DATA8 flag1348
    DIVF F.1 F.2 tmpf1348
    CP_EQF 0.0 F.2 flag1348
    SELECTF flag1348 0.0 tmpf1348 F.0

    ADDF F.0 240.0 VLV_HUE_111
  else1329_4:
  endif1329:
    JR_NEQF VLV_MAX_111 0.0 else1350_1
    MOVEF_F 0.0 VLV_SAT_111
    JR endif1350
  else1350_1:
    DATAF tmpf1351
    DATA8 flag1351
    DIVF VLV_MIN_111 VLV_MAX_111 tmpf1351
    CP_EQF 0.0 VLV_MAX_111 flag1351
    SELECTF flag1351 0.0 tmpf1351 F.0

    SUBF 1.0 F.0 VLV_SAT_111
  else1350_2:
  endif1350:
    MOVEF_F VLV_MAX_111 VLV_VALUE_111
    ADDF VLV_VALUEBLANCO_111 VLV_VALUENEGRO_111 F.0
    DATAF tmpf1354
    DATA8 flag1354
    DIVF F.0 2.0 tmpf1354
    CP_EQF 0.0 2.0 flag1354
    SELECTF flag1354 0.0 tmpf1354 VLV_RGBGREY_111

    ADDF VLV_RNORM_111 VLV_GNORM_111 F.1
    ADDF F.1 VLV_BNORM_111 F.0
    JR_GTF F.0 3.0 else1355_1
    MOVEF_F 0.0 VLV_COLOR_111
    JR endif1355
  else1355_1:
    JR_GTEQF VLV_SAT_111 0.4 else1358_1
    JR_LTEQF VLV_VALUE_111 VLV_RGBGREY_111 else1359_1
    MOVEF_F 6.0 VLV_COLOR_111
    JR endif1359
  else1359_1:
    MOVEF_F 1.0 VLV_COLOR_111
  else1359_2:
  endif1359:
    JR endif1358
  else1358_1:
    JR_LTF VLV_HUE_111 0.0 else1360_1
    JR_GTEQF VLV_HUE_111 VLV_RED_111 else1360_1
    MOVEF_F 5.0 VLV_COLOR_111
    JR endif1360
  else1360_1:
    JR_LTF VLV_HUE_111 VLV_RED_111 else1360_2
    JR_GTEQF VLV_HUE_111 VLV_YELLOW_111 else1360_2
    MOVEF_F 4.0 VLV_COLOR_111
    JR endif1360
  else1360_2:
    JR_LTF VLV_HUE_111 VLV_YELLOW_111 else1360_3
    JR_GTEQF VLV_HUE_111 VLV_GREEN_111 else1360_3
    MOVEF_F 3.0 VLV_COLOR_111
    JR endif1360
  else1360_3:
    JR_LTF VLV_HUE_111 VLV_GREEN_111 else1360_4
    JR_GTEQF VLV_HUE_111 VLV_BLUE_111 else1360_4
    MOVEF_F 2.0 VLV_COLOR_111
    JR endif1360
  else1360_4:
    MOVEF_F 5.0 VLV_COLOR_111
  else1360_5:
  endif1360:
  else1358_2:
  endif1358:
  else1355_2:
  endif1355:
    STRINGS VALUE_FORMATTED VLV_RRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_111 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1376:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer1377
	DATA8 no1377
	DATA8 mode81377
	
	MOVEF_8 3.0 no1377
	SUB8 no1377 1 no1377
	DIV8 no1377 4 layer1377
	MATH MOD8 no1377 4 no1377

	MOVEF_8 4.0 mode81377
	
	INPUT_DEVICE READY_RAW layer1377 no1377 0 mode81377 0
    MOVEF_F 15.0 VLV_RED_112
    MOVEF_F 60.0 VLV_YELLOW_112
    MOVEF_F 170.0 VLV_GREEN_112
    MOVEF_F 330.0 VLV_BLUE_112
    MOVEF_F 10.0 VLV_VALUENEGRO_112
    MOVEF_F 100.0 VLV_VALUEBLANCO_112
    MOVEF_F 147.0 VLV_RWHITE_112
    MOVEF_F 143.0 VLV_GWHITE_112
    MOVEF_F 160.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    MOVEF_F 0.0 VLV_COLOR_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_112
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_112
  for1383:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1383
  forbody1383:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_112
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_112 VLV_RGB_112
    DATAF tmpf1388
    DATA8 flag1388
    DIVF VLV_RRAW_112 VLV_RWHITE_112 tmpf1388
    CP_EQF 0.0 VLV_RWHITE_112 flag1388
    SELECTF flag1388 0.0 tmpf1388 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    DATAF tmpf1392
    DATA8 flag1392
    DIVF VLV_GRAW_112 VLV_GWHITE_112 tmpf1392
    CP_EQF 0.0 VLV_GWHITE_112 flag1392
    SELECTF flag1392 0.0 tmpf1392 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    DATAF tmpf1396
    DATA8 flag1396
    DIVF VLV_BRAW_112 VLV_BWHITE_112 tmpf1396
    CP_EQF 0.0 VLV_BWHITE_112 flag1396
    SELECTF flag1396 0.0 tmpf1396 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_RNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.3 VLV_GNORMA_112
    DATA8 flag1402
	CP_GTF F.2 F.3 flag1402
	SELECTF flag1402 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_BNORMA_112
    DATA8 flag1404
	CP_GTF F.1 F.2 flag1404
	SELECTF flag1404 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    DATA32 milliseconds1406
	MOVEF_32 5.0 milliseconds1406
	DATA32 timer1406
	TIMER_WAIT milliseconds1406 timer1406
	TIMER_READY timer1406
    ADDF VLV_J_112 1.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1383
  endfor1383:
    MOVEF_F 1.0 VLV_J_112
  for1408:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1408
  forbody1408:
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_112
    ADDF F.0 F.1 VLV_RNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_112
    ADDF F.0 F.1 VLV_GNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_112
    ADDF F.0 F.1 VLV_BNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_112
    ADDF F.0 F.1 VLV_MAX_112
    ADDF VLV_J_112 2.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1408
  endfor1408:
    DATAF tmpf1426
    DATA8 flag1426
    DIVF VLV_RNORM_112 VLV_REPS_112 tmpf1426
    CP_EQF 0.0 VLV_REPS_112 flag1426
    SELECTF flag1426 0.0 tmpf1426 VLV_RNORM_112

    DATAF tmpf1427
    DATA8 flag1427
    DIVF VLV_GNORM_112 VLV_REPS_112 tmpf1427
    CP_EQF 0.0 VLV_REPS_112 flag1427
    SELECTF flag1427 0.0 tmpf1427 VLV_GNORM_112

    DATAF tmpf1428
    DATA8 flag1428
    DIVF VLV_BNORM_112 VLV_REPS_112 tmpf1428
    CP_EQF 0.0 VLV_REPS_112 flag1428
    SELECTF flag1428 0.0 tmpf1428 VLV_BNORM_112

    DATAF tmpf1429
    DATA8 flag1429
    DIVF VLV_MAX_112 VLV_REPS_112 tmpf1429
    CP_EQF 0.0 VLV_REPS_112 flag1429
    SELECTF flag1429 0.0 tmpf1429 VLV_MAX_112

    DATA8 flag1430
	CP_LTF VLV_RNORM_112 VLV_GNORM_112 flag1430
	SELECTF flag1430 VLV_RNORM_112 VLV_GNORM_112 F.0
    DATA8 flag1431
	CP_LTF F.0 VLV_BNORM_112 flag1431
	SELECTF flag1431 F.0 VLV_BNORM_112 VLV_MIN_112
    JR_NEQF VLV_MAX_112 VLV_MIN_112 else1432_1
    MOVEF_F 0.0 VLV_HUE_112
    JR endif1432
  else1432_1:
    JR_NEQF VLV_MAX_112 VLV_RNORM_112 else1432_2
    JR_LTF VLV_GNORM_112 VLV_BNORM_112 else1433_1
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_112 VLV_MIN_112 F.1
    DATAF tmpf1437
    DATA8 flag1437
    DIVF F.0 F.1 tmpf1437
    CP_EQF 0.0 F.1 flag1437
    SELECTF flag1437 0.0 tmpf1437 VLV_HUE_112

    JR endif1433
  else1433_1:
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1441
    DATA8 flag1441
    DIVF F.1 F.2 tmpf1441
    CP_EQF 0.0 F.2 flag1441
    SELECTF flag1441 0.0 tmpf1441 F.0

    ADDF F.0 360.0 VLV_HUE_112
  else1433_2:
  endif1433:
    JR endif1432
  else1432_2:
    JR_NEQF VLV_MAX_112 VLV_GNORM_112 else1432_3
    SUBF VLV_BNORM_112 VLV_RNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1446
    DATA8 flag1446
    DIVF F.1 F.2 tmpf1446
    CP_EQF 0.0 F.2 flag1446
    SELECTF flag1446 0.0 tmpf1446 F.0

    ADDF F.0 120.0 VLV_HUE_112
    JR endif1432
  else1432_3:
    SUBF VLV_RNORM_112 VLV_GNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1451
    DATA8 flag1451
    DIVF F.1 F.2 tmpf1451
    CP_EQF 0.0 F.2 flag1451
    SELECTF flag1451 0.0 tmpf1451 F.0

    ADDF F.0 240.0 VLV_HUE_112
  else1432_4:
  endif1432:
    JR_NEQF VLV_MAX_112 0.0 else1453_1
    MOVEF_F 0.0 VLV_SAT_112
    JR endif1453
  else1453_1:
    DATAF tmpf1454
    DATA8 flag1454
    DIVF VLV_MIN_112 VLV_MAX_112 tmpf1454
    CP_EQF 0.0 VLV_MAX_112 flag1454
    SELECTF flag1454 0.0 tmpf1454 F.0

    SUBF 1.0 F.0 VLV_SAT_112
  else1453_2:
  endif1453:
    MOVEF_F VLV_MAX_112 VLV_VALUE_112
    ADDF VLV_VALUEBLANCO_112 VLV_VALUENEGRO_112 F.0
    DATAF tmpf1457
    DATA8 flag1457
    DIVF F.0 2.0 tmpf1457
    CP_EQF 0.0 2.0 flag1457
    SELECTF flag1457 0.0 tmpf1457 VLV_RGBGREY_112

    ADDF VLV_RNORM_112 VLV_GNORM_112 F.1
    ADDF F.1 VLV_BNORM_112 F.0
    JR_GTF F.0 3.0 else1458_1
    MOVEF_F 0.0 VLV_COLOR_112
    JR endif1458
  else1458_1:
    JR_GTEQF VLV_SAT_112 0.4 else1461_1
    JR_LTEQF VLV_VALUE_112 VLV_RGBGREY_112 else1462_1
    MOVEF_F 6.0 VLV_COLOR_112
    JR endif1462
  else1462_1:
    MOVEF_F 1.0 VLV_COLOR_112
  else1462_2:
  endif1462:
    JR endif1461
  else1461_1:
    JR_LTF VLV_HUE_112 0.0 else1463_1
    JR_GTEQF VLV_HUE_112 VLV_RED_112 else1463_1
    MOVEF_F 5.0 VLV_COLOR_112
    JR endif1463
  else1463_1:
    JR_LTF VLV_HUE_112 VLV_RED_112 else1463_2
    JR_GTEQF VLV_HUE_112 VLV_YELLOW_112 else1463_2
    MOVEF_F 4.0 VLV_COLOR_112
    JR endif1463
  else1463_2:
    JR_LTF VLV_HUE_112 VLV_YELLOW_112 else1463_3
    JR_GTEQF VLV_HUE_112 VLV_GREEN_112 else1463_3
    MOVEF_F 3.0 VLV_COLOR_112
    JR endif1463
  else1463_3:
    JR_LTF VLV_HUE_112 VLV_GREEN_112 else1463_4
    JR_GTEQF VLV_HUE_112 VLV_BLUE_112 else1463_4
    MOVEF_F 2.0 VLV_COLOR_112
    JR endif1463
  else1463_4:
    MOVEF_F 5.0 VLV_COLOR_112
  else1463_5:
  endif1463:
  else1461_2:
  endif1461:
  else1458_2:
  endif1458:
    STRINGS VALUE_FORMATTED VLV_RRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_112 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1479:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer1480
	DATA8 no1480
	DATA8 mode81480
	
	MOVEF_8 4.0 no1480
	SUB8 no1480 1 no1480
	DIV8 no1480 4 layer1480
	MATH MOD8 no1480 4 no1480

	MOVEF_8 4.0 mode81480
	
	INPUT_DEVICE READY_RAW layer1480 no1480 0 mode81480 0
    MOVEF_F 15.0 VLV_RED_113
    MOVEF_F 60.0 VLV_YELLOW_113
    MOVEF_F 170.0 VLV_GREEN_113
    MOVEF_F 330.0 VLV_BLUE_113
    MOVEF_F 10.0 VLV_VALUENEGRO_113
    MOVEF_F 100.0 VLV_VALUEBLANCO_113
    MOVEF_F 147.0 VLV_RWHITE_113
    MOVEF_F 143.0 VLV_GWHITE_113
    MOVEF_F 160.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_113
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_113
  for1486:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1486
  forbody1486:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_113
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_113 VLV_RGB_113
    DATAF tmpf1491
    DATA8 flag1491
    DIVF VLV_RRAW_113 VLV_RWHITE_113 tmpf1491
    CP_EQF 0.0 VLV_RWHITE_113 flag1491
    SELECTF flag1491 0.0 tmpf1491 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    DATAF tmpf1495
    DATA8 flag1495
    DIVF VLV_GRAW_113 VLV_GWHITE_113 tmpf1495
    CP_EQF 0.0 VLV_GWHITE_113 flag1495
    SELECTF flag1495 0.0 tmpf1495 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    DATAF tmpf1499
    DATA8 flag1499
    DIVF VLV_BRAW_113 VLV_BWHITE_113 tmpf1499
    CP_EQF 0.0 VLV_BWHITE_113 flag1499
    SELECTF flag1499 0.0 tmpf1499 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_RNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.3 VLV_GNORMA_113
    DATA8 flag1505
	CP_GTF F.2 F.3 flag1505
	SELECTF flag1505 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_BNORMA_113
    DATA8 flag1507
	CP_GTF F.1 F.2 flag1507
	SELECTF flag1507 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    DATA32 milliseconds1509
	MOVEF_32 5.0 milliseconds1509
	DATA32 timer1509
	TIMER_WAIT milliseconds1509 timer1509
	TIMER_READY timer1509
    ADDF VLV_J_113 1.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1486
  endfor1486:
    MOVEF_F 1.0 VLV_J_113
  for1511:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1511
  forbody1511:
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_113
    ADDF F.0 F.1 VLV_RNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_113
    ADDF F.0 F.1 VLV_GNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_113
    ADDF F.0 F.1 VLV_BNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_113
    ADDF F.0 F.1 VLV_MAX_113
    ADDF VLV_J_113 2.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1511
  endfor1511:
    DATAF tmpf1529
    DATA8 flag1529
    DIVF VLV_RNORM_113 VLV_REPS_113 tmpf1529
    CP_EQF 0.0 VLV_REPS_113 flag1529
    SELECTF flag1529 0.0 tmpf1529 VLV_RNORM_113

    DATAF tmpf1530
    DATA8 flag1530
    DIVF VLV_GNORM_113 VLV_REPS_113 tmpf1530
    CP_EQF 0.0 VLV_REPS_113 flag1530
    SELECTF flag1530 0.0 tmpf1530 VLV_GNORM_113

    DATAF tmpf1531
    DATA8 flag1531
    DIVF VLV_BNORM_113 VLV_REPS_113 tmpf1531
    CP_EQF 0.0 VLV_REPS_113 flag1531
    SELECTF flag1531 0.0 tmpf1531 VLV_BNORM_113

    DATAF tmpf1532
    DATA8 flag1532
    DIVF VLV_MAX_113 VLV_REPS_113 tmpf1532
    CP_EQF 0.0 VLV_REPS_113 flag1532
    SELECTF flag1532 0.0 tmpf1532 VLV_MAX_113

    DATA8 flag1533
	CP_LTF VLV_RNORM_113 VLV_GNORM_113 flag1533
	SELECTF flag1533 VLV_RNORM_113 VLV_GNORM_113 F.0
    DATA8 flag1534
	CP_LTF F.0 VLV_BNORM_113 flag1534
	SELECTF flag1534 F.0 VLV_BNORM_113 VLV_MIN_113
    JR_NEQF VLV_MAX_113 VLV_MIN_113 else1535_1
    MOVEF_F 0.0 VLV_HUE_113
    JR endif1535
  else1535_1:
    JR_NEQF VLV_MAX_113 VLV_RNORM_113 else1535_2
    JR_LTF VLV_GNORM_113 VLV_BNORM_113 else1536_1
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_113 VLV_MIN_113 F.1
    DATAF tmpf1540
    DATA8 flag1540
    DIVF F.0 F.1 tmpf1540
    CP_EQF 0.0 F.1 flag1540
    SELECTF flag1540 0.0 tmpf1540 VLV_HUE_113

    JR endif1536
  else1536_1:
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1544
    DATA8 flag1544
    DIVF F.1 F.2 tmpf1544
    CP_EQF 0.0 F.2 flag1544
    SELECTF flag1544 0.0 tmpf1544 F.0

    ADDF F.0 360.0 VLV_HUE_113
  else1536_2:
  endif1536:
    JR endif1535
  else1535_2:
    JR_NEQF VLV_MAX_113 VLV_GNORM_113 else1535_3
    SUBF VLV_BNORM_113 VLV_RNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1549
    DATA8 flag1549
    DIVF F.1 F.2 tmpf1549
    CP_EQF 0.0 F.2 flag1549
    SELECTF flag1549 0.0 tmpf1549 F.0

    ADDF F.0 120.0 VLV_HUE_113
    JR endif1535
  else1535_3:
    SUBF VLV_RNORM_113 VLV_GNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1554
    DATA8 flag1554
    DIVF F.1 F.2 tmpf1554
    CP_EQF 0.0 F.2 flag1554
    SELECTF flag1554 0.0 tmpf1554 F.0

    ADDF F.0 240.0 VLV_HUE_113
  else1535_4:
  endif1535:
    JR_NEQF VLV_MAX_113 0.0 else1556_1
    MOVEF_F 0.0 VLV_SAT_113
    JR endif1556
  else1556_1:
    DATAF tmpf1557
    DATA8 flag1557
    DIVF VLV_MIN_113 VLV_MAX_113 tmpf1557
    CP_EQF 0.0 VLV_MAX_113 flag1557
    SELECTF flag1557 0.0 tmpf1557 F.0

    SUBF 1.0 F.0 VLV_SAT_113
  else1556_2:
  endif1556:
    MOVEF_F VLV_MAX_113 VLV_VALUE_113
    ADDF VLV_VALUEBLANCO_113 VLV_VALUENEGRO_113 F.0
    DATAF tmpf1560
    DATA8 flag1560
    DIVF F.0 2.0 tmpf1560
    CP_EQF 0.0 2.0 flag1560
    SELECTF flag1560 0.0 tmpf1560 VLV_RGBGREY_113

    ADDF VLV_RNORM_113 VLV_GNORM_113 F.1
    ADDF F.1 VLV_BNORM_113 F.0
    JR_GTF F.0 3.0 else1561_1
    MOVEF_F 0.0 VLV_COLOR_113
    JR endif1561
  else1561_1:
    JR_GTEQF VLV_SAT_113 0.4 else1564_1
    JR_LTEQF VLV_VALUE_113 VLV_RGBGREY_113 else1565_1
    MOVEF_F 6.0 VLV_COLOR_113
    JR endif1565
  else1565_1:
    MOVEF_F 1.0 VLV_COLOR_113
  else1565_2:
  endif1565:
    JR endif1564
  else1564_1:
    JR_LTF VLV_HUE_113 0.0 else1566_1
    JR_GTEQF VLV_HUE_113 VLV_RED_113 else1566_1
    MOVEF_F 5.0 VLV_COLOR_113
    JR endif1566
  else1566_1:
    JR_LTF VLV_HUE_113 VLV_RED_113 else1566_2
    JR_GTEQF VLV_HUE_113 VLV_YELLOW_113 else1566_2
    MOVEF_F 4.0 VLV_COLOR_113
    JR endif1566
  else1566_2:
    JR_LTF VLV_HUE_113 VLV_YELLOW_113 else1566_3
    JR_GTEQF VLV_HUE_113 VLV_GREEN_113 else1566_3
    MOVEF_F 3.0 VLV_COLOR_113
    JR endif1566
  else1566_3:
    JR_LTF VLV_HUE_113 VLV_GREEN_113 else1566_4
    JR_GTEQF VLV_HUE_113 VLV_BLUE_113 else1566_4
    MOVEF_F 2.0 VLV_COLOR_113
    JR endif1566
  else1566_4:
    MOVEF_F 5.0 VLV_COLOR_113
  else1566_5:
  endif1566:
  else1564_2:
  endif1564:
  else1561_2:
  endif1561:
    STRINGS VALUE_FORMATTED VLV_RRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_113 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1582:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_122 0.0 else1583_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1583
  else1583_1:
    JR_NEQF VLV_COLOR_122 1.0 else1583_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1583
  else1583_2:
    JR_NEQF VLV_COLOR_122 2.0 else1583_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1583
  else1583_3:
    JR_NEQF VLV_COLOR_122 3.0 else1583_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1583
  else1583_4:
    JR_NEQF VLV_COLOR_122 4.0 else1583_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1583
  else1583_5:
    JR_NEQF VLV_COLOR_122 5.0 else1583_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1583
  else1583_6:
    JR_NEQF VLV_COLOR_122 6.0 else1583_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1583
  else1583_7:
    JR_NEQF VLV_COLOR_122 7.0 else1583_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1583_8:
  endif1583:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_ABAJO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1592:
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -220.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1593:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1594:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 350.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1595:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -300.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1596:
RETSUB_F_COGER_ABAJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_0:
SUB_F_COGER_ABAJO_BASURA_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1597:
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -130.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1598:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1599:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 500.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1600:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1601:
RETSUB_F_COGER_ABAJO_BASURA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_BASURA_0:
SUB_F_COGER_ARRIBA_0:
    MOVEF_F -20.0 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1602:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -670.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1603:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -200.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1604:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1605:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1606:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 400.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1607:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -400.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1608:
RETSUB_F_COGER_ARRIBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ARRIBA_0:
SUB_F_SOLTAR_TODO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1609:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -750.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1610:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1611:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1612:
RETSUB_F_SOLTAR_TODO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_TODO_0:
SUB_F_SOLTAR_UNO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1613:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -760.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1614:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1615:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -660.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1616:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1617:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 200.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1618:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1619:
RETSUB_F_SOLTAR_UNO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_UNO_0:
SUB_F_LECTURA_1:
    MOVEF_F 15.0 VLV_V_95
    MOVEF_F -650.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1620:
    MOVEF_F 5.0 VLV_REPS_111
    WRITE32 ENDSUB_F_RGBDETECT2_2:CALLSUB1621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RGBDETECT2_2
CALLSUB1621:
    MOVEF_F VLV_COLOR_111 VLV_READ_131
    MOVEF_F VLV_READ_131 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1622:
    MOVEF_F 15.0 VLV_V_95
    MOVEF_F -200.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1623:
RETSUB_F_LECTURA_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LECTURA_1:
SUB_F_TRASPMATVECT3X3_2:
    CALL VECTOR.INIT 9.0 0.0 VLV_S_132
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 3.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 6.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 4.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 7.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 5.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 8.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_132
RETSUB_F_TRASPMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TRASPMATVECT3X3_2:
SUB_F_INVMATVECT3X3_2:
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.6 VLV_M_133
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 5.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    CALL ARRAYGET_FLOAT 5.0 F.7 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.8 VLV_M_133
    MULF F.7 F.8 F.6
    SUBF F.5 F.6 F.4
    MULF F.3 F.4 F.2
    SUBF F.1 F.2 F.0
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.6 VLV_M_133
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 4.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    ADDF F.0 F.1 VLV_DETERMINANTE_133
    JR_EQF VLV_DETERMINANTE_133 0.0 else1672_1
    CALL ARRAYGET_FLOAT 4.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1680
    DATA8 flag1680
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1680
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1680
    SELECTF flag1680 0.0 tmpf1680 F.0

    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1689
    DATA8 flag1689
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1689
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1689
    SELECTF flag1689 0.0 tmpf1689 F.0

    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1698
    DATA8 flag1698
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1698
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1698
    SELECTF flag1698 0.0 tmpf1698 F.0

    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1707
    DATA8 flag1707
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1707
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1707
    SELECTF flag1707 0.0 tmpf1707 F.0

    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1716
    DATA8 flag1716
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1716
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1716
    SELECTF flag1716 0.0 tmpf1716 F.0

    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1725
    DATA8 flag1725
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1725
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1725
    SELECTF flag1725 0.0 tmpf1725 F.0

    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1734
    DATA8 flag1734
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1734
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1734
    SELECTF flag1734 0.0 tmpf1734 F.0

    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1743
    DATA8 flag1743
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1743
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1743
    SELECTF flag1743 0.0 tmpf1743 F.0

    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1752
    DATA8 flag1752
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1752
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1752
    SELECTF flag1752 0.0 tmpf1752 F.0

    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_133
  else1672_1:
  endif1672:
RETSUB_F_INVMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_INVMATVECT3X3_2:
SUB_F_MULTIMATRIZCOEF_3:
    MOVEF_F 0.0 VLV_I_134
  while1754:
    CALL ARRAYGET_FLOAT VLV_I_134 F.0 VLV_M_134
    JR_EQF F.0 0.0 endwhile1754
  whilebody1754:
    CALL ARRAYGET_FLOAT VLV_I_134 F.1 VLV_M_134
    MULF VLV_K_134 F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_I_134 F.0 VLV_S_134
    ADDF VLV_I_134 1.0 VLV_I_134
    CALL ARRAYGET_FLOAT VLV_I_134 F.0 VLV_M_134
    JR_NEQF F.0 0.0 whilebody1754
  endwhile1754:
RETSUB_F_MULTIMATRIZCOEF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MULTIMATRIZCOEF_3:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall VECTOR.INIT       // FFA
{
	IN_F size
	IN_F value
	IN_16 a

	DATA32 size32
	MOVEF_32 size size32
	JR_LTEQ32 size32 0 empty

	ARRAY RESIZE a size32
	ARRAY FILL a value
	RETURN

empty:
    ARRAY RESIZE a 0
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
