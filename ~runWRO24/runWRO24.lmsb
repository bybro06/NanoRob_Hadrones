DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_105
DATAF VLV_AENC_105
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V1_35
DATAF VLV_V2_35
DATAF VLV_ANGLE_35
DATAF VLV_V_95
DATAF VLV_AENC_95
DATAF VLV_VELOCIDAD_2
DATAF VLV_DISTANCIA_2
DATAF VLV_REPS_110
DATAF VLV_COLOR_110
DATAF VLV_COLOR_122
DATAF VLV_VELOCIDAD1_15
DATAF VLV_VELOCIDAD2_15
DATAF VLV_ENCODER_15
DATAF VLV_VELOCIDAD_3
DATAF VLV_SENS_3
DATAF VLV_VELOCIDAD_39
DATAF VLV_V_101
DATAF VLV_VELOCIDAD_13
DATAF VLV_TIEMPO_13
DATAF VLV_READ_131
DATAF VLV_VELOCIDAD_5
DATAF VLV_SENS_5
DATAF VLV_VEL_33
DATAF VLV_VELOCIDAD_75
DATAF VLV_KP_75
DATAF VLV_KI_75
DATAF VLV_KD_75
DATAF VLV_ENCODER_75
DATAF VLV_VELOCIDAD_82
DATAF VLV_KP_82
DATAF VLV_KI_82
DATAF VLV_KD_82
DATAF VLV_LADO_82
DATAF VLV_SENS_82
DATAF VLV_VELOCIDAD_6
DATAF VLV_SENS_6
DATAF VLV_VELOCIDAD_4
DATAF VLV_SENS_4
DATAF VLV_VELOCIDAD_81
DATAF VLV_KP_81
DATAF VLV_KI_81
DATAF VLV_KD_81
DATAF VLV_LADO_81
DATAF VLV_SENS_81
DATAF VLV_V_96
DATAF VLV_V0_45
DATAF VLV_VMAX_45
DATAF VLV_DISTANCIA_45
DATAF VLV_V_106
DATAF VLV_V_104
DATAF VLV_GRADOS_104
DATAF VLV_V0_56
DATAF VLV_VMAX_56
DATAF VLV_KP_56
DATAF VLV_KI_56
DATAF VLV_KD_56
DATAF VLV_ACCELENCODER_56
DATAF VLV_VELOCIDAD_72
DATAF VLV_KP_72
DATAF VLV_KI_72
DATAF VLV_KD_72
DATAF VLV_VELOCIDAD_76
DATAF VLV_KP_76
DATAF VLV_KI_76
DATAF VLV_KD_76
DATAF VLV_ENCODER_76
DATAF VLV_VMAX_88
DATAF VLV_KP_88
DATAF VLV_KI_88
DATAF VLV_KD_88
DATAF VLV_REPS_111
DATAF VLV_COLOR_111
DATAF VLV_REPS_112
DATAF VLV_COLOR_112
DATAF VLV_REPS_113
DATAF VLV_COLOR_113
ARRAY16 VLV_M_134 2
DATAF VLV_K_134
ARRAY16 VLV_S_134 2
ARRAY16 VLV_M_132 2
ARRAY16 VLV_S_132 2
ARRAY16 VLV_M_133 2
ARRAY16 VLV_S_133 2
DATAF VLV_V_108
DATAF VLV_T_108
DATAF VLV_V_109
DATAF VLV_AENC_109
DATAF VGV_CASO
DATAF VGV_BLOQUE
DATAF VLV_COLOR_114
DATAF VLV_COLOR_115
DATAF VLV_COLOR_116
DATAF VLV_COLOR_117
ARRAY16 VLV_VELI_123 2
ARRAY16 VLV_VELD_123 2
ARRAY16 VLV_OMEGAI_K1_123 2
ARRAY16 VLV_OMEGAD_K1_123 2
ARRAY16 VLV_V_123 2
ARRAY16 VLV_DH_T_123 2
ARRAY16 VLV_S_INV_123 2
DATAF VGV_CENTRO
DATAF VGV_XTIME
DATAF VGV_YTIME
DATAF VGV_THETATIME
DATAF VGV_XTCORRECT
DATAF VGV_YTCORRECT
DATAF VGV_THETATCORRECT
DATAF VGV_SENTIDO_D
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DW
DATAF VGV_DIAMETER
DATAF VGV_D_T
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_G1
DATAF VGV_ROJOS
DATAF VGV_AMARILLOS
DATAF VGV_VERDES
DATAF VGV_AZULES
ARRAY16 VGV_BOMBOCLAT 2
DATAF VGV_NUMERO_BLOQUES
ARRAY16 VGV_ALPHA_L 2
ARRAY16 VGV_ALPHA_R 2
DATAF VGV_OLDB
DATAF VGV_OLDC
ARRAY16 VGV_XT 2
ARRAY16 VGV_YT 2
ARRAY16 VGV_THETAT 2
DATAF VGV_I
DATAF VGV_D_L
DATAF VGV_D_R
DATAF VGV_D
DATAF VGV_DELTA_THETA
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAF VLV_DIAMETRO_2
DATAF VLV_ENC_2
DATAF VLV_START_B_2
DATAF VLV_START_C_2
DATAF VLV_ENCODER_C_2
DATAF VLV_ENCODER_B_2
DATAF VLV_ERROR_2
DATAF VLV_PROPORCIAL_2
DATAF VLV_START_B_3
DATAF VLV_START_C_3
DATAF VLV_ENCODER_B_3
DATAF VLV_ENCODER_C_3
DATAF VLV_ERROR_3
DATAF VLV_PROPORCIAL_3
DATAF VLV_START_B_4
DATAF VLV_START_C_4
DATAF VLV_ENCODER_B_4
DATAF VLV_ENCODER_C_4
DATAF VLV_ERROR_4
DATAF VLV_PROPORCIAL_4
DATAF VLV_START_B_5
DATAF VLV_START_C_5
DATAF VLV_ENCODER_B_5
DATAF VLV_ENCODER_C_5
DATAF VLV_ERROR_5
DATAF VLV_PROPORCIAL_5
DATAF VLV_START_B_6
DATAF VLV_START_C_6
DATAF VLV_ENCODER_B_6
DATAF VLV_ENCODER_C_6
DATAF VLV_ERROR_6
DATAF VLV_PROPORCIAL_6
DATAF VLV_START_B_13
DATAF VLV_START_C_13
DATAF VLV_ENCODER_B_13
DATAF VLV_ENCODER_C_13
DATAF VLV_ERROR_13
DATAF VLV_PROPORCIAL_13
DATAF VLV_DIAMETRO_15
DATAF VLV_DISTANCIA_15
DATAF VLV_AVANCE_33
DATAF VLV_GINICIO_33
DATAF VLV_AJUSTE_33
DATAS VLV_I_35 252
DATAS VLV_D_35 252
DATAF VLV_SIGNO_35
DATAF VLV_VMIN_35
DATAF VLV_VMAX_35
DATAF VLV_ENCODR_35
DATAS VLV_I_39 252
DATAS VLV_D_39 252
DATAF VLV_ENCODR_39
DATAF VLV_ANGLE_39
DATAF VLV_GRADOS_45
DATAF VLV_START_B_45
DATAF VLV_START_C_45
DATAF VLV_ENCODER_B_45
DATAF VLV_ENCODER_C_45
DATAF VLV_VEL_45
DATAF VLV_KP_45
DATAF VLV_KI_45
DATAF VLV_KD_45
DATAF VLV_ERROR_45
DATAF VLV_OLDERROR_45
DATAF VLV_ERRSUM_45
DATAF VLV_CORRECCION_45
DATAS VLV_I_56 252
DATAS VLV_D_56 252
DATAF VLV_U_56
DATAF VLV_ERROR_56
DATAF VLV_OLDERROR_56
DATAF VLV_ERRSUM_56
DATAF VLV_VEL_56
DATAF VLV_SENTIDO_56
DATAS VLV_I_72 252
DATAS VLV_D_72 252
DATAF VLV_ERROR_72
DATAF VLV_OLDERROR_72
DATAF VLV_ERRSUM_72
DATAF VLV_U_72
DATAF VLV_SENTIDO_72
DATAS VLV_I_75 252
DATAS VLV_D_75 252
DATAF VLV_ERROR_75
DATAF VLV_OLDERROR_75
DATAF VLV_ERRSUM_75
DATAF VLV_U_75
DATAF VLV_SENTIDO_75
DATAF VLV_START_C_75
DATAF VLV_ENCODER_C_75
DATAS VLV_I_76 252
DATAS VLV_D_76 252
DATAF VLV_ERROR_76
DATAF VLV_OLDERROR_76
DATAF VLV_ERRSUM_76
DATAF VLV_U_76
DATAF VLV_SENTIDO_76
DATAF VLV_START_C_76
DATAF VLV_ENCODER_C_76
DATAS VLV_I_81 252
DATAS VLV_D_81 252
DATAF VLV_ERROR_81
DATAF VLV_OLDERROR_81
DATAF VLV_ERRSUM_81
DATAF VLV_U_81
DATAF VLV_SENTIDO_81
DATAF VLV_READER_81
DATAS VLV_I_82 252
DATAS VLV_D_82 252
DATAF VLV_ERROR_82
DATAF VLV_OLDERROR_82
DATAF VLV_ERRSUM_82
DATAF VLV_U_82
DATAF VLV_SENTIDO_82
DATAF VLV_READER_82
DATAS VLV_I_88 252
DATAS VLV_D_88 252
DATAF VLV_V0_88
DATAF VLV_ACCELENCODER_88
DATAF VLV_U_88
DATAF VLV_ERRSUM_88
DATAF VLV_OLDERROR_88
DATAF VLV_VEL_88
DATAF VLV_SENTIDO_88
DATAF VLV_ERROR_88
DATAF VLV_ENCDIFF_95
DATAF VLV_SIGNO_95
DATAF VLV_ENCDIFF_96
DATAF VLV_SIGNO_96
DATAF VLV_AENC_101
DATAF VLV_DIFFA_104
DATAF VLV_DIFFD_104
DATAF VLV_SAFETYTIMER_104
DATAF VLV_SIGNOA_104
DATAF VLV_SIGNOD_104
DATAF VLV_VELA_104
DATAF VLV_VELD_104
DATAF VLV_ENCDIFF_105
DATAF VLV_SIGNO_105
DATAF VLV_ENCDIFF_109
DATAF VLV_SIGNO_109
DATAF VLV_SAFETYTIMER_109
DATAF VLV_RED_110
DATAF VLV_YELLOW_110
DATAF VLV_GREEN_110
DATAF VLV_BLUE_110
DATAF VLV_VALUENEGRO_110
DATAF VLV_VALUEBLANCO_110
DATAF VLV_RWHITE_110
DATAF VLV_GWHITE_110
DATAF VLV_BWHITE_110
DATAF VLV_HUE_110
DATAF VLV_SAT_110
DATAF VLV_VALUE_110
ARRAY16 VLV_RNORMA_110 2
ARRAY16 VLV_GNORMA_110 2
ARRAY16 VLV_BNORMA_110 2
ARRAY16 VLV_MAXA_110 2
DATAF VLV_J_110
ARRAY16 VLV_RGB_110 2
DATAF VLV_RRAW_110
DATAF VLV_GRAW_110
DATAF VLV_BRAW_110
DATAF VLV_RNORM_110
DATAF VLV_GNORM_110
DATAF VLV_BNORM_110
DATAF VLV_MAX_110
DATAF VLV_MIN_110
DATAF VLV_RGBGREY_110
DATAF VLV_RED_111
DATAF VLV_YELLOW_111
DATAF VLV_GREEN_111
DATAF VLV_BLUE_111
DATAF VLV_VALUENEGRO_111
DATAF VLV_VALUEBLANCO_111
DATAF VLV_RWHITE_111
DATAF VLV_GWHITE_111
DATAF VLV_BWHITE_111
DATAF VLV_HUE_111
DATAF VLV_SAT_111
DATAF VLV_VALUE_111
ARRAY16 VLV_RNORMA_111 2
ARRAY16 VLV_GNORMA_111 2
ARRAY16 VLV_BNORMA_111 2
ARRAY16 VLV_MAXA_111 2
DATAF VLV_J_111
ARRAY16 VLV_RGB_111 2
DATAF VLV_RRAW_111
DATAF VLV_GRAW_111
DATAF VLV_BRAW_111
DATAF VLV_RNORM_111
DATAF VLV_GNORM_111
DATAF VLV_BNORM_111
DATAF VLV_MAX_111
DATAF VLV_MIN_111
DATAF VLV_RGBGREY_111
DATAF VLV_RED_112
DATAF VLV_YELLOW_112
DATAF VLV_GREEN_112
DATAF VLV_BLUE_112
DATAF VLV_VALUENEGRO_112
DATAF VLV_VALUEBLANCO_112
DATAF VLV_RWHITE_112
DATAF VLV_GWHITE_112
DATAF VLV_BWHITE_112
DATAF VLV_HUE_112
DATAF VLV_SAT_112
DATAF VLV_VALUE_112
ARRAY16 VLV_RNORMA_112 2
ARRAY16 VLV_GNORMA_112 2
ARRAY16 VLV_BNORMA_112 2
ARRAY16 VLV_MAXA_112 2
DATAF VLV_J_112
ARRAY16 VLV_RGB_112 2
DATAF VLV_RRAW_112
DATAF VLV_GRAW_112
DATAF VLV_BRAW_112
DATAF VLV_RNORM_112
DATAF VLV_GNORM_112
DATAF VLV_BNORM_112
DATAF VLV_MAX_112
DATAF VLV_MIN_112
DATAF VLV_RGBGREY_112
DATAF VLV_RED_113
DATAF VLV_YELLOW_113
DATAF VLV_GREEN_113
DATAF VLV_BLUE_113
DATAF VLV_VALUENEGRO_113
DATAF VLV_VALUEBLANCO_113
DATAF VLV_RWHITE_113
DATAF VLV_GWHITE_113
DATAF VLV_BWHITE_113
DATAF VLV_HUE_113
DATAF VLV_SAT_113
DATAF VLV_VALUE_113
ARRAY16 VLV_RNORMA_113 2
ARRAY16 VLV_GNORMA_113 2
ARRAY16 VLV_BNORMA_113 2
ARRAY16 VLV_MAXA_113 2
DATAF VLV_J_113
ARRAY16 VLV_RGB_113 2
DATAF VLV_RRAW_113
DATAF VLV_GRAW_113
DATAF VLV_BRAW_113
DATAF VLV_RNORM_113
DATAF VLV_GNORM_113
DATAF VLV_BNORM_113
DATAF VLV_MAX_113
DATAF VLV_MIN_113
DATAF VLV_RGBGREY_113
DATAF VLV_DETERMINANTE_133
DATAF VLV_I_134
DATA32 RUNCOUNTER_F_ODOMETRY_0
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_READ_131
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_LADO_82
    MOVEF_F 0.0 VLV_SENS_82
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_SENS_6
    MOVEF_F 0.0 VLV_VELOCIDAD_4
    MOVEF_F 0.0 VLV_SENS_4
    MOVEF_F 0.0 VLV_VELOCIDAD_81
    MOVEF_F 0.0 VLV_KP_81
    MOVEF_F 0.0 VLV_KI_81
    MOVEF_F 0.0 VLV_KD_81
    MOVEF_F 0.0 VLV_LADO_81
    MOVEF_F 0.0 VLV_SENS_81
    MOVEF_F 0.0 VLV_V_96
    MOVEF_F 0.0 VLV_V0_45
    MOVEF_F 0.0 VLV_VMAX_45
    MOVEF_F 0.0 VLV_DISTANCIA_45
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYCREATE_FLOAT VLV_M_134
    MOVEF_F 0.0 VLV_K_134
    CALL ARRAYCREATE_FLOAT VLV_S_134
    CALL ARRAYCREATE_FLOAT VLV_M_132
    CALL ARRAYCREATE_FLOAT VLV_S_132
    CALL ARRAYCREATE_FLOAT VLV_M_133
    CALL ARRAYCREATE_FLOAT VLV_S_133
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VGV_CASO
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYCREATE_FLOAT VLV_VELI_123
    CALL ARRAYCREATE_FLOAT VLV_VELD_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAI_K1_123
    CALL ARRAYCREATE_FLOAT VLV_OMEGAD_K1_123
    CALL ARRAYCREATE_FLOAT VLV_V_123
    CALL ARRAYCREATE_FLOAT VLV_DH_T_123
    CALL ARRAYCREATE_FLOAT VLV_S_INV_123
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    CALL ARRAYCREATE_FLOAT VGV_BOMBOCLAT
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_L
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYCREATE_FLOAT VGV_XT
    CALL ARRAYCREATE_FLOAT VGV_YT
    CALL ARRAYCREATE_FLOAT VGV_THETAT
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_D_L
    MOVEF_F 0.0 VGV_D_R
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_DELTA_THETA
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    MOVEF_F 0.0 VLV_DIAMETRO_2
    MOVEF_F 0.0 VLV_ENC_2
    MOVEF_F 0.0 VLV_START_B_2
    MOVEF_F 0.0 VLV_START_C_2
    MOVEF_F 0.0 VLV_ENCODER_C_2
    MOVEF_F 0.0 VLV_ENCODER_B_2
    MOVEF_F 0.0 VLV_ERROR_2
    MOVEF_F 0.0 VLV_PROPORCIAL_2
    MOVEF_F 0.0 VLV_START_B_3
    MOVEF_F 0.0 VLV_START_C_3
    MOVEF_F 0.0 VLV_ENCODER_B_3
    MOVEF_F 0.0 VLV_ENCODER_C_3
    MOVEF_F 0.0 VLV_ERROR_3
    MOVEF_F 0.0 VLV_PROPORCIAL_3
    MOVEF_F 0.0 VLV_START_B_4
    MOVEF_F 0.0 VLV_START_C_4
    MOVEF_F 0.0 VLV_ENCODER_B_4
    MOVEF_F 0.0 VLV_ENCODER_C_4
    MOVEF_F 0.0 VLV_ERROR_4
    MOVEF_F 0.0 VLV_PROPORCIAL_4
    MOVEF_F 0.0 VLV_START_B_5
    MOVEF_F 0.0 VLV_START_C_5
    MOVEF_F 0.0 VLV_ENCODER_B_5
    MOVEF_F 0.0 VLV_ENCODER_C_5
    MOVEF_F 0.0 VLV_ERROR_5
    MOVEF_F 0.0 VLV_PROPORCIAL_5
    MOVEF_F 0.0 VLV_START_B_6
    MOVEF_F 0.0 VLV_START_C_6
    MOVEF_F 0.0 VLV_ENCODER_B_6
    MOVEF_F 0.0 VLV_ENCODER_C_6
    MOVEF_F 0.0 VLV_ERROR_6
    MOVEF_F 0.0 VLV_PROPORCIAL_6
    MOVEF_F 0.0 VLV_START_B_13
    MOVEF_F 0.0 VLV_START_C_13
    MOVEF_F 0.0 VLV_ENCODER_B_13
    MOVEF_F 0.0 VLV_ENCODER_C_13
    MOVEF_F 0.0 VLV_ERROR_13
    MOVEF_F 0.0 VLV_PROPORCIAL_13
    MOVEF_F 0.0 VLV_DIAMETRO_15
    MOVEF_F 0.0 VLV_DISTANCIA_15
    MOVEF_F 0.0 VLV_AVANCE_33
    MOVEF_F 0.0 VLV_GINICIO_33
    MOVEF_F 0.0 VLV_AJUSTE_33
    STRINGS DUPLICATE '' VLV_I_35
    STRINGS DUPLICATE '' VLV_D_35
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VMIN_35
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_ENCODR_35
    STRINGS DUPLICATE '' VLV_I_39
    STRINGS DUPLICATE '' VLV_D_39
    MOVEF_F 0.0 VLV_ENCODR_39
    MOVEF_F 0.0 VLV_ANGLE_39
    MOVEF_F 0.0 VLV_GRADOS_45
    MOVEF_F 0.0 VLV_START_B_45
    MOVEF_F 0.0 VLV_START_C_45
    MOVEF_F 0.0 VLV_ENCODER_B_45
    MOVEF_F 0.0 VLV_ENCODER_C_45
    MOVEF_F 0.0 VLV_VEL_45
    MOVEF_F 0.0 VLV_KP_45
    MOVEF_F 0.0 VLV_KI_45
    MOVEF_F 0.0 VLV_KD_45
    MOVEF_F 0.0 VLV_ERROR_45
    MOVEF_F 0.0 VLV_OLDERROR_45
    MOVEF_F 0.0 VLV_ERRSUM_45
    MOVEF_F 0.0 VLV_CORRECCION_45
    STRINGS DUPLICATE '' VLV_I_56
    STRINGS DUPLICATE '' VLV_D_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    MOVEF_F 0.0 VLV_VEL_56
    MOVEF_F 0.0 VLV_SENTIDO_56
    STRINGS DUPLICATE '' VLV_I_72
    STRINGS DUPLICATE '' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MOVEF_F 0.0 VLV_SENTIDO_72
    STRINGS DUPLICATE '' VLV_I_75
    STRINGS DUPLICATE '' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MOVEF_F 0.0 VLV_SENTIDO_75
    MOVEF_F 0.0 VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
    STRINGS DUPLICATE '' VLV_I_76
    STRINGS DUPLICATE '' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MOVEF_F 0.0 VLV_SENTIDO_76
    MOVEF_F 0.0 VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
    STRINGS DUPLICATE '' VLV_I_81
    STRINGS DUPLICATE '' VLV_D_81
    MOVEF_F 0.0 VLV_ERROR_81
    MOVEF_F 0.0 VLV_OLDERROR_81
    MOVEF_F 0.0 VLV_ERRSUM_81
    MOVEF_F 0.0 VLV_U_81
    MOVEF_F 0.0 VLV_SENTIDO_81
    MOVEF_F 0.0 VLV_READER_81
    STRINGS DUPLICATE '' VLV_I_82
    STRINGS DUPLICATE '' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MOVEF_F 0.0 VLV_SENTIDO_82
    MOVEF_F 0.0 VLV_READER_82
    STRINGS DUPLICATE '' VLV_I_88
    STRINGS DUPLICATE '' VLV_D_88
    MOVEF_F 0.0 VLV_V0_88
    MOVEF_F 0.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    MOVEF_F 0.0 VLV_VEL_88
    MOVEF_F 0.0 VLV_SENTIDO_88
    MOVEF_F 0.0 VLV_ERROR_88
    MOVEF_F 0.0 VLV_ENCDIFF_95
    MOVEF_F 0.0 VLV_SIGNO_95
    MOVEF_F 0.0 VLV_ENCDIFF_96
    MOVEF_F 0.0 VLV_SIGNO_96
    MOVEF_F 0.0 VLV_AENC_101
    MOVEF_F 0.0 VLV_DIFFA_104
    MOVEF_F 0.0 VLV_DIFFD_104
    MOVEF_F 0.0 VLV_SAFETYTIMER_104
    MOVEF_F 0.0 VLV_SIGNOA_104
    MOVEF_F 0.0 VLV_SIGNOD_104
    MOVEF_F 0.0 VLV_VELA_104
    MOVEF_F 0.0 VLV_VELD_104
    MOVEF_F 0.0 VLV_ENCDIFF_105
    MOVEF_F 0.0 VLV_SIGNO_105
    MOVEF_F 0.0 VLV_ENCDIFF_109
    MOVEF_F 0.0 VLV_SIGNO_109
    MOVEF_F 0.0 VLV_SAFETYTIMER_109
    MOVEF_F 0.0 VLV_RED_110
    MOVEF_F 0.0 VLV_YELLOW_110
    MOVEF_F 0.0 VLV_GREEN_110
    MOVEF_F 0.0 VLV_BLUE_110
    MOVEF_F 0.0 VLV_VALUENEGRO_110
    MOVEF_F 0.0 VLV_VALUEBLANCO_110
    MOVEF_F 0.0 VLV_RWHITE_110
    MOVEF_F 0.0 VLV_GWHITE_110
    MOVEF_F 0.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_MAXA_110
    MOVEF_F 0.0 VLV_J_110
    CALL ARRAYCREATE_FLOAT VLV_RGB_110
    MOVEF_F 0.0 VLV_RRAW_110
    MOVEF_F 0.0 VLV_GRAW_110
    MOVEF_F 0.0 VLV_BRAW_110
    MOVEF_F 0.0 VLV_RNORM_110
    MOVEF_F 0.0 VLV_GNORM_110
    MOVEF_F 0.0 VLV_BNORM_110
    MOVEF_F 0.0 VLV_MAX_110
    MOVEF_F 0.0 VLV_MIN_110
    MOVEF_F 0.0 VLV_RGBGREY_110
    MOVEF_F 0.0 VLV_RED_111
    MOVEF_F 0.0 VLV_YELLOW_111
    MOVEF_F 0.0 VLV_GREEN_111
    MOVEF_F 0.0 VLV_BLUE_111
    MOVEF_F 0.0 VLV_VALUENEGRO_111
    MOVEF_F 0.0 VLV_VALUEBLANCO_111
    MOVEF_F 0.0 VLV_RWHITE_111
    MOVEF_F 0.0 VLV_GWHITE_111
    MOVEF_F 0.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_MAXA_111
    MOVEF_F 0.0 VLV_J_111
    CALL ARRAYCREATE_FLOAT VLV_RGB_111
    MOVEF_F 0.0 VLV_RRAW_111
    MOVEF_F 0.0 VLV_GRAW_111
    MOVEF_F 0.0 VLV_BRAW_111
    MOVEF_F 0.0 VLV_RNORM_111
    MOVEF_F 0.0 VLV_GNORM_111
    MOVEF_F 0.0 VLV_BNORM_111
    MOVEF_F 0.0 VLV_MAX_111
    MOVEF_F 0.0 VLV_MIN_111
    MOVEF_F 0.0 VLV_RGBGREY_111
    MOVEF_F 0.0 VLV_RED_112
    MOVEF_F 0.0 VLV_YELLOW_112
    MOVEF_F 0.0 VLV_GREEN_112
    MOVEF_F 0.0 VLV_BLUE_112
    MOVEF_F 0.0 VLV_VALUENEGRO_112
    MOVEF_F 0.0 VLV_VALUEBLANCO_112
    MOVEF_F 0.0 VLV_RWHITE_112
    MOVEF_F 0.0 VLV_GWHITE_112
    MOVEF_F 0.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_MAXA_112
    MOVEF_F 0.0 VLV_J_112
    CALL ARRAYCREATE_FLOAT VLV_RGB_112
    MOVEF_F 0.0 VLV_RRAW_112
    MOVEF_F 0.0 VLV_GRAW_112
    MOVEF_F 0.0 VLV_BRAW_112
    MOVEF_F 0.0 VLV_RNORM_112
    MOVEF_F 0.0 VLV_GNORM_112
    MOVEF_F 0.0 VLV_BNORM_112
    MOVEF_F 0.0 VLV_MAX_112
    MOVEF_F 0.0 VLV_MIN_112
    MOVEF_F 0.0 VLV_RGBGREY_112
    MOVEF_F 0.0 VLV_RED_113
    MOVEF_F 0.0 VLV_YELLOW_113
    MOVEF_F 0.0 VLV_GREEN_113
    MOVEF_F 0.0 VLV_BLUE_113
    MOVEF_F 0.0 VLV_VALUENEGRO_113
    MOVEF_F 0.0 VLV_VALUEBLANCO_113
    MOVEF_F 0.0 VLV_RWHITE_113
    MOVEF_F 0.0 VLV_GWHITE_113
    MOVEF_F 0.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_MAXA_113
    MOVEF_F 0.0 VLV_J_113
    CALL ARRAYCREATE_FLOAT VLV_RGB_113
    MOVEF_F 0.0 VLV_RRAW_113
    MOVEF_F 0.0 VLV_GRAW_113
    MOVEF_F 0.0 VLV_BRAW_113
    MOVEF_F 0.0 VLV_RNORM_113
    MOVEF_F 0.0 VLV_GNORM_113
    MOVEF_F 0.0 VLV_BNORM_113
    MOVEF_F 0.0 VLV_MAX_113
    MOVEF_F 0.0 VLV_MIN_113
    MOVEF_F 0.0 VLV_RGBGREY_113
    MOVEF_F 0.0 VLV_DETERMINANTE_133
    MOVEF_F 0.0 VLV_I_134
    MOVE32_32 0 RUNCOUNTER_F_ODOMETRY_0
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_ODOMETRY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ODOMETRY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 -1 RUNCOUNTER_F_ODOMETRY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_ODOMETRY_0
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    DATAF F.7
    DATAF F.8
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1694
    WRITE32 ENDSUB_F_ODOMETRY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ODOMETRY_0
  dispatch1694:
    JR_NEQ32 SUBPROGRAM 1 dispatch1695
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1695:
    JR_NEQ32 SUBPROGRAM 2 dispatch1696
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1696:
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_VELOCIDAD_2
    MOVEF_F 0.0 VLV_DISTANCIA_2
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_READ_131
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_LADO_82
    MOVEF_F 0.0 VLV_SENS_82
    MOVEF_F 0.0 VLV_VELOCIDAD_6
    MOVEF_F 0.0 VLV_SENS_6
    MOVEF_F 0.0 VLV_VELOCIDAD_4
    MOVEF_F 0.0 VLV_SENS_4
    MOVEF_F 0.0 VLV_VELOCIDAD_81
    MOVEF_F 0.0 VLV_KP_81
    MOVEF_F 0.0 VLV_KI_81
    MOVEF_F 0.0 VLV_KD_81
    MOVEF_F 0.0 VLV_LADO_81
    MOVEF_F 0.0 VLV_SENS_81
    MOVEF_F 0.0 VLV_V_96
    MOVEF_F 0.0 VLV_V0_45
    MOVEF_F 0.0 VLV_VMAX_45
    MOVEF_F 0.0 VLV_DISTANCIA_45
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_134
    MOVEF_F 0.0 VLV_K_134
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_134
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_132
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_M_133
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_133
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VGV_CASO
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELI_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_VELD_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAI_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_OMEGAD_K1_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_V_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_DH_T_123
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_S_INV_123
    MOVEF_F 0.0 VLV_READ_131
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 1.0 VGV_SENTIDO_D
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0001 VGV_KI
    MOVEF_F 1.0 VGV_KD
    MOVEF_F 102.0 VGV_DW
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.47222222222222 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB14:
    DATA32 tmp15
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 1  RUNCOUNTER_F_ODOMETRY_0 tmp15
    JR_NEQ32 0 tmp15 alreadylaunched15
    OBJECT_START TF_ODOMETRY_0
  alreadylaunched15:
    DATA32 tmp16
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp16
    JR_NEQ32 0 tmp16 alreadylaunched16
    OBJECT_START TF_DISPLAY_0
  alreadylaunched16:
    DATA32 tmp17
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp17
    JR_NEQ32 0 tmp17 alreadylaunched17
    OBJECT_START TF_STOP_0
  alreadylaunched17:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB18 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB18:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer19
	DATA8 no19
	DATA8 mode819
	
	MOVEF_8 1.0 no19
	SUB8 no19 1 no19
	DIV8 no19 4 layer19
	MATH MOD8 no19 4 no19

	MOVEF_8 0.0 mode819
	
	INPUT_DEVICE READY_RAW layer19 no19 0 mode819 0
    DATA8 layer20
	DATA8 no20
	DATA8 mode820
	
	MOVEF_8 2.0 no20
	SUB8 no20 1 no20
	DIV8 no20 4 layer20
	MATH MOD8 no20 4 no20

	MOVEF_8 4.0 mode820
	
	INPUT_DEVICE READY_RAW layer20 no20 0 mode820 0
    DATA8 layer21
	DATA8 no21
	DATA8 mode821
	
	MOVEF_8 3.0 no21
	SUB8 no21 1 no21
	DIV8 no21 4 layer21
	MATH MOD8 no21 4 no21

	MOVEF_8 4.0 mode821
	
	INPUT_DEVICE READY_RAW layer21 no21 0 mode821 0
    DATA8 layer22
	DATA8 no22
	DATA8 mode822
	
	MOVEF_8 4.0 no22
	SUB8 no22 1 no22
	DIV8 no22 4 layer22
	MATH MOD8 no22 4 no22

	MOVEF_8 0.0 mode822
	
	INPUT_DEVICE READY_RAW layer22 no22 0 mode822 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while24:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 850.0 endwhile24
  whilebody24:
    MOVEF_8 30.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 30.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 850.0 whilebody24
  endwhile24:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -360.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB32:
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds34
	MOVEF_32 100.0 milliseconds34
	DATA32 timer34
	TIMER_WAIT milliseconds34 timer34
	TIMER_READY timer34
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_ODOMETRY_0:
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_L
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_XT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_YT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_THETAT
    MOVEF_F 0.0 VGV_I
  while40:
  whilebody40:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.2
    MULF F.2 -1.0 F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_L
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_R
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_L
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_L
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf53
    DATA8 flag53
    DIVF F.0 2.0 tmpf53
    CP_EQF 0.0 2.0 flag53
    SELECTF flag53 0.0 tmpf53 VGV_D_L

    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_R
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_R
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf59
    DATA8 flag59
    DIVF F.0 2.0 tmpf59
    CP_EQF 0.0 2.0 flag59
    SELECTF flag59 0.0 tmpf59 VGV_D_R

    ADDF VGV_D_L VGV_D_R F.0
    DATAF tmpf61
    DATA8 flag61
    DIVF F.0 2.0 tmpf61
    CP_EQF 0.0 2.0 flag61
    SELECTF flag61 0.0 tmpf61 VGV_D

    SUBF VGV_D_R VGV_D_L F.0
    MULF 2.0 VGV_DW F.1
    DATAF tmpf64
    DATA8 flag64
    DIVF F.0 F.1 tmpf64
    CP_EQF 0.0 F.1 flag64
    SELECTF flag64 0.0 tmpf64 VGV_DELTA_THETA

    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf67
    DATA8 flag67
    DIVF VGV_DELTA_THETA 2.0 tmpf67
    CP_EQF 0.0 2.0 flag67
    SELECTF flag67 0.0 tmpf67 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf69
	MULF F.4 57.295779513082  tmpf69
	MATH SIN  tmpf69 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf76
    DATA8 flag76
    DIVF VGV_DELTA_THETA 2.0 tmpf76
    CP_EQF 0.0 2.0 flag76
    SELECTF flag76 0.0 tmpf76 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf78
	MULF F.4 57.295779513082 tmpf78
	MATH COS tmpf78 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_THETAT
    ADDF F.2 VGV_DELTA_THETA F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_THETAT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_XTIME VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_YTIME VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_THETATIME VGV_THETAT
    ADDF VGV_I 1.0 VGV_I
    DATA32 milliseconds94
	MOVEF_32 10.0 milliseconds94
	DATA32 timer94
	TIMER_WAIT milliseconds94 timer94
	TIMER_READY timer94
    JR whilebody40
  endwhile40:
RETSUB_F_ODOMETRY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ODOMETRY_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while95:
  whilebody95:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf101
    DATA8 flag101
    DIVF F.1 100.0 tmpf101
    CP_EQF 0.0 100.0 flag101
    SELECTF flag101 0.0 tmpf101 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'xt: ' S.1 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf108
    DATA8 flag108
    DIVF F.1 100.0 tmpf108
    CP_EQF 0.0 100.0 flag108
    SELECTF flag108 0.0 tmpf108 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'yt: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.1 VGV_THETAT
    MULF F.1 57.295779513082 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'thetat: ' S.1 S.0
    CALL LCD.WRITE 5.0 25.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf132
    DATA8 flag132
    DIVF F.2 0.05 tmpf132
    CP_EQF 0.0 0.05 flag132
    SELECTF flag132 0.0 tmpf132 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf140
    DATA8 flag140
    DIVF F.1 0.05 tmpf140
    CP_EQF 0.0 0.05 flag140
    SELECTF flag140 0.0 tmpf140 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    STRINGS VALUE_FORMATTED VGV_D_T '%g' 99 S.1
    CALL TEXT.APPEND 'Delta T:  ' S.1 S.0
    CALL LCD.WRITE 5.0 105.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds157
	MOVEF_32 50.0 milliseconds157
	DATA32 timer157
	TIMER_WAIT milliseconds157 timer157
	TIMER_READY timer157
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody95
  endwhile95:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB160:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 35.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB162:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 81.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB165:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -100.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB166:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_2
    MOVEF_F 10.0 VLV_DISTANCIA_2
    WRITE32 ENDSUB_F_ENCODERRECTOMMF_2:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMMF_2
CALLSUB168:
    MOVEF_F 5.0 VLV_REPS_110
    WRITE32 ENDSUB_F_RGBDETECT1_2:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RGBDETECT1_2
CALLSUB169:
    MOVEF_F VLV_COLOR_110 VGV_CASO
    MOVEF_F VGV_CASO VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB170:
    DATA8 layer171
	DATA8 no171
	DATA8 mode8171
	
	MOVEF_8 1.0 no171
	SUB8 no171 1 no171
	DIV8 no171 4 layer171
	MATH MOD8 no171 4 no171

	MOVEF_8 0.0 mode8171
	
	INPUT_DEVICE READY_RAW layer171 no171 0 mode8171 0
    JR_NEQF VGV_CASO 3.0 else172_1
    WRITE32 ENDSUB_F_CASO_VERDE_0:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASO_VERDE_0
CALLSUB173:
    JR endif172
  else172_1:
    WRITE32 ENDSUB_F_CASO_ROJO_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CASO_ROJO_0
CALLSUB174:
  else172_2:
  endif172:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_CASO_VERDE_0:
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 170.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB177:
    DATA32 milliseconds178
	MOVEF_32 500.0 milliseconds178
	DATA32 timer178
	TIMER_WAIT milliseconds178 timer178
	TIMER_READY timer178
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB180:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.425 VLV_VELOCIDAD2_15
    MOVEF_F 34.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB183:
    MULF VGV_VELOCIDAD 0.375 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD2_15
    MOVEF_F 31.5 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB186:
    DATA32 milliseconds187
	MOVEF_32 500.0 milliseconds187
	DATA32 timer187
	TIMER_WAIT milliseconds187 timer187
	TIMER_READY timer187
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_3
    MOVEF_F 4.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB189:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB191:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -300.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB192:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB193:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 16.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB196:
    DATA32 milliseconds197
	MOVEF_32 1000.0 milliseconds197
	DATA32 timer197
	TIMER_WAIT milliseconds197 timer197
	TIMER_READY timer197
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB199:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -580.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB200:
    DATA32 milliseconds201
	MOVEF_32 1000.0 milliseconds201
	DATA32 timer201
	TIMER_WAIT milliseconds201 timer201
	TIMER_READY timer201
    MOVEF_F 10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB202:
    MOVEF_F -10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB203:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 24.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB205:
    MOVEF_F 40.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB206:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 100.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB209:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 2000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB211:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB213:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 500.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB215:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB217:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 93.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB220:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 31.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB222:
    DATA32 milliseconds223
	MOVEF_32 1000.0 milliseconds223
	DATA32 timer223
	TIMER_WAIT milliseconds223 timer223
	TIMER_READY timer223
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB224:
    MOVEF_F VLV_READ_131 VGV_BLOQUE
    CALL ARRAYSTORE_FLOAT 0.0 VGV_BLOQUE VGV_BOMBOCLAT
    JR_NEQF VGV_BLOQUE 0.0 else226_1
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    JR endif226
  else226_1:
    MOVEF_F 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_BLOQUE 3.0 else227_1
    ADDF VGV_VERDES 1.0 VGV_VERDES
    JR endif227
  else227_1:
    ADDF VGV_AZULES 1.0 VGV_AZULES
  else227_2:
  endif227:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB230:
  else226_2:
  endif226:
    MULF VGV_VELOCIDAD -0.2 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB232:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 92.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB235:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 9.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB237:
    MOVEF_F -20.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB238:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 14.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB240:
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB241:
    MOVEF_F VLV_READ_131 VGV_BLOQUE
    JR_NEQF VGV_BLOQUE 0.0 else242_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    JR endif242
  else242_1:
    CALL ARRAYSTORE_FLOAT 1.0 VGV_BLOQUE VGV_BOMBOCLAT
    ADDF VGV_NUMERO_BLOQUES 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else248_1
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB249:
    JR endif248
  else248_1:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB250:
  else248_2:
  endif248:
  else242_2:
  endif242:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 170.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB253:
    MULF VGV_VELOCIDAD 0.5 VLV_VELOCIDAD_1
    MOVEF_F 57.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB255:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_35
    MULF VGV_VELOCIDAD 0.2 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB258:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB260:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB262:
    MULF VGV_VELOCIDAD 0.2 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB264:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 10.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB266:
    JR_LTEQF VGV_NUMERO_BLOQUES 0.0 else267_1
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 86.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB270:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB272:
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else273_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else274_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB278:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB279:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB282:
    JR endif274
  else274_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB285:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB286:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB289:
  else274_2:
  endif274:
    JR endif273
  else273_1:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYGET_FLOAT 1.0 F.1 VGV_BOMBOCLAT
    JR_NEQF F.0 F.1 else290_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else293_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB297:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB298:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB301:
    JR endif293
  else293_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB304:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB305:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB308:
  else293_2:
  endif293:
    JR endif290
  else290_1:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else309_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB313:
    WRITE32 ENDSUB_F_SOLTAR_UNO_0:CALLSUB314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_UNO_0
CALLSUB314:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB317:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB320:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB321:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB324:
    JR endif309
  else309_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB327:
    WRITE32 ENDSUB_F_SOLTAR_UNO_0:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_UNO_0
CALLSUB328:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB331:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB334:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB335:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB338:
  else309_2:
  endif309:
  else290_2:
  endif290:
  else273_2:
  endif273:
    MOVEF_F 20.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB339:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB341:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB343:
    MULF VGV_VELOCIDAD 0.3 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB345:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 5.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB347:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 1.0 VLV_LADO_82
    MOVEF_F 1.0 VLV_SENS_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_6:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_6
CALLSUB349:
    JR endif267
  else267_1:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 1.0 VLV_LADO_82
    MOVEF_F 1.0 VLV_SENS_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_6:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_6
CALLSUB351:
  else267_2:
  endif267:
RETSUB_F_CASO_VERDE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASO_VERDE_0:
SUB_F_CASO_ROJO_0:
    MULF VGV_VELOCIDAD 0.14 VLV_V1_35
    MULF VGV_VELOCIDAD -0.14 VLV_V2_35
    MOVEF_F 168.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB354:
    DATA32 milliseconds355
	MOVEF_32 1000.0 milliseconds355
	DATA32 timer355
	TIMER_WAIT milliseconds355 timer355
	TIMER_READY timer355
    MULF VGV_VELOCIDAD -0.2 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB357:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.53 VLV_VELOCIDAD2_15
    MOVEF_F 36.5 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB360:
    DATA32 milliseconds361
	MOVEF_32 1000.0 milliseconds361
	DATA32 timer361
	TIMER_WAIT milliseconds361 timer361
	TIMER_READY timer361
    MULF VGV_VELOCIDAD 0.5 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD2_15
    MOVEF_F 34.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB364:
    DATA32 milliseconds365
	MOVEF_32 1000.0 milliseconds365
	DATA32 timer365
	TIMER_WAIT milliseconds365 timer365
	TIMER_READY timer365
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB367:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB369:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -300.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB370:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB371:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_35
    MULF VGV_VELOCIDAD 0.2 VLV_V2_35
    MOVEF_F 16.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB374:
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB376:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -580.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB377:
    DATA32 milliseconds378
	MOVEF_32 1000.0 milliseconds378
	DATA32 timer378
	TIMER_WAIT milliseconds378 timer378
	TIMER_READY timer378
    MOVEF_F 10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB379:
    MOVEF_F -10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB380:
    MOVEF_F 30.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB381:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 30.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB383:
    MOVEF_F 30.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB384:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 135.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB387:
    DATA32 milliseconds388
	MOVEF_32 1000.0 milliseconds388
	DATA32 timer388
	TIMER_WAIT milliseconds388 timer388
	TIMER_READY timer388
    MULF VGV_VELOCIDAD 0.6 VLV_VELOCIDAD_1
    MOVEF_F 30.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB390:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_6
    MOVEF_F 1.0 VLV_SENS_6
    WRITE32 ENDSUB_F_1BLANCORECTOMMF_2:CALLSUB392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMMF_2
CALLSUB392:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_4
    MOVEF_F 1.0 VLV_SENS_4
    WRITE32 ENDSUB_F_1NEGRORECTOMMF_2:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMMF_2
CALLSUB394:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB396:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 35.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB399:
    MULF VGV_VELOCIDAD 0.25 VLV_VELOCIDAD_75
    MULF VGV_KP 1.25 VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 10.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB402:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_81
    MOVEF_F VGV_KP VLV_KP_81
    MOVEF_F VGV_KI VLV_KI_81
    MOVEF_F VGV_KD VLV_KD_81
    MOVEF_F 4.0 VLV_LADO_81
    MOVEF_F 1.0 VLV_SENS_81
    WRITE32 ENDSUB_F_SL1SPIDCROSS_6:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_6
CALLSUB404:
    MULF VGV_VELOCIDAD 0.7 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 36.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB406:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD2_15
    MOVEF_F 23.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB409:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD2_15
    MOVEF_F 25.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB412:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 25.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB414:
    WRITE32 ENDSUB_F_COGER_ABAJO_BASURA_0:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_BASURA_0
CALLSUB415:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB416:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 10.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB419:
    DATA32 milliseconds420
	MOVEF_32 1000.0 milliseconds420
	DATA32 timer420
	TIMER_WAIT milliseconds420 timer420
	TIMER_READY timer420
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB422:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -580.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB423:
    DATA32 milliseconds424
	MOVEF_32 1000.0 milliseconds424
	DATA32 timer424
	TIMER_WAIT milliseconds424 timer424
	TIMER_READY timer424
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 50.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB426:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 50.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB428:
    MOVEF_F 30.0 VLV_V_96
    WRITE32 ENDSUB_F_BMOVEA0_1:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA0_1
CALLSUB429:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 146.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB432:
    MULF VGV_VELOCIDAD 0.2 VLV_V0_45
    MULF VGV_VELOCIDAD 0.8 VLV_VMAX_45
    MOVEF_F 200.0 VLV_DISTANCIA_45
    WRITE32 ENDSUB_F_SINACCELDECELMM_3:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SINACCELDECELMM_3
CALLSUB435:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB436:
    MOVEF_F 20.0 VLV_V_106
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB437:
RETSUB_F_CASO_ROJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CASO_ROJO_0:
SUB_F_STOP_0:
  while438:
  whilebody438:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else439_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    WRITE32 ENDSUB_F_BMOVEADSAFE_2:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEADSAFE_2
CALLSUB444:
    PROGRAM_STOP -1
  else439_1:
  endif439:
    JR whilebody438
  endwhile438:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf449
    DATA8 flag449
    DIVF F.1 F.2 tmpf449
    CP_EQF 0.0 F.2 flag449
    SELECTF flag449 0.0 tmpf449 F.0

    DATAF tmpf450
    DATA8 flag450
    DIVF F.0 VLV_DIAMETRO_1 tmpf450
    CP_EQF 0.0 VLV_DIAMETRO_1 flag450
    SELECTF flag450 0.0 tmpf450 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while456:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile456
  whilebody456:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 2.0 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody456
  endwhile456:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_ENCODERRECTOMMF_2:
    MULF VLV_VELOCIDAD_2 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_2
    MOVEF_F 5.6 VLV_DIAMETRO_2
    MULF VLV_DISTANCIA_2 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf475
    DATA8 flag475
    DIVF F.1 F.2 tmpf475
    CP_EQF 0.0 F.2 flag475
    SELECTF flag475 0.0 tmpf475 F.0

    DATAF tmpf476
    DATA8 flag476
    DIVF F.0 VLV_DIAMETRO_2 tmpf476
    CP_EQF 0.0 VLV_DIAMETRO_2 flag476
    SELECTF flag476 0.0 tmpf476 VLV_ENC_2

    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_2
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
  while482:
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_GTEQF F.0 VLV_ENC_2 endwhile482
  whilebody482:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_2 VLV_ENCODER_B_2
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_2 VLV_ENCODER_C_2
    SUBF VLV_ENCODER_B_2 VLV_ENCODER_C_2 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_2
    MULF VLV_ERROR_2 2.0 VLV_PROPORCIAL_2
    SUBF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_2 VLV_PROPORCIAL_2 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_2 F.0
    JR_LTF F.0 VLV_ENC_2 whilebody482
  endwhile482:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMMF_2:
SUB_F_1NEGRORECTOMM_2:
    MULF VLV_VELOCIDAD_3 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_3
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_3
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_3
  while502:
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_LTEQF F.0 10.0 endwhile502
  whilebody502:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_3 VLV_ENCODER_B_3
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_3 VLV_ENCODER_C_3
    SUBF VLV_ENCODER_B_3 VLV_ENCODER_C_3 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_3
    MULF VLV_ERROR_3 2.0 VLV_PROPORCIAL_3
    SUBF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_GTF F.0 10.0 whilebody502
  endwhile502:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGRORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMM_2:
SUB_F_1NEGRORECTOMMF_2:
    MULF VLV_VELOCIDAD_4 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_4
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_4
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_4
  while522:
    CALL SENSOR.READPERCENT VLV_SENS_4 F.0
    JR_LTEQF F.0 10.0 endwhile522
  whilebody522:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_4 VLV_ENCODER_B_4
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_4 VLV_ENCODER_C_4
    SUBF VLV_ENCODER_B_4 VLV_ENCODER_C_4 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_4
    MULF VLV_ERROR_4 2.0 VLV_PROPORCIAL_4
    SUBF VLV_VELOCIDAD_4 VLV_PROPORCIAL_4 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_4 VLV_PROPORCIAL_4 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_4 F.0
    JR_GTF F.0 10.0 whilebody522
  endwhile522:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_F_1NEGRORECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMMF_2:
SUB_F_1BLANCORECTOMM_2:
    MULF VLV_VELOCIDAD_5 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_5
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_5
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_5
  while542:
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_GTEQF F.0 40.0 endwhile542
  whilebody542:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_5 VLV_ENCODER_B_5
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_5 VLV_ENCODER_C_5
    SUBF VLV_ENCODER_B_5 VLV_ENCODER_C_5 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_5
    MULF VLV_ERROR_5 2.0 VLV_PROPORCIAL_5
    SUBF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_LTF F.0 40.0 whilebody542
  endwhile542:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1BLANCORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMM_2:
SUB_F_1BLANCORECTOMMF_2:
    MULF VLV_VELOCIDAD_6 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_6
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_6
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_6
  while562:
    CALL SENSOR.READPERCENT VLV_SENS_6 F.0
    JR_GTEQF F.0 40.0 endwhile562
  whilebody562:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_6 VLV_ENCODER_B_6
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_6 VLV_ENCODER_C_6
    SUBF VLV_ENCODER_B_6 VLV_ENCODER_C_6 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_6
    MULF VLV_ERROR_6 2.0 VLV_PROPORCIAL_6
    SUBF VLV_VELOCIDAD_6 VLV_PROPORCIAL_6 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_6 VLV_PROPORCIAL_6 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_6 F.0
    JR_LTF F.0 40.0 whilebody562
  endwhile562:
    CALL MOTOR.STOP 'BC' 'False'
RETSUB_F_1BLANCORECTOMMF_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMMF_2:
SUB_F_TIEMPORECTOMM_2:
    MULF VLV_VELOCIDAD_13 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_13
    CALL MOTOR.GETCOUNT 'B' F.0
    MULF F.0 -1.0 VLV_START_B_13
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_13
    TIMER_READ timeMC3
  while583:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_13 endwhile583
  whilebody583:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_13 VLV_ENCODER_B_13
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_13 VLV_ENCODER_C_13
    SUBF VLV_ENCODER_B_13 VLV_ENCODER_C_13 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_13
    MULF VLV_ERROR_13 2.0 VLV_PROPORCIAL_13
    SUBF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_13 whilebody583
  endwhile583:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPORECTOMM_2:
SUB_F_ENCODERGIROMM_3:
    MULF VLV_VELOCIDAD1_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_15
    MULF VLV_VELOCIDAD2_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_15
    MOVEF_F 5.6 VLV_DIAMETRO_15
    MOVEF_F 3.1415926535897932384 F.2
    MULF VLV_DIAMETRO_15 F.2 F.1
    DATAF tmpf603
    DATA8 flag603
    DIVF VLV_ENCODER_15 F.1 tmpf603
    CP_EQF 0.0 F.1 flag603
    SELECTF flag603 0.0 tmpf603 F.0

    MULF F.0 360.0 VLV_DISTANCIA_15
    MATH NEGATE VLV_VELOCIDAD1_15 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_15 VLV_DISTANCIA_15 'True'

	DATA8 layer606
	DATA8 nos606
	DATA8 busy606
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer606 nos606
	JR_EQ8 0 nos606 motornotbusy606
  motorwaiting606:
	OUTPUT_TEST layer606 nos606 busy606
	JR_EQ8 busy606 0 motornotbusy606
	SLEEP
	JR motorwaiting606
  motornotbusy606:
RETSUB_F_ENCODERGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERGIROMM_3:
SUB_F_GPERFDDEFINITIVOMM_1:
    MOVEF_F 100.0 VLV_AVANCE_33
    MOVEF_F 200.0 VLV_GINICIO_33
    MOVEF_F 70.0 VLV_AJUSTE_33
    DATA8 flag607
	CP_LTF 40.0 VLV_VEL_33 flag607
	SELECTF flag607 40.0 VLV_VEL_33 VLV_VEL_33
    MULF VLV_VEL_33 0.75 VLV_VEL_33
    MULF VLV_VEL_33 VGV_SENTIDO_MOTORES VLV_VEL_33
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VEL_33 VLV_AVANCE_33 'True'

	DATA8 layer611
	DATA8 nos611
	DATA8 busy611
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer611 nos611
	JR_EQ8 0 nos611 motornotbusy611
  motorwaiting611:
	OUTPUT_TEST layer611 nos611 busy611
	JR_EQ8 busy611 0 motornotbusy611
	SLEEP
	JR motorwaiting611
  motornotbusy611:
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_GINICIO_33 0.0 'False' 

	DATA8 layer613
	DATA8 nos613
	DATA8 busy613
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer613 nos613
	JR_EQ8 0 nos613 motornotbusy613
  motorwaiting613:
	OUTPUT_TEST layer613 nos613 busy613
	JR_EQ8 busy613 0 motornotbusy613
	SLEEP
	JR motorwaiting613
  motornotbusy613:
  while614:
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 10.0 endwhile614
  whilebody614:
    MATH NEGATE VLV_VEL_33 F.0
    MATH NEGATE VLV_VEL_33 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 10.0 whilebody614
  endwhile614:
    CALL MOTOR.STOP 'BC' 'False'
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_AJUSTE_33 0.0 'True' 

	DATA8 layer622
	DATA8 nos622
	DATA8 busy622
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer622 nos622
	JR_EQ8 0 nos622 motornotbusy622
  motorwaiting622:
	OUTPUT_TEST layer622 nos622 busy622
	JR_EQ8 busy622 0 motornotbusy622
	SLEEP
	JR motorwaiting622
  motornotbusy622:
RETSUB_F_GPERFDDEFINITIVOMM_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GPERFDDEFINITIVOMM_1:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_35
    STRINGS DUPLICATE 'C' VLV_D_35
    DATAF tmpf623
    DATA8 flag623
    DIVF VLV_V1_35 VLV_V2_35 tmpf623
    CP_EQF 0.0 VLV_V2_35 flag623
    SELECTF flag623 0.0 tmpf623 F.0

    DATAF tmpf624
    DATA8 flag624
    DIVF VLV_V1_35 VLV_V2_35 tmpf624
    CP_EQF 0.0 VLV_V2_35 flag624
    SELECTF flag624 0.0 tmpf624 F.2

    MATH ABS F.2 F.1
    DATAF tmpf626
    DATA8 flag626
    DIVF F.0 F.1 tmpf626
    CP_EQF 0.0 F.1 flag626
    SELECTF flag626 0.0 tmpf626 VLV_SIGNO_35

    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag629
	CP_LTF F.0 F.1 flag629
	SELECTF flag629 F.0 F.1 VLV_VMIN_35
    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag632
	CP_GTF F.0 F.1 flag632
	SELECTF flag632 F.0 F.1 VLV_VMAX_35
    MULF VLV_ANGLE_35 VGV_G1 F.0
    MULF VLV_SIGNO_35 VLV_VMIN_35 F.4
    DATAF tmpf635
    DATA8 flag635
    DIVF F.4 VLV_VMAX_35 tmpf635
    CP_EQF 0.0 VLV_VMAX_35 flag635
    SELECTF flag635 0.0 tmpf635 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf637
    DATA8 flag637
    DIVF -2.0 F.2 tmpf637
    CP_EQF 0.0 F.2 flag637
    SELECTF flag637 0.0 tmpf637 F.1

    MULF F.0 F.1 VLV_ENCODR_35
    CALL TEXT.APPEND VLV_I_35 VLV_D_35 S.0
    MATH NEGATE VLV_V1_35 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_35 VLV_ENCODR_35 'True'

	DATA8 layer641
	DATA8 nos641
	DATA8 busy641
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer641 nos641
	JR_EQ8 0 nos641 motornotbusy641
  motorwaiting641:
	OUTPUT_TEST layer641 nos641 busy641
	JR_EQ8 busy641 0 motornotbusy641
	SLEEP
	JR motorwaiting641
  motornotbusy641:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_SPIN90_1:
    STRINGS DUPLICATE 'B' VLV_I_39
    STRINGS DUPLICATE 'C' VLV_D_39
    MULF 84.0 VGV_G1 VLV_ENCODR_39
    CALL TEXT.APPEND VLV_I_39 VLV_D_39 S.0
    MATH NEGATE VLV_VELOCIDAD_39 F.0
    CALL MOTOR.SCHEDULE S.0 F.0 0.0 VLV_ENCODR_39 0.0 'True' 

	DATA8 layer645
	DATA8 nos645
	DATA8 busy645
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer645 nos645
	JR_EQ8 0 nos645 motornotbusy645
  motorwaiting645:
	OUTPUT_TEST layer645 nos645 busy645
	JR_EQ8 busy645 0 motornotbusy645
	SLEEP
	JR motorwaiting645
  motornotbusy645:
    MOVEF_F 0.0 VLV_ANGLE_39
RETSUB_F_SPIN90_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN90_1:
SUB_F_SINACCELDECELMM_3:
    MULF VLV_DISTANCIA_45 360.0 F.1
    DATAF tmpf647
    DATA8 flag647
    DIVF F.1 5.6 tmpf647
    CP_EQF 0.0 5.6 flag647
    SELECTF flag647 0.0 tmpf647 F.0

    MOVEF_F 3.1415926535897932384 F.1
    DATAF tmpf649
    DATA8 flag649
    DIVF F.0 F.1 tmpf649
    CP_EQF 0.0 F.1 flag649
    SELECTF flag649 0.0 tmpf649 VLV_GRADOS_45

    CALL MOTOR.GETCOUNT 'B' VLV_START_B_45
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_45
    MOVEF_F 0.0 VLV_ENCODER_B_45
    MOVEF_F 0.0 VLV_ENCODER_C_45
    DATA8 flag652
	CP_GTF 8.0 VLV_V0_45 flag652
	SELECTF flag652 8.0 VLV_V0_45 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_V0_45
    DATA8 flag654
	CP_LTF 90.0 VLV_VMAX_45 flag654
	SELECTF flag654 90.0 VLV_VMAX_45 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_VMAX_45
    MOVEF_F 0.0 VLV_VEL_45
    MOVEF_F 3.0 VLV_KP_45
    MOVEF_F 0.001 VLV_KI_45
    MOVEF_F 5.0 VLV_KD_45
    MOVEF_F 0.0 VLV_ERROR_45
    MOVEF_F 0.0 VLV_OLDERROR_45
    MOVEF_F 0.0 VLV_ERRSUM_45
  while656:
    MATH ABS VLV_ENCODER_C_45 F.0
    JR_GTEQF F.0 VLV_GRADOS_45 endwhile656
  whilebody656:
    CALL MOTOR.GETCOUNT 'B' F.0
    SUBF F.0 VLV_START_B_45 VLV_ENCODER_B_45
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_45 VLV_ENCODER_C_45
    SUBF VLV_VMAX_45 VLV_V0_45 F.1
    MOVEF_F 3.1415926535897932384 F.5
    MULF F.5 VLV_ENCODER_C_45 F.4
    DATAF tmpf665
    DATA8 flag665
    DIVF F.4 VLV_GRADOS_45 tmpf665
    CP_EQF 0.0 VLV_GRADOS_45 flag665
    SELECTF flag665 0.0 tmpf665 F.3

    DATAF tmpf666
	MULF F.3 57.295779513082  tmpf666
	MATH SIN  tmpf666 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_45 VLV_VEL_45
    MULF -1.0 VLV_ENCODER_B_45 F.1
    SUBF F.1 VLV_ENCODER_C_45 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_45
    ADDF VLV_ERRSUM_45 VLV_ERROR_45 VLV_ERRSUM_45
    MULF VLV_ERROR_45 VLV_KP_45 F.1
    SUBF VLV_ERROR_45 VLV_OLDERROR_45 F.3
    MULF F.3 VLV_KD_45 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_45 VLV_KI_45 F.1
    ADDF F.0 F.1 VLV_CORRECCION_45
    MOVEF_F VLV_ERROR_45 VLV_OLDERROR_45
    SUBF VLV_VEL_45 VLV_CORRECCION_45 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VEL_45 VLV_CORRECCION_45 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_45 F.0
    JR_LTF F.0 VLV_GRADOS_45 whilebody656
  endwhile656:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    CALL LCD.CLEAR
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    MULF F.3 5.6 F.2
    MOVEF_F 3.1415926535897932384 F.3
    MULF F.2 F.3 F.1
    DATAF tmpf690
    DATA8 flag690
    DIVF F.1 360.0 tmpf690
    CP_EQF 0.0 360.0 flag690
    SELECTF flag690 0.0 tmpf690 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Distancia cm: ' S.1 S.0
    CALL LCD.WRITE 5.0 10.0 S.0
RETSUB_F_SINACCELDECELMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SINACCELDECELMM_3:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_56
    STRINGS DUPLICATE 'C' VLV_D_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf696
    DATA8 flag696
    DIVF VLV_ACCELENCODER_56 F.1 tmpf696
    CP_EQF 0.0 F.1 flag696
    SELECTF flag696 0.0 tmpf696 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    CALL MOTOR.RESETCOUNT 'C'
  while699:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or700
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile699
  or700:
  whilebody699:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf704
    DATA8 flag704
    DIVF F.3 VLV_ACCELENCODER_56 tmpf704
    CP_EQF 0.0 VLV_ACCELENCODER_56 flag704
    SELECTF flag704 0.0 tmpf704 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_56 VLV_V0_56 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_56 VLV_VEL_56
    DATA8 flag709
	CP_LTF VLV_VEL_56 VLV_VMAX_56 flag709
	SELECTF flag709 VLV_VEL_56 VLV_VMAX_56 VLV_VEL_56
    MATH ABS VLV_VEL_56 F.0
    DATAF tmpf711
    DATA8 flag711
    DIVF VLV_VEL_56 F.0 tmpf711
    CP_EQF 0.0 F.0 flag711
    SELECTF flag711 0.0 tmpf711 VLV_SENTIDO_56

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_56 VLV_ERROR_56
    ADDF VLV_ERRSUM_56 VLV_ERROR_56 VLV_ERRSUM_56
    MULF VLV_ERROR_56 VLV_KP_56 F.1
    SUBF VLV_ERROR_56 VLV_OLDERROR_56 F.3
    MULF F.3 VLV_KD_56 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_56 VLV_KI_56 F.1
    ADDF F.0 F.1 VLV_U_56
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    ADDF VLV_VEL_56 VLV_U_56 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_56 VLV_U_56 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_56 VLV_OLDERROR_56
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody699
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody699
  endwhile699:
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_72 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_72
    STRINGS DUPLICATE 'B' VLV_I_72
    STRINGS DUPLICATE 'C' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MATH ABS VLV_VELOCIDAD_72 F.0
    DATAF tmpf736
    DATA8 flag736
    DIVF VLV_VELOCIDAD_72 F.0 tmpf736
    CP_EQF 0.0 F.0 flag736
    SELECTF flag736 0.0 tmpf736 VLV_SENTIDO_72

  while737:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or738
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile737
  or738:
  whilebody737:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_72 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_72
    ADDF VLV_ERRSUM_72 VLV_ERROR_72 VLV_ERRSUM_72
    MULF VLV_ERROR_72 VLV_KP_72 F.1
    SUBF VLV_ERROR_72 VLV_OLDERROR_72 F.3
    MULF F.3 VLV_KD_72 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_72 VLV_KI_72 F.1
    ADDF F.0 F.1 VLV_U_72
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    ADDF VLV_VELOCIDAD_72 VLV_U_72 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_72 VLV_U_72 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_72 VLV_OLDERROR_72
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody737
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody737
  endwhile737:
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_75 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_75
    STRINGS DUPLICATE 'B' VLV_I_75
    STRINGS DUPLICATE 'C' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MATH ABS VLV_VELOCIDAD_75 F.0
    DATAF tmpf764
    DATA8 flag764
    DIVF VLV_VELOCIDAD_75 F.0 tmpf764
    CP_EQF 0.0 F.0 flag764
    SELECTF flag764 0.0 tmpf764 VLV_SENTIDO_75

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf767
    DATA8 flag767
    DIVF VLV_ENCODER_75 F.1 tmpf767
    CP_EQF 0.0 F.1 flag767
    SELECTF flag767 0.0 tmpf767 F.0

    MULF F.0 360.0 VLV_ENCODER_75
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
  while770:
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_GTEQF F.0 VLV_ENCODER_75 endwhile770
  whilebody770:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_75 VLV_ENCODER_C_75
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_75 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_75
    ADDF VLV_ERRSUM_75 VLV_ERROR_75 VLV_ERRSUM_75
    MULF VLV_ERROR_75 VLV_KP_75 F.1
    SUBF VLV_ERROR_75 VLV_OLDERROR_75 F.3
    MULF F.3 VLV_KD_75 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_75 VLV_KI_75 F.1
    ADDF F.0 F.1 VLV_U_75
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    ADDF VLV_VELOCIDAD_75 VLV_U_75 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_75 VLV_U_75 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_75 VLV_OLDERROR_75
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_LTF F.0 VLV_ENCODER_75 whilebody770
  endwhile770:
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_76 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_76
    STRINGS DUPLICATE 'B' VLV_I_76
    STRINGS DUPLICATE 'C' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MATH ABS VLV_VELOCIDAD_76 F.0
    DATAF tmpf796
    DATA8 flag796
    DIVF VLV_VELOCIDAD_76 F.0 tmpf796
    CP_EQF 0.0 F.0 flag796
    SELECTF flag796 0.0 tmpf796 VLV_SENTIDO_76

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf799
    DATA8 flag799
    DIVF VLV_ENCODER_76 F.1 tmpf799
    CP_EQF 0.0 F.1 flag799
    SELECTF flag799 0.0 tmpf799 F.0

    MULF F.0 360.0 VLV_ENCODER_76
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
  while802:
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_GTEQF F.0 VLV_ENCODER_76 endwhile802
  whilebody802:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_76 VLV_ENCODER_C_76
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_76 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_76
    ADDF VLV_ERRSUM_76 VLV_ERROR_76 VLV_ERRSUM_76
    MULF VLV_ERROR_76 VLV_KP_76 F.1
    SUBF VLV_ERROR_76 VLV_OLDERROR_76 F.3
    MULF F.3 VLV_KD_76 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_76 VLV_KI_76 F.1
    ADDF F.0 F.1 VLV_U_76
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    ADDF VLV_VELOCIDAD_76 VLV_U_76 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_76 VLV_U_76 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_76 VLV_OLDERROR_76
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_LTF F.0 VLV_ENCODER_76 whilebody802
  endwhile802:
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL1SPIDCROSS_6:
    MULF VLV_VELOCIDAD_81 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_81
    STRINGS DUPLICATE 'B' VLV_I_81
    STRINGS DUPLICATE 'C' VLV_D_81
    MOVEF_F 0.0 VLV_ERROR_81
    MOVEF_F 0.0 VLV_OLDERROR_81
    MOVEF_F 0.0 VLV_ERRSUM_81
    MOVEF_F 0.0 VLV_U_81
    MATH ABS VLV_VELOCIDAD_81 F.0
    DATAF tmpf828
    DATA8 flag828
    DIVF VLV_VELOCIDAD_81 F.0 tmpf828
    CP_EQF 0.0 F.0 flag828
    SELECTF flag828 0.0 tmpf828 VLV_SENTIDO_81

    JR_NEQF VLV_SENS_81 1.0 else829_1
    MOVEF_F 4.0 VLV_READER_81
    JR endif829
  else829_1:
    MOVEF_F 1.0 VLV_READER_81
  else829_2:
  endif829:
  while830:
    CALL SENSOR.READPERCENT VLV_READER_81 F.0
    JR_LTEQF F.0 15.0 endwhile830
  whilebody830:
    CALL SENSOR.READPERCENT VLV_SENS_81 F.3
    SUBF F.3 50.0 F.2
    MULF F.2 VLV_SENTIDO_81 F.1
    MULF F.1 VLV_LADO_81 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_81
    ADDF VLV_ERRSUM_81 VLV_ERROR_81 VLV_ERRSUM_81
    MULF VLV_ERROR_81 VLV_KP_81 F.1
    SUBF VLV_ERROR_81 VLV_OLDERROR_81 F.3
    MULF F.3 VLV_KD_81 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_81 VLV_KI_81 F.1
    ADDF F.0 F.1 VLV_U_81
    CALL TEXT.APPEND VLV_I_81 VLV_D_81 S.0
    ADDF VLV_VELOCIDAD_81 VLV_U_81 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_81 VLV_U_81 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_81 VLV_OLDERROR_81
    CALL SENSOR.READPERCENT VLV_READER_81 F.0
    JR_GTF F.0 15.0 whilebody830
  endwhile830:
    CALL TEXT.APPEND VLV_I_81 VLV_D_81 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL1SPIDCROSS_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSS_6:
SUB_F_SL1SPIDCROSSF_6:
    MULF VLV_VELOCIDAD_82 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_82
    STRINGS DUPLICATE 'B' VLV_I_82
    STRINGS DUPLICATE 'C' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MATH ABS VLV_VELOCIDAD_82 F.0
    DATAF tmpf854
    DATA8 flag854
    DIVF VLV_VELOCIDAD_82 F.0 tmpf854
    CP_EQF 0.0 F.0 flag854
    SELECTF flag854 0.0 tmpf854 VLV_SENTIDO_82

    JR_NEQF VLV_SENS_82 1.0 else855_1
    MOVEF_F 4.0 VLV_READER_82
    JR endif855
  else855_1:
    MOVEF_F 1.0 VLV_READER_82
  else855_2:
  endif855:
  while856:
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_LTEQF F.0 20.0 endwhile856
  whilebody856:
    CALL SENSOR.READPERCENT VLV_SENS_82 F.3
    SUBF F.3 50.0 F.2
    MULF F.2 VLV_SENTIDO_82 F.1
    MULF F.1 VLV_LADO_82 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_82
    ADDF VLV_ERRSUM_82 VLV_ERROR_82 VLV_ERRSUM_82
    MULF VLV_ERROR_82 VLV_KP_82 F.1
    SUBF VLV_ERROR_82 VLV_OLDERROR_82 F.3
    MULF F.3 VLV_KD_82 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_82 VLV_KI_82 F.1
    ADDF F.0 F.1 VLV_U_82
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    ADDF VLV_VELOCIDAD_82 VLV_U_82 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_82 VLV_U_82 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_82 VLV_OLDERROR_82
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_GTF F.0 20.0 whilebody856
  endwhile856:
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL1SPIDCROSSF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSSF_6:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_88 VGV_SENTIDO_MOTORES VLV_VMAX_88
    STRINGS DUPLICATE 'B' VLV_I_88
    STRINGS DUPLICATE 'C' VLV_D_88
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_88
    MOVEF_F 150.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    CALL MOTOR.RESETCOUNT 'C'
  while881:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or882
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile881
  or882:
  whilebody881:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf886
    DATA8 flag886
    DIVF F.2 VLV_ACCELENCODER_88 tmpf886
    CP_EQF 0.0 VLV_ACCELENCODER_88 flag886
    SELECTF flag886 0.0 tmpf886 F.1

    ADDF VLV_VMAX_88 VLV_V0_88 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_88 VLV_VEL_88
    DATA8 flag890
	CP_LTF VLV_VEL_88 VLV_VMAX_88 flag890
	SELECTF flag890 VLV_VEL_88 VLV_VMAX_88 VLV_VEL_88
    MATH ABS VLV_VEL_88 F.0
    DATAF tmpf892
    DATA8 flag892
    DIVF VLV_VEL_88 F.0 tmpf892
    CP_EQF 0.0 F.0 flag892
    SELECTF flag892 0.0 tmpf892 VLV_SENTIDO_88

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_88 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_88
    MULF VLV_ERRSUM_88 0.9 F.0
    ADDF F.0 VLV_ERROR_88 VLV_ERRSUM_88
    MULF VLV_ERROR_88 VLV_KP_88 F.1
    SUBF VLV_ERROR_88 VLV_OLDERROR_88 F.3
    MULF F.3 VLV_KD_88 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_88 VLV_KI_88 F.1
    ADDF F.0 F.1 VLV_U_88
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    ADDF VLV_VEL_88 VLV_U_88 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_88 VLV_U_88 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_88 VLV_OLDERROR_88
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody881
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody881
  endwhile881:
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_95 F.0 VLV_ENCDIFF_95
    MATH ABS VLV_ENCDIFF_95 F.0
    DATAF tmpf918
    DATA8 flag918
    DIVF VLV_ENCDIFF_95 F.0 tmpf918
    CP_EQF 0.0 F.0 flag918
    SELECTF flag918 0.0 tmpf918 VLV_SIGNO_95

    JR_EQF VLV_ENCDIFF_95 0.0 else919_1
  while920:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile920
  whilebody920:
    MULF VLV_SIGNO_95 VLV_V_95 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody920
  endwhile920:
    CALL MOTOR.STOP 'A' 'True'
  else919_1:
  endif919:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEA0_1:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF -5.0 F.0 VLV_ENCDIFF_96
    MATH ABS VLV_ENCDIFF_96 F.0
    DATAF tmpf933
    DATA8 flag933
    DIVF VLV_ENCDIFF_96 F.0 tmpf933
    CP_EQF 0.0 F.0 flag933
    SELECTF flag933 0.0 tmpf933 VLV_SIGNO_96

    JR_EQF VLV_ENCDIFF_96 0.0 else934_1
    MULF VLV_SIGNO_96 VLV_V_96 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
  while937:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 5.0 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile937
  whilebody937:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 5.0 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody937
  endwhile937:
    CALL MOTOR.STOP 'A' 'True'
  else934_1:
  endif934:
RETSUB_F_BMOVEA0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA0_1:
SUB_F_BMOVEAD0_1:
    MOVEF_F -10.0 VLV_AENC_101
  while945:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 or946
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENC_101 endwhile945
  or946:
  whilebody945:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_GTEQF F.0 VLV_AENC_101 else949_1
    DATAF tmpf951
    DATA8 flag951
    DIVF VLV_V_101 2.0 tmpf951
    CP_EQF 0.0 2.0 flag951
    SELECTF flag951 0.0 tmpf951 F.2

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf954
    DATA8 flag954
    DIVF F.4 10.0 tmpf954
    CP_EQF 0.0 10.0 flag954
    SELECTF flag954 0.0 tmpf954 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag956
	CP_LTF VLV_V_101 F.1 flag956
	SELECTF flag956 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif949
  else949_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_LTEQF F.0 VLV_AENC_101 else949_2
    DATAF tmpf959
    DATA8 flag959
    DIVF VLV_V_101 2.0 tmpf959
    CP_EQF 0.0 2.0 flag959
    SELECTF flag959 0.0 tmpf959 F.3

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf962
    DATA8 flag962
    DIVF F.5 10.0 tmpf962
    CP_EQF 0.0 10.0 flag962
    SELECTF flag962 0.0 tmpf962 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag964
	CP_LTF VLV_V_101 F.2 flag964
	SELECTF flag964 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif949
  else949_2:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else949_3:
  endif949:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_GTEQF F.0 VLV_AENC_101 else968_1
    DATAF tmpf970
    DATA8 flag970
    DIVF VLV_V_101 2.0 tmpf970
    CP_EQF 0.0 2.0 flag970
    SELECTF flag970 0.0 tmpf970 F.2

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf973
    DATA8 flag973
    DIVF F.4 10.0 tmpf973
    CP_EQF 0.0 10.0 flag973
    SELECTF flag973 0.0 tmpf973 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag975
	CP_LTF VLV_V_101 F.1 flag975
	SELECTF flag975 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif968
  else968_1:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_LTEQF F.0 VLV_AENC_101 else968_2
    DATAF tmpf978
    DATA8 flag978
    DIVF VLV_V_101 2.0 tmpf978
    CP_EQF 0.0 2.0 flag978
    SELECTF flag978 0.0 tmpf978 F.3

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf981
    DATA8 flag981
    DIVF F.5 10.0 tmpf981
    CP_EQF 0.0 10.0 flag981
    SELECTF flag981 0.0 tmpf981 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag983
	CP_LTF VLV_V_101 F.2 flag983
	SELECTF flag983 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif968
  else968_2:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else968_3:
  endif968:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 whilebody945
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_NEQF F.0 VLV_AENC_101 whilebody945
  endwhile945:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEAD0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD0_1:
SUB_F_BMOVEADSAFE_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    MATH ABS VLV_DIFFA_104 F.5
    MATH ABS VLV_DIFFD_104 F.6
    DATA8 flag996
	CP_GTF F.5 F.6 flag996
	SELECTF flag996 F.5 F.6 F.4
    DATAF tmpf997
    DATA8 flag997
    DIVF F.4 100.0 tmpf997
    CP_EQF 0.0 100.0 flag997
    SELECTF flag997 0.0 tmpf997 F.3

    DATAF tmpf998
    DATA8 flag998
    DIVF VLV_V_104 20.0 tmpf998
    CP_EQF 0.0 20.0 flag998
    SELECTF flag998 0.0 tmpf998 F.4

    DATAF tmpf999
    DATA8 flag999
    DIVF F.3 F.4 tmpf999
    CP_EQF 0.0 F.4 flag999
    SELECTF flag999 0.0 tmpf999 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag1002
	CP_GTF F.0 400.0 flag1002
	SELECTF flag1002 F.0 400.0 VLV_SAFETYTIMER_104
    MATH ABS VLV_DIFFA_104 F.0
    DATAF tmpf1004
    DATA8 flag1004
    DIVF VLV_DIFFA_104 F.0 tmpf1004
    CP_EQF 0.0 F.0 flag1004
    SELECTF flag1004 0.0 tmpf1004 VLV_SIGNOA_104

    MATH ABS VLV_DIFFD_104 F.0
    DATAF tmpf1006
    DATA8 flag1006
    DIVF VLV_DIFFD_104 F.0 tmpf1006
    CP_EQF 0.0 F.0 flag1006
    SELECTF flag1006 0.0 tmpf1006 VLV_SIGNOD_104

    MULF VLV_V_104 VLV_SIGNOA_104 VLV_VELA_104
    MULF VLV_V_104 VLV_SIGNOD_104 VLV_VELD_104
    CALL MOTOR.SCHEDULESYNC 'AD' VLV_VELA_104 VLV_VELD_104 5.0 'False'

	DATA8 layer1009
	DATA8 nos1009
	DATA8 busy1009
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer1009 nos1009
	JR_EQ8 0 nos1009 motornotbusy1009
  motorwaiting1009:
	OUTPUT_TEST layer1009 nos1009 busy1009
	JR_EQ8 busy1009 0 motornotbusy1009
	SLEEP
	JR motorwaiting1009
  motornotbusy1009:
    CALL LCD.CLEAR
    TIMER_READ timeMC3
  while1012:
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 or1013
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_EQF F.0 0.0 endwhile1012
  or1013:
  whilebody1012:
    MULF VLV_DIFFA_104 VLV_SIGNOA_104 F.0
    JR_LTEQF F.0 0.0 else1016_1
    MOVEF_8 VLV_VELA_104 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif1016
  else1016_1:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else1016_2:
  endif1016:
    MULF VLV_DIFFD_104 VLV_SIGNOD_104 F.0
    JR_LTEQF F.0 0.0 else1020_1
    MOVEF_8 VLV_VELD_104 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif1020
  else1020_1:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else1020_2:
  endif1020:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTEQF F.0 VLV_SAFETYTIMER_104 else1024_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
  else1024_1:
  endif1024:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_104 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 whilebody1012
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_NEQF F.0 0.0 whilebody1012
  endwhile1012:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEADSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEADSAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_105 F.0 VLV_ENCDIFF_105
    MATH ABS VLV_ENCDIFF_105 F.0
    DATAF tmpf1041
    DATA8 flag1041
    DIVF VLV_ENCDIFF_105 F.0 tmpf1041
    CP_EQF 0.0 F.0 flag1041
    SELECTF flag1041 0.0 tmpf1041 VLV_SIGNO_105

    JR_EQF VLV_ENCDIFF_105 0.0 else1042_1
    MULF VLV_SIGNO_105 VLV_V_105 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while1045:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile1045
  whilebody1045:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody1045
  endwhile1045:
    CALL MOTOR.STOP 'D' 'True'
  else1042_1:
  endif1042:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVED0_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 else1053_1
  while1055:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 endwhile1055
  whilebody1055:
    MATH NEGATE VLV_V_106 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTF F.0 -10.0 whilebody1055
  endwhile1055:
    CALL MOTOR.STOP 'D' 'True'
    JR endif1053
  else1053_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 else1053_2
  while1062:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 endwhile1062
  whilebody1062:
    MOVEF_8 VLV_V_106 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTF F.0 -10.0 whilebody1062
  endwhile1062:
    CALL MOTOR.STOP 'D' 'True'
    JR endif1053
  else1053_2:
    CALL MOTOR.STOP 'D' 'True'
  else1053_3:
  endif1053:
RETSUB_F_BMOVED0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED0_1:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while1069:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_108 endwhile1069
  whilebody1069:
    MOVEF_8 VLV_V_108 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_108 whilebody1069
  endwhile1069:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_109 F.0 VLV_ENCDIFF_109
    MATH ABS VLV_ENCDIFF_109 F.0
    DATAF tmpf1077
    DATA8 flag1077
    DIVF VLV_ENCDIFF_109 F.0 tmpf1077
    CP_EQF 0.0 F.0 flag1077
    SELECTF flag1077 0.0 tmpf1077 VLV_SIGNO_109

    MATH ABS VLV_ENCDIFF_109 F.4
    DATAF tmpf1079
    DATA8 flag1079
    DIVF F.4 100.0 tmpf1079
    CP_EQF 0.0 100.0 flag1079
    SELECTF flag1079 0.0 tmpf1079 F.3

    DATAF tmpf1080
    DATA8 flag1080
    DIVF VLV_V_109 20.0 tmpf1080
    CP_EQF 0.0 20.0 flag1080
    SELECTF flag1080 0.0 tmpf1080 F.4

    DATAF tmpf1081
    DATA8 flag1081
    DIVF F.3 F.4 tmpf1081
    CP_EQF 0.0 F.4 flag1081
    SELECTF flag1081 0.0 tmpf1081 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag1084
	CP_GTF F.0 400.0 flag1084
	SELECTF flag1084 F.0 400.0 VLV_SAFETYTIMER_109
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_109 0.0 else1086_1
  while1087:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile1087
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_109 endwhile1087
  whilebody1087:
    MULF VLV_SIGNO_109 VLV_V_109 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_109 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and1098
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_109 whilebody1087
  and1098:
  endwhile1087:
    CALL MOTOR.STOP 'D' 'True'
  else1086_1:
  endif1086:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer1104
	DATA8 no1104
	DATA8 mode81104
	
	MOVEF_8 1.0 no1104
	SUB8 no1104 1 no1104
	DIV8 no1104 4 layer1104
	MATH MOD8 no1104 4 no1104

	MOVEF_8 4.0 mode81104
	
	INPUT_DEVICE READY_RAW layer1104 no1104 0 mode81104 0
    MOVEF_F 15.0 VLV_RED_110
    MOVEF_F 60.0 VLV_YELLOW_110
    MOVEF_F 170.0 VLV_GREEN_110
    MOVEF_F 330.0 VLV_BLUE_110
    MOVEF_F 10.0 VLV_VALUENEGRO_110
    MOVEF_F 100.0 VLV_VALUEBLANCO_110
    MOVEF_F 147.0 VLV_RWHITE_110
    MOVEF_F 143.0 VLV_GWHITE_110
    MOVEF_F 160.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    MOVEF_F 0.0 VLV_COLOR_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_110
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_110
  for1110:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor1110
  forbody1110:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_110
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_110 VLV_RGB_110
    DATAF tmpf1115
    DATA8 flag1115
    DIVF VLV_RRAW_110 VLV_RWHITE_110 tmpf1115
    CP_EQF 0.0 VLV_RWHITE_110 flag1115
    SELECTF flag1115 0.0 tmpf1115 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    DATAF tmpf1119
    DATA8 flag1119
    DIVF VLV_GRAW_110 VLV_GWHITE_110 tmpf1119
    CP_EQF 0.0 VLV_GWHITE_110 flag1119
    SELECTF flag1119 0.0 tmpf1119 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    DATAF tmpf1123
    DATA8 flag1123
    DIVF VLV_BRAW_110 VLV_BWHITE_110 tmpf1123
    CP_EQF 0.0 VLV_BWHITE_110 flag1123
    SELECTF flag1123 0.0 tmpf1123 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_RNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.3 VLV_GNORMA_110
    DATA8 flag1129
	CP_GTF F.2 F.3 flag1129
	SELECTF flag1129 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_BNORMA_110
    DATA8 flag1131
	CP_GTF F.1 F.2 flag1131
	SELECTF flag1131 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    DATA32 milliseconds1133
	MOVEF_32 5.0 milliseconds1133
	DATA32 timer1133
	TIMER_WAIT milliseconds1133 timer1133
	TIMER_READY timer1133
    ADDF VLV_J_110 1.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody1110
  endfor1110:
    MOVEF_F 1.0 VLV_J_110
  for1135:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor1135
  forbody1135:
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_110
    ADDF F.0 F.1 VLV_RNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_110
    ADDF F.0 F.1 VLV_GNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_110
    ADDF F.0 F.1 VLV_BNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_110
    ADDF F.0 F.1 VLV_MAX_110
    ADDF VLV_J_110 2.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody1135
  endfor1135:
    DATAF tmpf1153
    DATA8 flag1153
    DIVF VLV_RNORM_110 VLV_REPS_110 tmpf1153
    CP_EQF 0.0 VLV_REPS_110 flag1153
    SELECTF flag1153 0.0 tmpf1153 VLV_RNORM_110

    DATAF tmpf1154
    DATA8 flag1154
    DIVF VLV_GNORM_110 VLV_REPS_110 tmpf1154
    CP_EQF 0.0 VLV_REPS_110 flag1154
    SELECTF flag1154 0.0 tmpf1154 VLV_GNORM_110

    DATAF tmpf1155
    DATA8 flag1155
    DIVF VLV_BNORM_110 VLV_REPS_110 tmpf1155
    CP_EQF 0.0 VLV_REPS_110 flag1155
    SELECTF flag1155 0.0 tmpf1155 VLV_BNORM_110

    DATAF tmpf1156
    DATA8 flag1156
    DIVF VLV_MAX_110 VLV_REPS_110 tmpf1156
    CP_EQF 0.0 VLV_REPS_110 flag1156
    SELECTF flag1156 0.0 tmpf1156 VLV_MAX_110

    DATA8 flag1157
	CP_LTF VLV_RNORM_110 VLV_GNORM_110 flag1157
	SELECTF flag1157 VLV_RNORM_110 VLV_GNORM_110 F.0
    DATA8 flag1158
	CP_LTF F.0 VLV_BNORM_110 flag1158
	SELECTF flag1158 F.0 VLV_BNORM_110 VLV_MIN_110
    JR_NEQF VLV_MAX_110 VLV_MIN_110 else1159_1
    MOVEF_F 0.0 VLV_HUE_110
    JR endif1159
  else1159_1:
    JR_NEQF VLV_MAX_110 VLV_RNORM_110 else1159_2
    JR_LTF VLV_GNORM_110 VLV_BNORM_110 else1160_1
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_110 VLV_MIN_110 F.1
    DATAF tmpf1164
    DATA8 flag1164
    DIVF F.0 F.1 tmpf1164
    CP_EQF 0.0 F.1 flag1164
    SELECTF flag1164 0.0 tmpf1164 VLV_HUE_110

    JR endif1160
  else1160_1:
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf1168
    DATA8 flag1168
    DIVF F.1 F.2 tmpf1168
    CP_EQF 0.0 F.2 flag1168
    SELECTF flag1168 0.0 tmpf1168 F.0

    ADDF F.0 360.0 VLV_HUE_110
  else1160_2:
  endif1160:
    JR endif1159
  else1159_2:
    JR_NEQF VLV_MAX_110 VLV_GNORM_110 else1159_3
    SUBF VLV_BNORM_110 VLV_RNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf1173
    DATA8 flag1173
    DIVF F.1 F.2 tmpf1173
    CP_EQF 0.0 F.2 flag1173
    SELECTF flag1173 0.0 tmpf1173 F.0

    ADDF F.0 120.0 VLV_HUE_110
    JR endif1159
  else1159_3:
    SUBF VLV_RNORM_110 VLV_GNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf1178
    DATA8 flag1178
    DIVF F.1 F.2 tmpf1178
    CP_EQF 0.0 F.2 flag1178
    SELECTF flag1178 0.0 tmpf1178 F.0

    ADDF F.0 240.0 VLV_HUE_110
  else1159_4:
  endif1159:
    JR_NEQF VLV_MAX_110 0.0 else1180_1
    MOVEF_F 0.0 VLV_SAT_110
    JR endif1180
  else1180_1:
    DATAF tmpf1181
    DATA8 flag1181
    DIVF VLV_MIN_110 VLV_MAX_110 tmpf1181
    CP_EQF 0.0 VLV_MAX_110 flag1181
    SELECTF flag1181 0.0 tmpf1181 F.0

    SUBF 1.0 F.0 VLV_SAT_110
  else1180_2:
  endif1180:
    MOVEF_F VLV_MAX_110 VLV_VALUE_110
    ADDF VLV_VALUEBLANCO_110 VLV_VALUENEGRO_110 F.0
    DATAF tmpf1184
    DATA8 flag1184
    DIVF F.0 2.0 tmpf1184
    CP_EQF 0.0 2.0 flag1184
    SELECTF flag1184 0.0 tmpf1184 VLV_RGBGREY_110

    ADDF VLV_RNORM_110 VLV_GNORM_110 F.1
    ADDF F.1 VLV_BNORM_110 F.0
    JR_GTF F.0 3.0 else1185_1
    MOVEF_F 0.0 VLV_COLOR_110
    JR endif1185
  else1185_1:
    JR_GTEQF VLV_SAT_110 0.4 else1188_1
    JR_LTEQF VLV_VALUE_110 VLV_RGBGREY_110 else1189_1
    MOVEF_F 6.0 VLV_COLOR_110
    JR endif1189
  else1189_1:
    MOVEF_F 1.0 VLV_COLOR_110
  else1189_2:
  endif1189:
    JR endif1188
  else1188_1:
    JR_LTF VLV_HUE_110 0.0 else1190_1
    JR_GTEQF VLV_HUE_110 VLV_RED_110 else1190_1
    MOVEF_F 5.0 VLV_COLOR_110
    JR endif1190
  else1190_1:
    JR_LTF VLV_HUE_110 VLV_RED_110 else1190_2
    JR_GTEQF VLV_HUE_110 VLV_YELLOW_110 else1190_2
    MOVEF_F 4.0 VLV_COLOR_110
    JR endif1190
  else1190_2:
    JR_LTF VLV_HUE_110 VLV_YELLOW_110 else1190_3
    JR_GTEQF VLV_HUE_110 VLV_GREEN_110 else1190_3
    MOVEF_F 3.0 VLV_COLOR_110
    JR endif1190
  else1190_3:
    JR_LTF VLV_HUE_110 VLV_GREEN_110 else1190_4
    JR_GTEQF VLV_HUE_110 VLV_BLUE_110 else1190_4
    MOVEF_F 2.0 VLV_COLOR_110
    JR endif1190
  else1190_4:
    MOVEF_F 5.0 VLV_COLOR_110
  else1190_5:
  endif1190:
  else1188_2:
  endif1188:
  else1185_2:
  endif1185:
    STRINGS VALUE_FORMATTED VLV_RRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_110 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1206:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer1207
	DATA8 no1207
	DATA8 mode81207
	
	MOVEF_8 2.0 no1207
	SUB8 no1207 1 no1207
	DIV8 no1207 4 layer1207
	MATH MOD8 no1207 4 no1207

	MOVEF_8 4.0 mode81207
	
	INPUT_DEVICE READY_RAW layer1207 no1207 0 mode81207 0
    MOVEF_F 15.0 VLV_RED_111
    MOVEF_F 60.0 VLV_YELLOW_111
    MOVEF_F 170.0 VLV_GREEN_111
    MOVEF_F 330.0 VLV_BLUE_111
    MOVEF_F 10.0 VLV_VALUENEGRO_111
    MOVEF_F 100.0 VLV_VALUEBLANCO_111
    MOVEF_F 147.0 VLV_RWHITE_111
    MOVEF_F 143.0 VLV_GWHITE_111
    MOVEF_F 160.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    MOVEF_F 0.0 VLV_COLOR_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_111
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_111
  for1213:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor1213
  forbody1213:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_111
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_111 VLV_RGB_111
    DATAF tmpf1218
    DATA8 flag1218
    DIVF VLV_RRAW_111 VLV_RWHITE_111 tmpf1218
    CP_EQF 0.0 VLV_RWHITE_111 flag1218
    SELECTF flag1218 0.0 tmpf1218 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    DATAF tmpf1222
    DATA8 flag1222
    DIVF VLV_GRAW_111 VLV_GWHITE_111 tmpf1222
    CP_EQF 0.0 VLV_GWHITE_111 flag1222
    SELECTF flag1222 0.0 tmpf1222 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    DATAF tmpf1226
    DATA8 flag1226
    DIVF VLV_BRAW_111 VLV_BWHITE_111 tmpf1226
    CP_EQF 0.0 VLV_BWHITE_111 flag1226
    SELECTF flag1226 0.0 tmpf1226 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_RNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.3 VLV_GNORMA_111
    DATA8 flag1232
	CP_GTF F.2 F.3 flag1232
	SELECTF flag1232 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_BNORMA_111
    DATA8 flag1234
	CP_GTF F.1 F.2 flag1234
	SELECTF flag1234 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    DATA32 milliseconds1236
	MOVEF_32 5.0 milliseconds1236
	DATA32 timer1236
	TIMER_WAIT milliseconds1236 timer1236
	TIMER_READY timer1236
    ADDF VLV_J_111 1.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody1213
  endfor1213:
    MOVEF_F 1.0 VLV_J_111
  for1238:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor1238
  forbody1238:
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_111
    ADDF F.0 F.1 VLV_RNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_111
    ADDF F.0 F.1 VLV_GNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_111
    ADDF F.0 F.1 VLV_BNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_111
    ADDF F.0 F.1 VLV_MAX_111
    ADDF VLV_J_111 2.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody1238
  endfor1238:
    DATAF tmpf1256
    DATA8 flag1256
    DIVF VLV_RNORM_111 VLV_REPS_111 tmpf1256
    CP_EQF 0.0 VLV_REPS_111 flag1256
    SELECTF flag1256 0.0 tmpf1256 VLV_RNORM_111

    DATAF tmpf1257
    DATA8 flag1257
    DIVF VLV_GNORM_111 VLV_REPS_111 tmpf1257
    CP_EQF 0.0 VLV_REPS_111 flag1257
    SELECTF flag1257 0.0 tmpf1257 VLV_GNORM_111

    DATAF tmpf1258
    DATA8 flag1258
    DIVF VLV_BNORM_111 VLV_REPS_111 tmpf1258
    CP_EQF 0.0 VLV_REPS_111 flag1258
    SELECTF flag1258 0.0 tmpf1258 VLV_BNORM_111

    DATAF tmpf1259
    DATA8 flag1259
    DIVF VLV_MAX_111 VLV_REPS_111 tmpf1259
    CP_EQF 0.0 VLV_REPS_111 flag1259
    SELECTF flag1259 0.0 tmpf1259 VLV_MAX_111

    DATA8 flag1260
	CP_LTF VLV_RNORM_111 VLV_GNORM_111 flag1260
	SELECTF flag1260 VLV_RNORM_111 VLV_GNORM_111 F.0
    DATA8 flag1261
	CP_LTF F.0 VLV_BNORM_111 flag1261
	SELECTF flag1261 F.0 VLV_BNORM_111 VLV_MIN_111
    JR_NEQF VLV_MAX_111 VLV_MIN_111 else1262_1
    MOVEF_F 0.0 VLV_HUE_111
    JR endif1262
  else1262_1:
    JR_NEQF VLV_MAX_111 VLV_RNORM_111 else1262_2
    JR_LTF VLV_GNORM_111 VLV_BNORM_111 else1263_1
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_111 VLV_MIN_111 F.1
    DATAF tmpf1267
    DATA8 flag1267
    DIVF F.0 F.1 tmpf1267
    CP_EQF 0.0 F.1 flag1267
    SELECTF flag1267 0.0 tmpf1267 VLV_HUE_111

    JR endif1263
  else1263_1:
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1271
    DATA8 flag1271
    DIVF F.1 F.2 tmpf1271
    CP_EQF 0.0 F.2 flag1271
    SELECTF flag1271 0.0 tmpf1271 F.0

    ADDF F.0 360.0 VLV_HUE_111
  else1263_2:
  endif1263:
    JR endif1262
  else1262_2:
    JR_NEQF VLV_MAX_111 VLV_GNORM_111 else1262_3
    SUBF VLV_BNORM_111 VLV_RNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1276
    DATA8 flag1276
    DIVF F.1 F.2 tmpf1276
    CP_EQF 0.0 F.2 flag1276
    SELECTF flag1276 0.0 tmpf1276 F.0

    ADDF F.0 120.0 VLV_HUE_111
    JR endif1262
  else1262_3:
    SUBF VLV_RNORM_111 VLV_GNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1281
    DATA8 flag1281
    DIVF F.1 F.2 tmpf1281
    CP_EQF 0.0 F.2 flag1281
    SELECTF flag1281 0.0 tmpf1281 F.0

    ADDF F.0 240.0 VLV_HUE_111
  else1262_4:
  endif1262:
    JR_NEQF VLV_MAX_111 0.0 else1283_1
    MOVEF_F 0.0 VLV_SAT_111
    JR endif1283
  else1283_1:
    DATAF tmpf1284
    DATA8 flag1284
    DIVF VLV_MIN_111 VLV_MAX_111 tmpf1284
    CP_EQF 0.0 VLV_MAX_111 flag1284
    SELECTF flag1284 0.0 tmpf1284 F.0

    SUBF 1.0 F.0 VLV_SAT_111
  else1283_2:
  endif1283:
    MOVEF_F VLV_MAX_111 VLV_VALUE_111
    ADDF VLV_VALUEBLANCO_111 VLV_VALUENEGRO_111 F.0
    DATAF tmpf1287
    DATA8 flag1287
    DIVF F.0 2.0 tmpf1287
    CP_EQF 0.0 2.0 flag1287
    SELECTF flag1287 0.0 tmpf1287 VLV_RGBGREY_111

    ADDF VLV_RNORM_111 VLV_GNORM_111 F.1
    ADDF F.1 VLV_BNORM_111 F.0
    JR_GTF F.0 3.0 else1288_1
    MOVEF_F 0.0 VLV_COLOR_111
    JR endif1288
  else1288_1:
    JR_GTEQF VLV_SAT_111 0.4 else1291_1
    JR_LTEQF VLV_VALUE_111 VLV_RGBGREY_111 else1292_1
    MOVEF_F 6.0 VLV_COLOR_111
    JR endif1292
  else1292_1:
    MOVEF_F 1.0 VLV_COLOR_111
  else1292_2:
  endif1292:
    JR endif1291
  else1291_1:
    JR_LTF VLV_HUE_111 0.0 else1293_1
    JR_GTEQF VLV_HUE_111 VLV_RED_111 else1293_1
    MOVEF_F 5.0 VLV_COLOR_111
    JR endif1293
  else1293_1:
    JR_LTF VLV_HUE_111 VLV_RED_111 else1293_2
    JR_GTEQF VLV_HUE_111 VLV_YELLOW_111 else1293_2
    MOVEF_F 4.0 VLV_COLOR_111
    JR endif1293
  else1293_2:
    JR_LTF VLV_HUE_111 VLV_YELLOW_111 else1293_3
    JR_GTEQF VLV_HUE_111 VLV_GREEN_111 else1293_3
    MOVEF_F 3.0 VLV_COLOR_111
    JR endif1293
  else1293_3:
    JR_LTF VLV_HUE_111 VLV_GREEN_111 else1293_4
    JR_GTEQF VLV_HUE_111 VLV_BLUE_111 else1293_4
    MOVEF_F 2.0 VLV_COLOR_111
    JR endif1293
  else1293_4:
    MOVEF_F 5.0 VLV_COLOR_111
  else1293_5:
  endif1293:
  else1291_2:
  endif1291:
  else1288_2:
  endif1288:
    STRINGS VALUE_FORMATTED VLV_RRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_111 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1309:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer1310
	DATA8 no1310
	DATA8 mode81310
	
	MOVEF_8 3.0 no1310
	SUB8 no1310 1 no1310
	DIV8 no1310 4 layer1310
	MATH MOD8 no1310 4 no1310

	MOVEF_8 4.0 mode81310
	
	INPUT_DEVICE READY_RAW layer1310 no1310 0 mode81310 0
    MOVEF_F 15.0 VLV_RED_112
    MOVEF_F 60.0 VLV_YELLOW_112
    MOVEF_F 170.0 VLV_GREEN_112
    MOVEF_F 330.0 VLV_BLUE_112
    MOVEF_F 10.0 VLV_VALUENEGRO_112
    MOVEF_F 100.0 VLV_VALUEBLANCO_112
    MOVEF_F 147.0 VLV_RWHITE_112
    MOVEF_F 143.0 VLV_GWHITE_112
    MOVEF_F 160.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    MOVEF_F 0.0 VLV_COLOR_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_112
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_112
  for1316:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1316
  forbody1316:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_112
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_112 VLV_RGB_112
    DATAF tmpf1321
    DATA8 flag1321
    DIVF VLV_RRAW_112 VLV_RWHITE_112 tmpf1321
    CP_EQF 0.0 VLV_RWHITE_112 flag1321
    SELECTF flag1321 0.0 tmpf1321 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    DATAF tmpf1325
    DATA8 flag1325
    DIVF VLV_GRAW_112 VLV_GWHITE_112 tmpf1325
    CP_EQF 0.0 VLV_GWHITE_112 flag1325
    SELECTF flag1325 0.0 tmpf1325 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    DATAF tmpf1329
    DATA8 flag1329
    DIVF VLV_BRAW_112 VLV_BWHITE_112 tmpf1329
    CP_EQF 0.0 VLV_BWHITE_112 flag1329
    SELECTF flag1329 0.0 tmpf1329 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_RNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.3 VLV_GNORMA_112
    DATA8 flag1335
	CP_GTF F.2 F.3 flag1335
	SELECTF flag1335 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_BNORMA_112
    DATA8 flag1337
	CP_GTF F.1 F.2 flag1337
	SELECTF flag1337 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    DATA32 milliseconds1339
	MOVEF_32 5.0 milliseconds1339
	DATA32 timer1339
	TIMER_WAIT milliseconds1339 timer1339
	TIMER_READY timer1339
    ADDF VLV_J_112 1.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1316
  endfor1316:
    MOVEF_F 1.0 VLV_J_112
  for1341:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1341
  forbody1341:
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_112
    ADDF F.0 F.1 VLV_RNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_112
    ADDF F.0 F.1 VLV_GNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_112
    ADDF F.0 F.1 VLV_BNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_112
    ADDF F.0 F.1 VLV_MAX_112
    ADDF VLV_J_112 2.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1341
  endfor1341:
    DATAF tmpf1359
    DATA8 flag1359
    DIVF VLV_RNORM_112 VLV_REPS_112 tmpf1359
    CP_EQF 0.0 VLV_REPS_112 flag1359
    SELECTF flag1359 0.0 tmpf1359 VLV_RNORM_112

    DATAF tmpf1360
    DATA8 flag1360
    DIVF VLV_GNORM_112 VLV_REPS_112 tmpf1360
    CP_EQF 0.0 VLV_REPS_112 flag1360
    SELECTF flag1360 0.0 tmpf1360 VLV_GNORM_112

    DATAF tmpf1361
    DATA8 flag1361
    DIVF VLV_BNORM_112 VLV_REPS_112 tmpf1361
    CP_EQF 0.0 VLV_REPS_112 flag1361
    SELECTF flag1361 0.0 tmpf1361 VLV_BNORM_112

    DATAF tmpf1362
    DATA8 flag1362
    DIVF VLV_MAX_112 VLV_REPS_112 tmpf1362
    CP_EQF 0.0 VLV_REPS_112 flag1362
    SELECTF flag1362 0.0 tmpf1362 VLV_MAX_112

    DATA8 flag1363
	CP_LTF VLV_RNORM_112 VLV_GNORM_112 flag1363
	SELECTF flag1363 VLV_RNORM_112 VLV_GNORM_112 F.0
    DATA8 flag1364
	CP_LTF F.0 VLV_BNORM_112 flag1364
	SELECTF flag1364 F.0 VLV_BNORM_112 VLV_MIN_112
    JR_NEQF VLV_MAX_112 VLV_MIN_112 else1365_1
    MOVEF_F 0.0 VLV_HUE_112
    JR endif1365
  else1365_1:
    JR_NEQF VLV_MAX_112 VLV_RNORM_112 else1365_2
    JR_LTF VLV_GNORM_112 VLV_BNORM_112 else1366_1
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_112 VLV_MIN_112 F.1
    DATAF tmpf1370
    DATA8 flag1370
    DIVF F.0 F.1 tmpf1370
    CP_EQF 0.0 F.1 flag1370
    SELECTF flag1370 0.0 tmpf1370 VLV_HUE_112

    JR endif1366
  else1366_1:
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1374
    DATA8 flag1374
    DIVF F.1 F.2 tmpf1374
    CP_EQF 0.0 F.2 flag1374
    SELECTF flag1374 0.0 tmpf1374 F.0

    ADDF F.0 360.0 VLV_HUE_112
  else1366_2:
  endif1366:
    JR endif1365
  else1365_2:
    JR_NEQF VLV_MAX_112 VLV_GNORM_112 else1365_3
    SUBF VLV_BNORM_112 VLV_RNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1379
    DATA8 flag1379
    DIVF F.1 F.2 tmpf1379
    CP_EQF 0.0 F.2 flag1379
    SELECTF flag1379 0.0 tmpf1379 F.0

    ADDF F.0 120.0 VLV_HUE_112
    JR endif1365
  else1365_3:
    SUBF VLV_RNORM_112 VLV_GNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1384
    DATA8 flag1384
    DIVF F.1 F.2 tmpf1384
    CP_EQF 0.0 F.2 flag1384
    SELECTF flag1384 0.0 tmpf1384 F.0

    ADDF F.0 240.0 VLV_HUE_112
  else1365_4:
  endif1365:
    JR_NEQF VLV_MAX_112 0.0 else1386_1
    MOVEF_F 0.0 VLV_SAT_112
    JR endif1386
  else1386_1:
    DATAF tmpf1387
    DATA8 flag1387
    DIVF VLV_MIN_112 VLV_MAX_112 tmpf1387
    CP_EQF 0.0 VLV_MAX_112 flag1387
    SELECTF flag1387 0.0 tmpf1387 F.0

    SUBF 1.0 F.0 VLV_SAT_112
  else1386_2:
  endif1386:
    MOVEF_F VLV_MAX_112 VLV_VALUE_112
    ADDF VLV_VALUEBLANCO_112 VLV_VALUENEGRO_112 F.0
    DATAF tmpf1390
    DATA8 flag1390
    DIVF F.0 2.0 tmpf1390
    CP_EQF 0.0 2.0 flag1390
    SELECTF flag1390 0.0 tmpf1390 VLV_RGBGREY_112

    ADDF VLV_RNORM_112 VLV_GNORM_112 F.1
    ADDF F.1 VLV_BNORM_112 F.0
    JR_GTF F.0 3.0 else1391_1
    MOVEF_F 0.0 VLV_COLOR_112
    JR endif1391
  else1391_1:
    JR_GTEQF VLV_SAT_112 0.4 else1394_1
    JR_LTEQF VLV_VALUE_112 VLV_RGBGREY_112 else1395_1
    MOVEF_F 6.0 VLV_COLOR_112
    JR endif1395
  else1395_1:
    MOVEF_F 1.0 VLV_COLOR_112
  else1395_2:
  endif1395:
    JR endif1394
  else1394_1:
    JR_LTF VLV_HUE_112 0.0 else1396_1
    JR_GTEQF VLV_HUE_112 VLV_RED_112 else1396_1
    MOVEF_F 5.0 VLV_COLOR_112
    JR endif1396
  else1396_1:
    JR_LTF VLV_HUE_112 VLV_RED_112 else1396_2
    JR_GTEQF VLV_HUE_112 VLV_YELLOW_112 else1396_2
    MOVEF_F 4.0 VLV_COLOR_112
    JR endif1396
  else1396_2:
    JR_LTF VLV_HUE_112 VLV_YELLOW_112 else1396_3
    JR_GTEQF VLV_HUE_112 VLV_GREEN_112 else1396_3
    MOVEF_F 3.0 VLV_COLOR_112
    JR endif1396
  else1396_3:
    JR_LTF VLV_HUE_112 VLV_GREEN_112 else1396_4
    JR_GTEQF VLV_HUE_112 VLV_BLUE_112 else1396_4
    MOVEF_F 2.0 VLV_COLOR_112
    JR endif1396
  else1396_4:
    MOVEF_F 5.0 VLV_COLOR_112
  else1396_5:
  endif1396:
  else1394_2:
  endif1394:
  else1391_2:
  endif1391:
    STRINGS VALUE_FORMATTED VLV_RRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_112 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1412:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer1413
	DATA8 no1413
	DATA8 mode81413
	
	MOVEF_8 4.0 no1413
	SUB8 no1413 1 no1413
	DIV8 no1413 4 layer1413
	MATH MOD8 no1413 4 no1413

	MOVEF_8 4.0 mode81413
	
	INPUT_DEVICE READY_RAW layer1413 no1413 0 mode81413 0
    MOVEF_F 15.0 VLV_RED_113
    MOVEF_F 60.0 VLV_YELLOW_113
    MOVEF_F 170.0 VLV_GREEN_113
    MOVEF_F 330.0 VLV_BLUE_113
    MOVEF_F 10.0 VLV_VALUENEGRO_113
    MOVEF_F 100.0 VLV_VALUEBLANCO_113
    MOVEF_F 147.0 VLV_RWHITE_113
    MOVEF_F 143.0 VLV_GWHITE_113
    MOVEF_F 160.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_113
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_113
  for1419:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1419
  forbody1419:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_113
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_113 VLV_RGB_113
    DATAF tmpf1424
    DATA8 flag1424
    DIVF VLV_RRAW_113 VLV_RWHITE_113 tmpf1424
    CP_EQF 0.0 VLV_RWHITE_113 flag1424
    SELECTF flag1424 0.0 tmpf1424 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    DATAF tmpf1428
    DATA8 flag1428
    DIVF VLV_GRAW_113 VLV_GWHITE_113 tmpf1428
    CP_EQF 0.0 VLV_GWHITE_113 flag1428
    SELECTF flag1428 0.0 tmpf1428 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    DATAF tmpf1432
    DATA8 flag1432
    DIVF VLV_BRAW_113 VLV_BWHITE_113 tmpf1432
    CP_EQF 0.0 VLV_BWHITE_113 flag1432
    SELECTF flag1432 0.0 tmpf1432 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_RNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.3 VLV_GNORMA_113
    DATA8 flag1438
	CP_GTF F.2 F.3 flag1438
	SELECTF flag1438 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_BNORMA_113
    DATA8 flag1440
	CP_GTF F.1 F.2 flag1440
	SELECTF flag1440 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    DATA32 milliseconds1442
	MOVEF_32 5.0 milliseconds1442
	DATA32 timer1442
	TIMER_WAIT milliseconds1442 timer1442
	TIMER_READY timer1442
    ADDF VLV_J_113 1.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1419
  endfor1419:
    MOVEF_F 1.0 VLV_J_113
  for1444:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1444
  forbody1444:
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_113
    ADDF F.0 F.1 VLV_RNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_113
    ADDF F.0 F.1 VLV_GNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_113
    ADDF F.0 F.1 VLV_BNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_113
    ADDF F.0 F.1 VLV_MAX_113
    ADDF VLV_J_113 2.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1444
  endfor1444:
    DATAF tmpf1462
    DATA8 flag1462
    DIVF VLV_RNORM_113 VLV_REPS_113 tmpf1462
    CP_EQF 0.0 VLV_REPS_113 flag1462
    SELECTF flag1462 0.0 tmpf1462 VLV_RNORM_113

    DATAF tmpf1463
    DATA8 flag1463
    DIVF VLV_GNORM_113 VLV_REPS_113 tmpf1463
    CP_EQF 0.0 VLV_REPS_113 flag1463
    SELECTF flag1463 0.0 tmpf1463 VLV_GNORM_113

    DATAF tmpf1464
    DATA8 flag1464
    DIVF VLV_BNORM_113 VLV_REPS_113 tmpf1464
    CP_EQF 0.0 VLV_REPS_113 flag1464
    SELECTF flag1464 0.0 tmpf1464 VLV_BNORM_113

    DATAF tmpf1465
    DATA8 flag1465
    DIVF VLV_MAX_113 VLV_REPS_113 tmpf1465
    CP_EQF 0.0 VLV_REPS_113 flag1465
    SELECTF flag1465 0.0 tmpf1465 VLV_MAX_113

    DATA8 flag1466
	CP_LTF VLV_RNORM_113 VLV_GNORM_113 flag1466
	SELECTF flag1466 VLV_RNORM_113 VLV_GNORM_113 F.0
    DATA8 flag1467
	CP_LTF F.0 VLV_BNORM_113 flag1467
	SELECTF flag1467 F.0 VLV_BNORM_113 VLV_MIN_113
    JR_NEQF VLV_MAX_113 VLV_MIN_113 else1468_1
    MOVEF_F 0.0 VLV_HUE_113
    JR endif1468
  else1468_1:
    JR_NEQF VLV_MAX_113 VLV_RNORM_113 else1468_2
    JR_LTF VLV_GNORM_113 VLV_BNORM_113 else1469_1
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_113 VLV_MIN_113 F.1
    DATAF tmpf1473
    DATA8 flag1473
    DIVF F.0 F.1 tmpf1473
    CP_EQF 0.0 F.1 flag1473
    SELECTF flag1473 0.0 tmpf1473 VLV_HUE_113

    JR endif1469
  else1469_1:
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1477
    DATA8 flag1477
    DIVF F.1 F.2 tmpf1477
    CP_EQF 0.0 F.2 flag1477
    SELECTF flag1477 0.0 tmpf1477 F.0

    ADDF F.0 360.0 VLV_HUE_113
  else1469_2:
  endif1469:
    JR endif1468
  else1468_2:
    JR_NEQF VLV_MAX_113 VLV_GNORM_113 else1468_3
    SUBF VLV_BNORM_113 VLV_RNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1482
    DATA8 flag1482
    DIVF F.1 F.2 tmpf1482
    CP_EQF 0.0 F.2 flag1482
    SELECTF flag1482 0.0 tmpf1482 F.0

    ADDF F.0 120.0 VLV_HUE_113
    JR endif1468
  else1468_3:
    SUBF VLV_RNORM_113 VLV_GNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1487
    DATA8 flag1487
    DIVF F.1 F.2 tmpf1487
    CP_EQF 0.0 F.2 flag1487
    SELECTF flag1487 0.0 tmpf1487 F.0

    ADDF F.0 240.0 VLV_HUE_113
  else1468_4:
  endif1468:
    JR_NEQF VLV_MAX_113 0.0 else1489_1
    MOVEF_F 0.0 VLV_SAT_113
    JR endif1489
  else1489_1:
    DATAF tmpf1490
    DATA8 flag1490
    DIVF VLV_MIN_113 VLV_MAX_113 tmpf1490
    CP_EQF 0.0 VLV_MAX_113 flag1490
    SELECTF flag1490 0.0 tmpf1490 F.0

    SUBF 1.0 F.0 VLV_SAT_113
  else1489_2:
  endif1489:
    MOVEF_F VLV_MAX_113 VLV_VALUE_113
    ADDF VLV_VALUEBLANCO_113 VLV_VALUENEGRO_113 F.0
    DATAF tmpf1493
    DATA8 flag1493
    DIVF F.0 2.0 tmpf1493
    CP_EQF 0.0 2.0 flag1493
    SELECTF flag1493 0.0 tmpf1493 VLV_RGBGREY_113

    ADDF VLV_RNORM_113 VLV_GNORM_113 F.1
    ADDF F.1 VLV_BNORM_113 F.0
    JR_GTF F.0 3.0 else1494_1
    MOVEF_F 0.0 VLV_COLOR_113
    JR endif1494
  else1494_1:
    JR_GTEQF VLV_SAT_113 0.4 else1497_1
    JR_LTEQF VLV_VALUE_113 VLV_RGBGREY_113 else1498_1
    MOVEF_F 6.0 VLV_COLOR_113
    JR endif1498
  else1498_1:
    MOVEF_F 1.0 VLV_COLOR_113
  else1498_2:
  endif1498:
    JR endif1497
  else1497_1:
    JR_LTF VLV_HUE_113 0.0 else1499_1
    JR_GTEQF VLV_HUE_113 VLV_RED_113 else1499_1
    MOVEF_F 5.0 VLV_COLOR_113
    JR endif1499
  else1499_1:
    JR_LTF VLV_HUE_113 VLV_RED_113 else1499_2
    JR_GTEQF VLV_HUE_113 VLV_YELLOW_113 else1499_2
    MOVEF_F 4.0 VLV_COLOR_113
    JR endif1499
  else1499_2:
    JR_LTF VLV_HUE_113 VLV_YELLOW_113 else1499_3
    JR_GTEQF VLV_HUE_113 VLV_GREEN_113 else1499_3
    MOVEF_F 3.0 VLV_COLOR_113
    JR endif1499
  else1499_3:
    JR_LTF VLV_HUE_113 VLV_GREEN_113 else1499_4
    JR_GTEQF VLV_HUE_113 VLV_BLUE_113 else1499_4
    MOVEF_F 2.0 VLV_COLOR_113
    JR endif1499
  else1499_4:
    MOVEF_F 5.0 VLV_COLOR_113
  else1499_5:
  endif1499:
  else1497_2:
  endif1497:
  else1494_2:
  endif1494:
    STRINGS VALUE_FORMATTED VLV_RRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_113 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1515:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_122 0.0 else1516_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1516
  else1516_1:
    JR_NEQF VLV_COLOR_122 1.0 else1516_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1516
  else1516_2:
    JR_NEQF VLV_COLOR_122 2.0 else1516_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1516
  else1516_3:
    JR_NEQF VLV_COLOR_122 3.0 else1516_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1516
  else1516_4:
    JR_NEQF VLV_COLOR_122 4.0 else1516_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1516
  else1516_5:
    JR_NEQF VLV_COLOR_122 5.0 else1516_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1516
  else1516_6:
    JR_NEQF VLV_COLOR_122 6.0 else1516_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1516
  else1516_7:
    JR_NEQF VLV_COLOR_122 7.0 else1516_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1516_8:
  endif1516:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_ABAJO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1525:
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -220.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1526:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1527:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 350.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1528:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -300.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1529:
RETSUB_F_COGER_ABAJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_0:
SUB_F_COGER_ABAJO_BASURA_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1530:
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -130.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1531:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1532:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 500.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1533:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -300.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1534:
RETSUB_F_COGER_ABAJO_BASURA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_BASURA_0:
SUB_F_COGER_ARRIBA_0:
    MOVEF_F -20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1535:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -670.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1536:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -200.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1537:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1538:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1539:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 400.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1540:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -400.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1541:
RETSUB_F_COGER_ARRIBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ARRIBA_0:
SUB_F_SOLTAR_TODO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1542:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -750.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1543:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1544:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1545:
RETSUB_F_SOLTAR_TODO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_TODO_0:
SUB_F_SOLTAR_UNO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1546:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -760.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1547:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1548:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -660.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1549:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1550:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 200.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1551:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1552:
RETSUB_F_SOLTAR_UNO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_UNO_0:
SUB_F_LECTURA_1:
    MOVEF_F 15.0 VLV_V_95
    MOVEF_F -650.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1553:
    MOVEF_F 5.0 VLV_REPS_111
    WRITE32 ENDSUB_F_RGBDETECT2_2:CALLSUB1554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RGBDETECT2_2
CALLSUB1554:
    MOVEF_F VLV_COLOR_111 VLV_READ_131
    MOVEF_F VLV_READ_131 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1555:
    MOVEF_F 15.0 VLV_V_95
    MOVEF_F -200.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1556:
RETSUB_F_LECTURA_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LECTURA_1:
SUB_F_TRASPMATVECT3X3_2:
    CALL VECTOR.INIT 9.0 0.0 VLV_S_132
    CALL ARRAYGET_FLOAT 0.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 3.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 6.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 4.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 7.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 2.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 5.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_132
    CALL ARRAYGET_FLOAT 8.0 F.0 VLV_M_132
    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_132
RETSUB_F_TRASPMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TRASPMATVECT3X3_2:
SUB_F_INVMATVECT3X3_2:
    CALL ARRAYGET_FLOAT 0.0 F.2 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.6 VLV_M_133
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 5.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    CALL ARRAYGET_FLOAT 5.0 F.7 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.8 VLV_M_133
    MULF F.7 F.8 F.6
    SUBF F.5 F.6 F.4
    MULF F.3 F.4 F.2
    SUBF F.1 F.2 F.0
    CALL ARRAYGET_FLOAT 2.0 F.2 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.6 VLV_M_133
    MULF F.5 F.6 F.4
    CALL ARRAYGET_FLOAT 4.0 F.6 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.7 VLV_M_133
    MULF F.6 F.7 F.5
    SUBF F.4 F.5 F.3
    MULF F.2 F.3 F.1
    ADDF F.0 F.1 VLV_DETERMINANTE_133
    JR_EQF VLV_DETERMINANTE_133 0.0 else1605_1
    CALL ARRAYGET_FLOAT 4.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1613
    DATA8 flag1613
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1613
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1613
    SELECTF flag1613 0.0 tmpf1613 F.0

    CALL ARRAYSTORE_FLOAT 0.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1622
    DATA8 flag1622
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1622
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1622
    SELECTF flag1622 0.0 tmpf1622 F.0

    CALL ARRAYSTORE_FLOAT 1.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 3.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1631
    DATA8 flag1631
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1631
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1631
    SELECTF flag1631 0.0 tmpf1631 F.0

    CALL ARRAYSTORE_FLOAT 2.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1640
    DATA8 flag1640
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1640
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1640
    SELECTF flag1640 0.0 tmpf1640 F.0

    CALL ARRAYSTORE_FLOAT 3.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 8.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1649
    DATA8 flag1649
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1649
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1649
    SELECTF flag1649 0.0 tmpf1649 F.0

    CALL ARRAYSTORE_FLOAT 4.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 7.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 6.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1658
    DATA8 flag1658
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1658
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1658
    SELECTF flag1658 0.0 tmpf1658 F.0

    CALL ARRAYSTORE_FLOAT 5.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 1.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1667
    DATA8 flag1667
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1667
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1667
    SELECTF flag1667 0.0 tmpf1667 F.0

    CALL ARRAYSTORE_FLOAT 6.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 5.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 2.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1676
    DATA8 flag1676
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1676
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1676
    SELECTF flag1676 0.0 tmpf1676 F.0

    CALL ARRAYSTORE_FLOAT 7.0 F.0 VLV_S_133
    CALL ARRAYGET_FLOAT 0.0 F.3 VLV_M_133
    CALL ARRAYGET_FLOAT 4.0 F.4 VLV_M_133
    MULF F.3 F.4 F.2
    CALL ARRAYGET_FLOAT 1.0 F.4 VLV_M_133
    CALL ARRAYGET_FLOAT 3.0 F.5 VLV_M_133
    MULF F.4 F.5 F.3
    SUBF F.2 F.3 F.1
    DATAF tmpf1685
    DATA8 flag1685
    DIVF F.1 VLV_DETERMINANTE_133 tmpf1685
    CP_EQF 0.0 VLV_DETERMINANTE_133 flag1685
    SELECTF flag1685 0.0 tmpf1685 F.0

    CALL ARRAYSTORE_FLOAT 8.0 F.0 VLV_S_133
  else1605_1:
  endif1605:
RETSUB_F_INVMATVECT3X3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_INVMATVECT3X3_2:
SUB_F_MULTIMATRIZCOEF_3:
    MOVEF_F 0.0 VLV_I_134
  while1687:
    CALL ARRAYGET_FLOAT VLV_I_134 F.0 VLV_M_134
    JR_EQF F.0 0.0 endwhile1687
  whilebody1687:
    CALL ARRAYGET_FLOAT VLV_I_134 F.1 VLV_M_134
    MULF VLV_K_134 F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_I_134 F.0 VLV_S_134
    ADDF VLV_I_134 1.0 VLV_I_134
    CALL ARRAYGET_FLOAT VLV_I_134 F.0 VLV_M_134
    JR_NEQF F.0 0.0 whilebody1687
  endwhile1687:
RETSUB_F_MULTIMATRIZCOEF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MULTIMATRIZCOEF_3:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall VECTOR.INIT       // FFA
{
	IN_F size
	IN_F value
	IN_16 a

	DATA32 size32
	MOVEF_32 size size32
	JR_LTEQ32 size32 0 empty

	ARRAY RESIZE a size32
	ARRAY FILL a value
	RETURN

empty:
    ARRAY RESIZE a 0
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
