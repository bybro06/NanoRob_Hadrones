
number VALUENEGRO
number VALUEBLANCO

Function Detect(in number sens, in number reps, out number color)
  
  sens_mode = Sensor.GetMode(sens)
  
  ' Ponemos el sensor en modo rgb
  Sensor.SetMode(sens, 4)
  
  ' Definimos las constantes de colores
  RED = 30
  YELLOW = 60
  GREEN = 170
  BLUE = 330
  RWHITE = 40
  GWHITE = 52
  BWHITE = 41
  
  ' Inicializamos variables
  hue = 0
  sat = 0
  value = 0
  color = 0
  
  ' Arreglos para almacenar los valores normalizados
  rNormArray[0] = 0
  gNormArray[0] = 0
  bNormArray[0] = 0
  
  LCD.Clear()
  
  ' Tomamos muestras de color
  For j = 1 To reps Step 1
    
    rgb = Sensor.ReadRaw(sens, 3)
    
    rRaw = rgb[0]
    gRaw = rgb[1]
    bRaw = rgb[2]
    
    rNormArray[j] = Math.Round(rRaw/RWHITE*255)
    gNormArray[j] = Math.Round(gRaw/GWHITE*255)
    bNormArray[j] = Math.Round(bRaw/BWHITE*255)
    
    Program.Delay(5)
  EndFor
  
  'Realizamos la media de las muestras
  
  For j = 1 To reps Step 2
    rNorm = rNormArray[j] + rNormArray[j+1]
    gNorm = gNormArray[j] + gNormArray[j+1]
    bNorm = bNormArray[j] + bNormArray[j+1]
  EndFor
  
  rNorm /= reps
  gNorm /= reps
  bNorm /= reps
  
  max = Math.Max(Math.Max(rNorm,gNorm), bNorm)
  min = Math.Min(Math.Min(rNorm,gNorm), bNorm)
  
  ' Calculamos el hue
  If max = min Then
    hue = 0   'Escala de grises, no importa el hue
  ElseIf max = rNorm Then
    If gNorm >= bNorm Then
      hue = 60 * (gNorm - bNorm) / (max - min) 'Rojo o amarillo
    Else
      hue = 60 * (gNorm - bNorm) / (max - min) + 360 'Rojo o morado
    EndIf
  ElseIf max = gNorm Then
    hue = 60 * (bNorm - rNorm) / (max - min) + 120 'Verde o amarillo
  Else
    hue = 60 * (rNorm - gNorm) / (max - min) + 240 'Azul o morado
  EndIf
  
  ' Calculamos la saturación
  If max = 0 Then
    sat = 0
  Else
    sat = 1 - min / max   'A mayor diferencia, mayor saturación, diferencia entre escala de grises o color
  EndIf
  
  ' Calculamos el value y el Gris
  value = max
  rgbGrey = (VALUEBLANCO + VALUENEGRO) / 2
  
  ' Detectamos el color
  If rNorm + gNorm + bNorm <= 3 Then
    color = 0   'Si no hay lecturas, el color es 0 (nada)
  Else
    If sat < 0.2 Then
      If value > rgbGrey Then   'está en la escala de grises por poca saturación
        color = 6    'Blanco si la luz es alta
      Else
        color = 1    'Negro si es baja
      EndIf
    Else       'Rueda de color
      If hue >= 0 And hue < RED Then
        color = 5
      ElseIf hue >= RED And hue < YELLOW Then
        color = 4
      ElseIf hue >= YELLOW And hue < GREEN Then
        color = 3
      ElseIf hue >= GREEN And hue < BLUE Then
        color = 2
      Else
        color = 5
      EndIf
    EndIf
  EndIf
  
  ' Mostramos los resultados en la pantalla
  
  LCD.StopUpdate()
  LCD.Clear()
  LCD.Write(33, 20, "R: " + rRaw)
  LCD.Write(33, 35, "G: " + gRaw)
  LCD.Write(33, 50, "B: " + bRaw)
  LCD.Write(33, 70, "color: " + color)
  LCD.Write(33, 90, "Value: " + value)
  LCD.Update()
  
 'reiniciamos el sensor
  Sensor.SetMode(sens,sens_mode)
  
EndFunction

Function Time(in number sens, in number time, out number color)
  'Lectura rgb
  
  'Ponemos el sensor en modo rgb
  sens_ode = Sensor.GetMode(sens)
  Sensor.SetMode(sens,4)
  
  'Definimos las variables
  
  RED = 15
  YELLOW = 60
  GREEN = 170
  BLUE = 330
  RWHITE = 147 '235
  GWHITE = 143 '232
  BWHITE = 200 '234
  
  hue = 0
  sat = 0
  value = 0
  color = 0
  rNormArray[0] = 0
  gNormArray[0] = 0
  bNormArray[0] = 0
  
  LCD.Clear()
  Time.Reset8()
  
  'Tomamos muestras de color
  k = 1
  While Time.Get8() < time
    
    rgb = Sensor.ReadRaw(sens, 3)
    
    rRaw = rgb[0]
    gRaw = rgb[1]
    bRaw = rgb[2]
    
    rNormArray[k] = Math.Round(rRaw/RWHITE*255)
    gNormArray[k] = Math.Round(gRaw/GWHITE*255)
    bNormArray[k] = Math.Round(bRaw/BWHITE*255)
    
    k ++
  EndWhile
  
  'Realizamos la media de las muestras
  
  For j = 1 To k Step 2
    rNorm = rNormArray[j] + rNormArray[j+1]
    gNorm = gNormArray[j] + gNormArray[j+1]
    bNorm = bNormArray[j] + bNormArray[j+1]
  EndFor
  
  rNorm /= k
  gNorm /= k
  bNorm /= k
  max = Math.Max(Math.Max(rNorm,gNorm), bNorm)
  min = Math.Min(Math.Min(rNorm,gNorm), bNorm)
  
  'Empezamos con los algoritmos para calcular el hue
  
  If max = min Then
    hue = 0
  ElseIf max = rNorm Then
    If gNorm >= bNorm Then
      hue = 60*(gNorm-bNorm)/(max-min)
    Else
      hue = 60*(gNorm-bNorm)/(max-min)+360
    EndIf
  ElseIf max = gNorm Then
    hue = 60*(bNorm-rNorm)/(max-min)+120
  Else
    hue = 60*(rNorm-gNorm)/(max-min)+240
  EndIf
  
  'Sacamos la saturación
  If max = 0 Then
    sat = 0
  Else
    sat = 1-min/max
  EndIf
  
  'Sacamos el value y el Gris
  value = max
  rgbGrey = (VALUEBLANCO+VALUENEGRO)/2
  
  'Detectamos el color
  If rNorm+gNorm+bNorm <= 3 Then
    color = 0
  Else
    If sat < 0.4 Then
      If value > rgbGrey Then
        color = 6
      Else
        color = 1
      EndIf
    Else
      If hue >= 0 And hue < RED Then
        color = 5
      ElseIf hue >= RED And hue < YELLOW Then
        color = 4
      ElseIf hue >= YELLOW And hue < GREEN Then
        color = 3
      ElseIf hue >= GREEN And hue < BLUE Then
        color = 2
      Else
        color = 5
      EndIf
    EndIf
  EndIf
  LCD.Write(33, 20, "R: "+rRaw)
  LCD.Write(33, 35, "G: "+gRaw)
  LCD.Write(33, 50, "B: "+bRaw)
  LCD.Write(33, 70, "color: "+color)
  LCD.Write(33, 90, "Value: "+value)
  
  'Devolver sensor a modo anterior
  
  Sensor.SetMode(sens, sens_mode)
  
EndFunction

Function Gritar(in number color)
  
  If color = 0 Then
    Speaker.Play(100,"Zero")
  ElseIf color = 1 Then
    Speaker.Play(100,"Black")
  ElseIf color = 2 Then
    Speaker.Play(100,"BLUE")
  ElseIf color = 3 Then
    Speaker.Play(100,"GREEN")
  ElseIf color = 4 Then
    Speaker.Play(100,"YELLOW")
  ElseIf color = 5 Then
    Speaker.Play(100,"RED")
  ElseIf color = 6 Then
    Speaker.Play(100,"White")
  ElseIf color = 7 Then
    Speaker.Play(100,"Brown")
  EndIf
  Speaker.Wait()
EndFunction
