'Brazo por tiempo

Function AEncoder(in number velocidad, in number encoder)
  
  encDiff = encoder - Motor.GetCount("A")
  
  signo = encDiff / Math.Abs(encDiff)
  
  safetyTimer = Math.Max(((Math.abs(encDiff)/100)/(velocidad/20)*650*2),400)
  
  Time.Reset3()
  
  If encDiff <> 0 Then
    
    While Math.Abs(Motor.GetCount("A") - encoder) > 25 and Time.Get3() < 2000
      ' Puedes ajustar el Valor (5) para controlar la precisión
      MotorA.StartSpeed(signo * velocidad)
    EndWhile
    
    Motor.Stop("A", "True")
  EndIf
  
EndFunction

Function ATimer(in number velocidad, in number timer)
  Time.Reset1()
  While Time.Get1() < timer
    MotorA.StartSpeed(velocidad)
  EndWhile
  Motor.Stop("A", "True")
EndFunction

'Ambos brazos - AD

'Brazos por encoder

Function ADEncoder(in number velocidadA,in number velocidadD, in number encoderA, in number encoderD)
  
   
  encDiffA = encoderA - Motor.GetCount("A")
  encDiffD = encoderD - Motor.GetCount("D")
  
  signoA = encDiffA / Math.Abs(encDiffA)
  signoD = encDiffD / Math.Abs(encDiffD)
  
  safetyTimer = Math.Max(((Math.abs(Math.Max(Math.Abs(encDiffA),Math.Abs(encDiffD)))/100)/(Math.Min(velocidadA,velocidadD)/20)*650*2)*2/3,400)
  
  Time.Reset3()
  
  While (MotorA.GetTacho() <> encoderA Or MotorD.GetTacho() <> encoderD) And Time.Get3() < safetyTimer
    
    If MotorA.GetTacho() < encoderA Then
      MotorA.StartSpeed(Math.Min(velocidadA, velocidadA/2 + (encoderA - MotorA.GetTacho()) / 10))
    ElseIf MotorA.GetTacho() > encoderA Then
      MotorA.StartSpeed(-Math.Min(velocidadA, velocidadA/2 + (MotorA.GetTacho() - encoderA) / 10))
    Else
      MotorA.OffAndBrake()
    EndIf
    
    If MotorD.GetTacho() < encoderD Then
      MotorD.StartSpeed(Math.Min(velocidadD, velocidadD/2 + (encoderD - MotorD.GetTacho()) / 10))
    ElseIf MotorD.GetTacho() > encoderD Then
      MotorD.StartSpeed(-Math.Min(velocidadD, velocidadD/2 + (MotorD.GetTacho() - encoderD) / 10))
    Else
      MotorD.OffAndBrake()
    EndIf
  EndWhile
  MotorAD.OffAndBrake()
EndFunction

Function ADTimer(in number velocidadA, in number velocidadD, in number timer)
  Time.Reset1()
  While Time.Get1() < timer
    MotorA.StartSpeed(velocidadA)
    MotorD.StartSpeed(velocidadD)
  EndWhile
  Motor.Stop("AD", "True")
EndFunction

'Brazo Dch - D

'Brazo por tiempo

Function DEncoder(in number velocidad, in number encoder)
  
  encDiff = encoder - Motor.GetCount("D")
  
  signo = encDiff / Math.Abs(encDiff)
  
  safetyTimer = Math.Max(((Math.abs(encDiff)/100)/(velocidad/20)*650*2),400)
  
  Time.Reset3()
  
  If encDiff <> 0 Then
    
    While Math.Abs(Motor.GetCount("D") - encoder) > 15 and Time.Get3() < safetyTimer
      ' Puedes ajustar el velocidadAlor (5) para controlar la precisión
      MotorD.StartSpeed(signo * velocidad)
      LCD.Clear()
		  LCD.Write(5,30,"safetyTimer: "+safetyTimer)
    EndWhile
    
    Motor.Stop("D", "True")
  EndIf
  
EndFunction

Function DTimer(in number velocidad, in number timer)
  Time.Reset1()
  While Time.Get1() < timer
    MotorD.StartSpeed(velocidad)
  EndWhile
  MotorD.OffAndBrake()
EndFunction
