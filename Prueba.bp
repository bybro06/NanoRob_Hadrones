import "modules/Siguelineas"
import "modules/Giro"
import "modules/Recto"
import "modules/Shift"
import "modules/Brazo"
import "modules/Smart"
import "modules/RGB"

encoderD = 0
setup()
Thread.Run = ControlBrazo
Main()



Sub Main
  
  for i=0 to 20
    Motor.MoveSync("BC",-100,100,100,"True")
    Motor.MoveSync("BC",100,-100,360,"True")
  EndFor
  
EndSub

Sub ControlBrazo
  encoderA = 0
  encoderD = 0
  
  errorA = 0
  olderrorA = 0
  
  errorD = 0
  olderrorD = 0
  
  While "True"
    errorA = encoderA - MotorA.GetTacho()
    errorD = encoderD - MotorD.GetTacho()
    correccionA = errorA * 1 + (errorA - olderrorA) * 0.3
    correccionD = errorD * 1 + (errorD - olderrorD) * 1
    MotorA.StartSpeed(correccionA)
    MotorD.StartSpeed(correccionD)
  EndWhile
  
EndSub


Sub StartArm
  Brazo.ADTimer(40,0,800)
  MotorA.ResetCount()
  MotorD.ResetCount()
  Brazo.AEncoder(30,-110)
  MotorA.ResetCount()
  MotorD.ResetCount()
  Brazo.AEncoder(30,-130)
EndSub

Sub Display
  While "True"
    LCD.StopUpdate()
    LCD.Clear()
    LCD.Write(5,5,"Encoder B: "+ MotorB.GetTacho()*-1)
    LCD.Write(5,15,"Encoder C: "+ MotorC.GetTacho())
    LCD.Write(5,30,"Diferencia: "+ (MotorB.GetTacho()*-1 -MotorC.GetTacho()))
    LCD.Update()
    Program.Delay(100)
   EndWhile
EndSub

Sub Coger
  Brazo.AEncoder(50,-210)
  Recto.Encoder(25,6)
  Brazo.AEncoder(30,-60)
  Program.Delay(200)
  Brazo.DTimer(60,400)
  Brazo.AEncoder(50,90)
  Brazo.DEncoder(60,-80)
  Brazo.AEncoder(50,-130)
EndSub

Sub Setup
  Sensor.SetMode(1,0)
  Sensor.SetMode(2,3)
  Sensor.SetMode(3,0)
  Sensor.SetMode(4,0)
EndSub

Function DEncoder(in number Velocidad, in number Encoder)
  
  encDiff = Encoder - Motor.GetCount("D")
  
  signo = encDiff / Math.Abs(encDiff)
  
  SafetyTimer = Math.Max(((Math.abs(encDiff)/100)/(Velocidad/20)*650*2),400)
  
  Time.Reset3()
  
  If encDiff <> 0 Then
    
    While Math.Abs(Motor.GetCount("D") - Encoder) > 15 and Time.Get3() < SafetyTimer
      ' Puedes ajustar el VelocidadAlor (5) para controlar la precisiÃ³n
      @encoderD = @encoderD * (Velocidad/500*signo)
      LCD.Clear()
		  LCD.Write(5,30,"SafetyTimer: "+SafetyTimer)
    EndWhile
    
    Motor.Stop("D", "True")
  EndIf
  
EndFunction