DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_105
DATAF VLV_AENC_105
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V1_35
DATAF VLV_V2_35
DATAF VLV_ANGLE_35
DATAF VLV_V_95
DATAF VLV_AENC_95
DATAF VLV_VELOCIDAD1_25
DATAF VLV_VELOCIDAD2_25
DATAF VLV_TIEMPO_25
DATAF VLV_VELOCIDAD_39
DATAF VLV_V_101
DATAF VLV_VELOCIDAD_13
DATAF VLV_TIEMPO_13
DATAF VLV_V_96
DATAF VLV_READ_130
DATAF VLV_VELOCIDAD_5
DATAF VLV_SENS_5
DATAF VLV_VELOCIDAD_3
DATAF VLV_SENS_3
DATAF VLV_VELOCIDAD1_17
DATAF VLV_VELOCIDAD2_17
DATAF VLV_SENS_17
DATAF VLV_VELOCIDAD_76
DATAF VLV_KP_76
DATAF VLV_KI_76
DATAF VLV_KD_76
DATAF VLV_ENCODER_76
DATAF VLV_VELOCIDAD_75
DATAF VLV_KP_75
DATAF VLV_KI_75
DATAF VLV_KD_75
DATAF VLV_ENCODER_75
DATAF VLV_VELOCIDAD_82
DATAF VLV_KP_82
DATAF VLV_KI_82
DATAF VLV_KD_82
DATAF VLV_LADO_82
DATAF VLV_SENS_82
DATAF VLV_VEL_33
DATAF VLV_VEL_31
DATAF VLV_VELOCIDAD_71
DATAF VLV_KP_71
DATAF VLV_KI_71
DATAF VLV_KD_71
DATAF VLV_VELOCIDAD_37
DATAF VLV_VELOCIDAD1_15
DATAF VLV_VELOCIDAD2_15
DATAF VLV_ENCODER_15
DATAF VLV_V0_49
DATAF VLV_VMAX_49
DATAF VLV_DISTANCIA1_49
DATAF VLV_DISTANCIA2_49
DATAF VLV_DISTANCIA3_49
DATAF VLV_V_104
DATAF VLV_GRADOS_104
DATAF VLV_V0_56
DATAF VLV_VMAX_56
DATAF VLV_KP_56
DATAF VLV_KI_56
DATAF VLV_KD_56
DATAF VLV_ACCELENCODER_56
DATAF VLV_VELOCIDAD_72
DATAF VLV_KP_72
DATAF VLV_KI_72
DATAF VLV_KD_72
DATAF VLV_VMAX_88
DATAF VLV_KP_88
DATAF VLV_KI_88
DATAF VLV_KD_88
DATAF VLV_COLOR_122
DATAF VLV_REPS_110
DATAF VLV_COLOR_110
DATAF VLV_REPS_111
DATAF VLV_COLOR_111
DATAF VLV_REPS_112
DATAF VLV_COLOR_112
DATAF VLV_REPS_113
DATAF VLV_COLOR_113
DATAF VLV_V_108
DATAF VLV_T_108
DATAF VLV_V_109
DATAF VLV_AENC_109
DATAF VGV_BLOQUE
DATAF VLV_COLOR_114
DATAF VLV_COLOR_115
DATAF VLV_COLOR_116
DATAF VLV_COLOR_117
DATAF VGV_CENTRO
DATAF VGV_XTIME
DATAF VGV_YTIME
DATAF VGV_THETATIME
DATAF VGV_XTCORRECT
DATAF VGV_YTCORRECT
DATAF VGV_THETATCORRECT
DATAF VGV_SENTIDO_D
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DW
DATAF VGV_DIAMETER
DATAF VGV_D_T
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_CORRECCION
DATAF VGV_G1
DATAF VGV_ROJOS
DATAF VGV_AMARILLOS
DATAF VGV_VERDES
DATAF VGV_AZULES
DATAF VGV_NUMERO_BLOQUES
ARRAY16 VGV_BOMBOCLAT 2
ARRAY16 VGV_ALPHA_L 2
ARRAY16 VGV_ALPHA_R 2
DATAF VGV_OLDB
DATAF VGV_OLDC
ARRAY16 VGV_XT 2
ARRAY16 VGV_YT 2
ARRAY16 VGV_THETAT 2
DATAF VGV_I
DATAF VGV_D_L
DATAF VGV_D_R
DATAF VGV_D
DATAF VGV_DELTA_THETA
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAF VLV_START_B_3
DATAF VLV_START_C_3
DATAF VLV_ENCODER_B_3
DATAF VLV_ENCODER_C_3
DATAF VLV_ERROR_3
DATAF VLV_PROPORCIAL_3
DATAF VLV_START_B_5
DATAF VLV_START_C_5
DATAF VLV_ENCODER_B_5
DATAF VLV_ENCODER_C_5
DATAF VLV_ERROR_5
DATAF VLV_PROPORCIAL_5
DATAF VLV_START_B_13
DATAF VLV_START_C_13
DATAF VLV_ENCODER_B_13
DATAF VLV_ENCODER_C_13
DATAF VLV_ERROR_13
DATAF VLV_PROPORCIAL_13
DATAF VLV_DIAMETRO_15
DATAF VLV_DISTANCIA_15
DATAF VLV_AVANCE_31
DATAF VLV_GINICIO_31
DATAF VLV_AJUSTE_31
DATAF VLV_AVANCE_33
DATAF VLV_GINICIO_33
DATAF VLV_AJUSTE_33
DATAS VLV_I_35 252
DATAS VLV_D_35 252
DATAF VLV_SIGNO_35
DATAF VLV_VMIN_35
DATAF VLV_VMAX_35
DATAF VLV_ENCODR_35
DATAS VLV_I_37 252
DATAS VLV_D_37 252
DATAF VLV_ENCODR_37
DATAF VLV_ANGLE_37
DATAS VLV_I_39 252
DATAS VLV_D_39 252
DATAF VLV_ENCODR_39
DATAF VLV_ANGLE_39
DATAF VLV_START_B_49
DATAF VLV_START_C_49
DATAF VLV_ENCODER_B_49
DATAF VLV_ENCODER_C_49
DATAF VLV_VEL_49
DATAF VLV_KP_49
DATAF VLV_KI_49
DATAF VLV_KD_49
DATAF VLV_ERROR_49
DATAF VLV_OLDERROR_49
DATAF VLV_ERRSUM_49
DATAF VLV_GRADOS1_49
DATAF VLV_GRADOS2_49
DATAF VLV_GRADOS3_49
DATAF VLV_PENDIENTE_49
DATAF VLV_CORRECCION_49
DATAS VLV_I_56 252
DATAS VLV_D_56 252
DATAF VLV_U_56
DATAF VLV_ERROR_56
DATAF VLV_OLDERROR_56
DATAF VLV_ERRSUM_56
DATAF VLV_VEL_56
DATAF VLV_SENTIDO_56
DATAS VLV_I_71 252
DATAS VLV_D_71 252
DATAF VLV_ERROR_71
DATAF VLV_OLDERROR_71
DATAF VLV_ERRSUM_71
DATAF VLV_U_71
DATAF VLV_SENTIDO_71
DATAS VLV_I_72 252
DATAS VLV_D_72 252
DATAF VLV_ERROR_72
DATAF VLV_OLDERROR_72
DATAF VLV_ERRSUM_72
DATAF VLV_U_72
DATAF VLV_SENTIDO_72
DATAS VLV_I_75 252
DATAS VLV_D_75 252
DATAF VLV_ERROR_75
DATAF VLV_OLDERROR_75
DATAF VLV_ERRSUM_75
DATAF VLV_U_75
DATAF VLV_SENTIDO_75
DATAF VLV_START_C_75
DATAF VLV_ENCODER_C_75
DATAS VLV_I_76 252
DATAS VLV_D_76 252
DATAF VLV_ERROR_76
DATAF VLV_OLDERROR_76
DATAF VLV_ERRSUM_76
DATAF VLV_U_76
DATAF VLV_SENTIDO_76
DATAF VLV_START_C_76
DATAF VLV_ENCODER_C_76
DATAS VLV_I_82 252
DATAS VLV_D_82 252
DATAF VLV_ERROR_82
DATAF VLV_OLDERROR_82
DATAF VLV_ERRSUM_82
DATAF VLV_U_82
DATAF VLV_SENTIDO_82
DATAF VLV_READER_82
DATAS VLV_I_88 252
DATAS VLV_D_88 252
DATAF VLV_V0_88
DATAF VLV_ACCELENCODER_88
DATAF VLV_U_88
DATAF VLV_ERRSUM_88
DATAF VLV_OLDERROR_88
DATAF VLV_VEL_88
DATAF VLV_SENTIDO_88
DATAF VLV_ERROR_88
DATAF VLV_ENCDIFF_95
DATAF VLV_SIGNO_95
DATAF VLV_ENCDIFF_96
DATAF VLV_SIGNO_96
DATAF VLV_AENC_101
DATAF VLV_ENCDIFF_101
DATAF VLV_SIGNO_101
DATAF VLV_SAFETYTIMER_101
DATAF VLV_DIFFA_104
DATAF VLV_DIFFD_104
DATAF VLV_SAFETYTIMER_104
DATAF VLV_SIGNOA_104
DATAF VLV_SIGNOD_104
DATAF VLV_VELA_104
DATAF VLV_VELD_104
DATAF VLV_ENCDIFF_105
DATAF VLV_SIGNO_105
DATAF VLV_ENCDIFF_109
DATAF VLV_SIGNO_109
DATAF VLV_SAFETYTIMER_109
DATAF VLV_RED_110
DATAF VLV_YELLOW_110
DATAF VLV_GREEN_110
DATAF VLV_BLUE_110
DATAF VLV_VALUENEGRO_110
DATAF VLV_VALUEBLANCO_110
DATAF VLV_RWHITE_110
DATAF VLV_GWHITE_110
DATAF VLV_BWHITE_110
DATAF VLV_HUE_110
DATAF VLV_SAT_110
DATAF VLV_VALUE_110
ARRAY16 VLV_RNORMA_110 2
ARRAY16 VLV_GNORMA_110 2
ARRAY16 VLV_BNORMA_110 2
ARRAY16 VLV_MAXA_110 2
DATAF VLV_J_110
ARRAY16 VLV_RGB_110 2
DATAF VLV_RRAW_110
DATAF VLV_GRAW_110
DATAF VLV_BRAW_110
DATAF VLV_RNORM_110
DATAF VLV_GNORM_110
DATAF VLV_BNORM_110
DATAF VLV_MAX_110
DATAF VLV_MIN_110
DATAF VLV_RGBGREY_110
DATAF VLV_RED_111
DATAF VLV_YELLOW_111
DATAF VLV_GREEN_111
DATAF VLV_BLUE_111
DATAF VLV_VALUENEGRO_111
DATAF VLV_VALUEBLANCO_111
DATAF VLV_RWHITE_111
DATAF VLV_GWHITE_111
DATAF VLV_BWHITE_111
DATAF VLV_HUE_111
DATAF VLV_SAT_111
DATAF VLV_VALUE_111
ARRAY16 VLV_RNORMA_111 2
ARRAY16 VLV_GNORMA_111 2
ARRAY16 VLV_BNORMA_111 2
ARRAY16 VLV_MAXA_111 2
DATAF VLV_J_111
ARRAY16 VLV_RGB_111 2
DATAF VLV_RRAW_111
DATAF VLV_GRAW_111
DATAF VLV_BRAW_111
DATAF VLV_RNORM_111
DATAF VLV_GNORM_111
DATAF VLV_BNORM_111
DATAF VLV_MAX_111
DATAF VLV_MIN_111
DATAF VLV_RGBGREY_111
DATAF VLV_RED_112
DATAF VLV_YELLOW_112
DATAF VLV_GREEN_112
DATAF VLV_BLUE_112
DATAF VLV_VALUENEGRO_112
DATAF VLV_VALUEBLANCO_112
DATAF VLV_RWHITE_112
DATAF VLV_GWHITE_112
DATAF VLV_BWHITE_112
DATAF VLV_HUE_112
DATAF VLV_SAT_112
DATAF VLV_VALUE_112
ARRAY16 VLV_RNORMA_112 2
ARRAY16 VLV_GNORMA_112 2
ARRAY16 VLV_BNORMA_112 2
ARRAY16 VLV_MAXA_112 2
DATAF VLV_J_112
ARRAY16 VLV_RGB_112 2
DATAF VLV_RRAW_112
DATAF VLV_GRAW_112
DATAF VLV_BRAW_112
DATAF VLV_RNORM_112
DATAF VLV_GNORM_112
DATAF VLV_BNORM_112
DATAF VLV_MAX_112
DATAF VLV_MIN_112
DATAF VLV_RGBGREY_112
DATAF VLV_RED_113
DATAF VLV_YELLOW_113
DATAF VLV_GREEN_113
DATAF VLV_BLUE_113
DATAF VLV_VALUENEGRO_113
DATAF VLV_VALUEBLANCO_113
DATAF VLV_RWHITE_113
DATAF VLV_GWHITE_113
DATAF VLV_BWHITE_113
DATAF VLV_HUE_113
DATAF VLV_SAT_113
DATAF VLV_VALUE_113
ARRAY16 VLV_RNORMA_113 2
ARRAY16 VLV_GNORMA_113 2
ARRAY16 VLV_BNORMA_113 2
ARRAY16 VLV_MAXA_113 2
DATAF VLV_J_113
ARRAY16 VLV_RGB_113 2
DATAF VLV_RRAW_113
DATAF VLV_GRAW_113
DATAF VLV_BRAW_113
DATAF VLV_RNORM_113
DATAF VLV_GNORM_113
DATAF VLV_BNORM_113
DATAF VLV_MAX_113
DATAF VLV_MIN_113
DATAF VLV_RGBGREY_113
DATA32 RUNCOUNTER_F_ODOMETRY_0
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_VELOCIDAD1_25
    MOVEF_F 0.0 VLV_VELOCIDAD2_25
    MOVEF_F 0.0 VLV_TIEMPO_25
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_V_96
    MOVEF_F 0.0 VLV_READ_130
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VELOCIDAD1_17
    MOVEF_F 0.0 VLV_VELOCIDAD2_17
    MOVEF_F 0.0 VLV_SENS_17
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_LADO_82
    MOVEF_F 0.0 VLV_SENS_82
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VEL_31
    MOVEF_F 0.0 VLV_VELOCIDAD_71
    MOVEF_F 0.0 VLV_KP_71
    MOVEF_F 0.0 VLV_KI_71
    MOVEF_F 0.0 VLV_KD_71
    MOVEF_F 0.0 VLV_VELOCIDAD_37
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_V0_49
    MOVEF_F 0.0 VLV_VMAX_49
    MOVEF_F 0.0 VLV_DISTANCIA1_49
    MOVEF_F 0.0 VLV_DISTANCIA2_49
    MOVEF_F 0.0 VLV_DISTANCIA3_49
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYCREATE_FLOAT VGV_BOMBOCLAT
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_L
    CALL ARRAYCREATE_FLOAT VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYCREATE_FLOAT VGV_XT
    CALL ARRAYCREATE_FLOAT VGV_YT
    CALL ARRAYCREATE_FLOAT VGV_THETAT
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_D_L
    MOVEF_F 0.0 VGV_D_R
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_DELTA_THETA
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    MOVEF_F 0.0 VLV_START_B_3
    MOVEF_F 0.0 VLV_START_C_3
    MOVEF_F 0.0 VLV_ENCODER_B_3
    MOVEF_F 0.0 VLV_ENCODER_C_3
    MOVEF_F 0.0 VLV_ERROR_3
    MOVEF_F 0.0 VLV_PROPORCIAL_3
    MOVEF_F 0.0 VLV_START_B_5
    MOVEF_F 0.0 VLV_START_C_5
    MOVEF_F 0.0 VLV_ENCODER_B_5
    MOVEF_F 0.0 VLV_ENCODER_C_5
    MOVEF_F 0.0 VLV_ERROR_5
    MOVEF_F 0.0 VLV_PROPORCIAL_5
    MOVEF_F 0.0 VLV_START_B_13
    MOVEF_F 0.0 VLV_START_C_13
    MOVEF_F 0.0 VLV_ENCODER_B_13
    MOVEF_F 0.0 VLV_ENCODER_C_13
    MOVEF_F 0.0 VLV_ERROR_13
    MOVEF_F 0.0 VLV_PROPORCIAL_13
    MOVEF_F 0.0 VLV_DIAMETRO_15
    MOVEF_F 0.0 VLV_DISTANCIA_15
    MOVEF_F 0.0 VLV_AVANCE_31
    MOVEF_F 0.0 VLV_GINICIO_31
    MOVEF_F 0.0 VLV_AJUSTE_31
    MOVEF_F 0.0 VLV_AVANCE_33
    MOVEF_F 0.0 VLV_GINICIO_33
    MOVEF_F 0.0 VLV_AJUSTE_33
    STRINGS DUPLICATE '' VLV_I_35
    STRINGS DUPLICATE '' VLV_D_35
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VMIN_35
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_ENCODR_35
    STRINGS DUPLICATE '' VLV_I_37
    STRINGS DUPLICATE '' VLV_D_37
    MOVEF_F 0.0 VLV_ENCODR_37
    MOVEF_F 0.0 VLV_ANGLE_37
    STRINGS DUPLICATE '' VLV_I_39
    STRINGS DUPLICATE '' VLV_D_39
    MOVEF_F 0.0 VLV_ENCODR_39
    MOVEF_F 0.0 VLV_ANGLE_39
    MOVEF_F 0.0 VLV_START_B_49
    MOVEF_F 0.0 VLV_START_C_49
    MOVEF_F 0.0 VLV_ENCODER_B_49
    MOVEF_F 0.0 VLV_ENCODER_C_49
    MOVEF_F 0.0 VLV_VEL_49
    MOVEF_F 0.0 VLV_KP_49
    MOVEF_F 0.0 VLV_KI_49
    MOVEF_F 0.0 VLV_KD_49
    MOVEF_F 0.0 VLV_ERROR_49
    MOVEF_F 0.0 VLV_OLDERROR_49
    MOVEF_F 0.0 VLV_ERRSUM_49
    MOVEF_F 0.0 VLV_GRADOS1_49
    MOVEF_F 0.0 VLV_GRADOS2_49
    MOVEF_F 0.0 VLV_GRADOS3_49
    MOVEF_F 0.0 VLV_PENDIENTE_49
    MOVEF_F 0.0 VLV_CORRECCION_49
    STRINGS DUPLICATE '' VLV_I_56
    STRINGS DUPLICATE '' VLV_D_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    MOVEF_F 0.0 VLV_VEL_56
    MOVEF_F 0.0 VLV_SENTIDO_56
    STRINGS DUPLICATE '' VLV_I_71
    STRINGS DUPLICATE '' VLV_D_71
    MOVEF_F 0.0 VLV_ERROR_71
    MOVEF_F 0.0 VLV_OLDERROR_71
    MOVEF_F 0.0 VLV_ERRSUM_71
    MOVEF_F 0.0 VLV_U_71
    MOVEF_F 0.0 VLV_SENTIDO_71
    STRINGS DUPLICATE '' VLV_I_72
    STRINGS DUPLICATE '' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MOVEF_F 0.0 VLV_SENTIDO_72
    STRINGS DUPLICATE '' VLV_I_75
    STRINGS DUPLICATE '' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MOVEF_F 0.0 VLV_SENTIDO_75
    MOVEF_F 0.0 VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
    STRINGS DUPLICATE '' VLV_I_76
    STRINGS DUPLICATE '' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MOVEF_F 0.0 VLV_SENTIDO_76
    MOVEF_F 0.0 VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
    STRINGS DUPLICATE '' VLV_I_82
    STRINGS DUPLICATE '' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MOVEF_F 0.0 VLV_SENTIDO_82
    MOVEF_F 0.0 VLV_READER_82
    STRINGS DUPLICATE '' VLV_I_88
    STRINGS DUPLICATE '' VLV_D_88
    MOVEF_F 0.0 VLV_V0_88
    MOVEF_F 0.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    MOVEF_F 0.0 VLV_VEL_88
    MOVEF_F 0.0 VLV_SENTIDO_88
    MOVEF_F 0.0 VLV_ERROR_88
    MOVEF_F 0.0 VLV_ENCDIFF_95
    MOVEF_F 0.0 VLV_SIGNO_95
    MOVEF_F 0.0 VLV_ENCDIFF_96
    MOVEF_F 0.0 VLV_SIGNO_96
    MOVEF_F 0.0 VLV_AENC_101
    MOVEF_F 0.0 VLV_ENCDIFF_101
    MOVEF_F 0.0 VLV_SIGNO_101
    MOVEF_F 0.0 VLV_SAFETYTIMER_101
    MOVEF_F 0.0 VLV_DIFFA_104
    MOVEF_F 0.0 VLV_DIFFD_104
    MOVEF_F 0.0 VLV_SAFETYTIMER_104
    MOVEF_F 0.0 VLV_SIGNOA_104
    MOVEF_F 0.0 VLV_SIGNOD_104
    MOVEF_F 0.0 VLV_VELA_104
    MOVEF_F 0.0 VLV_VELD_104
    MOVEF_F 0.0 VLV_ENCDIFF_105
    MOVEF_F 0.0 VLV_SIGNO_105
    MOVEF_F 0.0 VLV_ENCDIFF_109
    MOVEF_F 0.0 VLV_SIGNO_109
    MOVEF_F 0.0 VLV_SAFETYTIMER_109
    MOVEF_F 0.0 VLV_RED_110
    MOVEF_F 0.0 VLV_YELLOW_110
    MOVEF_F 0.0 VLV_GREEN_110
    MOVEF_F 0.0 VLV_BLUE_110
    MOVEF_F 0.0 VLV_VALUENEGRO_110
    MOVEF_F 0.0 VLV_VALUEBLANCO_110
    MOVEF_F 0.0 VLV_RWHITE_110
    MOVEF_F 0.0 VLV_GWHITE_110
    MOVEF_F 0.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_110
    CALL ARRAYCREATE_FLOAT VLV_MAXA_110
    MOVEF_F 0.0 VLV_J_110
    CALL ARRAYCREATE_FLOAT VLV_RGB_110
    MOVEF_F 0.0 VLV_RRAW_110
    MOVEF_F 0.0 VLV_GRAW_110
    MOVEF_F 0.0 VLV_BRAW_110
    MOVEF_F 0.0 VLV_RNORM_110
    MOVEF_F 0.0 VLV_GNORM_110
    MOVEF_F 0.0 VLV_BNORM_110
    MOVEF_F 0.0 VLV_MAX_110
    MOVEF_F 0.0 VLV_MIN_110
    MOVEF_F 0.0 VLV_RGBGREY_110
    MOVEF_F 0.0 VLV_RED_111
    MOVEF_F 0.0 VLV_YELLOW_111
    MOVEF_F 0.0 VLV_GREEN_111
    MOVEF_F 0.0 VLV_BLUE_111
    MOVEF_F 0.0 VLV_VALUENEGRO_111
    MOVEF_F 0.0 VLV_VALUEBLANCO_111
    MOVEF_F 0.0 VLV_RWHITE_111
    MOVEF_F 0.0 VLV_GWHITE_111
    MOVEF_F 0.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_111
    CALL ARRAYCREATE_FLOAT VLV_MAXA_111
    MOVEF_F 0.0 VLV_J_111
    CALL ARRAYCREATE_FLOAT VLV_RGB_111
    MOVEF_F 0.0 VLV_RRAW_111
    MOVEF_F 0.0 VLV_GRAW_111
    MOVEF_F 0.0 VLV_BRAW_111
    MOVEF_F 0.0 VLV_RNORM_111
    MOVEF_F 0.0 VLV_GNORM_111
    MOVEF_F 0.0 VLV_BNORM_111
    MOVEF_F 0.0 VLV_MAX_111
    MOVEF_F 0.0 VLV_MIN_111
    MOVEF_F 0.0 VLV_RGBGREY_111
    MOVEF_F 0.0 VLV_RED_112
    MOVEF_F 0.0 VLV_YELLOW_112
    MOVEF_F 0.0 VLV_GREEN_112
    MOVEF_F 0.0 VLV_BLUE_112
    MOVEF_F 0.0 VLV_VALUENEGRO_112
    MOVEF_F 0.0 VLV_VALUEBLANCO_112
    MOVEF_F 0.0 VLV_RWHITE_112
    MOVEF_F 0.0 VLV_GWHITE_112
    MOVEF_F 0.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_MAXA_112
    MOVEF_F 0.0 VLV_J_112
    CALL ARRAYCREATE_FLOAT VLV_RGB_112
    MOVEF_F 0.0 VLV_RRAW_112
    MOVEF_F 0.0 VLV_GRAW_112
    MOVEF_F 0.0 VLV_BRAW_112
    MOVEF_F 0.0 VLV_RNORM_112
    MOVEF_F 0.0 VLV_GNORM_112
    MOVEF_F 0.0 VLV_BNORM_112
    MOVEF_F 0.0 VLV_MAX_112
    MOVEF_F 0.0 VLV_MIN_112
    MOVEF_F 0.0 VLV_RGBGREY_112
    MOVEF_F 0.0 VLV_RED_113
    MOVEF_F 0.0 VLV_YELLOW_113
    MOVEF_F 0.0 VLV_GREEN_113
    MOVEF_F 0.0 VLV_BLUE_113
    MOVEF_F 0.0 VLV_VALUENEGRO_113
    MOVEF_F 0.0 VLV_VALUEBLANCO_113
    MOVEF_F 0.0 VLV_RWHITE_113
    MOVEF_F 0.0 VLV_GWHITE_113
    MOVEF_F 0.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_MAXA_113
    MOVEF_F 0.0 VLV_J_113
    CALL ARRAYCREATE_FLOAT VLV_RGB_113
    MOVEF_F 0.0 VLV_RRAW_113
    MOVEF_F 0.0 VLV_GRAW_113
    MOVEF_F 0.0 VLV_BRAW_113
    MOVEF_F 0.0 VLV_RNORM_113
    MOVEF_F 0.0 VLV_GNORM_113
    MOVEF_F 0.0 VLV_BNORM_113
    MOVEF_F 0.0 VLV_MAX_113
    MOVEF_F 0.0 VLV_MIN_113
    MOVEF_F 0.0 VLV_RGBGREY_113
    MOVE32_32 0 RUNCOUNTER_F_ODOMETRY_0
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_ODOMETRY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_ODOMETRY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 -1 RUNCOUNTER_F_ODOMETRY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 1
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 2
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_ODOMETRY_0
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1553
    WRITE32 ENDSUB_F_ODOMETRY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ODOMETRY_0
  dispatch1553:
    JR_NEQ32 SUBPROGRAM 1 dispatch1554
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1554:
    JR_NEQ32 SUBPROGRAM 2 dispatch1555
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1555:
    MOVEF_F 0.0 VLV_V_105
    MOVEF_F 0.0 VLV_AENC_105
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_V_95
    MOVEF_F 0.0 VLV_AENC_95
    MOVEF_F 0.0 VLV_VELOCIDAD1_25
    MOVEF_F 0.0 VLV_VELOCIDAD2_25
    MOVEF_F 0.0 VLV_TIEMPO_25
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_V_101
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_V_96
    MOVEF_F 0.0 VLV_READ_130
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_VELOCIDAD1_17
    MOVEF_F 0.0 VLV_VELOCIDAD2_17
    MOVEF_F 0.0 VLV_SENS_17
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_LADO_82
    MOVEF_F 0.0 VLV_SENS_82
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VEL_31
    MOVEF_F 0.0 VLV_VELOCIDAD_71
    MOVEF_F 0.0 VLV_KP_71
    MOVEF_F 0.0 VLV_KI_71
    MOVEF_F 0.0 VLV_KD_71
    MOVEF_F 0.0 VLV_VELOCIDAD_37
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_V0_49
    MOVEF_F 0.0 VLV_VMAX_49
    MOVEF_F 0.0 VLV_DISTANCIA1_49
    MOVEF_F 0.0 VLV_DISTANCIA2_49
    MOVEF_F 0.0 VLV_DISTANCIA3_49
    MOVEF_F 0.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VMAX_88
    MOVEF_F 0.0 VLV_KP_88
    MOVEF_F 0.0 VLV_KI_88
    MOVEF_F 0.0 VLV_KD_88
    MOVEF_F 0.0 VLV_COLOR_122
    MOVEF_F 0.0 VLV_REPS_110
    MOVEF_F 0.0 VLV_COLOR_110
    MOVEF_F 0.0 VLV_REPS_111
    MOVEF_F 0.0 VLV_COLOR_111
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_T_108
    MOVEF_F 0.0 VLV_V_109
    MOVEF_F 0.0 VLV_AENC_109
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    MOVEF_F 0.0 VLV_READ_130
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 0.0 VGV_SENTIDO_D
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DW
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_XTIME
    MOVEF_F 0.0 VGV_YTIME
    MOVEF_F 0.0 VGV_THETATIME
    MOVEF_F 0.0 VGV_XTCORRECT
    MOVEF_F 0.0 VGV_YTCORRECT
    MOVEF_F 0.0 VGV_THETATCORRECT
    MOVEF_F 1.0 VGV_SENTIDO_D
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0001 VGV_KI
    MOVEF_F 2.0 VGV_KD
    MOVEF_F 102.0 VGV_DW
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_D_T
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.75 VGV_G1
    MOVEF_F 3.47222222222222 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB1 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB1:
    DATA32 tmp2
    CALL GETANDINC32 RUNCOUNTER_F_ODOMETRY_0 1  RUNCOUNTER_F_ODOMETRY_0 tmp2
    JR_NEQ32 0 tmp2 alreadylaunched2
    OBJECT_START TF_ODOMETRY_0
  alreadylaunched2:
    DATA32 tmp3
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp3
    JR_NEQ32 0 tmp3 alreadylaunched3
    OBJECT_START TF_DISPLAY_0
  alreadylaunched3:
    DATA32 tmp4
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp4
    JR_NEQ32 0 tmp4 alreadylaunched4
    OBJECT_START TF_STOP_0
  alreadylaunched4:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB5 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB5:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 1.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 0.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    DATA8 layer7
	DATA8 no7
	DATA8 mode87
	
	MOVEF_8 2.0 no7
	SUB8 no7 1 no7
	DIV8 no7 4 layer7
	MATH MOD8 no7 4 no7

	MOVEF_8 4.0 mode87
	
	INPUT_DEVICE READY_RAW layer7 no7 0 mode87 0
    DATA8 layer8
	DATA8 no8
	DATA8 mode88
	
	MOVEF_8 3.0 no8
	SUB8 no8 1 no8
	DIV8 no8 4 layer8
	MATH MOD8 no8 4 no8

	MOVEF_8 4.0 mode88
	
	INPUT_DEVICE READY_RAW layer8 no8 0 mode88 0
    DATA8 layer9
	DATA8 no9
	DATA8 mode89
	
	MOVEF_8 4.0 no9
	SUB8 no9 1 no9
	DIV8 no9 4 layer9
	MATH MOD8 no9 4 no9

	MOVEF_8 0.0 mode89
	
	INPUT_DEVICE READY_RAW layer9 no9 0 mode89 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while11:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 850.0 endwhile11
  whilebody11:
    MOVEF_8 30.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 30.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 850.0 whilebody11
  endwhile11:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -360.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB19:
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds21
	MOVEF_32 100.0 milliseconds21
	DATA32 timer21
	TIMER_WAIT milliseconds21 timer21
	TIMER_READY timer21
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_ODOMETRY_0:
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_L
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_ALPHA_R
    MOVEF_F 0.0 VGV_OLDB
    MOVEF_F 0.0 VGV_OLDC
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_XT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_YT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_THETAT
    MOVEF_F 0.0 VGV_I
  while27:
  whilebody27:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.2
    MULF F.2 -1.0 F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_L
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.1
    DIVF F.1 57.295779513082 F.0
    CALL ARRAYSTORE_FLOAT VGV_I F.0 VGV_ALPHA_R
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_L
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_L
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf40
    DATA8 flag40
    DIVF F.0 2.0 tmpf40
    CP_EQF 0.0 2.0 flag40
    SELECTF flag40 0.0 tmpf40 VGV_D_L

    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_ALPHA_R
    SUBF VGV_I 1.0 F.4
    CALL ARRAYGET_FLOAT F.4 F.3 VGV_ALPHA_R
    SUBF F.2 F.3 F.1
    MULF F.1 VGV_DIAMETER F.0
    DATAF tmpf46
    DATA8 flag46
    DIVF F.0 2.0 tmpf46
    CP_EQF 0.0 2.0 flag46
    SELECTF flag46 0.0 tmpf46 VGV_D_R

    ADDF VGV_D_L VGV_D_R F.0
    DATAF tmpf48
    DATA8 flag48
    DIVF F.0 2.0 tmpf48
    CP_EQF 0.0 2.0 flag48
    SELECTF flag48 0.0 tmpf48 VGV_D

    SUBF VGV_D_R VGV_D_L F.0
    MULF 2.0 VGV_DW F.1
    DATAF tmpf51
    DATA8 flag51
    DIVF F.0 F.1 tmpf51
    CP_EQF 0.0 F.1 flag51
    SELECTF flag51 0.0 tmpf51 VGV_DELTA_THETA

    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf54
    DATA8 flag54
    DIVF VGV_DELTA_THETA 2.0 tmpf54
    CP_EQF 0.0 2.0 flag54
    SELECTF flag54 0.0 tmpf54 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf56
	MULF F.4 57.295779513082  tmpf56
	MATH SIN  tmpf56 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.5 VGV_THETAT
    DATAF tmpf63
    DATA8 flag63
    DIVF VGV_DELTA_THETA 2.0 tmpf63
    CP_EQF 0.0 2.0 flag63
    SELECTF flag63 0.0 tmpf63 F.6

    ADDF F.5 F.6 F.4
    DATAF tmpf65
	MULF F.4 57.295779513082 tmpf65
	MATH COS tmpf65 F.3
    MULF VGV_D F.3 F.2
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    ADDF F.2 F.3 F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT VGV_I F.2 VGV_THETAT
    ADDF F.2 VGV_DELTA_THETA F.1
    CALL ARRAYSTORE_FLOAT F.0 F.1 VGV_THETAT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_XTIME VGV_XT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_YTIME VGV_YT
    ADDF VGV_I 1.0 F.0
    CALL ARRAYGET_FLOAT F.0 VGV_THETATIME VGV_THETAT
    ADDF VGV_I 1.0 VGV_I
    DATA32 milliseconds81
	MOVEF_32 10.0 milliseconds81
	DATA32 timer81
	TIMER_WAIT milliseconds81 timer81
	TIMER_READY timer81
    JR whilebody27
  endwhile27:
RETSUB_F_ODOMETRY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ODOMETRY_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while82:
  whilebody82:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_XT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf88
    DATA8 flag88
    DIVF F.1 100.0 tmpf88
    CP_EQF 0.0 100.0 flag88
    SELECTF flag88 0.0 tmpf88 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'xt: ' S.1 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.3 VGV_YT
    MULF F.3 100.0 F.2
    MATH ROUND F.2 F.1
    DATAF tmpf95
    DATA8 flag95
    DIVF F.1 100.0 tmpf95
    CP_EQF 0.0 100.0 flag95
    SELECTF flag95 0.0 tmpf95 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'yt: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    CALL ARRAYGET_FLOAT VGV_I F.1 VGV_THETAT
    MULF F.1 57.295779513082 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'thetat: ' S.1 S.0
    CALL LCD.WRITE 5.0 25.0 S.0
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf119
    DATA8 flag119
    DIVF F.2 0.05 tmpf119
    CP_EQF 0.0 0.05 flag119
    SELECTF flag119 0.0 tmpf119 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf127
    DATA8 flag127
    DIVF F.1 0.05 tmpf127
    CP_EQF 0.0 0.05 flag127
    SELECTF flag127 0.0 tmpf127 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    STRINGS VALUE_FORMATTED VGV_D_T '%g' 99 S.1
    CALL TEXT.APPEND 'Delta T:  ' S.1 S.0
    CALL LCD.WRITE 5.0 105.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds144
	MOVEF_32 50.0 milliseconds144
	DATA32 timer144
	TIMER_WAIT milliseconds144 timer144
	TIMER_READY timer144
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody82
  endwhile82:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB147:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 30.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB149:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 94.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB152:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 26.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB154:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -100.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB155:
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB157:
    DATA32 milliseconds158
	MOVEF_32 500.0 milliseconds158
	DATA32 timer158
	TIMER_WAIT milliseconds158 timer158
	TIMER_READY timer158
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -300.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB159:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB160:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 30.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB163:
    DATA32 milliseconds164
	MOVEF_32 1000.0 milliseconds164
	DATA32 timer164
	TIMER_WAIT milliseconds164 timer164
	TIMER_READY timer164
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB166:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -820.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB167:
    MULF VGV_VELOCIDAD 0.1 VLV_VELOCIDAD1_25
    MULF VGV_VELOCIDAD -0.1 VLV_VELOCIDAD2_25
    MOVEF_F 800.0 VLV_TIEMPO_25
    WRITE32 ENDSUB_F_TIEMPOGIROMM_3:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPOGIROMM_3
CALLSUB170:
    MULF VGV_VELOCIDAD -0.05 VLV_V1_35
    MULF VGV_VELOCIDAD 0.05 VLV_V2_35
    MOVEF_F 5.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB173:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -450.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB174:
    DATA32 milliseconds175
	MOVEF_32 1000.0 milliseconds175
	DATA32 timer175
	TIMER_WAIT milliseconds175 timer175
	TIMER_READY timer175
    MOVEF_F 10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB176:
    MOVEF_F -10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB177:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 24.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB179:
    MOVEF_F 40.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB180:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB183:
    MULF VGV_VELOCIDAD -0.9 VLV_VELOCIDAD_13
    MOVEF_F 2000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB185:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB187:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 500.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB189:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 5.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB191:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -100.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB192:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 86.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB195:
    MOVEF_F 20.0 VLV_V_96
    WRITE32 ENDSUB_F_BMOVEA0_1:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA0_1
CALLSUB196:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 29.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB198:
    DATA32 milliseconds199
	MOVEF_32 1000.0 milliseconds199
	DATA32 timer199
	TIMER_WAIT milliseconds199 timer199
	TIMER_READY timer199
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB200:
    MOVEF_F VLV_READ_130 VGV_BLOQUE
    JR_EQF VGV_BLOQUE 3.0 else201_1
    JR_EQF VGV_BLOQUE 2.0 else201_1
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    JR endif201
  else201_1:
    CALL ARRAYSTORE_FLOAT 0.0 VGV_BLOQUE VGV_BOMBOCLAT
    MOVEF_F 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_BLOQUE 3.0 else204_1
    ADDF VGV_VERDES 1.0 VGV_VERDES
    JR endif204
  else204_1:
    ADDF VGV_AZULES 1.0 VGV_AZULES
  else204_2:
  endif204:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB207:
  else201_2:
  endif201:
    MULF VGV_VELOCIDAD -0.2 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB209:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 92.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB212:
    MULF VGV_VELOCIDAD -0.9 VLV_VELOCIDAD_13
    MOVEF_F 1000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB214:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB216:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 500.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB218:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 16.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB220:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 85.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB223:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 13.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB225:
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB226:
    MOVEF_F VLV_READ_130 VGV_BLOQUE
    JR_EQF VGV_BLOQUE 3.0 else227_1
    JR_EQF VGV_BLOQUE 2.0 else227_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    JR endif227
  else227_1:
    CALL ARRAYSTORE_FLOAT 1.0 VGV_BLOQUE VGV_BOMBOCLAT
    ADDF VGV_NUMERO_BLOQUES 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else233_1
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB234:
    JR endif233
  else233_1:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB235:
  else233_2:
  endif233:
  else227_2:
  endif227:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 171.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB238:
    MULF VGV_VELOCIDAD 0.5 VLV_VELOCIDAD_1
    MOVEF_F 72.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB240:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_35
    MULF VGV_VELOCIDAD 0.2 VLV_V2_35
    MOVEF_F 100.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB243:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_13
    MOVEF_F 1000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB245:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB247:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB249:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB251:
    MOVEF_F 30.0 VLV_VELOCIDAD1_17
    MOVEF_F -30.0 VLV_VELOCIDAD2_17
    MOVEF_F 1.0 VLV_SENS_17
    WRITE32 ENDSUB_F_1NEGROGIROMM_3:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGROGIROMM_3
CALLSUB252:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_76
    MULF VGV_KP 2.0 VLV_KP_76
    MOVEF_F VGV_KI VLV_KI_76
    MOVEF_F VGV_KD VLV_KD_76
    MOVEF_F 5.0 VLV_ENCODER_76
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB255:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MULF VGV_KP 0.6 VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 5.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB258:
    JR_LTEQF VGV_NUMERO_BLOQUES 0.0 else259_1
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 1.0 VLV_LADO_82
    MOVEF_F 1.0 VLV_SENS_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_6:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_6
CALLSUB261:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 180.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB264:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 30.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB266:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 86.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB269:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB271:
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else272_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 0.0 else273_1
    CALL ARRAYGET_FLOAT 1.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VGV_BOMBOCLAT
  else273_1:
  endif273:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else278_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB282:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB283:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB286:
    JR endif278
  else278_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB289:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB290:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB293:
  else278_2:
  endif278:
    JR endif272
  else272_1:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYGET_FLOAT 1.0 F.1 VGV_BOMBOCLAT
    JR_NEQF F.0 F.1 else294_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else297_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB301:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB302:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB305:
    JR endif297
  else297_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB308:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB309:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB312:
  else297_2:
  endif297:
    JR endif294
  else294_1:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 3.0 else313_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB317:
    WRITE32 ENDSUB_F_SOLTAR_UNO_0:CALLSUB318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_UNO_0
CALLSUB318:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB321:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB324:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB325:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB328:
    JR endif313
  else313_1:
    MULF VGV_VELOCIDAD 0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB331:
    WRITE32 ENDSUB_F_SOLTAR_UNO_0:CALLSUB332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_UNO_0
CALLSUB332:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB335:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 25.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB338:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB339:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.1 VLV_V2_35
    MOVEF_F 25.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB342:
  else313_2:
  endif313:
  else294_2:
  endif294:
  else272_2:
  endif272:
    MOVEF_F 20.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB343:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB345:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB347:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB349:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 10.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB352:
    MULF VGV_VELOCIDAD 0.3 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB354:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 7.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB356:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 1.0 VLV_LADO_82
    MOVEF_F 1.0 VLV_SENS_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_6:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_6
CALLSUB358:
    JR endif259
  else259_1:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 8.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB360:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 1.0 VLV_LADO_82
    MOVEF_F 1.0 VLV_SENS_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_6:CALLSUB362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_6
CALLSUB362:
  else259_2:
  endif259:
    MULF VGV_VELOCIDAD 0.3 VLV_VEL_31
    WRITE32 ENDSUB_F_GPERFIDEFINITIVOMM_1:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFIDEFINITIVOMM_1
CALLSUB364:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_71
    MOVEF_F VGV_KP VLV_KP_71
    MOVEF_F VGV_KI VLV_KI_71
    MOVEF_F VGV_KD VLV_KD_71
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB366:
    CALL MOTOR.STOP 'ABCD' 'True'
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 17.3 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB369:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB370:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB372:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB374:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB376:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 89.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB379:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MULF VGV_KP 1.5 VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 13.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB382:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 87.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB385:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 11.2 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB387:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB388:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_37
    WRITE32 ENDSUB_F_SPIN180_1:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN180_1
CALLSUB390:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_13
    MOVEF_F 1000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB392:
    MULF VGV_VELOCIDAD 0.24 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD2_15
    MOVEF_F 37.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB395:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB396:
    MOVEF_F 20.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB397:
    MULF VGV_VELOCIDAD -50.0 VLV_VELOCIDAD_13
    MOVEF_F 2000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB399:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_5
    MOVEF_F 4.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB401:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB403:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB405:
    MOVEF_F 30.0 VLV_VELOCIDAD1_17
    MOVEF_F -30.0 VLV_VELOCIDAD2_17
    MOVEF_F 1.0 VLV_SENS_17
    WRITE32 ENDSUB_F_1NEGROGIROMM_3:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGROGIROMM_3
CALLSUB406:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_76
    MULF VGV_KP 3.0 VLV_KP_76
    MOVEF_F VGV_KI VLV_KI_76
    MOVEF_F VGV_KD VLV_KD_76
    MOVEF_F 45.0 VLV_ENCODER_76
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB409:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 180.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB412:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_76
    MULF VGV_KP 3.0 VLV_KP_76
    MOVEF_F VGV_KI VLV_KI_76
    MULF VGV_KD 1.2 VLV_KD_76
    MOVEF_F 6.0 VLV_ENCODER_76
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB416:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F -1.0 VLV_LADO_82
    MOVEF_F 4.0 VLV_SENS_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_6:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_6
CALLSUB418:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_76
    MULF VGV_KP 0.8 VLV_KP_76
    MOVEF_F VGV_KI VLV_KI_76
    MULF VGV_KD 1.2 VLV_KD_76
    MOVEF_F 20.0 VLV_ENCODER_76
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB422:
    MULF VGV_VELOCIDAD 0.4 VLV_V0_49
    MULF VGV_VELOCIDAD 0.98 VLV_VMAX_49
    MOVEF_F 15.0 VLV_DISTANCIA1_49
    MOVEF_F 37.0 VLV_DISTANCIA2_49
    MOVEF_F 5.0 VLV_DISTANCIA3_49
    WRITE32 ENDSUB_F_LINACCELDECELMM_5:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINACCELDECELMM_5
CALLSUB425:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -300.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB426:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB427:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 9.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB429:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 30.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB432:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 2.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB434:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 45.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB437:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -520.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB438:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.1 VLV_VELOCIDAD2_15
    MOVEF_F 14.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB441:
    MOVEF_F 30.0 VLV_V_101
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB442:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_STOP_0:
  while443:
  whilebody443:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else444_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_104
    MOVEF_F 0.0 VLV_GRADOS_104
    WRITE32 ENDSUB_F_BMOVEADSAFE_2:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEADSAFE_2
CALLSUB449:
    PROGRAM_STOP -1
  else444_1:
  endif444:
    JR whilebody443
  endwhile443:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf454
    DATA8 flag454
    DIVF F.1 F.2 tmpf454
    CP_EQF 0.0 F.2 flag454
    SELECTF flag454 0.0 tmpf454 F.0

    DATAF tmpf455
    DATA8 flag455
    DIVF F.0 VLV_DIAMETRO_1 tmpf455
    CP_EQF 0.0 VLV_DIAMETRO_1 flag455
    SELECTF flag455 0.0 tmpf455 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    DATAF tmpf458
    DATA8 flag458
    DIVF VGV_CORRECCION 30.0 tmpf458
    CP_EQF 0.0 30.0 flag458
    SELECTF flag458 0.0 tmpf458 F.2

    MULF F.2 VLV_VELOCIDAD_1 F.1
    ADDF F.0 F.1 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while464:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile464
  whilebody464:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 1.5 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody464
  endwhile464:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_1NEGRORECTOMM_2:
    MULF VLV_VELOCIDAD_3 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_3
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_3
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_3
  while485:
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_LTEQF F.0 10.0 endwhile485
  whilebody485:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_3 VLV_ENCODER_B_3
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_3 VLV_ENCODER_C_3
    SUBF VLV_ENCODER_B_3 VLV_ENCODER_C_3 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_3
    MULF VLV_ERROR_3 1.5 VLV_PROPORCIAL_3
    SUBF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_GTF F.0 10.0 whilebody485
  endwhile485:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGRORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMM_2:
SUB_F_1BLANCORECTOMM_2:
    MULF VLV_VELOCIDAD_5 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_5
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_5
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_5
  while506:
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_GTEQF F.0 40.0 endwhile506
  whilebody506:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_5 VLV_ENCODER_B_5
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_5 VLV_ENCODER_C_5
    SUBF VLV_ENCODER_B_5 VLV_ENCODER_C_5 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_5
    MULF VLV_ERROR_5 1.5 VLV_PROPORCIAL_5
    SUBF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_LTF F.0 40.0 whilebody506
  endwhile506:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1BLANCORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMM_2:
SUB_F_TIEMPORECTOMM_2:
    MULF VLV_VELOCIDAD_13 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_13
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_13
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_13
    TIMER_READ timeMC3
  while528:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_13 endwhile528
  whilebody528:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_13 VLV_ENCODER_B_13
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_13 VLV_ENCODER_C_13
    SUBF VLV_ENCODER_B_13 VLV_ENCODER_C_13 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_13
    MULF VLV_ERROR_13 1.5 VLV_PROPORCIAL_13
    SUBF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_13 whilebody528
  endwhile528:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPORECTOMM_2:
SUB_F_ENCODERGIROMM_3:
    MULF VLV_VELOCIDAD1_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_15
    MULF VLV_VELOCIDAD2_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_15
    MOVEF_F 5.6 VLV_DIAMETRO_15
    MOVEF_F 3.1415926535897932384 F.2
    MULF VLV_DIAMETRO_15 F.2 F.1
    DATAF tmpf548
    DATA8 flag548
    DIVF VLV_ENCODER_15 F.1 tmpf548
    CP_EQF 0.0 F.1 flag548
    SELECTF flag548 0.0 tmpf548 F.0

    MULF F.0 360.0 VLV_DISTANCIA_15
    MATH NEGATE VLV_VELOCIDAD1_15 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_15 VLV_DISTANCIA_15 'True'

	DATA8 layer551
	DATA8 nos551
	DATA8 busy551
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer551 nos551
	JR_EQ8 0 nos551 motornotbusy551
  motorwaiting551:
	OUTPUT_TEST layer551 nos551 busy551
	JR_EQ8 busy551 0 motornotbusy551
	SLEEP
	JR motorwaiting551
  motornotbusy551:
RETSUB_F_ENCODERGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERGIROMM_3:
SUB_F_1NEGROGIROMM_3:
    MULF VLV_VELOCIDAD1_17 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_17
    MULF VLV_VELOCIDAD2_17 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_17
  while554:
    CALL SENSOR.READPERCENT VLV_SENS_17 F.0
    JR_LTEQF F.0 15.0 endwhile554
  whilebody554:
    MATH NEGATE VLV_VELOCIDAD1_17 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_17
    CALL SENSOR.READPERCENT VLV_SENS_17 F.0
    JR_GTF F.0 15.0 whilebody554
  endwhile554:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGROGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGROGIROMM_3:
SUB_F_TIEMPOGIROMM_3:
    TIMER_READ timeMC3
    MULF VLV_VELOCIDAD1_25 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_25
    MULF VLV_VELOCIDAD2_25 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_25
  while563:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_25 endwhile563
  whilebody563:
    MATH NEGATE VLV_VELOCIDAD1_25 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_25
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_25 whilebody563
  endwhile563:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPOGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPOGIROMM_3:
SUB_F_GPERFIDEFINITIVOMM_1:
    MOVEF_F 100.0 VLV_AVANCE_31
    MOVEF_F 200.0 VLV_GINICIO_31
    MOVEF_F 70.0 VLV_AJUSTE_31
    DATA8 flag569
	CP_LTF 40.0 VLV_VEL_31 flag569
	SELECTF flag569 40.0 VLV_VEL_31 VLV_VEL_31
    MULF VLV_VEL_31 0.75 VLV_VEL_31
    MULF VLV_VEL_31 VGV_SENTIDO_MOTORES VLV_VEL_31
    MATH NEGATE VLV_VEL_31 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VEL_31 VLV_AVANCE_31 'True'

	DATA8 layer573
	DATA8 nos573
	DATA8 busy573
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer573 nos573
	JR_EQ8 0 nos573 motornotbusy573
  motorwaiting573:
	OUTPUT_TEST layer573 nos573 busy573
	JR_EQ8 busy573 0 motornotbusy573
	SLEEP
	JR motorwaiting573
  motornotbusy573:
    CALL MOTOR.SCHEDULE 'BC' VLV_VEL_31 0.0 VLV_GINICIO_31 0.0 'False' 

	DATA8 layer574
	DATA8 nos574
	DATA8 busy574
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer574 nos574
	JR_EQ8 0 nos574 motornotbusy574
  motorwaiting574:
	OUTPUT_TEST layer574 nos574 busy574
	JR_EQ8 busy574 0 motornotbusy574
	SLEEP
	JR motorwaiting574
  motornotbusy574:
  while575:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_LTEQF F.0 10.0 endwhile575
  whilebody575:
    CALL MOTOR.STARTSYNC 'BC' VLV_VEL_31 VLV_VEL_31
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 10.0 whilebody575
  endwhile575:
    CALL MOTOR.STOP 'BC' 'False'
    CALL MOTOR.SCHEDULE 'BC' VLV_VEL_31 0.0 VLV_AJUSTE_31 0.0 'True' 

	DATA8 layer580
	DATA8 nos580
	DATA8 busy580
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer580 nos580
	JR_EQ8 0 nos580 motornotbusy580
  motorwaiting580:
	OUTPUT_TEST layer580 nos580 busy580
	JR_EQ8 busy580 0 motornotbusy580
	SLEEP
	JR motorwaiting580
  motornotbusy580:
RETSUB_F_GPERFIDEFINITIVOMM_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GPERFIDEFINITIVOMM_1:
SUB_F_GPERFDDEFINITIVOMM_1:
    MOVEF_F 100.0 VLV_AVANCE_33
    MOVEF_F 200.0 VLV_GINICIO_33
    MOVEF_F 70.0 VLV_AJUSTE_33
    DATA8 flag581
	CP_LTF 40.0 VLV_VEL_33 flag581
	SELECTF flag581 40.0 VLV_VEL_33 VLV_VEL_33
    MULF VLV_VEL_33 0.75 VLV_VEL_33
    MULF VLV_VEL_33 VGV_SENTIDO_MOTORES VLV_VEL_33
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VEL_33 VLV_AVANCE_33 'True'

	DATA8 layer585
	DATA8 nos585
	DATA8 busy585
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer585 nos585
	JR_EQ8 0 nos585 motornotbusy585
  motorwaiting585:
	OUTPUT_TEST layer585 nos585 busy585
	JR_EQ8 busy585 0 motornotbusy585
	SLEEP
	JR motorwaiting585
  motornotbusy585:
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_GINICIO_33 0.0 'False' 

	DATA8 layer587
	DATA8 nos587
	DATA8 busy587
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer587 nos587
	JR_EQ8 0 nos587 motornotbusy587
  motorwaiting587:
	OUTPUT_TEST layer587 nos587 busy587
	JR_EQ8 busy587 0 motornotbusy587
	SLEEP
	JR motorwaiting587
  motornotbusy587:
  while588:
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 10.0 endwhile588
  whilebody588:
    MATH NEGATE VLV_VEL_33 F.0
    MATH NEGATE VLV_VEL_33 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 10.0 whilebody588
  endwhile588:
    CALL MOTOR.STOP 'BC' 'False'
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_AJUSTE_33 0.0 'True' 

	DATA8 layer596
	DATA8 nos596
	DATA8 busy596
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer596 nos596
	JR_EQ8 0 nos596 motornotbusy596
  motorwaiting596:
	OUTPUT_TEST layer596 nos596 busy596
	JR_EQ8 busy596 0 motornotbusy596
	SLEEP
	JR motorwaiting596
  motornotbusy596:
RETSUB_F_GPERFDDEFINITIVOMM_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GPERFDDEFINITIVOMM_1:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_35
    STRINGS DUPLICATE 'C' VLV_D_35
    DATAF tmpf597
    DATA8 flag597
    DIVF VLV_V1_35 VLV_V2_35 tmpf597
    CP_EQF 0.0 VLV_V2_35 flag597
    SELECTF flag597 0.0 tmpf597 F.0

    DATAF tmpf598
    DATA8 flag598
    DIVF VLV_V1_35 VLV_V2_35 tmpf598
    CP_EQF 0.0 VLV_V2_35 flag598
    SELECTF flag598 0.0 tmpf598 F.2

    MATH ABS F.2 F.1
    DATAF tmpf600
    DATA8 flag600
    DIVF F.0 F.1 tmpf600
    CP_EQF 0.0 F.1 flag600
    SELECTF flag600 0.0 tmpf600 VLV_SIGNO_35

    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag603
	CP_LTF F.0 F.1 flag603
	SELECTF flag603 F.0 F.1 VLV_VMIN_35
    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag606
	CP_GTF F.0 F.1 flag606
	SELECTF flag606 F.0 F.1 VLV_VMAX_35
    MULF VLV_ANGLE_35 VGV_G1 F.0
    MULF VLV_SIGNO_35 VLV_VMIN_35 F.4
    DATAF tmpf609
    DATA8 flag609
    DIVF F.4 VLV_VMAX_35 tmpf609
    CP_EQF 0.0 VLV_VMAX_35 flag609
    SELECTF flag609 0.0 tmpf609 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf611
    DATA8 flag611
    DIVF -2.0 F.2 tmpf611
    CP_EQF 0.0 F.2 flag611
    SELECTF flag611 0.0 tmpf611 F.1

    MULF F.0 F.1 VLV_ENCODR_35
    CALL TEXT.APPEND VLV_I_35 VLV_D_35 S.0
    MATH NEGATE VLV_V1_35 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_35 VLV_ENCODR_35 'True'

	DATA8 layer615
	DATA8 nos615
	DATA8 busy615
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer615 nos615
	JR_EQ8 0 nos615 motornotbusy615
  motorwaiting615:
	OUTPUT_TEST layer615 nos615 busy615
	JR_EQ8 busy615 0 motornotbusy615
	SLEEP
	JR motorwaiting615
  motornotbusy615:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    DATA32 milliseconds616
	MOVEF_32 200.0 milliseconds616
	DATA32 timer616
	TIMER_WAIT milliseconds616 timer616
	TIMER_READY timer616
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_SPIN180_1:
    STRINGS DUPLICATE 'B' VLV_I_37
    STRINGS DUPLICATE 'C' VLV_D_37
    MULF 180.0 VGV_G1 VLV_ENCODR_37
    CALL TEXT.APPEND VLV_I_37 VLV_D_37 S.0
    MATH NEGATE VLV_VELOCIDAD_37 F.0
    CALL MOTOR.SCHEDULE S.0 F.0 0.0 VLV_ENCODR_37 0.0 'True' 

	DATA8 layer620
	DATA8 nos620
	DATA8 busy620
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer620 nos620
	JR_EQ8 0 nos620 motornotbusy620
  motorwaiting620:
	OUTPUT_TEST layer620 nos620 busy620
	JR_EQ8 busy620 0 motornotbusy620
	SLEEP
	JR motorwaiting620
  motornotbusy620:
    MOVEF_F 0.0 VLV_ANGLE_37
RETSUB_F_SPIN180_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN180_1:
SUB_F_SPIN90_1:
    STRINGS DUPLICATE 'B' VLV_I_39
    STRINGS DUPLICATE 'C' VLV_D_39
    MULF 84.0 VGV_G1 VLV_ENCODR_39
    CALL TEXT.APPEND VLV_I_39 VLV_D_39 S.0
    MATH NEGATE VLV_VELOCIDAD_39 F.0
    CALL MOTOR.SCHEDULE S.0 F.0 0.0 VLV_ENCODR_39 0.0 'True' 

	DATA8 layer624
	DATA8 nos624
	DATA8 busy624
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer624 nos624
	JR_EQ8 0 nos624 motornotbusy624
  motorwaiting624:
	OUTPUT_TEST layer624 nos624 busy624
	JR_EQ8 busy624 0 motornotbusy624
	SLEEP
	JR motorwaiting624
  motornotbusy624:
    MOVEF_F 0.0 VLV_ANGLE_39
RETSUB_F_SPIN90_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN90_1:
SUB_F_LINACCELDECELMM_5:
    CALL MOTOR.GETCOUNT 'B' VLV_START_B_49
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_49
    MOVEF_F 0.0 VLV_ENCODER_B_49
    MOVEF_F 0.0 VLV_ENCODER_C_49
    DATA8 flag627
	CP_GTF 8.0 VLV_V0_49 flag627
	SELECTF flag627 8.0 VLV_V0_49 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_V0_49
    DATA8 flag629
	CP_LTF 90.0 VLV_VMAX_49 flag629
	SELECTF flag629 90.0 VLV_VMAX_49 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_VMAX_49
    MOVEF_F 0.0 VLV_VEL_49
    MOVEF_F 3.0 VLV_KP_49
    MOVEF_F 0.001 VLV_KI_49
    MOVEF_F 5.0 VLV_KD_49
    MOVEF_F 0.0 VLV_ERROR_49
    MOVEF_F 0.0 VLV_OLDERROR_49
    MOVEF_F 0.0 VLV_ERRSUM_49
    MULF VLV_DISTANCIA1_49 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf634
    DATA8 flag634
    DIVF F.0 F.1 tmpf634
    CP_EQF 0.0 F.1 flag634
    SELECTF flag634 0.0 tmpf634 VLV_GRADOS1_49

    MULF VLV_DISTANCIA2_49 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf638
    DATA8 flag638
    DIVF F.0 F.1 tmpf638
    CP_EQF 0.0 F.1 flag638
    SELECTF flag638 0.0 tmpf638 VLV_GRADOS2_49

    MULF VLV_DISTANCIA3_49 360.0 F.0
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf642
    DATA8 flag642
    DIVF F.0 F.1 tmpf642
    CP_EQF 0.0 F.1 flag642
    SELECTF flag642 0.0 tmpf642 VLV_GRADOS3_49

  while643:
    ADDF VLV_GRADOS1_49 VLV_GRADOS2_49 F.1
    ADDF F.1 VLV_GRADOS3_49 F.0
    JR_GTEQF VLV_ENCODER_C_49 F.0 endwhile643
  whilebody643:
    CALL MOTOR.GETCOUNT 'B' F.0
    SUBF F.0 VLV_START_B_49 VLV_ENCODER_B_49
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_49 VLV_ENCODER_C_49
    ADDF VLV_GRADOS1_49 VLV_GRADOS2_49 F.0
    JR_GTEQF VLV_ENCODER_C_49 F.0 else650_1
    SUBF VLV_VMAX_49 VLV_V0_49 F.0
    DATAF tmpf653
    DATA8 flag653
    DIVF F.0 VLV_GRADOS1_49 tmpf653
    CP_EQF 0.0 VLV_GRADOS1_49 flag653
    SELECTF flag653 0.0 tmpf653 VLV_PENDIENTE_49

    MULF VLV_PENDIENTE_49 VLV_ENCODER_C_49 F.1
    ADDF F.1 VLV_V0_49 F.0
    DATA8 flag656
	CP_LTF VLV_VMAX_49 F.0 flag656
	SELECTF flag656 VLV_VMAX_49 F.0 VLV_VEL_49
    JR endif650
  else650_1:
    SUBF VLV_V0_49 VLV_VMAX_49 F.0
    DATAF tmpf658
    DATA8 flag658
    DIVF F.0 VLV_GRADOS3_49 tmpf658
    CP_EQF 0.0 VLV_GRADOS3_49 flag658
    SELECTF flag658 0.0 tmpf658 VLV_PENDIENTE_49

    SUBF VLV_ENCODER_C_49 VLV_GRADOS1_49 F.3
    SUBF F.3 VLV_GRADOS2_49 F.2
    MULF VLV_PENDIENTE_49 F.2 F.1
    ADDF F.1 VLV_VMAX_49 F.0
    DATA8 flag663
	CP_GTF VLV_V0_49 F.0 flag663
	SELECTF flag663 VLV_V0_49 F.0 VLV_VEL_49
  else650_2:
  endif650:
    MULF -1.0 VLV_ENCODER_B_49 F.1
    SUBF F.1 VLV_ENCODER_C_49 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_49
    ADDF VLV_ERRSUM_49 VLV_ERROR_49 VLV_ERRSUM_49
    MULF VLV_ERROR_49 VLV_KP_49 F.1
    SUBF VLV_ERROR_49 VLV_OLDERROR_49 F.3
    MULF F.3 VLV_KD_49 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_49 VLV_KI_49 F.1
    ADDF F.0 F.1 VLV_CORRECCION_49
    MOVEF_F VLV_ERROR_49 VLV_OLDERROR_49
    SUBF VLV_VEL_49 VLV_CORRECCION_49 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VEL_49 VLV_CORRECCION_49 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    ADDF VLV_GRADOS1_49 VLV_GRADOS2_49 F.1
    ADDF F.1 VLV_GRADOS3_49 F.0
    JR_LTF VLV_ENCODER_C_49 F.0 whilebody643
  endwhile643:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    CALL LCD.CLEAR
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    MULF F.3 5.6 F.2
    MOVEF_F 3.1415926535897932384 F.3
    MULF F.2 F.3 F.1
    DATAF tmpf686
    DATA8 flag686
    DIVF F.1 360.0 tmpf686
    CP_EQF 0.0 360.0 flag686
    SELECTF flag686 0.0 tmpf686 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Distancia cm: ' S.1 S.0
    CALL LCD.WRITE 5.0 10.0 S.0
RETSUB_F_LINACCELDECELMM_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINACCELDECELMM_5:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_56
    STRINGS DUPLICATE 'C' VLV_D_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf692
    DATA8 flag692
    DIVF VLV_ACCELENCODER_56 F.1 tmpf692
    CP_EQF 0.0 F.1 flag692
    SELECTF flag692 0.0 tmpf692 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    CALL MOTOR.RESETCOUNT 'C'
  while695:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or696
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile695
  or696:
  whilebody695:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf700
    DATA8 flag700
    DIVF F.3 VLV_ACCELENCODER_56 tmpf700
    CP_EQF 0.0 VLV_ACCELENCODER_56 flag700
    SELECTF flag700 0.0 tmpf700 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_56 VLV_V0_56 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_56 VLV_VEL_56
    DATA8 flag705
	CP_LTF VLV_VEL_56 VLV_VMAX_56 flag705
	SELECTF flag705 VLV_VEL_56 VLV_VMAX_56 VLV_VEL_56
    MATH ABS VLV_VEL_56 F.0
    DATAF tmpf707
    DATA8 flag707
    DIVF VLV_VEL_56 F.0 tmpf707
    CP_EQF 0.0 F.0 flag707
    SELECTF flag707 0.0 tmpf707 VLV_SENTIDO_56

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_56 VLV_ERROR_56
    ADDF VLV_ERRSUM_56 VLV_ERROR_56 VLV_ERRSUM_56
    MULF VLV_ERROR_56 VLV_KP_56 F.1
    SUBF VLV_ERROR_56 VLV_OLDERROR_56 F.3
    MULF F.3 VLV_KD_56 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_56 VLV_KI_56 F.1
    ADDF F.0 F.1 VLV_U_56
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    ADDF VLV_VEL_56 VLV_U_56 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_56 VLV_U_56 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_56 VLV_OLDERROR_56
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody695
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody695
  endwhile695:
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PID_4:
    MULF VLV_VELOCIDAD_71 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_71
    STRINGS DUPLICATE 'B' VLV_I_71
    STRINGS DUPLICATE 'C' VLV_D_71
    MOVEF_F 0.0 VLV_ERROR_71
    MOVEF_F 0.0 VLV_OLDERROR_71
    MOVEF_F 0.0 VLV_ERRSUM_71
    MOVEF_F 0.0 VLV_U_71
    MATH ABS VLV_VELOCIDAD_71 F.0
    DATAF tmpf732
    DATA8 flag732
    DIVF VLV_VELOCIDAD_71 F.0 tmpf732
    CP_EQF 0.0 F.0 flag732
    SELECTF flag732 0.0 tmpf732 VLV_SENTIDO_71

  while733:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or734
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile733
  or734:
  whilebody733:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_71 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_71
    ADDF VLV_ERRSUM_71 VLV_ERROR_71 VLV_ERRSUM_71
    MULF VLV_ERROR_71 VLV_KP_71 F.1
    SUBF VLV_ERROR_71 VLV_OLDERROR_71 F.3
    MULF F.3 VLV_KD_71 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_71 VLV_KI_71 F.1
    ADDF F.0 F.1 VLV_U_71
    CALL TEXT.APPEND VLV_I_71 VLV_D_71 S.0
    ADDF VLV_VELOCIDAD_71 VLV_U_71 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_71 VLV_U_71 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_71 VLV_OLDERROR_71
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody733
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody733
  endwhile733:
    CALL TEXT.APPEND VLV_I_71 VLV_D_71 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PID_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PID_4:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_72 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_72
    STRINGS DUPLICATE 'B' VLV_I_72
    STRINGS DUPLICATE 'C' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MATH ABS VLV_VELOCIDAD_72 F.0
    DATAF tmpf760
    DATA8 flag760
    DIVF VLV_VELOCIDAD_72 F.0 tmpf760
    CP_EQF 0.0 F.0 flag760
    SELECTF flag760 0.0 tmpf760 VLV_SENTIDO_72

  while761:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or762
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile761
  or762:
  whilebody761:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_72 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_72
    ADDF VLV_ERRSUM_72 VLV_ERROR_72 VLV_ERRSUM_72
    MULF VLV_ERROR_72 VLV_KP_72 F.1
    SUBF VLV_ERROR_72 VLV_OLDERROR_72 F.3
    MULF F.3 VLV_KD_72 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_72 VLV_KI_72 F.1
    ADDF F.0 F.1 VLV_U_72
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    ADDF VLV_VELOCIDAD_72 VLV_U_72 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_72 VLV_U_72 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_72 VLV_OLDERROR_72
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody761
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody761
  endwhile761:
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_75 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_75
    STRINGS DUPLICATE 'B' VLV_I_75
    STRINGS DUPLICATE 'C' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MATH ABS VLV_VELOCIDAD_75 F.0
    DATAF tmpf788
    DATA8 flag788
    DIVF VLV_VELOCIDAD_75 F.0 tmpf788
    CP_EQF 0.0 F.0 flag788
    SELECTF flag788 0.0 tmpf788 VLV_SENTIDO_75

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf791
    DATA8 flag791
    DIVF VLV_ENCODER_75 F.1 tmpf791
    CP_EQF 0.0 F.1 flag791
    SELECTF flag791 0.0 tmpf791 F.0

    MULF F.0 360.0 VLV_ENCODER_75
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
  while794:
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_GTEQF F.0 VLV_ENCODER_75 endwhile794
  whilebody794:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_75 VLV_ENCODER_C_75
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_75 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_75
    ADDF VLV_ERRSUM_75 VLV_ERROR_75 VLV_ERRSUM_75
    MULF VLV_ERROR_75 VLV_KP_75 F.1
    SUBF VLV_ERROR_75 VLV_OLDERROR_75 F.3
    MULF F.3 VLV_KD_75 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_75 VLV_KI_75 F.1
    ADDF F.0 F.1 VLV_U_75
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    ADDF VLV_VELOCIDAD_75 VLV_U_75 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_75 VLV_U_75 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_75 VLV_OLDERROR_75
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_LTF F.0 VLV_ENCODER_75 whilebody794
  endwhile794:
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_76 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_76
    STRINGS DUPLICATE 'B' VLV_I_76
    STRINGS DUPLICATE 'C' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MATH ABS VLV_VELOCIDAD_76 F.0
    DATAF tmpf820
    DATA8 flag820
    DIVF VLV_VELOCIDAD_76 F.0 tmpf820
    CP_EQF 0.0 F.0 flag820
    SELECTF flag820 0.0 tmpf820 VLV_SENTIDO_76

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf823
    DATA8 flag823
    DIVF VLV_ENCODER_76 F.1 tmpf823
    CP_EQF 0.0 F.1 flag823
    SELECTF flag823 0.0 tmpf823 F.0

    MULF F.0 360.0 VLV_ENCODER_76
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
  while826:
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_GTEQF F.0 VLV_ENCODER_76 endwhile826
  whilebody826:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_76 VLV_ENCODER_C_76
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_76 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_76
    ADDF VLV_ERRSUM_76 VLV_ERROR_76 VLV_ERRSUM_76
    MULF VLV_ERROR_76 VLV_KP_76 F.1
    SUBF VLV_ERROR_76 VLV_OLDERROR_76 F.3
    MULF F.3 VLV_KD_76 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_76 VLV_KI_76 F.1
    ADDF F.0 F.1 VLV_U_76
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    ADDF VLV_VELOCIDAD_76 VLV_U_76 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_76 VLV_U_76 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_76 VLV_OLDERROR_76
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_LTF F.0 VLV_ENCODER_76 whilebody826
  endwhile826:
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL1SPIDCROSSF_6:
    MULF VLV_VELOCIDAD_82 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_82
    STRINGS DUPLICATE 'B' VLV_I_82
    STRINGS DUPLICATE 'C' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MATH ABS VLV_VELOCIDAD_82 F.0
    DATAF tmpf852
    DATA8 flag852
    DIVF VLV_VELOCIDAD_82 F.0 tmpf852
    CP_EQF 0.0 F.0 flag852
    SELECTF flag852 0.0 tmpf852 VLV_SENTIDO_82

    JR_NEQF VLV_SENS_82 1.0 else853_1
    MOVEF_F 4.0 VLV_READER_82
    JR endif853
  else853_1:
    MOVEF_F 1.0 VLV_READER_82
  else853_2:
  endif853:
  while854:
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_LTEQF F.0 20.0 endwhile854
  whilebody854:
    CALL SENSOR.READPERCENT VLV_SENS_82 F.3
    SUBF F.3 50.0 F.2
    MULF F.2 VLV_SENTIDO_82 F.1
    MULF F.1 VLV_LADO_82 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_82
    ADDF VLV_ERRSUM_82 VLV_ERROR_82 VLV_ERRSUM_82
    MULF VLV_ERROR_82 VLV_KP_82 F.1
    SUBF VLV_ERROR_82 VLV_OLDERROR_82 F.3
    MULF F.3 VLV_KD_82 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_82 VLV_KI_82 F.1
    ADDF F.0 F.1 VLV_U_82
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    ADDF VLV_VELOCIDAD_82 VLV_U_82 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_82 VLV_U_82 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_82 VLV_OLDERROR_82
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_GTF F.0 20.0 whilebody854
  endwhile854:
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL1SPIDCROSSF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSSF_6:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_88 VGV_SENTIDO_MOTORES VLV_VMAX_88
    STRINGS DUPLICATE 'B' VLV_I_88
    STRINGS DUPLICATE 'C' VLV_D_88
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_88
    MOVEF_F 150.0 VLV_ACCELENCODER_88
    MOVEF_F 0.0 VLV_U_88
    MOVEF_F 0.0 VLV_ERRSUM_88
    MOVEF_F 0.0 VLV_OLDERROR_88
    CALL MOTOR.RESETCOUNT 'C'
  while879:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or880
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile879
  or880:
  whilebody879:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf884
    DATA8 flag884
    DIVF F.2 VLV_ACCELENCODER_88 tmpf884
    CP_EQF 0.0 VLV_ACCELENCODER_88 flag884
    SELECTF flag884 0.0 tmpf884 F.1

    ADDF VLV_VMAX_88 VLV_V0_88 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_88 VLV_VEL_88
    DATA8 flag888
	CP_LTF VLV_VEL_88 VLV_VMAX_88 flag888
	SELECTF flag888 VLV_VEL_88 VLV_VMAX_88 VLV_VEL_88
    MATH ABS VLV_VEL_88 F.0
    DATAF tmpf890
    DATA8 flag890
    DIVF VLV_VEL_88 F.0 tmpf890
    CP_EQF 0.0 F.0 flag890
    SELECTF flag890 0.0 tmpf890 VLV_SENTIDO_88

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_88 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_88
    MULF VLV_ERRSUM_88 0.9 F.0
    ADDF F.0 VLV_ERROR_88 VLV_ERRSUM_88
    MULF VLV_ERROR_88 VLV_KP_88 F.1
    SUBF VLV_ERROR_88 VLV_OLDERROR_88 F.3
    MULF F.3 VLV_KD_88 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_88 VLV_KI_88 F.1
    ADDF F.0 F.1 VLV_U_88
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    ADDF VLV_VEL_88 VLV_U_88 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_88 VLV_U_88 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_88 VLV_OLDERROR_88
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody879
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody879
  endwhile879:
    CALL TEXT.APPEND VLV_I_88 VLV_D_88 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_95 F.0 VLV_ENCDIFF_95
    MATH ABS VLV_ENCDIFF_95 F.0
    DATAF tmpf916
    DATA8 flag916
    DIVF VLV_ENCDIFF_95 F.0 tmpf916
    CP_EQF 0.0 F.0 flag916
    SELECTF flag916 0.0 tmpf916 VLV_SIGNO_95

    JR_EQF VLV_ENCDIFF_95 0.0 else917_1
  while918:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile918
  whilebody918:
    MULF VLV_SIGNO_95 VLV_V_95 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_95 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody918
  endwhile918:
    CALL MOTOR.STOP 'A' 'True'
  else917_1:
  endif917:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEA0_1:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF -5.0 F.0 VLV_ENCDIFF_96
    MATH ABS VLV_ENCDIFF_96 F.0
    DATAF tmpf931
    DATA8 flag931
    DIVF VLV_ENCDIFF_96 F.0 tmpf931
    CP_EQF 0.0 F.0 flag931
    SELECTF flag931 0.0 tmpf931 VLV_SIGNO_96

    JR_EQF VLV_ENCDIFF_96 0.0 else932_1
    MULF VLV_SIGNO_96 VLV_V_96 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
  while935:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 5.0 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile935
  whilebody935:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 5.0 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody935
  endwhile935:
    CALL MOTOR.STOP 'A' 'True'
  else932_1:
  endif932:
RETSUB_F_BMOVEA0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA0_1:
SUB_F_BMOVEAD0_1:
    MOVEF_F 0.0 VLV_AENC_101
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_101 F.0 VLV_ENCDIFF_101
    MATH ABS VLV_ENCDIFF_101 F.0
    DATAF tmpf946
    DATA8 flag946
    DIVF VLV_ENCDIFF_101 F.0 tmpf946
    CP_EQF 0.0 F.0 flag946
    SELECTF flag946 0.0 tmpf946 VLV_SIGNO_101

    MATH ABS VLV_ENCDIFF_101 F.6
    DATAF tmpf948
    DATA8 flag948
    DIVF F.6 100.0 tmpf948
    CP_EQF 0.0 100.0 flag948
    SELECTF flag948 0.0 tmpf948 F.5

    DATAF tmpf949
    DATA8 flag949
    DIVF VLV_V_101 20.0 tmpf949
    CP_EQF 0.0 20.0 flag949
    SELECTF flag949 0.0 tmpf949 F.6

    DATAF tmpf950
    DATA8 flag950
    DIVF F.5 F.6 tmpf950
    CP_EQF 0.0 F.6 flag950
    SELECTF flag950 0.0 tmpf950 F.4

    MULF F.4 650.0 F.3
    MULF F.3 2.0 F.2
    MULF F.2 2.0 F.1
    DATAF tmpf954
    DATA8 flag954
    DIVF F.1 3.0 tmpf954
    CP_EQF 0.0 3.0 flag954
    SELECTF flag954 0.0 tmpf954 F.0

    DATA8 flag955
	CP_GTF F.0 400.0 flag955
	SELECTF flag955 F.0 400.0 VLV_SAFETYTIMER_101
    TIMER_READ timeMC3
  while957:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 or958
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENC_101 endwhile957
  or958:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_101 endwhile957
  whilebody957:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_GTEQF F.0 VLV_AENC_101 else962_1
    DATAF tmpf964
    DATA8 flag964
    DIVF VLV_V_101 2.0 tmpf964
    CP_EQF 0.0 2.0 flag964
    SELECTF flag964 0.0 tmpf964 F.2

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf967
    DATA8 flag967
    DIVF F.4 10.0 tmpf967
    CP_EQF 0.0 10.0 flag967
    SELECTF flag967 0.0 tmpf967 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag969
	CP_LTF VLV_V_101 F.1 flag969
	SELECTF flag969 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif962
  else962_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_LTEQF F.0 VLV_AENC_101 else962_2
    DATAF tmpf972
    DATA8 flag972
    DIVF VLV_V_101 2.0 tmpf972
    CP_EQF 0.0 2.0 flag972
    SELECTF flag972 0.0 tmpf972 F.3

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf975
    DATA8 flag975
    DIVF F.5 10.0 tmpf975
    CP_EQF 0.0 10.0 flag975
    SELECTF flag975 0.0 tmpf975 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag977
	CP_LTF VLV_V_101 F.2 flag977
	SELECTF flag977 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif962
  else962_2:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else962_3:
  endif962:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_GTEQF F.0 VLV_AENC_101 else981_1
    DATAF tmpf983
    DATA8 flag983
    DIVF VLV_V_101 2.0 tmpf983
    CP_EQF 0.0 2.0 flag983
    SELECTF flag983 0.0 tmpf983 F.2

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.5
    SUBF VLV_AENC_101 F.5 F.4
    DATAF tmpf986
    DATA8 flag986
    DIVF F.4 10.0 tmpf986
    CP_EQF 0.0 10.0 flag986
    SELECTF flag986 0.0 tmpf986 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag988
	CP_LTF VLV_V_101 F.1 flag988
	SELECTF flag988 VLV_V_101 F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif981
  else981_1:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_LTEQF F.0 VLV_AENC_101 else981_2
    DATAF tmpf991
    DATA8 flag991
    DIVF VLV_V_101 2.0 tmpf991
    CP_EQF 0.0 2.0 flag991
    SELECTF flag991 0.0 tmpf991 F.3

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.6
    SUBF F.6 VLV_AENC_101 F.5
    DATAF tmpf994
    DATA8 flag994
    DIVF F.5 10.0 tmpf994
    CP_EQF 0.0 10.0 flag994
    SELECTF flag994 0.0 tmpf994 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag996
	CP_LTF VLV_V_101 F.2 flag996
	SELECTF flag996 VLV_V_101 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif981
  else981_2:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else981_3:
  endif981:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENC_101 or1001
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENC_101 and1000
  or1001:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_101 whilebody957
  and1000:
  endwhile957:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEAD0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD0_1:
SUB_F_BMOVEADSAFE_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    MATH ABS VLV_DIFFA_104 F.5
    MATH ABS VLV_DIFFD_104 F.6
    DATA8 flag1012
	CP_GTF F.5 F.6 flag1012
	SELECTF flag1012 F.5 F.6 F.4
    DATAF tmpf1013
    DATA8 flag1013
    DIVF F.4 100.0 tmpf1013
    CP_EQF 0.0 100.0 flag1013
    SELECTF flag1013 0.0 tmpf1013 F.3

    DATAF tmpf1014
    DATA8 flag1014
    DIVF VLV_V_104 20.0 tmpf1014
    CP_EQF 0.0 20.0 flag1014
    SELECTF flag1014 0.0 tmpf1014 F.4

    DATAF tmpf1015
    DATA8 flag1015
    DIVF F.3 F.4 tmpf1015
    CP_EQF 0.0 F.4 flag1015
    SELECTF flag1015 0.0 tmpf1015 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag1018
	CP_GTF F.0 400.0 flag1018
	SELECTF flag1018 F.0 400.0 VLV_SAFETYTIMER_104
    MATH ABS VLV_DIFFA_104 F.0
    DATAF tmpf1020
    DATA8 flag1020
    DIVF VLV_DIFFA_104 F.0 tmpf1020
    CP_EQF 0.0 F.0 flag1020
    SELECTF flag1020 0.0 tmpf1020 VLV_SIGNOA_104

    MATH ABS VLV_DIFFD_104 F.0
    DATAF tmpf1022
    DATA8 flag1022
    DIVF VLV_DIFFD_104 F.0 tmpf1022
    CP_EQF 0.0 F.0 flag1022
    SELECTF flag1022 0.0 tmpf1022 VLV_SIGNOD_104

    MULF VLV_V_104 VLV_SIGNOA_104 VLV_VELA_104
    MULF VLV_V_104 VLV_SIGNOD_104 VLV_VELD_104
    CALL MOTOR.SCHEDULESYNC 'AD' VLV_VELA_104 VLV_VELD_104 5.0 'False'

	DATA8 layer1025
	DATA8 nos1025
	DATA8 busy1025
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer1025 nos1025
	JR_EQ8 0 nos1025 motornotbusy1025
  motorwaiting1025:
	OUTPUT_TEST layer1025 nos1025 busy1025
	JR_EQ8 busy1025 0 motornotbusy1025
	SLEEP
	JR motorwaiting1025
  motornotbusy1025:
    CALL LCD.CLEAR
    TIMER_READ timeMC3
  while1028:
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 or1029
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_EQF F.0 0.0 endwhile1028
  or1029:
  whilebody1028:
    MULF VLV_DIFFA_104 VLV_SIGNOA_104 F.0
    JR_LTEQF F.0 0.0 else1032_1
    MOVEF_8 VLV_VELA_104 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif1032
  else1032_1:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else1032_2:
  endif1032:
    MULF VLV_DIFFD_104 VLV_SIGNOD_104 F.0
    JR_LTEQF F.0 0.0 else1036_1
    MOVEF_8 VLV_VELD_104 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif1036
  else1036_1:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else1036_2:
  endif1036:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTEQF F.0 VLV_SAFETYTIMER_104 else1040_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
  else1040_1:
  endif1040:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFA_104
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_104 F.0 VLV_DIFFD_104
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_104 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 whilebody1028
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_NEQF F.0 0.0 whilebody1028
  endwhile1028:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEADSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEADSAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_105 F.0 VLV_ENCDIFF_105
    MATH ABS VLV_ENCDIFF_105 F.0
    DATAF tmpf1057
    DATA8 flag1057
    DIVF VLV_ENCDIFF_105 F.0 tmpf1057
    CP_EQF 0.0 F.0 flag1057
    SELECTF flag1057 0.0 tmpf1057 VLV_SIGNO_105

    JR_EQF VLV_ENCDIFF_105 0.0 else1058_1
    MULF VLV_SIGNO_105 VLV_V_105 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while1061:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile1061
  whilebody1061:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_105 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody1061
  endwhile1061:
    CALL MOTOR.STOP 'D' 'True'
  else1058_1:
  endif1058:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while1070:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_108 endwhile1070
  whilebody1070:
    MOVEF_8 VLV_V_108 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_108 whilebody1070
  endwhile1070:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_109 F.0 VLV_ENCDIFF_109
    MATH ABS VLV_ENCDIFF_109 F.0
    DATAF tmpf1078
    DATA8 flag1078
    DIVF VLV_ENCDIFF_109 F.0 tmpf1078
    CP_EQF 0.0 F.0 flag1078
    SELECTF flag1078 0.0 tmpf1078 VLV_SIGNO_109

    MATH ABS VLV_ENCDIFF_109 F.4
    DATAF tmpf1080
    DATA8 flag1080
    DIVF F.4 100.0 tmpf1080
    CP_EQF 0.0 100.0 flag1080
    SELECTF flag1080 0.0 tmpf1080 F.3

    DATAF tmpf1081
    DATA8 flag1081
    DIVF VLV_V_109 20.0 tmpf1081
    CP_EQF 0.0 20.0 flag1081
    SELECTF flag1081 0.0 tmpf1081 F.4

    DATAF tmpf1082
    DATA8 flag1082
    DIVF F.3 F.4 tmpf1082
    CP_EQF 0.0 F.4 flag1082
    SELECTF flag1082 0.0 tmpf1082 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag1085
	CP_GTF F.0 400.0 flag1085
	SELECTF flag1085 F.0 400.0 VLV_SAFETYTIMER_109
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_109 0.0 else1087_1
  while1088:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile1088
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_109 endwhile1088
  whilebody1088:
    MULF VLV_SIGNO_109 VLV_V_109 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_109 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_109 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and1099
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_109 whilebody1088
  and1099:
  endwhile1088:
    CALL MOTOR.STOP 'D' 'True'
  else1087_1:
  endif1087:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer1105
	DATA8 no1105
	DATA8 mode81105
	
	MOVEF_8 1.0 no1105
	SUB8 no1105 1 no1105
	DIV8 no1105 4 layer1105
	MATH MOD8 no1105 4 no1105

	MOVEF_8 4.0 mode81105
	
	INPUT_DEVICE READY_RAW layer1105 no1105 0 mode81105 0
    MOVEF_F 15.0 VLV_RED_110
    MOVEF_F 60.0 VLV_YELLOW_110
    MOVEF_F 170.0 VLV_GREEN_110
    MOVEF_F 330.0 VLV_BLUE_110
    MOVEF_F 10.0 VLV_VALUENEGRO_110
    MOVEF_F 100.0 VLV_VALUEBLANCO_110
    MOVEF_F 147.0 VLV_RWHITE_110
    MOVEF_F 143.0 VLV_GWHITE_110
    MOVEF_F 160.0 VLV_BWHITE_110
    MOVEF_F 0.0 VLV_HUE_110
    MOVEF_F 0.0 VLV_SAT_110
    MOVEF_F 0.0 VLV_VALUE_110
    MOVEF_F 0.0 VLV_COLOR_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_110
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_110
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_110
  for1111:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor1111
  forbody1111:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_110
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_110 VLV_RGB_110
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_110 VLV_RGB_110
    DATAF tmpf1116
    DATA8 flag1116
    DIVF VLV_RRAW_110 VLV_RWHITE_110 tmpf1116
    CP_EQF 0.0 VLV_RWHITE_110 flag1116
    SELECTF flag1116 0.0 tmpf1116 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    DATAF tmpf1120
    DATA8 flag1120
    DIVF VLV_GRAW_110 VLV_GWHITE_110 tmpf1120
    CP_EQF 0.0 VLV_GWHITE_110 flag1120
    SELECTF flag1120 0.0 tmpf1120 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    DATAF tmpf1124
    DATA8 flag1124
    DIVF VLV_BRAW_110 VLV_BWHITE_110 tmpf1124
    CP_EQF 0.0 VLV_BWHITE_110 flag1124
    SELECTF flag1124 0.0 tmpf1124 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_RNORMA_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.3 VLV_GNORMA_110
    DATA8 flag1130
	CP_GTF F.2 F.3 flag1130
	SELECTF flag1130 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_110 F.2 VLV_BNORMA_110
    DATA8 flag1132
	CP_GTF F.1 F.2 flag1132
	SELECTF flag1132 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    DATA32 milliseconds1134
	MOVEF_32 5.0 milliseconds1134
	DATA32 timer1134
	TIMER_WAIT milliseconds1134 timer1134
	TIMER_READY timer1134
    ADDF VLV_J_110 1.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody1111
  endfor1111:
    MOVEF_F 1.0 VLV_J_110
  for1136:
    JR_GTF VLV_J_110 VLV_REPS_110 endfor1136
  forbody1136:
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_RNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_110
    ADDF F.0 F.1 VLV_RNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_GNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_110
    ADDF F.0 F.1 VLV_GNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_BNORMA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_110
    ADDF F.0 F.1 VLV_BNORM_110
    CALL ARRAYGET_FLOAT VLV_J_110 F.0 VLV_MAXA_110
    ADDF VLV_J_110 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_110
    ADDF F.0 F.1 VLV_MAX_110
    ADDF VLV_J_110 2.0 VLV_J_110
    JR_LTEQF VLV_J_110 VLV_REPS_110 forbody1136
  endfor1136:
    DATAF tmpf1154
    DATA8 flag1154
    DIVF VLV_RNORM_110 VLV_REPS_110 tmpf1154
    CP_EQF 0.0 VLV_REPS_110 flag1154
    SELECTF flag1154 0.0 tmpf1154 VLV_RNORM_110

    DATAF tmpf1155
    DATA8 flag1155
    DIVF VLV_GNORM_110 VLV_REPS_110 tmpf1155
    CP_EQF 0.0 VLV_REPS_110 flag1155
    SELECTF flag1155 0.0 tmpf1155 VLV_GNORM_110

    DATAF tmpf1156
    DATA8 flag1156
    DIVF VLV_BNORM_110 VLV_REPS_110 tmpf1156
    CP_EQF 0.0 VLV_REPS_110 flag1156
    SELECTF flag1156 0.0 tmpf1156 VLV_BNORM_110

    DATAF tmpf1157
    DATA8 flag1157
    DIVF VLV_MAX_110 VLV_REPS_110 tmpf1157
    CP_EQF 0.0 VLV_REPS_110 flag1157
    SELECTF flag1157 0.0 tmpf1157 VLV_MAX_110

    DATA8 flag1158
	CP_LTF VLV_RNORM_110 VLV_GNORM_110 flag1158
	SELECTF flag1158 VLV_RNORM_110 VLV_GNORM_110 F.0
    DATA8 flag1159
	CP_LTF F.0 VLV_BNORM_110 flag1159
	SELECTF flag1159 F.0 VLV_BNORM_110 VLV_MIN_110
    JR_NEQF VLV_MAX_110 VLV_MIN_110 else1160_1
    MOVEF_F 0.0 VLV_HUE_110
    JR endif1160
  else1160_1:
    JR_NEQF VLV_MAX_110 VLV_RNORM_110 else1160_2
    JR_LTF VLV_GNORM_110 VLV_BNORM_110 else1161_1
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_110 VLV_MIN_110 F.1
    DATAF tmpf1165
    DATA8 flag1165
    DIVF F.0 F.1 tmpf1165
    CP_EQF 0.0 F.1 flag1165
    SELECTF flag1165 0.0 tmpf1165 VLV_HUE_110

    JR endif1161
  else1161_1:
    SUBF VLV_GNORM_110 VLV_BNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf1169
    DATA8 flag1169
    DIVF F.1 F.2 tmpf1169
    CP_EQF 0.0 F.2 flag1169
    SELECTF flag1169 0.0 tmpf1169 F.0

    ADDF F.0 360.0 VLV_HUE_110
  else1161_2:
  endif1161:
    JR endif1160
  else1160_2:
    JR_NEQF VLV_MAX_110 VLV_GNORM_110 else1160_3
    SUBF VLV_BNORM_110 VLV_RNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf1174
    DATA8 flag1174
    DIVF F.1 F.2 tmpf1174
    CP_EQF 0.0 F.2 flag1174
    SELECTF flag1174 0.0 tmpf1174 F.0

    ADDF F.0 120.0 VLV_HUE_110
    JR endif1160
  else1160_3:
    SUBF VLV_RNORM_110 VLV_GNORM_110 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_110 VLV_MIN_110 F.2
    DATAF tmpf1179
    DATA8 flag1179
    DIVF F.1 F.2 tmpf1179
    CP_EQF 0.0 F.2 flag1179
    SELECTF flag1179 0.0 tmpf1179 F.0

    ADDF F.0 240.0 VLV_HUE_110
  else1160_4:
  endif1160:
    JR_NEQF VLV_MAX_110 0.0 else1181_1
    MOVEF_F 0.0 VLV_SAT_110
    JR endif1181
  else1181_1:
    DATAF tmpf1182
    DATA8 flag1182
    DIVF VLV_MIN_110 VLV_MAX_110 tmpf1182
    CP_EQF 0.0 VLV_MAX_110 flag1182
    SELECTF flag1182 0.0 tmpf1182 F.0

    SUBF 1.0 F.0 VLV_SAT_110
  else1181_2:
  endif1181:
    MOVEF_F VLV_MAX_110 VLV_VALUE_110
    ADDF VLV_VALUEBLANCO_110 VLV_VALUENEGRO_110 F.0
    DATAF tmpf1185
    DATA8 flag1185
    DIVF F.0 2.0 tmpf1185
    CP_EQF 0.0 2.0 flag1185
    SELECTF flag1185 0.0 tmpf1185 VLV_RGBGREY_110

    ADDF VLV_RNORM_110 VLV_GNORM_110 F.1
    ADDF F.1 VLV_BNORM_110 F.0
    JR_GTF F.0 3.0 else1186_1
    MOVEF_F 0.0 VLV_COLOR_110
    JR endif1186
  else1186_1:
    JR_GTEQF VLV_SAT_110 0.4 else1189_1
    JR_LTEQF VLV_VALUE_110 VLV_RGBGREY_110 else1190_1
    MOVEF_F 6.0 VLV_COLOR_110
    JR endif1190
  else1190_1:
    MOVEF_F 1.0 VLV_COLOR_110
  else1190_2:
  endif1190:
    JR endif1189
  else1189_1:
    JR_LTF VLV_HUE_110 0.0 else1191_1
    JR_GTEQF VLV_HUE_110 VLV_RED_110 else1191_1
    MOVEF_F 5.0 VLV_COLOR_110
    JR endif1191
  else1191_1:
    JR_LTF VLV_HUE_110 VLV_RED_110 else1191_2
    JR_GTEQF VLV_HUE_110 VLV_YELLOW_110 else1191_2
    MOVEF_F 4.0 VLV_COLOR_110
    JR endif1191
  else1191_2:
    JR_LTF VLV_HUE_110 VLV_YELLOW_110 else1191_3
    JR_GTEQF VLV_HUE_110 VLV_GREEN_110 else1191_3
    MOVEF_F 3.0 VLV_COLOR_110
    JR endif1191
  else1191_3:
    JR_LTF VLV_HUE_110 VLV_GREEN_110 else1191_4
    JR_GTEQF VLV_HUE_110 VLV_BLUE_110 else1191_4
    MOVEF_F 2.0 VLV_COLOR_110
    JR endif1191
  else1191_4:
    MOVEF_F 5.0 VLV_COLOR_110
  else1191_5:
  endif1191:
  else1189_2:
  endif1189:
  else1186_2:
  endif1186:
    STRINGS VALUE_FORMATTED VLV_RRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_110 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_110 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_110 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1207:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer1208
	DATA8 no1208
	DATA8 mode81208
	
	MOVEF_8 2.0 no1208
	SUB8 no1208 1 no1208
	DIV8 no1208 4 layer1208
	MATH MOD8 no1208 4 no1208

	MOVEF_8 4.0 mode81208
	
	INPUT_DEVICE READY_RAW layer1208 no1208 0 mode81208 0
    MOVEF_F 15.0 VLV_RED_111
    MOVEF_F 60.0 VLV_YELLOW_111
    MOVEF_F 170.0 VLV_GREEN_111
    MOVEF_F 330.0 VLV_BLUE_111
    MOVEF_F 10.0 VLV_VALUENEGRO_111
    MOVEF_F 100.0 VLV_VALUEBLANCO_111
    MOVEF_F 147.0 VLV_RWHITE_111
    MOVEF_F 143.0 VLV_GWHITE_111
    MOVEF_F 160.0 VLV_BWHITE_111
    MOVEF_F 0.0 VLV_HUE_111
    MOVEF_F 0.0 VLV_SAT_111
    MOVEF_F 0.0 VLV_VALUE_111
    MOVEF_F 0.0 VLV_COLOR_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_111
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_111
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_111
  for1214:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor1214
  forbody1214:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_111
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_111 VLV_RGB_111
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_111 VLV_RGB_111
    DATAF tmpf1219
    DATA8 flag1219
    DIVF VLV_RRAW_111 VLV_RWHITE_111 tmpf1219
    CP_EQF 0.0 VLV_RWHITE_111 flag1219
    SELECTF flag1219 0.0 tmpf1219 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    DATAF tmpf1223
    DATA8 flag1223
    DIVF VLV_GRAW_111 VLV_GWHITE_111 tmpf1223
    CP_EQF 0.0 VLV_GWHITE_111 flag1223
    SELECTF flag1223 0.0 tmpf1223 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    DATAF tmpf1227
    DATA8 flag1227
    DIVF VLV_BRAW_111 VLV_BWHITE_111 tmpf1227
    CP_EQF 0.0 VLV_BWHITE_111 flag1227
    SELECTF flag1227 0.0 tmpf1227 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_RNORMA_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.3 VLV_GNORMA_111
    DATA8 flag1233
	CP_GTF F.2 F.3 flag1233
	SELECTF flag1233 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_111 F.2 VLV_BNORMA_111
    DATA8 flag1235
	CP_GTF F.1 F.2 flag1235
	SELECTF flag1235 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    DATA32 milliseconds1237
	MOVEF_32 5.0 milliseconds1237
	DATA32 timer1237
	TIMER_WAIT milliseconds1237 timer1237
	TIMER_READY timer1237
    ADDF VLV_J_111 1.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody1214
  endfor1214:
    MOVEF_F 1.0 VLV_J_111
  for1239:
    JR_GTF VLV_J_111 VLV_REPS_111 endfor1239
  forbody1239:
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_RNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_111
    ADDF F.0 F.1 VLV_RNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_GNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_111
    ADDF F.0 F.1 VLV_GNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_BNORMA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_111
    ADDF F.0 F.1 VLV_BNORM_111
    CALL ARRAYGET_FLOAT VLV_J_111 F.0 VLV_MAXA_111
    ADDF VLV_J_111 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_111
    ADDF F.0 F.1 VLV_MAX_111
    ADDF VLV_J_111 2.0 VLV_J_111
    JR_LTEQF VLV_J_111 VLV_REPS_111 forbody1239
  endfor1239:
    DATAF tmpf1257
    DATA8 flag1257
    DIVF VLV_RNORM_111 VLV_REPS_111 tmpf1257
    CP_EQF 0.0 VLV_REPS_111 flag1257
    SELECTF flag1257 0.0 tmpf1257 VLV_RNORM_111

    DATAF tmpf1258
    DATA8 flag1258
    DIVF VLV_GNORM_111 VLV_REPS_111 tmpf1258
    CP_EQF 0.0 VLV_REPS_111 flag1258
    SELECTF flag1258 0.0 tmpf1258 VLV_GNORM_111

    DATAF tmpf1259
    DATA8 flag1259
    DIVF VLV_BNORM_111 VLV_REPS_111 tmpf1259
    CP_EQF 0.0 VLV_REPS_111 flag1259
    SELECTF flag1259 0.0 tmpf1259 VLV_BNORM_111

    DATAF tmpf1260
    DATA8 flag1260
    DIVF VLV_MAX_111 VLV_REPS_111 tmpf1260
    CP_EQF 0.0 VLV_REPS_111 flag1260
    SELECTF flag1260 0.0 tmpf1260 VLV_MAX_111

    DATA8 flag1261
	CP_LTF VLV_RNORM_111 VLV_GNORM_111 flag1261
	SELECTF flag1261 VLV_RNORM_111 VLV_GNORM_111 F.0
    DATA8 flag1262
	CP_LTF F.0 VLV_BNORM_111 flag1262
	SELECTF flag1262 F.0 VLV_BNORM_111 VLV_MIN_111
    JR_NEQF VLV_MAX_111 VLV_MIN_111 else1263_1
    MOVEF_F 0.0 VLV_HUE_111
    JR endif1263
  else1263_1:
    JR_NEQF VLV_MAX_111 VLV_RNORM_111 else1263_2
    JR_LTF VLV_GNORM_111 VLV_BNORM_111 else1264_1
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_111 VLV_MIN_111 F.1
    DATAF tmpf1268
    DATA8 flag1268
    DIVF F.0 F.1 tmpf1268
    CP_EQF 0.0 F.1 flag1268
    SELECTF flag1268 0.0 tmpf1268 VLV_HUE_111

    JR endif1264
  else1264_1:
    SUBF VLV_GNORM_111 VLV_BNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1272
    DATA8 flag1272
    DIVF F.1 F.2 tmpf1272
    CP_EQF 0.0 F.2 flag1272
    SELECTF flag1272 0.0 tmpf1272 F.0

    ADDF F.0 360.0 VLV_HUE_111
  else1264_2:
  endif1264:
    JR endif1263
  else1263_2:
    JR_NEQF VLV_MAX_111 VLV_GNORM_111 else1263_3
    SUBF VLV_BNORM_111 VLV_RNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1277
    DATA8 flag1277
    DIVF F.1 F.2 tmpf1277
    CP_EQF 0.0 F.2 flag1277
    SELECTF flag1277 0.0 tmpf1277 F.0

    ADDF F.0 120.0 VLV_HUE_111
    JR endif1263
  else1263_3:
    SUBF VLV_RNORM_111 VLV_GNORM_111 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_111 VLV_MIN_111 F.2
    DATAF tmpf1282
    DATA8 flag1282
    DIVF F.1 F.2 tmpf1282
    CP_EQF 0.0 F.2 flag1282
    SELECTF flag1282 0.0 tmpf1282 F.0

    ADDF F.0 240.0 VLV_HUE_111
  else1263_4:
  endif1263:
    JR_NEQF VLV_MAX_111 0.0 else1284_1
    MOVEF_F 0.0 VLV_SAT_111
    JR endif1284
  else1284_1:
    DATAF tmpf1285
    DATA8 flag1285
    DIVF VLV_MIN_111 VLV_MAX_111 tmpf1285
    CP_EQF 0.0 VLV_MAX_111 flag1285
    SELECTF flag1285 0.0 tmpf1285 F.0

    SUBF 1.0 F.0 VLV_SAT_111
  else1284_2:
  endif1284:
    MOVEF_F VLV_MAX_111 VLV_VALUE_111
    ADDF VLV_VALUEBLANCO_111 VLV_VALUENEGRO_111 F.0
    DATAF tmpf1288
    DATA8 flag1288
    DIVF F.0 2.0 tmpf1288
    CP_EQF 0.0 2.0 flag1288
    SELECTF flag1288 0.0 tmpf1288 VLV_RGBGREY_111

    ADDF VLV_RNORM_111 VLV_GNORM_111 F.1
    ADDF F.1 VLV_BNORM_111 F.0
    JR_GTF F.0 3.0 else1289_1
    MOVEF_F 0.0 VLV_COLOR_111
    JR endif1289
  else1289_1:
    JR_GTEQF VLV_SAT_111 0.4 else1292_1
    JR_LTEQF VLV_VALUE_111 VLV_RGBGREY_111 else1293_1
    MOVEF_F 6.0 VLV_COLOR_111
    JR endif1293
  else1293_1:
    MOVEF_F 1.0 VLV_COLOR_111
  else1293_2:
  endif1293:
    JR endif1292
  else1292_1:
    JR_LTF VLV_HUE_111 0.0 else1294_1
    JR_GTEQF VLV_HUE_111 VLV_RED_111 else1294_1
    MOVEF_F 5.0 VLV_COLOR_111
    JR endif1294
  else1294_1:
    JR_LTF VLV_HUE_111 VLV_RED_111 else1294_2
    JR_GTEQF VLV_HUE_111 VLV_YELLOW_111 else1294_2
    MOVEF_F 4.0 VLV_COLOR_111
    JR endif1294
  else1294_2:
    JR_LTF VLV_HUE_111 VLV_YELLOW_111 else1294_3
    JR_GTEQF VLV_HUE_111 VLV_GREEN_111 else1294_3
    MOVEF_F 3.0 VLV_COLOR_111
    JR endif1294
  else1294_3:
    JR_LTF VLV_HUE_111 VLV_GREEN_111 else1294_4
    JR_GTEQF VLV_HUE_111 VLV_BLUE_111 else1294_4
    MOVEF_F 2.0 VLV_COLOR_111
    JR endif1294
  else1294_4:
    MOVEF_F 5.0 VLV_COLOR_111
  else1294_5:
  endif1294:
  else1292_2:
  endif1292:
  else1289_2:
  endif1289:
    STRINGS VALUE_FORMATTED VLV_RRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_111 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_111 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_111 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1310:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer1311
	DATA8 no1311
	DATA8 mode81311
	
	MOVEF_8 3.0 no1311
	SUB8 no1311 1 no1311
	DIV8 no1311 4 layer1311
	MATH MOD8 no1311 4 no1311

	MOVEF_8 4.0 mode81311
	
	INPUT_DEVICE READY_RAW layer1311 no1311 0 mode81311 0
    MOVEF_F 15.0 VLV_RED_112
    MOVEF_F 60.0 VLV_YELLOW_112
    MOVEF_F 170.0 VLV_GREEN_112
    MOVEF_F 330.0 VLV_BLUE_112
    MOVEF_F 10.0 VLV_VALUENEGRO_112
    MOVEF_F 100.0 VLV_VALUEBLANCO_112
    MOVEF_F 147.0 VLV_RWHITE_112
    MOVEF_F 143.0 VLV_GWHITE_112
    MOVEF_F 160.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    MOVEF_F 0.0 VLV_COLOR_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_112
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_112
  for1317:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1317
  forbody1317:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_112
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_112 VLV_RGB_112
    DATAF tmpf1322
    DATA8 flag1322
    DIVF VLV_RRAW_112 VLV_RWHITE_112 tmpf1322
    CP_EQF 0.0 VLV_RWHITE_112 flag1322
    SELECTF flag1322 0.0 tmpf1322 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    DATAF tmpf1326
    DATA8 flag1326
    DIVF VLV_GRAW_112 VLV_GWHITE_112 tmpf1326
    CP_EQF 0.0 VLV_GWHITE_112 flag1326
    SELECTF flag1326 0.0 tmpf1326 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    DATAF tmpf1330
    DATA8 flag1330
    DIVF VLV_BRAW_112 VLV_BWHITE_112 tmpf1330
    CP_EQF 0.0 VLV_BWHITE_112 flag1330
    SELECTF flag1330 0.0 tmpf1330 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_RNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.3 VLV_GNORMA_112
    DATA8 flag1336
	CP_GTF F.2 F.3 flag1336
	SELECTF flag1336 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_BNORMA_112
    DATA8 flag1338
	CP_GTF F.1 F.2 flag1338
	SELECTF flag1338 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    DATA32 milliseconds1340
	MOVEF_32 5.0 milliseconds1340
	DATA32 timer1340
	TIMER_WAIT milliseconds1340 timer1340
	TIMER_READY timer1340
    ADDF VLV_J_112 1.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1317
  endfor1317:
    MOVEF_F 1.0 VLV_J_112
  for1342:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1342
  forbody1342:
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_112
    ADDF F.0 F.1 VLV_RNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_112
    ADDF F.0 F.1 VLV_GNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_112
    ADDF F.0 F.1 VLV_BNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_112
    ADDF F.0 F.1 VLV_MAX_112
    ADDF VLV_J_112 2.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1342
  endfor1342:
    DATAF tmpf1360
    DATA8 flag1360
    DIVF VLV_RNORM_112 VLV_REPS_112 tmpf1360
    CP_EQF 0.0 VLV_REPS_112 flag1360
    SELECTF flag1360 0.0 tmpf1360 VLV_RNORM_112

    DATAF tmpf1361
    DATA8 flag1361
    DIVF VLV_GNORM_112 VLV_REPS_112 tmpf1361
    CP_EQF 0.0 VLV_REPS_112 flag1361
    SELECTF flag1361 0.0 tmpf1361 VLV_GNORM_112

    DATAF tmpf1362
    DATA8 flag1362
    DIVF VLV_BNORM_112 VLV_REPS_112 tmpf1362
    CP_EQF 0.0 VLV_REPS_112 flag1362
    SELECTF flag1362 0.0 tmpf1362 VLV_BNORM_112

    DATAF tmpf1363
    DATA8 flag1363
    DIVF VLV_MAX_112 VLV_REPS_112 tmpf1363
    CP_EQF 0.0 VLV_REPS_112 flag1363
    SELECTF flag1363 0.0 tmpf1363 VLV_MAX_112

    DATA8 flag1364
	CP_LTF VLV_RNORM_112 VLV_GNORM_112 flag1364
	SELECTF flag1364 VLV_RNORM_112 VLV_GNORM_112 F.0
    DATA8 flag1365
	CP_LTF F.0 VLV_BNORM_112 flag1365
	SELECTF flag1365 F.0 VLV_BNORM_112 VLV_MIN_112
    JR_NEQF VLV_MAX_112 VLV_MIN_112 else1366_1
    MOVEF_F 0.0 VLV_HUE_112
    JR endif1366
  else1366_1:
    JR_NEQF VLV_MAX_112 VLV_RNORM_112 else1366_2
    JR_LTF VLV_GNORM_112 VLV_BNORM_112 else1367_1
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_112 VLV_MIN_112 F.1
    DATAF tmpf1371
    DATA8 flag1371
    DIVF F.0 F.1 tmpf1371
    CP_EQF 0.0 F.1 flag1371
    SELECTF flag1371 0.0 tmpf1371 VLV_HUE_112

    JR endif1367
  else1367_1:
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1375
    DATA8 flag1375
    DIVF F.1 F.2 tmpf1375
    CP_EQF 0.0 F.2 flag1375
    SELECTF flag1375 0.0 tmpf1375 F.0

    ADDF F.0 360.0 VLV_HUE_112
  else1367_2:
  endif1367:
    JR endif1366
  else1366_2:
    JR_NEQF VLV_MAX_112 VLV_GNORM_112 else1366_3
    SUBF VLV_BNORM_112 VLV_RNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1380
    DATA8 flag1380
    DIVF F.1 F.2 tmpf1380
    CP_EQF 0.0 F.2 flag1380
    SELECTF flag1380 0.0 tmpf1380 F.0

    ADDF F.0 120.0 VLV_HUE_112
    JR endif1366
  else1366_3:
    SUBF VLV_RNORM_112 VLV_GNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1385
    DATA8 flag1385
    DIVF F.1 F.2 tmpf1385
    CP_EQF 0.0 F.2 flag1385
    SELECTF flag1385 0.0 tmpf1385 F.0

    ADDF F.0 240.0 VLV_HUE_112
  else1366_4:
  endif1366:
    JR_NEQF VLV_MAX_112 0.0 else1387_1
    MOVEF_F 0.0 VLV_SAT_112
    JR endif1387
  else1387_1:
    DATAF tmpf1388
    DATA8 flag1388
    DIVF VLV_MIN_112 VLV_MAX_112 tmpf1388
    CP_EQF 0.0 VLV_MAX_112 flag1388
    SELECTF flag1388 0.0 tmpf1388 F.0

    SUBF 1.0 F.0 VLV_SAT_112
  else1387_2:
  endif1387:
    MOVEF_F VLV_MAX_112 VLV_VALUE_112
    ADDF VLV_VALUEBLANCO_112 VLV_VALUENEGRO_112 F.0
    DATAF tmpf1391
    DATA8 flag1391
    DIVF F.0 2.0 tmpf1391
    CP_EQF 0.0 2.0 flag1391
    SELECTF flag1391 0.0 tmpf1391 VLV_RGBGREY_112

    ADDF VLV_RNORM_112 VLV_GNORM_112 F.1
    ADDF F.1 VLV_BNORM_112 F.0
    JR_GTF F.0 3.0 else1392_1
    MOVEF_F 0.0 VLV_COLOR_112
    JR endif1392
  else1392_1:
    JR_GTEQF VLV_SAT_112 0.4 else1395_1
    JR_LTEQF VLV_VALUE_112 VLV_RGBGREY_112 else1396_1
    MOVEF_F 6.0 VLV_COLOR_112
    JR endif1396
  else1396_1:
    MOVEF_F 1.0 VLV_COLOR_112
  else1396_2:
  endif1396:
    JR endif1395
  else1395_1:
    JR_LTF VLV_HUE_112 0.0 else1397_1
    JR_GTEQF VLV_HUE_112 VLV_RED_112 else1397_1
    MOVEF_F 5.0 VLV_COLOR_112
    JR endif1397
  else1397_1:
    JR_LTF VLV_HUE_112 VLV_RED_112 else1397_2
    JR_GTEQF VLV_HUE_112 VLV_YELLOW_112 else1397_2
    MOVEF_F 4.0 VLV_COLOR_112
    JR endif1397
  else1397_2:
    JR_LTF VLV_HUE_112 VLV_YELLOW_112 else1397_3
    JR_GTEQF VLV_HUE_112 VLV_GREEN_112 else1397_3
    MOVEF_F 3.0 VLV_COLOR_112
    JR endif1397
  else1397_3:
    JR_LTF VLV_HUE_112 VLV_GREEN_112 else1397_4
    JR_GTEQF VLV_HUE_112 VLV_BLUE_112 else1397_4
    MOVEF_F 2.0 VLV_COLOR_112
    JR endif1397
  else1397_4:
    MOVEF_F 5.0 VLV_COLOR_112
  else1397_5:
  endif1397:
  else1395_2:
  endif1395:
  else1392_2:
  endif1392:
    STRINGS VALUE_FORMATTED VLV_RRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_112 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1413:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer1414
	DATA8 no1414
	DATA8 mode81414
	
	MOVEF_8 4.0 no1414
	SUB8 no1414 1 no1414
	DIV8 no1414 4 layer1414
	MATH MOD8 no1414 4 no1414

	MOVEF_8 4.0 mode81414
	
	INPUT_DEVICE READY_RAW layer1414 no1414 0 mode81414 0
    MOVEF_F 15.0 VLV_RED_113
    MOVEF_F 60.0 VLV_YELLOW_113
    MOVEF_F 170.0 VLV_GREEN_113
    MOVEF_F 330.0 VLV_BLUE_113
    MOVEF_F 10.0 VLV_VALUENEGRO_113
    MOVEF_F 100.0 VLV_VALUEBLANCO_113
    MOVEF_F 147.0 VLV_RWHITE_113
    MOVEF_F 143.0 VLV_GWHITE_113
    MOVEF_F 160.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_113
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_113
  for1420:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1420
  forbody1420:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_113
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_113 VLV_RGB_113
    DATAF tmpf1425
    DATA8 flag1425
    DIVF VLV_RRAW_113 VLV_RWHITE_113 tmpf1425
    CP_EQF 0.0 VLV_RWHITE_113 flag1425
    SELECTF flag1425 0.0 tmpf1425 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    DATAF tmpf1429
    DATA8 flag1429
    DIVF VLV_GRAW_113 VLV_GWHITE_113 tmpf1429
    CP_EQF 0.0 VLV_GWHITE_113 flag1429
    SELECTF flag1429 0.0 tmpf1429 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    DATAF tmpf1433
    DATA8 flag1433
    DIVF VLV_BRAW_113 VLV_BWHITE_113 tmpf1433
    CP_EQF 0.0 VLV_BWHITE_113 flag1433
    SELECTF flag1433 0.0 tmpf1433 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_RNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.3 VLV_GNORMA_113
    DATA8 flag1439
	CP_GTF F.2 F.3 flag1439
	SELECTF flag1439 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_BNORMA_113
    DATA8 flag1441
	CP_GTF F.1 F.2 flag1441
	SELECTF flag1441 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    DATA32 milliseconds1443
	MOVEF_32 5.0 milliseconds1443
	DATA32 timer1443
	TIMER_WAIT milliseconds1443 timer1443
	TIMER_READY timer1443
    ADDF VLV_J_113 1.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1420
  endfor1420:
    MOVEF_F 1.0 VLV_J_113
  for1445:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1445
  forbody1445:
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_113
    ADDF F.0 F.1 VLV_RNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_113
    ADDF F.0 F.1 VLV_GNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_113
    ADDF F.0 F.1 VLV_BNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_113
    ADDF F.0 F.1 VLV_MAX_113
    ADDF VLV_J_113 2.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1445
  endfor1445:
    DATAF tmpf1463
    DATA8 flag1463
    DIVF VLV_RNORM_113 VLV_REPS_113 tmpf1463
    CP_EQF 0.0 VLV_REPS_113 flag1463
    SELECTF flag1463 0.0 tmpf1463 VLV_RNORM_113

    DATAF tmpf1464
    DATA8 flag1464
    DIVF VLV_GNORM_113 VLV_REPS_113 tmpf1464
    CP_EQF 0.0 VLV_REPS_113 flag1464
    SELECTF flag1464 0.0 tmpf1464 VLV_GNORM_113

    DATAF tmpf1465
    DATA8 flag1465
    DIVF VLV_BNORM_113 VLV_REPS_113 tmpf1465
    CP_EQF 0.0 VLV_REPS_113 flag1465
    SELECTF flag1465 0.0 tmpf1465 VLV_BNORM_113

    DATAF tmpf1466
    DATA8 flag1466
    DIVF VLV_MAX_113 VLV_REPS_113 tmpf1466
    CP_EQF 0.0 VLV_REPS_113 flag1466
    SELECTF flag1466 0.0 tmpf1466 VLV_MAX_113

    DATA8 flag1467
	CP_LTF VLV_RNORM_113 VLV_GNORM_113 flag1467
	SELECTF flag1467 VLV_RNORM_113 VLV_GNORM_113 F.0
    DATA8 flag1468
	CP_LTF F.0 VLV_BNORM_113 flag1468
	SELECTF flag1468 F.0 VLV_BNORM_113 VLV_MIN_113
    JR_NEQF VLV_MAX_113 VLV_MIN_113 else1469_1
    MOVEF_F 0.0 VLV_HUE_113
    JR endif1469
  else1469_1:
    JR_NEQF VLV_MAX_113 VLV_RNORM_113 else1469_2
    JR_LTF VLV_GNORM_113 VLV_BNORM_113 else1470_1
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_113 VLV_MIN_113 F.1
    DATAF tmpf1474
    DATA8 flag1474
    DIVF F.0 F.1 tmpf1474
    CP_EQF 0.0 F.1 flag1474
    SELECTF flag1474 0.0 tmpf1474 VLV_HUE_113

    JR endif1470
  else1470_1:
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1478
    DATA8 flag1478
    DIVF F.1 F.2 tmpf1478
    CP_EQF 0.0 F.2 flag1478
    SELECTF flag1478 0.0 tmpf1478 F.0

    ADDF F.0 360.0 VLV_HUE_113
  else1470_2:
  endif1470:
    JR endif1469
  else1469_2:
    JR_NEQF VLV_MAX_113 VLV_GNORM_113 else1469_3
    SUBF VLV_BNORM_113 VLV_RNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1483
    DATA8 flag1483
    DIVF F.1 F.2 tmpf1483
    CP_EQF 0.0 F.2 flag1483
    SELECTF flag1483 0.0 tmpf1483 F.0

    ADDF F.0 120.0 VLV_HUE_113
    JR endif1469
  else1469_3:
    SUBF VLV_RNORM_113 VLV_GNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1488
    DATA8 flag1488
    DIVF F.1 F.2 tmpf1488
    CP_EQF 0.0 F.2 flag1488
    SELECTF flag1488 0.0 tmpf1488 F.0

    ADDF F.0 240.0 VLV_HUE_113
  else1469_4:
  endif1469:
    JR_NEQF VLV_MAX_113 0.0 else1490_1
    MOVEF_F 0.0 VLV_SAT_113
    JR endif1490
  else1490_1:
    DATAF tmpf1491
    DATA8 flag1491
    DIVF VLV_MIN_113 VLV_MAX_113 tmpf1491
    CP_EQF 0.0 VLV_MAX_113 flag1491
    SELECTF flag1491 0.0 tmpf1491 F.0

    SUBF 1.0 F.0 VLV_SAT_113
  else1490_2:
  endif1490:
    MOVEF_F VLV_MAX_113 VLV_VALUE_113
    ADDF VLV_VALUEBLANCO_113 VLV_VALUENEGRO_113 F.0
    DATAF tmpf1494
    DATA8 flag1494
    DIVF F.0 2.0 tmpf1494
    CP_EQF 0.0 2.0 flag1494
    SELECTF flag1494 0.0 tmpf1494 VLV_RGBGREY_113

    ADDF VLV_RNORM_113 VLV_GNORM_113 F.1
    ADDF F.1 VLV_BNORM_113 F.0
    JR_GTF F.0 3.0 else1495_1
    MOVEF_F 0.0 VLV_COLOR_113
    JR endif1495
  else1495_1:
    JR_GTEQF VLV_SAT_113 0.4 else1498_1
    JR_LTEQF VLV_VALUE_113 VLV_RGBGREY_113 else1499_1
    MOVEF_F 6.0 VLV_COLOR_113
    JR endif1499
  else1499_1:
    MOVEF_F 1.0 VLV_COLOR_113
  else1499_2:
  endif1499:
    JR endif1498
  else1498_1:
    JR_LTF VLV_HUE_113 0.0 else1500_1
    JR_GTEQF VLV_HUE_113 VLV_RED_113 else1500_1
    MOVEF_F 5.0 VLV_COLOR_113
    JR endif1500
  else1500_1:
    JR_LTF VLV_HUE_113 VLV_RED_113 else1500_2
    JR_GTEQF VLV_HUE_113 VLV_YELLOW_113 else1500_2
    MOVEF_F 4.0 VLV_COLOR_113
    JR endif1500
  else1500_2:
    JR_LTF VLV_HUE_113 VLV_YELLOW_113 else1500_3
    JR_GTEQF VLV_HUE_113 VLV_GREEN_113 else1500_3
    MOVEF_F 3.0 VLV_COLOR_113
    JR endif1500
  else1500_3:
    JR_LTF VLV_HUE_113 VLV_GREEN_113 else1500_4
    JR_GTEQF VLV_HUE_113 VLV_BLUE_113 else1500_4
    MOVEF_F 2.0 VLV_COLOR_113
    JR endif1500
  else1500_4:
    MOVEF_F 5.0 VLV_COLOR_113
  else1500_5:
  endif1500:
  else1498_2:
  endif1498:
  else1495_2:
  endif1495:
    STRINGS VALUE_FORMATTED VLV_RRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_113 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1516:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_122 0.0 else1517_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1517
  else1517_1:
    JR_NEQF VLV_COLOR_122 1.0 else1517_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1517
  else1517_2:
    JR_NEQF VLV_COLOR_122 2.0 else1517_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1517
  else1517_3:
    JR_NEQF VLV_COLOR_122 3.0 else1517_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1517
  else1517_4:
    JR_NEQF VLV_COLOR_122 4.0 else1517_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1517
  else1517_5:
    JR_NEQF VLV_COLOR_122 5.0 else1517_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1517
  else1517_6:
    JR_NEQF VLV_COLOR_122 6.0 else1517_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1517
  else1517_7:
    JR_NEQF VLV_COLOR_122 7.0 else1517_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1517_8:
  endif1517:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_ABAJO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1526:
    MOVEF_F 40.0 VLV_V_105
    MOVEF_F -220.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1527:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1528:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 350.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1529:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -300.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1530:
RETSUB_F_COGER_ABAJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_0:
SUB_F_COGER_ARRIBA_0:
    MOVEF_F -20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1531:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -670.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1532:
    MOVEF_F 20.0 VLV_V_105
    MOVEF_F -200.0 VLV_AENC_105
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1533:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -780.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1534:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1535:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 400.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1536:
    MOVEF_F 20.0 VLV_V_95
    MOVEF_F -400.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1537:
RETSUB_F_COGER_ARRIBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ARRIBA_0:
SUB_F_SOLTAR_TODO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1538:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -750.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1539:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1540:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1541:
RETSUB_F_SOLTAR_TODO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_TODO_0:
SUB_F_SOLTAR_UNO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1542:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -760.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1543:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -200.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1544:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -660.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1545:
    MOVEF_F 40.0 VLV_V_109
    MOVEF_F -250.0 VLV_AENC_109
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1546:
    MOVEF_F -40.0 VLV_V_108
    MOVEF_F 200.0 VLV_T_108
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1547:
    MOVEF_F 10.0 VLV_V_95
    MOVEF_F -500.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1548:
RETSUB_F_SOLTAR_UNO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_UNO_0:
SUB_F_LECTURA_1:
    MOVEF_F 15.0 VLV_V_95
    MOVEF_F -650.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1549:
    MOVEF_F 5.0 VLV_REPS_111
    WRITE32 ENDSUB_F_RGBDETECT2_2:CALLSUB1550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RGBDETECT2_2
CALLSUB1550:
    MOVEF_F VLV_COLOR_111 VLV_READ_130
    MOVEF_F VLV_READ_130 VLV_COLOR_122
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1551:
    MOVEF_F 15.0 VLV_V_95
    MOVEF_F -200.0 VLV_AENC_95
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1552:
RETSUB_F_LECTURA_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LECTURA_1:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
