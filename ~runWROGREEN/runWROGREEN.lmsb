DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_V_107
DATAF VLV_AENC_107
DATAF VLV_V_97
DATAF VLV_AENC_97
DATAF VLV_VELOCIDAD_1
DATAF VLV_DISTANCIA_1
DATAF VLV_V1_35
DATAF VLV_V2_35
DATAF VLV_ANGLE_35
DATAF VLV_VELOCIDAD1_25
DATAF VLV_VELOCIDAD2_25
DATAF VLV_TIEMPO_25
DATAF VLV_VELOCIDAD_39
DATAF VLV_V_108
DATAF VLV_VELOCIDAD_13
DATAF VLV_TIEMPO_13
DATAF VLV_READ_132
DATAF VLV_VELOCIDAD_5
DATAF VLV_SENS_5
DATAF VLV_VELOCIDAD_3
DATAF VLV_SENS_3
DATAF VLV_V1_36
DATAF VLV_V2_36
DATAF VLV_ANGLE_36
DATAF VLV_VELOCIDAD1_17
DATAF VLV_VELOCIDAD2_17
DATAF VLV_SENS_17
DATAF VLV_VELOCIDAD_76
DATAF VLV_KP_76
DATAF VLV_KI_76
DATAF VLV_KD_76
DATAF VLV_ENCODER_76
DATAF VLV_VELOCIDAD_81
DATAF VLV_KP_81
DATAF VLV_KI_81
DATAF VLV_KD_81
DATAF VLV_READER_81
DATAF VLV_VELOCIDAD_75
DATAF VLV_KP_75
DATAF VLV_KI_75
DATAF VLV_KD_75
DATAF VLV_ENCODER_75
DATAF VLV_V_103
DATAF VLV_VEL_33
DATAF VLV_VELOCIDAD_82
DATAF VLV_KP_82
DATAF VLV_KI_82
DATAF VLV_KD_82
DATAF VLV_READER_82
DATAF VLV_VEL_31
DATAF VLV_VELOCIDAD_71
DATAF VLV_KP_71
DATAF VLV_KI_71
DATAF VLV_KD_71
DATAF VLV_VELOCIDAD_37
DATAF VLV_V_98
DATAF VLV_VELOCIDAD_72
DATAF VLV_KP_72
DATAF VLV_KI_72
DATAF VLV_KD_72
DATAF VLV_VELOCIDAD1_15
DATAF VLV_VELOCIDAD2_15
DATAF VLV_ENCODER_15
DATAF VLV_VA_102
DATAF VLV_VD_102
DATAF VLV_AENCA_102
DATAF VLV_AENCD_102
DATAF VLV_V_106
DATAF VLV_GRADOS_106
DATAF VLV_V0_56
DATAF VLV_VMAX_56
DATAF VLV_KP_56
DATAF VLV_KI_56
DATAF VLV_KD_56
DATAF VLV_ACCELENCODER_56
DATAF VLV_VMAX_90
DATAF VLV_KP_90
DATAF VLV_KI_90
DATAF VLV_KD_90
DATAF VLV_COLOR_124
DATAF VLV_REPS_112
DATAF VLV_COLOR_112
DATAF VLV_REPS_113
DATAF VLV_COLOR_113
DATAF VLV_REPS_114
DATAF VLV_COLOR_114
DATAF VLV_REPS_115
DATAF VLV_COLOR_115
DATAF VLV_V_110
DATAF VLV_T_110
DATAF VLV_V_111
DATAF VLV_AENC_111
DATAF VGV_BLOQUE
DATAF VLV_COLOR_116
DATAF VLV_COLOR_117
DATAF VLV_COLOR_118
DATAF VLV_COLOR_119
DATAF VGV_VELOCIDAD
DATAF VGV_KP
DATAF VGV_KI
DATAF VGV_KD
DATAF VGV_DIAMETER
DATAF VGV_CENTRO
DATAF VGV_SENTIDO_MOTORES
DATAF VGV_CORRECCION
DATAF VGV_G1
DATAF VGV_ROJOS
DATAF VGV_AMARILLOS
DATAF VGV_VERDES
DATAF VGV_AZULES
DATAF VGV_NUMERO_BLOQUES
ARRAY16 VGV_BOMBOCLAT 2
DATAF VGV_OLD_B
DATAF VGV_OLD_C
DATAF VLV_DIAMETRO_1
DATAF VLV_ENC_1
DATAF VLV_START_B_1
DATAF VLV_START_C_1
DATAF VLV_ENCODER_C_1
DATAF VLV_ENCODER_B_1
DATAF VLV_ERROR_1
DATAF VLV_PROPORCIAL_1
DATAF VLV_START_B_3
DATAF VLV_START_C_3
DATAF VLV_ENCODER_B_3
DATAF VLV_ENCODER_C_3
DATAF VLV_ERROR_3
DATAF VLV_PROPORCIAL_3
DATAF VLV_START_B_5
DATAF VLV_START_C_5
DATAF VLV_ENCODER_B_5
DATAF VLV_ENCODER_C_5
DATAF VLV_ERROR_5
DATAF VLV_PROPORCIAL_5
DATAF VLV_START_B_13
DATAF VLV_START_C_13
DATAF VLV_ENCODER_B_13
DATAF VLV_ENCODER_C_13
DATAF VLV_ERROR_13
DATAF VLV_PROPORCIAL_13
DATAF VLV_DIAMETRO_15
DATAF VLV_DISTANCIA_15
DATAF VLV_AVANCE_31
DATAF VLV_GINICIO_31
DATAF VLV_AJUSTE_31
DATAF VLV_AVANCE_33
DATAF VLV_GINICIO_33
DATAF VLV_AJUSTE_33
DATAS VLV_I_35 252
DATAS VLV_D_35 252
DATAF VLV_SIGNO_35
DATAF VLV_VMIN_35
DATAF VLV_VMAX_35
DATAF VLV_ENCODR_35
DATAS VLV_I_36 252
DATAS VLV_D_36 252
DATAF VLV_SIGNO_36
DATAF VLV_VMIN_36
DATAF VLV_VMAX_36
DATAF VLV_ENCODR_36
DATAS VLV_I_37 252
DATAS VLV_D_37 252
DATAF VLV_ANGLE_37
DATAS VLV_I_39 252
DATAS VLV_D_39 252
DATAF VLV_ANGLE_39
DATAS VLV_I_56 252
DATAS VLV_D_56 252
DATAF VLV_U_56
DATAF VLV_ERROR_56
DATAF VLV_OLDERROR_56
DATAF VLV_ERRSUM_56
DATAF VLV_VEL_56
DATAF VLV_SENTIDO_56
DATAS VLV_I_71 252
DATAS VLV_D_71 252
DATAF VLV_ERROR_71
DATAF VLV_OLDERROR_71
DATAF VLV_ERRSUM_71
DATAF VLV_U_71
DATAF VLV_SENTIDO_71
DATAS VLV_I_72 252
DATAS VLV_D_72 252
DATAF VLV_ERROR_72
DATAF VLV_OLDERROR_72
DATAF VLV_ERRSUM_72
DATAF VLV_U_72
DATAF VLV_SENTIDO_72
DATAS VLV_I_75 252
DATAS VLV_D_75 252
DATAF VLV_ERROR_75
DATAF VLV_OLDERROR_75
DATAF VLV_ERRSUM_75
DATAF VLV_U_75
DATAF VLV_SENTIDO_75
DATAF VLV_START_C_75
DATAF VLV_ENCODER_C_75
DATAS VLV_I_76 252
DATAS VLV_D_76 252
DATAF VLV_ERROR_76
DATAF VLV_OLDERROR_76
DATAF VLV_ERRSUM_76
DATAF VLV_U_76
DATAF VLV_SENTIDO_76
DATAF VLV_START_C_76
DATAF VLV_ENCODER_C_76
DATAS VLV_I_81 252
DATAS VLV_D_81 252
DATAF VLV_ERROR_81
DATAF VLV_OLDERROR_81
DATAF VLV_ERRSUM_81
DATAF VLV_U_81
DATAF VLV_SENTIDO_81
DATAF VLV_READER1_81
DATAF VLV_READER2_81
DATAS VLV_I_82 252
DATAS VLV_D_82 252
DATAF VLV_ERROR_82
DATAF VLV_OLDERROR_82
DATAF VLV_ERRSUM_82
DATAF VLV_U_82
DATAF VLV_SENTIDO_82
DATAF VLV_READER1_82
DATAF VLV_READER2_82
DATAS VLV_I_90 252
DATAS VLV_D_90 252
DATAF VLV_V0_90
DATAF VLV_ACCELENCODER_90
DATAF VLV_U_90
DATAF VLV_ERRSUM_90
DATAF VLV_OLDERROR_90
DATAF VLV_VEL_90
DATAF VLV_SENTIDO_90
DATAF VLV_ERROR_90
DATAF VLV_ENCDIFF_97
DATAF VLV_SIGNO_97
DATAF VLV_ENCDIFF_98
DATAF VLV_SIGNO_98
DATAF VLV_ENCDIFFA_102
DATAF VLV_ENCDIFFD_102
DATAF VLV_SIGNOA_102
DATAF VLV_SIGNOD_102
DATAF VLV_SAFETYTIMER_102
DATAF VLV_AENCA_103
DATAF VLV_AENCD_103
DATAF VLV_ENCDIFFA_103
DATAF VLV_ENCDIFFD_103
DATAF VLV_SIGNOA_103
DATAF VLV_SIGNOD_103
DATAF VLV_SAFETYTIMER_103
DATAF VLV_DIFFA_106
DATAF VLV_DIFFD_106
DATAF VLV_SAFETYTIMER_106
DATAF VLV_SIGNOA_106
DATAF VLV_SIGNOD_106
DATAF VLV_VELA_106
DATAF VLV_VELD_106
DATAF VLV_ENCDIFF_107
DATAF VLV_SIGNO_107
DATAF VLV_ENCDIFF_111
DATAF VLV_SIGNO_111
DATAF VLV_SAFETYTIMER_111
DATAF VLV_RED_112
DATAF VLV_YELLOW_112
DATAF VLV_GREEN_112
DATAF VLV_BLUE_112
DATAF VLV_VALUENEGRO_112
DATAF VLV_VALUEBLANCO_112
DATAF VLV_RWHITE_112
DATAF VLV_GWHITE_112
DATAF VLV_BWHITE_112
DATAF VLV_HUE_112
DATAF VLV_SAT_112
DATAF VLV_VALUE_112
ARRAY16 VLV_RNORMA_112 2
ARRAY16 VLV_GNORMA_112 2
ARRAY16 VLV_BNORMA_112 2
ARRAY16 VLV_MAXA_112 2
DATAF VLV_J_112
ARRAY16 VLV_RGB_112 2
DATAF VLV_RRAW_112
DATAF VLV_GRAW_112
DATAF VLV_BRAW_112
DATAF VLV_RNORM_112
DATAF VLV_GNORM_112
DATAF VLV_BNORM_112
DATAF VLV_MAX_112
DATAF VLV_MIN_112
DATAF VLV_RGBGREY_112
DATAF VLV_RED_113
DATAF VLV_YELLOW_113
DATAF VLV_GREEN_113
DATAF VLV_BLUE_113
DATAF VLV_VALUENEGRO_113
DATAF VLV_VALUEBLANCO_113
DATAF VLV_RWHITE_113
DATAF VLV_GWHITE_113
DATAF VLV_BWHITE_113
DATAF VLV_HUE_113
DATAF VLV_SAT_113
DATAF VLV_VALUE_113
ARRAY16 VLV_RNORMA_113 2
ARRAY16 VLV_GNORMA_113 2
ARRAY16 VLV_BNORMA_113 2
ARRAY16 VLV_MAXA_113 2
DATAF VLV_J_113
ARRAY16 VLV_RGB_113 2
DATAF VLV_RRAW_113
DATAF VLV_GRAW_113
DATAF VLV_BRAW_113
DATAF VLV_RNORM_113
DATAF VLV_GNORM_113
DATAF VLV_BNORM_113
DATAF VLV_MAX_113
DATAF VLV_MIN_113
DATAF VLV_RGBGREY_113
DATAF VLV_RED_114
DATAF VLV_YELLOW_114
DATAF VLV_GREEN_114
DATAF VLV_BLUE_114
DATAF VLV_VALUENEGRO_114
DATAF VLV_VALUEBLANCO_114
DATAF VLV_RWHITE_114
DATAF VLV_GWHITE_114
DATAF VLV_BWHITE_114
DATAF VLV_HUE_114
DATAF VLV_SAT_114
DATAF VLV_VALUE_114
ARRAY16 VLV_RNORMA_114 2
ARRAY16 VLV_GNORMA_114 2
ARRAY16 VLV_BNORMA_114 2
ARRAY16 VLV_MAXA_114 2
DATAF VLV_J_114
ARRAY16 VLV_RGB_114 2
DATAF VLV_RRAW_114
DATAF VLV_GRAW_114
DATAF VLV_BRAW_114
DATAF VLV_RNORM_114
DATAF VLV_GNORM_114
DATAF VLV_BNORM_114
DATAF VLV_MAX_114
DATAF VLV_MIN_114
DATAF VLV_RGBGREY_114
DATAF VLV_RED_115
DATAF VLV_YELLOW_115
DATAF VLV_GREEN_115
DATAF VLV_BLUE_115
DATAF VLV_VALUENEGRO_115
DATAF VLV_VALUEBLANCO_115
DATAF VLV_RWHITE_115
DATAF VLV_GWHITE_115
DATAF VLV_BWHITE_115
DATAF VLV_HUE_115
DATAF VLV_SAT_115
DATAF VLV_VALUE_115
ARRAY16 VLV_RNORMA_115 2
ARRAY16 VLV_GNORMA_115 2
ARRAY16 VLV_BNORMA_115 2
ARRAY16 VLV_MAXA_115 2
DATAF VLV_J_115
ARRAY16 VLV_RGB_115 2
DATAF VLV_RRAW_115
DATAF VLV_GRAW_115
DATAF VLV_BRAW_115
DATAF VLV_RNORM_115
DATAF VLV_GNORM_115
DATAF VLV_BNORM_115
DATAF VLV_MAX_115
DATAF VLV_MIN_115
DATAF VLV_RGBGREY_115
DATA32 RUNCOUNTER_F_DISPLAY_0
DATA32 RUNCOUNTER_F_STOP_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_V_97
    MOVEF_F 0.0 VLV_AENC_97
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_VELOCIDAD1_25
    MOVEF_F 0.0 VLV_VELOCIDAD2_25
    MOVEF_F 0.0 VLV_TIEMPO_25
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_READ_132
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
    MOVEF_F 0.0 VLV_VELOCIDAD1_17
    MOVEF_F 0.0 VLV_VELOCIDAD2_17
    MOVEF_F 0.0 VLV_SENS_17
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VELOCIDAD_81
    MOVEF_F 0.0 VLV_KP_81
    MOVEF_F 0.0 VLV_KI_81
    MOVEF_F 0.0 VLV_KD_81
    MOVEF_F 0.0 VLV_READER_81
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_V_103
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_READER_82
    MOVEF_F 0.0 VLV_VEL_31
    MOVEF_F 0.0 VLV_VELOCIDAD_71
    MOVEF_F 0.0 VLV_KP_71
    MOVEF_F 0.0 VLV_KI_71
    MOVEF_F 0.0 VLV_KD_71
    MOVEF_F 0.0 VLV_VELOCIDAD_37
    MOVEF_F 0.0 VLV_V_98
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VA_102
    MOVEF_F 0.0 VLV_VD_102
    MOVEF_F 0.0 VLV_AENCA_102
    MOVEF_F 0.0 VLV_AENCD_102
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_GRADOS_106
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VMAX_90
    MOVEF_F 0.0 VLV_KP_90
    MOVEF_F 0.0 VLV_KI_90
    MOVEF_F 0.0 VLV_KD_90
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    MOVEF_F 0.0 VLV_REPS_114
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_REPS_115
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_V_110
    MOVEF_F 0.0 VLV_T_110
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    MOVEF_F 0.0 VLV_COLOR_118
    MOVEF_F 0.0 VLV_COLOR_119
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYCREATE_FLOAT VGV_BOMBOCLAT
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
    MOVEF_F 0.0 VLV_DIAMETRO_1
    MOVEF_F 0.0 VLV_ENC_1
    MOVEF_F 0.0 VLV_START_B_1
    MOVEF_F 0.0 VLV_START_C_1
    MOVEF_F 0.0 VLV_ENCODER_C_1
    MOVEF_F 0.0 VLV_ENCODER_B_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_PROPORCIAL_1
    MOVEF_F 0.0 VLV_START_B_3
    MOVEF_F 0.0 VLV_START_C_3
    MOVEF_F 0.0 VLV_ENCODER_B_3
    MOVEF_F 0.0 VLV_ENCODER_C_3
    MOVEF_F 0.0 VLV_ERROR_3
    MOVEF_F 0.0 VLV_PROPORCIAL_3
    MOVEF_F 0.0 VLV_START_B_5
    MOVEF_F 0.0 VLV_START_C_5
    MOVEF_F 0.0 VLV_ENCODER_B_5
    MOVEF_F 0.0 VLV_ENCODER_C_5
    MOVEF_F 0.0 VLV_ERROR_5
    MOVEF_F 0.0 VLV_PROPORCIAL_5
    MOVEF_F 0.0 VLV_START_B_13
    MOVEF_F 0.0 VLV_START_C_13
    MOVEF_F 0.0 VLV_ENCODER_B_13
    MOVEF_F 0.0 VLV_ENCODER_C_13
    MOVEF_F 0.0 VLV_ERROR_13
    MOVEF_F 0.0 VLV_PROPORCIAL_13
    MOVEF_F 0.0 VLV_DIAMETRO_15
    MOVEF_F 0.0 VLV_DISTANCIA_15
    MOVEF_F 0.0 VLV_AVANCE_31
    MOVEF_F 0.0 VLV_GINICIO_31
    MOVEF_F 0.0 VLV_AJUSTE_31
    MOVEF_F 0.0 VLV_AVANCE_33
    MOVEF_F 0.0 VLV_GINICIO_33
    MOVEF_F 0.0 VLV_AJUSTE_33
    STRINGS DUPLICATE '' VLV_I_35
    STRINGS DUPLICATE '' VLV_D_35
    MOVEF_F 0.0 VLV_SIGNO_35
    MOVEF_F 0.0 VLV_VMIN_35
    MOVEF_F 0.0 VLV_VMAX_35
    MOVEF_F 0.0 VLV_ENCODR_35
    STRINGS DUPLICATE '' VLV_I_36
    STRINGS DUPLICATE '' VLV_D_36
    MOVEF_F 0.0 VLV_SIGNO_36
    MOVEF_F 0.0 VLV_VMIN_36
    MOVEF_F 0.0 VLV_VMAX_36
    MOVEF_F 0.0 VLV_ENCODR_36
    STRINGS DUPLICATE '' VLV_I_37
    STRINGS DUPLICATE '' VLV_D_37
    MOVEF_F 0.0 VLV_ANGLE_37
    STRINGS DUPLICATE '' VLV_I_39
    STRINGS DUPLICATE '' VLV_D_39
    MOVEF_F 0.0 VLV_ANGLE_39
    STRINGS DUPLICATE '' VLV_I_56
    STRINGS DUPLICATE '' VLV_D_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    MOVEF_F 0.0 VLV_VEL_56
    MOVEF_F 0.0 VLV_SENTIDO_56
    STRINGS DUPLICATE '' VLV_I_71
    STRINGS DUPLICATE '' VLV_D_71
    MOVEF_F 0.0 VLV_ERROR_71
    MOVEF_F 0.0 VLV_OLDERROR_71
    MOVEF_F 0.0 VLV_ERRSUM_71
    MOVEF_F 0.0 VLV_U_71
    MOVEF_F 0.0 VLV_SENTIDO_71
    STRINGS DUPLICATE '' VLV_I_72
    STRINGS DUPLICATE '' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MOVEF_F 0.0 VLV_SENTIDO_72
    STRINGS DUPLICATE '' VLV_I_75
    STRINGS DUPLICATE '' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MOVEF_F 0.0 VLV_SENTIDO_75
    MOVEF_F 0.0 VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
    STRINGS DUPLICATE '' VLV_I_76
    STRINGS DUPLICATE '' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MOVEF_F 0.0 VLV_SENTIDO_76
    MOVEF_F 0.0 VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
    STRINGS DUPLICATE '' VLV_I_81
    STRINGS DUPLICATE '' VLV_D_81
    MOVEF_F 0.0 VLV_ERROR_81
    MOVEF_F 0.0 VLV_OLDERROR_81
    MOVEF_F 0.0 VLV_ERRSUM_81
    MOVEF_F 0.0 VLV_U_81
    MOVEF_F 0.0 VLV_SENTIDO_81
    MOVEF_F 0.0 VLV_READER1_81
    MOVEF_F 0.0 VLV_READER2_81
    STRINGS DUPLICATE '' VLV_I_82
    STRINGS DUPLICATE '' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MOVEF_F 0.0 VLV_SENTIDO_82
    MOVEF_F 0.0 VLV_READER1_82
    MOVEF_F 0.0 VLV_READER2_82
    STRINGS DUPLICATE '' VLV_I_90
    STRINGS DUPLICATE '' VLV_D_90
    MOVEF_F 0.0 VLV_V0_90
    MOVEF_F 0.0 VLV_ACCELENCODER_90
    MOVEF_F 0.0 VLV_U_90
    MOVEF_F 0.0 VLV_ERRSUM_90
    MOVEF_F 0.0 VLV_OLDERROR_90
    MOVEF_F 0.0 VLV_VEL_90
    MOVEF_F 0.0 VLV_SENTIDO_90
    MOVEF_F 0.0 VLV_ERROR_90
    MOVEF_F 0.0 VLV_ENCDIFF_97
    MOVEF_F 0.0 VLV_SIGNO_97
    MOVEF_F 0.0 VLV_ENCDIFF_98
    MOVEF_F 0.0 VLV_SIGNO_98
    MOVEF_F 0.0 VLV_ENCDIFFA_102
    MOVEF_F 0.0 VLV_ENCDIFFD_102
    MOVEF_F 0.0 VLV_SIGNOA_102
    MOVEF_F 0.0 VLV_SIGNOD_102
    MOVEF_F 0.0 VLV_SAFETYTIMER_102
    MOVEF_F 0.0 VLV_AENCA_103
    MOVEF_F 0.0 VLV_AENCD_103
    MOVEF_F 0.0 VLV_ENCDIFFA_103
    MOVEF_F 0.0 VLV_ENCDIFFD_103
    MOVEF_F 0.0 VLV_SIGNOA_103
    MOVEF_F 0.0 VLV_SIGNOD_103
    MOVEF_F 0.0 VLV_SAFETYTIMER_103
    MOVEF_F 0.0 VLV_DIFFA_106
    MOVEF_F 0.0 VLV_DIFFD_106
    MOVEF_F 0.0 VLV_SAFETYTIMER_106
    MOVEF_F 0.0 VLV_SIGNOA_106
    MOVEF_F 0.0 VLV_SIGNOD_106
    MOVEF_F 0.0 VLV_VELA_106
    MOVEF_F 0.0 VLV_VELD_106
    MOVEF_F 0.0 VLV_ENCDIFF_107
    MOVEF_F 0.0 VLV_SIGNO_107
    MOVEF_F 0.0 VLV_ENCDIFF_111
    MOVEF_F 0.0 VLV_SIGNO_111
    MOVEF_F 0.0 VLV_SAFETYTIMER_111
    MOVEF_F 0.0 VLV_RED_112
    MOVEF_F 0.0 VLV_YELLOW_112
    MOVEF_F 0.0 VLV_GREEN_112
    MOVEF_F 0.0 VLV_BLUE_112
    MOVEF_F 0.0 VLV_VALUENEGRO_112
    MOVEF_F 0.0 VLV_VALUEBLANCO_112
    MOVEF_F 0.0 VLV_RWHITE_112
    MOVEF_F 0.0 VLV_GWHITE_112
    MOVEF_F 0.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_112
    CALL ARRAYCREATE_FLOAT VLV_MAXA_112
    MOVEF_F 0.0 VLV_J_112
    CALL ARRAYCREATE_FLOAT VLV_RGB_112
    MOVEF_F 0.0 VLV_RRAW_112
    MOVEF_F 0.0 VLV_GRAW_112
    MOVEF_F 0.0 VLV_BRAW_112
    MOVEF_F 0.0 VLV_RNORM_112
    MOVEF_F 0.0 VLV_GNORM_112
    MOVEF_F 0.0 VLV_BNORM_112
    MOVEF_F 0.0 VLV_MAX_112
    MOVEF_F 0.0 VLV_MIN_112
    MOVEF_F 0.0 VLV_RGBGREY_112
    MOVEF_F 0.0 VLV_RED_113
    MOVEF_F 0.0 VLV_YELLOW_113
    MOVEF_F 0.0 VLV_GREEN_113
    MOVEF_F 0.0 VLV_BLUE_113
    MOVEF_F 0.0 VLV_VALUENEGRO_113
    MOVEF_F 0.0 VLV_VALUEBLANCO_113
    MOVEF_F 0.0 VLV_RWHITE_113
    MOVEF_F 0.0 VLV_GWHITE_113
    MOVEF_F 0.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_113
    CALL ARRAYCREATE_FLOAT VLV_MAXA_113
    MOVEF_F 0.0 VLV_J_113
    CALL ARRAYCREATE_FLOAT VLV_RGB_113
    MOVEF_F 0.0 VLV_RRAW_113
    MOVEF_F 0.0 VLV_GRAW_113
    MOVEF_F 0.0 VLV_BRAW_113
    MOVEF_F 0.0 VLV_RNORM_113
    MOVEF_F 0.0 VLV_GNORM_113
    MOVEF_F 0.0 VLV_BNORM_113
    MOVEF_F 0.0 VLV_MAX_113
    MOVEF_F 0.0 VLV_MIN_113
    MOVEF_F 0.0 VLV_RGBGREY_113
    MOVEF_F 0.0 VLV_RED_114
    MOVEF_F 0.0 VLV_YELLOW_114
    MOVEF_F 0.0 VLV_GREEN_114
    MOVEF_F 0.0 VLV_BLUE_114
    MOVEF_F 0.0 VLV_VALUENEGRO_114
    MOVEF_F 0.0 VLV_VALUEBLANCO_114
    MOVEF_F 0.0 VLV_RWHITE_114
    MOVEF_F 0.0 VLV_GWHITE_114
    MOVEF_F 0.0 VLV_BWHITE_114
    MOVEF_F 0.0 VLV_HUE_114
    MOVEF_F 0.0 VLV_SAT_114
    MOVEF_F 0.0 VLV_VALUE_114
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_114
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_114
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_114
    CALL ARRAYCREATE_FLOAT VLV_MAXA_114
    MOVEF_F 0.0 VLV_J_114
    CALL ARRAYCREATE_FLOAT VLV_RGB_114
    MOVEF_F 0.0 VLV_RRAW_114
    MOVEF_F 0.0 VLV_GRAW_114
    MOVEF_F 0.0 VLV_BRAW_114
    MOVEF_F 0.0 VLV_RNORM_114
    MOVEF_F 0.0 VLV_GNORM_114
    MOVEF_F 0.0 VLV_BNORM_114
    MOVEF_F 0.0 VLV_MAX_114
    MOVEF_F 0.0 VLV_MIN_114
    MOVEF_F 0.0 VLV_RGBGREY_114
    MOVEF_F 0.0 VLV_RED_115
    MOVEF_F 0.0 VLV_YELLOW_115
    MOVEF_F 0.0 VLV_GREEN_115
    MOVEF_F 0.0 VLV_BLUE_115
    MOVEF_F 0.0 VLV_VALUENEGRO_115
    MOVEF_F 0.0 VLV_VALUEBLANCO_115
    MOVEF_F 0.0 VLV_RWHITE_115
    MOVEF_F 0.0 VLV_GWHITE_115
    MOVEF_F 0.0 VLV_BWHITE_115
    MOVEF_F 0.0 VLV_HUE_115
    MOVEF_F 0.0 VLV_SAT_115
    MOVEF_F 0.0 VLV_VALUE_115
    CALL ARRAYCREATE_FLOAT VLV_RNORMA_115
    CALL ARRAYCREATE_FLOAT VLV_GNORMA_115
    CALL ARRAYCREATE_FLOAT VLV_BNORMA_115
    CALL ARRAYCREATE_FLOAT VLV_MAXA_115
    MOVEF_F 0.0 VLV_J_115
    CALL ARRAYCREATE_FLOAT VLV_RGB_115
    MOVEF_F 0.0 VLV_RRAW_115
    MOVEF_F 0.0 VLV_GRAW_115
    MOVEF_F 0.0 VLV_BRAW_115
    MOVEF_F 0.0 VLV_RNORM_115
    MOVEF_F 0.0 VLV_GNORM_115
    MOVEF_F 0.0 VLV_BNORM_115
    MOVEF_F 0.0 VLV_MAX_115
    MOVEF_F 0.0 VLV_MIN_115
    MOVEF_F 0.0 VLV_RGBGREY_115
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    MOVE32_32 0 RUNCOUNTER_F_STOP_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_STOP_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_STOP_0 1
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 -1 RUNCOUNTER_F_STOP_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_DISPLAY_0
subcall PROGRAM_F_STOP_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    DATAF F.6
    DATAF F.7
    DATAF F.8
    DATAF F.9
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1531
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch1531:
    JR_NEQ32 SUBPROGRAM 1 dispatch1532
    WRITE32 ENDSUB_F_STOP_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
  dispatch1532:
    MOVEF_F 0.0 VLV_V_107
    MOVEF_F 0.0 VLV_AENC_107
    MOVEF_F 0.0 VLV_V_97
    MOVEF_F 0.0 VLV_AENC_97
    MOVEF_F 0.0 VLV_VELOCIDAD_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    MOVEF_F 0.0 VLV_VELOCIDAD1_25
    MOVEF_F 0.0 VLV_VELOCIDAD2_25
    MOVEF_F 0.0 VLV_TIEMPO_25
    MOVEF_F 0.0 VLV_VELOCIDAD_39
    MOVEF_F 0.0 VLV_V_108
    MOVEF_F 0.0 VLV_VELOCIDAD_13
    MOVEF_F 0.0 VLV_TIEMPO_13
    MOVEF_F 0.0 VLV_READ_132
    MOVEF_F 0.0 VLV_VELOCIDAD_5
    MOVEF_F 0.0 VLV_SENS_5
    MOVEF_F 0.0 VLV_VELOCIDAD_3
    MOVEF_F 0.0 VLV_SENS_3
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
    MOVEF_F 0.0 VLV_VELOCIDAD1_17
    MOVEF_F 0.0 VLV_VELOCIDAD2_17
    MOVEF_F 0.0 VLV_SENS_17
    MOVEF_F 0.0 VLV_VELOCIDAD_76
    MOVEF_F 0.0 VLV_KP_76
    MOVEF_F 0.0 VLV_KI_76
    MOVEF_F 0.0 VLV_KD_76
    MOVEF_F 0.0 VLV_ENCODER_76
    MOVEF_F 0.0 VLV_VELOCIDAD_81
    MOVEF_F 0.0 VLV_KP_81
    MOVEF_F 0.0 VLV_KI_81
    MOVEF_F 0.0 VLV_KD_81
    MOVEF_F 0.0 VLV_READER_81
    MOVEF_F 0.0 VLV_VELOCIDAD_75
    MOVEF_F 0.0 VLV_KP_75
    MOVEF_F 0.0 VLV_KI_75
    MOVEF_F 0.0 VLV_KD_75
    MOVEF_F 0.0 VLV_ENCODER_75
    MOVEF_F 0.0 VLV_V_103
    MOVEF_F 0.0 VLV_VEL_33
    MOVEF_F 0.0 VLV_VELOCIDAD_82
    MOVEF_F 0.0 VLV_KP_82
    MOVEF_F 0.0 VLV_KI_82
    MOVEF_F 0.0 VLV_KD_82
    MOVEF_F 0.0 VLV_READER_82
    MOVEF_F 0.0 VLV_VEL_31
    MOVEF_F 0.0 VLV_VELOCIDAD_71
    MOVEF_F 0.0 VLV_KP_71
    MOVEF_F 0.0 VLV_KI_71
    MOVEF_F 0.0 VLV_KD_71
    MOVEF_F 0.0 VLV_VELOCIDAD_37
    MOVEF_F 0.0 VLV_V_98
    MOVEF_F 0.0 VLV_VELOCIDAD_72
    MOVEF_F 0.0 VLV_KP_72
    MOVEF_F 0.0 VLV_KI_72
    MOVEF_F 0.0 VLV_KD_72
    MOVEF_F 0.0 VLV_VELOCIDAD1_15
    MOVEF_F 0.0 VLV_VELOCIDAD2_15
    MOVEF_F 0.0 VLV_ENCODER_15
    MOVEF_F 0.0 VLV_VA_102
    MOVEF_F 0.0 VLV_VD_102
    MOVEF_F 0.0 VLV_AENCA_102
    MOVEF_F 0.0 VLV_AENCD_102
    MOVEF_F 0.0 VLV_V_106
    MOVEF_F 0.0 VLV_GRADOS_106
    MOVEF_F 0.0 VLV_V0_56
    MOVEF_F 0.0 VLV_VMAX_56
    MOVEF_F 0.0 VLV_KP_56
    MOVEF_F 0.0 VLV_KI_56
    MOVEF_F 0.0 VLV_KD_56
    MOVEF_F 0.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_VMAX_90
    MOVEF_F 0.0 VLV_KP_90
    MOVEF_F 0.0 VLV_KI_90
    MOVEF_F 0.0 VLV_KD_90
    MOVEF_F 0.0 VLV_COLOR_124
    MOVEF_F 0.0 VLV_REPS_112
    MOVEF_F 0.0 VLV_COLOR_112
    MOVEF_F 0.0 VLV_REPS_113
    MOVEF_F 0.0 VLV_COLOR_113
    MOVEF_F 0.0 VLV_REPS_114
    MOVEF_F 0.0 VLV_COLOR_114
    MOVEF_F 0.0 VLV_REPS_115
    MOVEF_F 0.0 VLV_COLOR_115
    MOVEF_F 0.0 VLV_V_110
    MOVEF_F 0.0 VLV_T_110
    MOVEF_F 0.0 VLV_V_111
    MOVEF_F 0.0 VLV_AENC_111
    MOVEF_F 0.0 VGV_BLOQUE
    MOVEF_F 0.0 VLV_COLOR_116
    MOVEF_F 0.0 VLV_COLOR_117
    MOVEF_F 0.0 VLV_COLOR_118
    MOVEF_F 0.0 VLV_COLOR_119
    MOVEF_F 0.0 VLV_READ_132
    MOVEF_F 0.0 VGV_VELOCIDAD
    MOVEF_F 0.0 VGV_KP
    MOVEF_F 0.0 VGV_KI
    MOVEF_F 0.0 VGV_KD
    MOVEF_F 0.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 0.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 0.0 VGV_G1
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    MOVEF_F 100.0 VGV_VELOCIDAD
    MOVEF_F 0.2 VGV_KP
    MOVEF_F 0.0001 VGV_KI
    MOVEF_F 3.0 VGV_KD
    MOVEF_F 56.0 VGV_DIAMETER
    MOVEF_F 0.0 VGV_CENTRO
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 0.0 VGV_CORRECCION
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 3.44444444444444 VGV_G1
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    MOVEF_F 1.0 VGV_SENTIDO_MOTORES
    WRITE32 ENDSUB_F_SETUP_0:CALLSUB1 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SETUP_0
CALLSUB1:
    DATA32 tmp2
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp2
    JR_NEQ32 0 tmp2 alreadylaunched2
    OBJECT_START TF_DISPLAY_0
  alreadylaunched2:
    DATA32 tmp3
    CALL GETANDINC32 RUNCOUNTER_F_STOP_0 1  RUNCOUNTER_F_STOP_0 tmp3
    JR_NEQ32 0 tmp3 alreadylaunched3
    OBJECT_START TF_STOP_0
  alreadylaunched3:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB4 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB4:
ENDTHREAD:
    RETURN
SUB_F_SETUP_0:
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 1.0 no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    DATA8 layer6
	DATA8 no6
	DATA8 mode86
	
	MOVEF_8 2.0 no6
	SUB8 no6 1 no6
	DIV8 no6 4 layer6
	MATH MOD8 no6 4 no6

	MOVEF_8 4.0 mode86
	
	INPUT_DEVICE READY_RAW layer6 no6 0 mode86 0
    DATA8 layer7
	DATA8 no7
	DATA8 mode87
	
	MOVEF_8 3.0 no7
	SUB8 no7 1 no7
	DIV8 no7 4 layer7
	MATH MOD8 no7 4 no7

	MOVEF_8 0.0 mode87
	
	INPUT_DEVICE READY_RAW layer7 no7 0 mode87 0
    DATA8 layer8
	DATA8 no8
	DATA8 mode88
	
	MOVEF_8 4.0 no8
	SUB8 no8 1 no8
	DIV8 no8 4 layer8
	MATH MOD8 no8 4 no8

	MOVEF_8 0.0 mode88
	
	INPUT_DEVICE READY_RAW layer8 no8 0 mode88 0
RETSUB_F_SETUP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SETUP_0:
SUB_F_STARTARM_0:
    TIMER_READ timeMC1
  while10:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 850.0 endwhile10
  whilebody10:
    MOVEF_8 30.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MOVEF_8 30.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 850.0 whilebody10
  endwhile10:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 8
    MOVEF_F 40.0 VLV_V_107
    MOVEF_F -360.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB18 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB18:
    OUTPUT_CLR_COUNT 0 8
    DATA32 milliseconds20
	MOVEF_32 100.0 milliseconds20
	DATA32 timer20
	TIMER_WAIT milliseconds20 timer20
	TIMER_READY timer20
RETSUB_F_STARTARM_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STARTARM_0:
SUB_F_DISPLAY_0:
    MOVEF_F 0.0 VGV_OLD_B
    MOVEF_F 0.0 VGV_OLD_C
  while21:
  whilebody21:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_CENTRO '%g' 99 S.1
    CALL TEXT.APPEND 'centro: ' S.1 S.0
    CALL LCD.WRITE 5.0 35.0 S.0
    OUTPUT_READ 0 1 getSpeedB tmpTachoB
	MOVE8_F getSpeedB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 45.0 S.0
    OUTPUT_READ 0 2 getSpeedC tmpTachoC
	MOVE8_F getSpeedC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Velocidad de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 55.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    SUBF F.4 VGV_OLD_B F.3
    DIVF F.3 57.295779513082 F.2
    DATAF tmpf39
    DATA8 flag39
    DIVF F.2 0.05 tmpf39
    CP_EQF 0.0 0.05 flag39
    SELECTF flag39 0.0 tmpf39 F.1

    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 65.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    SUBF F.3 VGV_OLD_C F.2
    DIVF F.2 57.295779513082 F.1
    DATAF tmpf47
    DATA8 flag47
    DIVF F.1 0.05 tmpf47
    CP_EQF 0.0 0.05 flag47
    SELECTF flag47 0.0 tmpf47 F.0

    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'rad/s de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 75.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de B:  ' S.1 S.0
    CALL LCD.WRITE 5.0 85.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder de C:  ' S.1 S.0
    CALL LCD.WRITE 5.0 95.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds61
	MOVEF_32 50.0 milliseconds61
	DATA32 timer61
	TIMER_WAIT milliseconds61 timer61
	TIMER_READY timer61
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB VGV_OLD_B
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC VGV_OLD_C
    JR whilebody21
  endwhile21:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_F_MAIN_0:
    WRITE32 ENDSUB_F_STARTARM_0:CALLSUB64 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STARTARM_0
CALLSUB64:
    MOVEF_F 30.0 VLV_V_97
    MOVEF_F -300.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB65:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 30.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB67:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB70 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB70:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 25.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB72:
    MOVEF_F 0.0 VGV_ROJOS
    MOVEF_F 0.0 VGV_AMARILLOS
    MOVEF_F 0.0 VGV_VERDES
    MOVEF_F 0.0 VGV_AZULES
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 7.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB74 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB74:
    DATA32 milliseconds75
	MOVEF_32 200.0 milliseconds75
	DATA32 timer75
	TIMER_WAIT milliseconds75 timer75
	TIMER_READY timer75
    MOVEF_F 20.0 VLV_V_107
    MOVEF_F -300.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB76:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -750.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB77:
    MULF VGV_VELOCIDAD -0.1 VLV_V1_35
    MULF VGV_VELOCIDAD 0.1 VLV_V2_35
    MOVEF_F 25.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB80:
    DATA32 milliseconds81
	MOVEF_32 1000.0 milliseconds81
	DATA32 timer81
	TIMER_WAIT milliseconds81 timer81
	TIMER_READY timer81
    MULF VGV_VELOCIDAD 0.12 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB83:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -760.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB84:
    MULF VGV_VELOCIDAD 0.1 VLV_VELOCIDAD1_25
    MULF VGV_VELOCIDAD -0.1 VLV_VELOCIDAD2_25
    MOVEF_F 1300.0 VLV_TIEMPO_25
    WRITE32 ENDSUB_F_TIEMPOGIROMM_3:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPOGIROMM_3
CALLSUB87:
    MULF VGV_VELOCIDAD -0.05 VLV_V1_35
    MULF VGV_VELOCIDAD 0.05 VLV_V2_35
    MOVEF_F 5.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB90:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -510.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB91:
    DATA32 milliseconds92
	MOVEF_32 1000.0 milliseconds92
	DATA32 timer92
	TIMER_WAIT milliseconds92 timer92
	TIMER_READY timer92
    MOVEF_F 10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB93:
    MOVEF_F -10.0 VLV_VELOCIDAD_39
    WRITE32 ENDSUB_F_SPIN90_1:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN90_1
CALLSUB94:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_1
    MOVEF_F 10.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB96:
    MOVEF_F 30.0 VLV_V_97
    MOVEF_F -300.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB97:
    MOVEF_F 40.0 VLV_V_108
    WRITE32 ENDSUB_F_BMOVED0_1:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED0_1
CALLSUB98:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 80.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB101:
    MULF VGV_VELOCIDAD -0.9 VLV_VELOCIDAD_13
    MOVEF_F 2000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB103:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 3.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB105:
    MULF VGV_VELOCIDAD -0.8 VLV_VELOCIDAD_13
    MOVEF_F 500.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB107:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 5.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB109:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -300.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB110:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 92.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB113:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 18.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB115:
    DATA32 milliseconds116
	MOVEF_32 200.0 milliseconds116
	DATA32 timer116
	TIMER_WAIT milliseconds116 timer116
	TIMER_READY timer116
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB117:
    MOVEF_F VLV_READ_132 VGV_BLOQUE
    JR_EQF VGV_BLOQUE 3.0 else118_1
    JR_EQF VGV_BLOQUE 2.0 else118_1
    MOVEF_F 0.0 VGV_NUMERO_BLOQUES
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    JR endif118
  else118_1:
    CALL ARRAYSTORE_FLOAT 0.0 VGV_BLOQUE VGV_BOMBOCLAT
    MOVEF_F 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_BLOQUE 3.0 else121_1
    ADDF VGV_VERDES 1.0 VGV_VERDES
    JR endif121
  else121_1:
    ADDF VGV_AZULES 1.0 VGV_AZULES
  else121_2:
  endif121:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB124:
  else118_2:
  endif118:
    MOVEF_F 30.0 VLV_V_97
    MOVEF_F -350.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB125:
    MULF VGV_VELOCIDAD -0.2 VLV_VELOCIDAD_1
    MOVEF_F 11.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB127:
    MULF VGV_VELOCIDAD 0.2 VLV_V1_35
    MULF VGV_VELOCIDAD -0.2 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB130:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 10.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB132:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 88.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB135:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 26.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB137:
    WRITE32 ENDSUB_F_LECTURA_1:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LECTURA_1
CALLSUB138:
    MOVEF_F VLV_READ_132 VGV_BLOQUE
    JR_EQF VGV_BLOQUE 3.0 else139_1
    JR_EQF VGV_BLOQUE 2.0 else139_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 1.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_BOMBOCLAT
    JR endif139
  else139_1:
    CALL ARRAYSTORE_FLOAT 1.0 VGV_BLOQUE VGV_BOMBOCLAT
    ADDF VGV_NUMERO_BLOQUES 1.0 VGV_NUMERO_BLOQUES
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else145_1
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB146:
    JR endif145
  else145_1:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB147:
  else145_2:
  endif145:
  else139_2:
  endif139:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 171.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB150:
    MULF VGV_VELOCIDAD 0.9 VLV_VELOCIDAD_1
    MOVEF_F 72.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB152:
    MULF VGV_VELOCIDAD -0.2 VLV_V1_35
    MULF VGV_VELOCIDAD 0.2 VLV_V2_35
    MOVEF_F 85.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB155:
    MULF VGV_VELOCIDAD -0.7 VLV_VELOCIDAD_13
    MOVEF_F 600.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB157:
    MULF VGV_VELOCIDAD 0.5 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB159:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB161:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB163:
    MOVEF_F 30.0 VLV_V1_36
    MOVEF_F -30.0 VLV_V2_36
    MOVEF_F 50.0 VLV_ANGLE_36
    WRITE32 ENDSUB_F_GUNIVENCMMF_3:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMMF_3
CALLSUB164:
    MOVEF_F 30.0 VLV_VELOCIDAD1_17
    MOVEF_F -30.0 VLV_VELOCIDAD2_17
    MOVEF_F 1.0 VLV_SENS_17
    WRITE32 ENDSUB_F_1NEGROGIROMM_3:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGROGIROMM_3
CALLSUB165:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_76
    MULF VGV_KP 2.0 VLV_KP_76
    MOVEF_F VGV_KI VLV_KI_76
    MOVEF_F VGV_KD VLV_KD_76
    MOVEF_F 5.0 VLV_ENCODER_76
    WRITE32 ENDSUB_F_SL14PIDENCF_5:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENCF_5
CALLSUB168:
    JR_LTEQF VGV_NUMERO_BLOQUES 0.0 else169_1
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_81
    MOVEF_F VGV_KP VLV_KP_81
    MOVEF_F VGV_KI VLV_KI_81
    MOVEF_F VGV_KD VLV_KD_81
    MOVEF_F 3.0 VLV_READER_81
    WRITE32 ENDSUB_F_SL1SPIDCROSS_5:CALLSUB171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSS_5
CALLSUB171:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 180.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB174:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 23.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB176:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 84.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB179:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 18.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB181:
    JR_NEQF VGV_NUMERO_BLOQUES 1.0 else182_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 0.0 else183_1
    CALL ARRAYGET_FLOAT 1.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYSTORE_FLOAT 1.0 0.0 VGV_BOMBOCLAT
  else183_1:
  endif183:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else188_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB192:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB193:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB196:
    JR endif188
  else188_1:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB199:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB200:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB203:
  else188_2:
  endif188:
    JR endif182
  else182_1:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    CALL ARRAYGET_FLOAT 1.0 F.1 VGV_BOMBOCLAT
    JR_NEQF F.0 F.1 else204_1
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 2.0 else207_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB211:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB212:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB215:
    JR endif207
  else207_1:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB218:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB219:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB222:
  else207_2:
  endif207:
    JR endif204
  else204_1:
    CALL ARRAYGET_FLOAT 0.0 F.0 VGV_BOMBOCLAT
    JR_NEQF F.0 3.0 else223_1
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB227:
    WRITE32 ENDSUB_F_SOLTAR_UNO_0:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_UNO_0
CALLSUB228:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB231:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB234:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB235:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB238:
    JR endif223
  else223_1:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB241:
    WRITE32 ENDSUB_F_SOLTAR_UNO_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_UNO_0
CALLSUB242:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 40.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB245:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 25.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB248:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB249:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 25.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB252:
  else223_2:
  endif223:
  else204_2:
  endif204:
  else182_2:
  endif182:
    MOVEF_F 20.0 VLV_V_103
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB253:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB255:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB257:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_1
    MOVEF_F 2.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB259:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 10.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB262:
    MULF VGV_VELOCIDAD 0.3 VLV_VEL_33
    WRITE32 ENDSUB_F_GPERFDDEFINITIVOMM_1:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFDDEFINITIVOMM_1
CALLSUB264:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 7.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB266:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 3.0 VLV_READER_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB268:
    JR endif169
  else169_1:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 8.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB270:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_82
    MOVEF_F VGV_KP VLV_KP_82
    MOVEF_F VGV_KI VLV_KI_82
    MOVEF_F VGV_KD VLV_KD_82
    MOVEF_F 3.0 VLV_READER_82
    WRITE32 ENDSUB_F_SL1SPIDCROSSF_5:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL1SPIDCROSSF_5
CALLSUB272:
  else169_2:
  endif169:
    MULF VGV_VELOCIDAD 0.3 VLV_VEL_31
    WRITE32 ENDSUB_F_GPERFIDEFINITIVOMM_1:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GPERFIDEFINITIVOMM_1
CALLSUB274:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_71
    MOVEF_F VGV_KP VLV_KP_71
    MOVEF_F VGV_KI VLV_KI_71
    MOVEF_F VGV_KD VLV_KD_71
    WRITE32 ENDSUB_F_SL14PID_4:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PID_4
CALLSUB276:
    CALL MOTOR.STOP 'ABCD' 'True'
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 16.7 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB279:
    WRITE32 ENDSUB_F_COGER_ABAJO_0:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ABAJO_0
CALLSUB280:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_5
    MOVEF_F 1.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB282:
    MULF VGV_VELOCIDAD -0.15 VLV_VELOCIDAD_3
    MOVEF_F 1.0 VLV_SENS_3
    WRITE32 ENDSUB_F_1NEGRORECTOMM_2:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1NEGRORECTOMM_2
CALLSUB284:
    MULF VGV_VELOCIDAD 0.15 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB286:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 89.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB289:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MULF VGV_KP 1.5 VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 12.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB292:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 87.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB295:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD_1
    MOVEF_F 12.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB297:
    WRITE32 ENDSUB_F_COGER_ARRIBA_0:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_COGER_ARRIBA_0
CALLSUB298:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_37
    WRITE32 ENDSUB_F_SPIN180_1:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPIN180_1
CALLSUB300:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_13
    MOVEF_F 1000.0 VLV_TIEMPO_13
    WRITE32 ENDSUB_F_TIEMPORECTOMM_2:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TIEMPORECTOMM_2
CALLSUB302:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_1
    MOVEF_F 47.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB304:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB307:
    MULF VGV_VELOCIDAD 0.4 VLV_VELOCIDAD_1
    MOVEF_F 30.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB309:
    MULF VGV_VELOCIDAD -0.4 VLV_VELOCIDAD_1
    MOVEF_F 34.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB311:
    WRITE32 ENDSUB_F_SOLTAR_TODO_0:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SOLTAR_TODO_0
CALLSUB312:
    MOVEF_F 20.0 VLV_V_103
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB313:
    MULF VGV_VELOCIDAD -0.3 VLV_VELOCIDAD_5
    MOVEF_F 4.0 VLV_SENS_5
    WRITE32 ENDSUB_F_1BLANCORECTOMM_2:CALLSUB315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_1BLANCORECTOMM_2
CALLSUB315:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB318:
    MOVEF_F 30.0 VLV_V_98
    WRITE32 ENDSUB_F_BMOVEA0_1:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA0_1
CALLSUB319:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_72
    MOVEF_F VGV_KP VLV_KP_72
    MOVEF_F VGV_KI VLV_KI_72
    MOVEF_F VGV_KD VLV_KD_72
    WRITE32 ENDSUB_F_SL14PIDF_4:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDF_4
CALLSUB321:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB323:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 88.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB326:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_75
    MOVEF_F VGV_KP VLV_KP_75
    MOVEF_F VGV_KI VLV_KI_75
    MOVEF_F VGV_KD VLV_KD_75
    MOVEF_F 18.0 VLV_ENCODER_75
    WRITE32 ENDSUB_F_SL14PIDENC_5:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SL14PIDENC_5
CALLSUB328:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD2_15
    MOVEF_F 22.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB331:
    MULF VGV_VELOCIDAD 0.2 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD2_15
    MOVEF_F 25.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB334:
    MULF VGV_VELOCIDAD 0.5 VLV_VELOCIDAD_1
    MOVEF_F 15.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB336:
    MOVEF_F 20.0 VLV_V_107
    MOVEF_F -300.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB337:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -780.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB338:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 6.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB340:
    MULF VGV_VELOCIDAD -0.3 VLV_V1_35
    MULF VGV_VELOCIDAD 0.3 VLV_V2_35
    MOVEF_F 30.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB343:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD_1
    MOVEF_F 4.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB345:
    MULF VGV_VELOCIDAD 0.3 VLV_V1_35
    MULF VGV_VELOCIDAD -0.3 VLV_V2_35
    MOVEF_F 45.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB348:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -520.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB349:
    MULF VGV_VELOCIDAD 0.3 VLV_VELOCIDAD1_15
    MULF VGV_VELOCIDAD 0.1 VLV_VELOCIDAD2_15
    MOVEF_F 14.0 VLV_ENCODER_15
    WRITE32 ENDSUB_F_ENCODERGIROMM_3:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERGIROMM_3
CALLSUB352:
    MOVEF_F 30.0 VLV_V_103
    WRITE32 ENDSUB_F_BMOVEAD0_1:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEAD0_1
CALLSUB353:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_STOP_0:
  while354:
  whilebody354:
    CALL BUTTONS.CURRENT S.1
    CALL EQ_STRING S.1 'E' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else355_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
    MOVEF_F 20.0 VLV_V_106
    MOVEF_F 0.0 VLV_GRADOS_106
    WRITE32 ENDSUB_F_BMOVEADSAFE_2:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEADSAFE_2
CALLSUB360:
    PROGRAM_STOP -1
  else355_1:
  endif355:
    JR whilebody354
  endwhile354:
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_ENCODERRECTOMM_2:
    MULF VLV_VELOCIDAD_1 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_1
    MOVEF_F 5.6 VLV_DIAMETRO_1
    MULF VLV_DISTANCIA_1 360.0 F.1
    MOVEF_F 3.1415926535897932384 F.2
    DATAF tmpf365
    DATA8 flag365
    DIVF F.1 F.2 tmpf365
    CP_EQF 0.0 F.2 flag365
    SELECTF flag365 0.0 tmpf365 F.0

    DATAF tmpf366
    DATA8 flag366
    DIVF F.0 VLV_DIAMETRO_1 tmpf366
    CP_EQF 0.0 VLV_DIAMETRO_1 flag366
    SELECTF flag366 0.0 tmpf366 VLV_ENC_1

    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    DATAF tmpf369
    DATA8 flag369
    DIVF VGV_CORRECCION 30.0 tmpf369
    CP_EQF 0.0 30.0 flag369
    SELECTF flag369 0.0 tmpf369 F.2

    MULF F.2 VLV_VELOCIDAD_1 F.1
    ADDF F.0 F.1 VLV_START_B_1
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
  while375:
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_GTEQF F.0 VLV_ENC_1 endwhile375
  whilebody375:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_1 VLV_ENCODER_B_1
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_1 VLV_ENCODER_C_1
    SUBF VLV_ENCODER_B_1 VLV_ENCODER_C_1 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_1
    MULF VLV_ERROR_1 1.2 VLV_PROPORCIAL_1
    SUBF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_1 VLV_PROPORCIAL_1 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    MATH ABS VLV_ENCODER_C_1 F.0
    JR_LTF F.0 VLV_ENC_1 whilebody375
  endwhile375:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_ENCODERRECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERRECTOMM_2:
SUB_F_1NEGRORECTOMM_2:
    MULF VLV_VELOCIDAD_3 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_3
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_3
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_3
  while396:
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_LTEQF F.0 10.0 endwhile396
  whilebody396:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_3 VLV_ENCODER_B_3
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_3 VLV_ENCODER_C_3
    SUBF VLV_ENCODER_B_3 VLV_ENCODER_C_3 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_3
    MULF VLV_ERROR_3 1.2 VLV_PROPORCIAL_3
    SUBF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_3 VLV_PROPORCIAL_3 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_3 F.0
    JR_GTF F.0 10.0 whilebody396
  endwhile396:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGRORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGRORECTOMM_2:
SUB_F_1BLANCORECTOMM_2:
    MULF VLV_VELOCIDAD_5 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_5
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_5
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_5
  while417:
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_GTEQF F.0 40.0 endwhile417
  whilebody417:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_5 VLV_ENCODER_B_5
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_5 VLV_ENCODER_C_5
    SUBF VLV_ENCODER_B_5 VLV_ENCODER_C_5 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_5
    MULF VLV_ERROR_5 1.2 VLV_PROPORCIAL_5
    SUBF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_5 VLV_PROPORCIAL_5 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT VLV_SENS_5 F.0
    JR_LTF F.0 40.0 whilebody417
  endwhile417:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1BLANCORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1BLANCORECTOMM_2:
SUB_F_TIEMPORECTOMM_2:
    MULF VLV_VELOCIDAD_13 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_13
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    ADDF F.0 VGV_CORRECCION VLV_START_B_13
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_13
    TIMER_READ timeMC3
  while439:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_13 endwhile439
  whilebody439:
    CALL MOTOR.GETCOUNT 'B' F.1
    MULF F.1 -1.0 F.0
    SUBF F.0 VLV_START_B_13 VLV_ENCODER_B_13
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_13 VLV_ENCODER_C_13
    SUBF VLV_ENCODER_B_13 VLV_ENCODER_C_13 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_13
    MULF VLV_ERROR_13 1.2 VLV_PROPORCIAL_13
    SUBF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    MATH NEGATE F.1 F.0
    ADDF VLV_VELOCIDAD_13 VLV_PROPORCIAL_13 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_13 whilebody439
  endwhile439:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPORECTOMM_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPORECTOMM_2:
SUB_F_ENCODERGIROMM_3:
    MULF VLV_VELOCIDAD1_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_15
    MULF VLV_VELOCIDAD2_15 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_15
    MOVEF_F 5.6 VLV_DIAMETRO_15
    MOVEF_F 3.1415926535897932384 F.2
    MULF VLV_DIAMETRO_15 F.2 F.1
    DATAF tmpf459
    DATA8 flag459
    DIVF VLV_ENCODER_15 F.1 tmpf459
    CP_EQF 0.0 F.1 flag459
    SELECTF flag459 0.0 tmpf459 F.0

    MULF F.0 360.0 VLV_DISTANCIA_15
    MATH NEGATE VLV_VELOCIDAD1_15 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VELOCIDAD2_15 VLV_DISTANCIA_15 'True'

	DATA8 layer462
	DATA8 nos462
	DATA8 busy462
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer462 nos462
	JR_EQ8 0 nos462 motornotbusy462
  motorwaiting462:
	OUTPUT_TEST layer462 nos462 busy462
	JR_EQ8 busy462 0 motornotbusy462
	SLEEP
	JR motorwaiting462
  motornotbusy462:
RETSUB_F_ENCODERGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ENCODERGIROMM_3:
SUB_F_1NEGROGIROMM_3:
    MULF VLV_VELOCIDAD1_17 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_17
    MULF VLV_VELOCIDAD2_17 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_17
  while465:
    CALL SENSOR.READPERCENT VLV_SENS_17 F.0
    JR_LTEQF F.0 15.0 endwhile465
  whilebody465:
    MATH NEGATE VLV_VELOCIDAD1_17 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_17
    CALL SENSOR.READPERCENT VLV_SENS_17 F.0
    JR_GTF F.0 15.0 whilebody465
  endwhile465:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_1NEGROGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_1NEGROGIROMM_3:
SUB_F_TIEMPOGIROMM_3:
    TIMER_READ timeMC3
    MULF VLV_VELOCIDAD1_25 VGV_SENTIDO_MOTORES VLV_VELOCIDAD1_25
    MULF VLV_VELOCIDAD2_25 VGV_SENTIDO_MOTORES VLV_VELOCIDAD2_25
  while474:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_TIEMPO_25 endwhile474
  whilebody474:
    MATH NEGATE VLV_VELOCIDAD1_25 F.0
    CALL MOTOR.STARTSYNC 'BC' F.0 VLV_VELOCIDAD2_25
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_TIEMPO_25 whilebody474
  endwhile474:
    CALL MOTOR.STOP 'BC' 'True'
RETSUB_F_TIEMPOGIROMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TIEMPOGIROMM_3:
SUB_F_GPERFIDEFINITIVOMM_1:
    MOVEF_F 100.0 VLV_AVANCE_31
    MOVEF_F 200.0 VLV_GINICIO_31
    MOVEF_F 70.0 VLV_AJUSTE_31
    DATA8 flag480
	CP_LTF 40.0 VLV_VEL_31 flag480
	SELECTF flag480 40.0 VLV_VEL_31 VLV_VEL_31
    MULF VLV_VEL_31 0.75 VLV_VEL_31
    MULF VLV_VEL_31 VGV_SENTIDO_MOTORES VLV_VEL_31
    MATH NEGATE VLV_VEL_31 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VEL_31 VLV_AVANCE_31 'True'

	DATA8 layer484
	DATA8 nos484
	DATA8 busy484
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer484 nos484
	JR_EQ8 0 nos484 motornotbusy484
  motorwaiting484:
	OUTPUT_TEST layer484 nos484 busy484
	JR_EQ8 busy484 0 motornotbusy484
	SLEEP
	JR motorwaiting484
  motornotbusy484:
    CALL MOTOR.SCHEDULE 'BC' VLV_VEL_31 0.0 VLV_GINICIO_31 0.0 'False' 

	DATA8 layer485
	DATA8 nos485
	DATA8 busy485
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer485 nos485
	JR_EQ8 0 nos485 motornotbusy485
  motorwaiting485:
	OUTPUT_TEST layer485 nos485 busy485
	JR_EQ8 busy485 0 motornotbusy485
	SLEEP
	JR motorwaiting485
  motornotbusy485:
  while486:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_LTEQF F.0 10.0 endwhile486
  whilebody486:
    CALL MOTOR.STARTSYNC 'BC' VLV_VEL_31 VLV_VEL_31
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 10.0 whilebody486
  endwhile486:
    CALL MOTOR.STOP 'BC' 'False'
    CALL MOTOR.SCHEDULE 'BC' VLV_VEL_31 0.0 VLV_AJUSTE_31 0.0 'True' 

	DATA8 layer491
	DATA8 nos491
	DATA8 busy491
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer491 nos491
	JR_EQ8 0 nos491 motornotbusy491
  motorwaiting491:
	OUTPUT_TEST layer491 nos491 busy491
	JR_EQ8 busy491 0 motornotbusy491
	SLEEP
	JR motorwaiting491
  motornotbusy491:
RETSUB_F_GPERFIDEFINITIVOMM_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GPERFIDEFINITIVOMM_1:
SUB_F_GPERFDDEFINITIVOMM_1:
    MOVEF_F 100.0 VLV_AVANCE_33
    MOVEF_F 200.0 VLV_GINICIO_33
    MOVEF_F 70.0 VLV_AJUSTE_33
    DATA8 flag492
	CP_LTF 40.0 VLV_VEL_33 flag492
	SELECTF flag492 40.0 VLV_VEL_33 VLV_VEL_33
    MULF VLV_VEL_33 0.75 VLV_VEL_33
    MULF VLV_VEL_33 VGV_SENTIDO_MOTORES VLV_VEL_33
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULESYNC 'BC' F.0 VLV_VEL_33 VLV_AVANCE_33 'True'

	DATA8 layer496
	DATA8 nos496
	DATA8 busy496
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer496 nos496
	JR_EQ8 0 nos496 motornotbusy496
  motorwaiting496:
	OUTPUT_TEST layer496 nos496 busy496
	JR_EQ8 busy496 0 motornotbusy496
	SLEEP
	JR motorwaiting496
  motornotbusy496:
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_GINICIO_33 0.0 'False' 

	DATA8 layer498
	DATA8 nos498
	DATA8 busy498
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer498 nos498
	JR_EQ8 0 nos498 motornotbusy498
  motorwaiting498:
	OUTPUT_TEST layer498 nos498 busy498
	JR_EQ8 busy498 0 motornotbusy498
	SLEEP
	JR motorwaiting498
  motornotbusy498:
  while499:
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 10.0 endwhile499
  whilebody499:
    MATH NEGATE VLV_VEL_33 F.0
    MATH NEGATE VLV_VEL_33 F.1
    CALL MOTOR.STARTSYNC 'BC' F.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 10.0 whilebody499
  endwhile499:
    CALL MOTOR.STOP 'BC' 'False'
    MATH NEGATE VLV_VEL_33 F.0
    CALL MOTOR.SCHEDULE 'BC' F.0 0.0 VLV_AJUSTE_33 0.0 'True' 

	DATA8 layer507
	DATA8 nos507
	DATA8 busy507
	CALL MOTORDECODEPORTSDESCRIPTOR 'BC' layer507 nos507
	JR_EQ8 0 nos507 motornotbusy507
  motorwaiting507:
	OUTPUT_TEST layer507 nos507 busy507
	JR_EQ8 busy507 0 motornotbusy507
	SLEEP
	JR motorwaiting507
  motornotbusy507:
RETSUB_F_GPERFDDEFINITIVOMM_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GPERFDDEFINITIVOMM_1:
SUB_F_GUNIVENCMM_3:
    STRINGS DUPLICATE 'B' VLV_I_35
    STRINGS DUPLICATE 'C' VLV_D_35
    DATAF tmpf508
    DATA8 flag508
    DIVF VLV_V1_35 VLV_V2_35 tmpf508
    CP_EQF 0.0 VLV_V2_35 flag508
    SELECTF flag508 0.0 tmpf508 F.0

    DATAF tmpf509
    DATA8 flag509
    DIVF VLV_V1_35 VLV_V2_35 tmpf509
    CP_EQF 0.0 VLV_V2_35 flag509
    SELECTF flag509 0.0 tmpf509 F.2

    MATH ABS F.2 F.1
    DATAF tmpf511
    DATA8 flag511
    DIVF F.0 F.1 tmpf511
    CP_EQF 0.0 F.1 flag511
    SELECTF flag511 0.0 tmpf511 VLV_SIGNO_35

    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag514
	CP_LTF F.0 F.1 flag514
	SELECTF flag514 F.0 F.1 VLV_VMIN_35
    MATH ABS VLV_V1_35 F.0
    MATH ABS VLV_V2_35 F.1
    DATA8 flag517
	CP_GTF F.0 F.1 flag517
	SELECTF flag517 F.0 F.1 VLV_VMAX_35
    MULF VLV_ANGLE_35 VGV_G1 F.0
    MULF VLV_SIGNO_35 VLV_VMIN_35 F.4
    DATAF tmpf520
    DATA8 flag520
    DIVF F.4 VLV_VMAX_35 tmpf520
    CP_EQF 0.0 VLV_VMAX_35 flag520
    SELECTF flag520 0.0 tmpf520 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf522
    DATA8 flag522
    DIVF -2.0 F.2 tmpf522
    CP_EQF 0.0 F.2 flag522
    SELECTF flag522 0.0 tmpf522 F.1

    MULF F.0 F.1 VLV_ENCODR_35
    CALL TEXT.APPEND VLV_I_35 VLV_D_35 S.0
    MATH NEGATE VLV_V1_35 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_35 VLV_ENCODR_35 'True'

	DATA8 layer526
	DATA8 nos526
	DATA8 busy526
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer526 nos526
	JR_EQ8 0 nos526 motornotbusy526
  motorwaiting526:
	OUTPUT_TEST layer526 nos526 busy526
	JR_EQ8 busy526 0 motornotbusy526
	SLEEP
	JR motorwaiting526
  motornotbusy526:
    MOVEF_F 0.0 VLV_V1_35
    MOVEF_F 0.0 VLV_V2_35
    MOVEF_F 0.0 VLV_ANGLE_35
    DATA32 milliseconds527
	MOVEF_32 200.0 milliseconds527
	DATA32 timer527
	TIMER_WAIT milliseconds527 timer527
	TIMER_READY timer527
RETSUB_F_GUNIVENCMM_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMM_3:
SUB_F_GUNIVENCMMF_3:
    STRINGS DUPLICATE 'B' VLV_I_36
    STRINGS DUPLICATE 'C' VLV_D_36
    DATAF tmpf528
    DATA8 flag528
    DIVF VLV_V1_36 VLV_V2_36 tmpf528
    CP_EQF 0.0 VLV_V2_36 flag528
    SELECTF flag528 0.0 tmpf528 F.0

    DATAF tmpf529
    DATA8 flag529
    DIVF VLV_V1_36 VLV_V2_36 tmpf529
    CP_EQF 0.0 VLV_V2_36 flag529
    SELECTF flag529 0.0 tmpf529 F.2

    MATH ABS F.2 F.1
    DATAF tmpf531
    DATA8 flag531
    DIVF F.0 F.1 tmpf531
    CP_EQF 0.0 F.1 flag531
    SELECTF flag531 0.0 tmpf531 VLV_SIGNO_36

    MATH ABS VLV_V1_36 F.0
    MATH ABS VLV_V2_36 F.1
    DATA8 flag534
	CP_LTF F.0 F.1 flag534
	SELECTF flag534 F.0 F.1 VLV_VMIN_36
    MATH ABS VLV_V1_36 F.0
    MATH ABS VLV_V2_36 F.1
    DATA8 flag537
	CP_GTF F.0 F.1 flag537
	SELECTF flag537 F.0 F.1 VLV_VMAX_36
    MULF VLV_ANGLE_36 VGV_G1 F.0
    MULF VLV_SIGNO_36 VLV_VMIN_36 F.4
    DATAF tmpf540
    DATA8 flag540
    DIVF F.4 VLV_VMAX_36 tmpf540
    CP_EQF 0.0 VLV_VMAX_36 flag540
    SELECTF flag540 0.0 tmpf540 F.3

    SUBF F.3 1.0 F.2
    DATAF tmpf542
    DATA8 flag542
    DIVF -2.0 F.2 tmpf542
    CP_EQF 0.0 F.2 flag542
    SELECTF flag542 0.0 tmpf542 F.1

    MULF F.0 F.1 VLV_ENCODR_36
    CALL TEXT.APPEND VLV_I_36 VLV_D_36 S.0
    MATH NEGATE VLV_V1_36 F.0
    CALL MOTOR.SCHEDULESYNC S.0 F.0 VLV_V2_36 VLV_ENCODR_36 'False'

	DATA8 layer546
	DATA8 nos546
	DATA8 busy546
	CALL MOTORDECODEPORTSDESCRIPTOR S.0 layer546 nos546
	JR_EQ8 0 nos546 motornotbusy546
  motorwaiting546:
	OUTPUT_TEST layer546 nos546 busy546
	JR_EQ8 busy546 0 motornotbusy546
	SLEEP
	JR motorwaiting546
  motornotbusy546:
    MOVEF_F 0.0 VLV_V1_36
    MOVEF_F 0.0 VLV_V2_36
    MOVEF_F 0.0 VLV_ANGLE_36
RETSUB_F_GUNIVENCMMF_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GUNIVENCMMF_3:
SUB_F_SPIN180_1:
    STRINGS DUPLICATE 'B' VLV_I_37
    STRINGS DUPLICATE 'C' VLV_D_37
    MOVEF_F VLV_VELOCIDAD_37 VLV_V1_35
    MULF VLV_VELOCIDAD_37 -1.0 VLV_V2_35
    MOVEF_F 176.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB548:
    MOVEF_F 0.0 VLV_ANGLE_37
RETSUB_F_SPIN180_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN180_1:
SUB_F_SPIN90_1:
    STRINGS DUPLICATE 'B' VLV_I_39
    STRINGS DUPLICATE 'C' VLV_D_39
    MOVEF_F VLV_VELOCIDAD_39 VLV_V1_35
    MULF VLV_VELOCIDAD_39 -1.0 VLV_V2_35
    MOVEF_F 90.0 VLV_ANGLE_35
    WRITE32 ENDSUB_F_GUNIVENCMM_3:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GUNIVENCMM_3
CALLSUB550:
    MOVEF_F 0.0 VLV_ANGLE_39
RETSUB_F_SPIN90_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPIN90_1:
SUB_F_SL14SICF_6:
    STRINGS DUPLICATE 'B' VLV_I_56
    STRINGS DUPLICATE 'C' VLV_D_56
    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf553
    DATA8 flag553
    DIVF VLV_ACCELENCODER_56 F.1 tmpf553
    CP_EQF 0.0 F.1 flag553
    SELECTF flag553 0.0 tmpf553 F.0

    MULF F.0 360.0 VLV_ACCELENCODER_56
    MOVEF_F 0.0 VLV_U_56
    MOVEF_F 0.0 VLV_ERROR_56
    MOVEF_F 0.0 VLV_OLDERROR_56
    MOVEF_F 0.0 VLV_ERRSUM_56
    CALL MOTOR.RESETCOUNT 'C'
  while556:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or557
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile556
  or557:
  whilebody556:
    CALL MOTOR.GETCOUNT 'C' F.3
    DATAF tmpf561
    DATA8 flag561
    DIVF F.3 VLV_ACCELENCODER_56 tmpf561
    CP_EQF 0.0 VLV_ACCELENCODER_56 flag561
    SELECTF flag561 0.0 tmpf561 F.2

    MULF F.2 0.72 F.1
    ADDF VLV_VMAX_56 VLV_V0_56 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_56 VLV_VEL_56
    DATA8 flag566
	CP_LTF VLV_VEL_56 VLV_VMAX_56 flag566
	SELECTF flag566 VLV_VEL_56 VLV_VMAX_56 VLV_VEL_56
    MATH ABS VLV_VEL_56 F.0
    DATAF tmpf568
    DATA8 flag568
    DIVF VLV_VEL_56 F.0 tmpf568
    CP_EQF 0.0 F.0 flag568
    SELECTF flag568 0.0 tmpf568 VLV_SENTIDO_56

    CALL SENSOR.READPERCENT 1.0 F.1
    CALL SENSOR.READPERCENT 4.0 F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_SENTIDO_56 VLV_ERROR_56
    ADDF VLV_ERRSUM_56 VLV_ERROR_56 VLV_ERRSUM_56
    MULF VLV_ERROR_56 VLV_KP_56 F.1
    SUBF VLV_ERROR_56 VLV_OLDERROR_56 F.3
    MULF F.3 VLV_KD_56 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_56 VLV_KI_56 F.1
    ADDF F.0 F.1 VLV_U_56
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    ADDF VLV_VEL_56 VLV_U_56 F.2
    MATH NEGATE F.2 F.1
    MULF F.1 VGV_SENTIDO_MOTORES F.0
    SUBF VLV_VEL_56 VLV_U_56 F.2
    MULF F.2 VGV_SENTIDO_MOTORES F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_56 VLV_OLDERROR_56
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody556
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody556
  endwhile556:
    CALL TEXT.APPEND VLV_I_56 VLV_D_56 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14SICF_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14SICF_6:
SUB_F_SL14PID_4:
    MULF VLV_VELOCIDAD_71 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_71
    STRINGS DUPLICATE 'B' VLV_I_71
    STRINGS DUPLICATE 'C' VLV_D_71
    MOVEF_F 0.0 VLV_ERROR_71
    MOVEF_F 0.0 VLV_OLDERROR_71
    MOVEF_F 0.0 VLV_ERRSUM_71
    MOVEF_F 0.0 VLV_U_71
    MATH ABS VLV_VELOCIDAD_71 F.0
    DATAF tmpf593
    DATA8 flag593
    DIVF VLV_VELOCIDAD_71 F.0 tmpf593
    CP_EQF 0.0 F.0 flag593
    SELECTF flag593 0.0 tmpf593 VLV_SENTIDO_71

  while594:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or595
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile594
  or595:
  whilebody594:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_71 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_71
    ADDF VLV_ERRSUM_71 VLV_ERROR_71 VLV_ERRSUM_71
    MULF VLV_ERROR_71 VLV_KP_71 F.1
    SUBF VLV_ERROR_71 VLV_OLDERROR_71 F.3
    MULF F.3 VLV_KD_71 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_71 VLV_KI_71 F.1
    ADDF F.0 F.1 VLV_U_71
    CALL TEXT.APPEND VLV_I_71 VLV_D_71 S.0
    ADDF VLV_VELOCIDAD_71 VLV_U_71 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_71 VLV_U_71 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_71 VLV_OLDERROR_71
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody594
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody594
  endwhile594:
    CALL TEXT.APPEND VLV_I_71 VLV_D_71 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PID_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PID_4:
SUB_F_SL14PIDF_4:
    MULF VLV_VELOCIDAD_72 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_72
    STRINGS DUPLICATE 'B' VLV_I_72
    STRINGS DUPLICATE 'C' VLV_D_72
    MOVEF_F 0.0 VLV_ERROR_72
    MOVEF_F 0.0 VLV_OLDERROR_72
    MOVEF_F 0.0 VLV_ERRSUM_72
    MOVEF_F 0.0 VLV_U_72
    MATH ABS VLV_VELOCIDAD_72 F.0
    DATAF tmpf621
    DATA8 flag621
    DIVF VLV_VELOCIDAD_72 F.0 tmpf621
    CP_EQF 0.0 F.0 flag621
    SELECTF flag621 0.0 tmpf621 VLV_SENTIDO_72

  while622:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or623
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile622
  or623:
  whilebody622:
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_72 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_72
    ADDF VLV_ERRSUM_72 VLV_ERROR_72 VLV_ERRSUM_72
    MULF VLV_ERROR_72 VLV_KP_72 F.1
    SUBF VLV_ERROR_72 VLV_OLDERROR_72 F.3
    MULF F.3 VLV_KD_72 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_72 VLV_KI_72 F.1
    ADDF F.0 F.1 VLV_U_72
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    ADDF VLV_VELOCIDAD_72 VLV_U_72 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_72 VLV_U_72 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_72 VLV_OLDERROR_72
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody622
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody622
  endwhile622:
    CALL TEXT.APPEND VLV_I_72 VLV_D_72 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDF_4:
SUB_F_SL14PIDENC_5:
    MULF VLV_VELOCIDAD_75 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_75
    STRINGS DUPLICATE 'B' VLV_I_75
    STRINGS DUPLICATE 'C' VLV_D_75
    MOVEF_F 0.0 VLV_ERROR_75
    MOVEF_F 0.0 VLV_OLDERROR_75
    MOVEF_F 0.0 VLV_ERRSUM_75
    MOVEF_F 0.0 VLV_U_75
    MATH ABS VLV_VELOCIDAD_75 F.0
    DATAF tmpf649
    DATA8 flag649
    DIVF VLV_VELOCIDAD_75 F.0 tmpf649
    CP_EQF 0.0 F.0 flag649
    SELECTF flag649 0.0 tmpf649 VLV_SENTIDO_75

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf652
    DATA8 flag652
    DIVF VLV_ENCODER_75 F.1 tmpf652
    CP_EQF 0.0 F.1 flag652
    SELECTF flag652 0.0 tmpf652 F.0

    MULF F.0 360.0 VLV_ENCODER_75
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_75
    MOVEF_F 0.0 VLV_ENCODER_C_75
  while655:
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_GTEQF F.0 VLV_ENCODER_75 endwhile655
  whilebody655:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_75 VLV_ENCODER_C_75
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_75 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_75
    ADDF VLV_ERRSUM_75 VLV_ERROR_75 VLV_ERRSUM_75
    MULF VLV_ERROR_75 VLV_KP_75 F.1
    SUBF VLV_ERROR_75 VLV_OLDERROR_75 F.3
    MULF F.3 VLV_KD_75 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_75 VLV_KI_75 F.1
    ADDF F.0 F.1 VLV_U_75
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    ADDF VLV_VELOCIDAD_75 VLV_U_75 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_75 VLV_U_75 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_75 VLV_OLDERROR_75
    MATH ABS VLV_ENCODER_C_75 F.0
    JR_LTF F.0 VLV_ENCODER_75 whilebody655
  endwhile655:
    CALL TEXT.APPEND VLV_I_75 VLV_D_75 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL14PIDENC_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENC_5:
SUB_F_SL14PIDENCF_5:
    MULF VLV_VELOCIDAD_76 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_76
    STRINGS DUPLICATE 'B' VLV_I_76
    STRINGS DUPLICATE 'C' VLV_D_76
    MOVEF_F 0.0 VLV_ERROR_76
    MOVEF_F 0.0 VLV_OLDERROR_76
    MOVEF_F 0.0 VLV_ERRSUM_76
    MOVEF_F 0.0 VLV_U_76
    MATH ABS VLV_VELOCIDAD_76 F.0
    DATAF tmpf681
    DATA8 flag681
    DIVF VLV_VELOCIDAD_76 F.0 tmpf681
    CP_EQF 0.0 F.0 flag681
    SELECTF flag681 0.0 tmpf681 VLV_SENTIDO_76

    MOVEF_F 3.1415926535897932384 F.2
    MULF 5.6 F.2 F.1
    DATAF tmpf684
    DATA8 flag684
    DIVF VLV_ENCODER_76 F.1 tmpf684
    CP_EQF 0.0 F.1 flag684
    SELECTF flag684 0.0 tmpf684 F.0

    MULF F.0 360.0 VLV_ENCODER_76
    CALL MOTOR.GETCOUNT 'C' VLV_START_C_76
    MOVEF_F 0.0 VLV_ENCODER_C_76
  while687:
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_GTEQF F.0 VLV_ENCODER_76 endwhile687
  whilebody687:
    CALL MOTOR.GETCOUNT 'C' F.0
    SUBF F.0 VLV_START_C_76 VLV_ENCODER_C_76
    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_76 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_76
    ADDF VLV_ERRSUM_76 VLV_ERROR_76 VLV_ERRSUM_76
    MULF VLV_ERROR_76 VLV_KP_76 F.1
    SUBF VLV_ERROR_76 VLV_OLDERROR_76 F.3
    MULF F.3 VLV_KD_76 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_76 VLV_KI_76 F.1
    ADDF F.0 F.1 VLV_U_76
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    ADDF VLV_VELOCIDAD_76 VLV_U_76 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_76 VLV_U_76 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_76 VLV_OLDERROR_76
    MATH ABS VLV_ENCODER_C_76 F.0
    JR_LTF F.0 VLV_ENCODER_76 whilebody687
  endwhile687:
    CALL TEXT.APPEND VLV_I_76 VLV_D_76 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL14PIDENCF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL14PIDENCF_5:
SUB_F_SL1SPIDCROSS_5:
    MULF VLV_VELOCIDAD_81 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_81
    STRINGS DUPLICATE 'B' VLV_I_81
    STRINGS DUPLICATE 'C' VLV_D_81
    MOVEF_F 0.0 VLV_ERROR_81
    MOVEF_F 0.0 VLV_OLDERROR_81
    MOVEF_F 0.0 VLV_ERRSUM_81
    MOVEF_F 0.0 VLV_U_81
    MATH ABS VLV_VELOCIDAD_81 F.0
    DATAF tmpf713
    DATA8 flag713
    DIVF VLV_VELOCIDAD_81 F.0 tmpf713
    CP_EQF 0.0 F.0 flag713
    SELECTF flag713 0.0 tmpf713 VLV_SENTIDO_81

    JR_NEQF VLV_READER_81 3.0 else714_1
    MOVEF_F 1.0 VLV_READER1_81
    MOVEF_F 4.0 VLV_READER2_81
    JR endif714
  else714_1:
    MOVEF_F 3.0 VLV_READER1_81
    MOVEF_F 1.0 VLV_READER2_81
  else714_2:
  endif714:
  while715:
    CALL SENSOR.READPERCENT VLV_READER_81 F.0
    JR_LTEQF F.0 20.0 endwhile715
  whilebody715:
    CALL SENSOR.READPERCENT VLV_READER1_81 F.2
    CALL SENSOR.READPERCENT VLV_READER2_81 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_81 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_81
    ADDF VLV_ERRSUM_81 VLV_ERROR_81 VLV_ERRSUM_81
    MULF VLV_ERROR_81 VLV_KP_81 F.1
    SUBF VLV_ERROR_81 VLV_OLDERROR_81 F.3
    MULF F.3 VLV_KD_81 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_81 VLV_KI_81 F.1
    ADDF F.0 F.1 VLV_U_81
    CALL TEXT.APPEND VLV_I_81 VLV_D_81 S.0
    ADDF VLV_VELOCIDAD_81 VLV_U_81 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_81 VLV_U_81 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_81 VLV_OLDERROR_81
    CALL SENSOR.READPERCENT VLV_READER_81 F.0
    JR_GTF F.0 20.0 whilebody715
  endwhile715:
    CALL TEXT.APPEND VLV_I_81 VLV_D_81 S.0
    CALL MOTOR.STOP S.0 'True'
RETSUB_F_SL1SPIDCROSS_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSS_5:
SUB_F_SL1SPIDCROSSF_5:
    MULF VLV_VELOCIDAD_82 VGV_SENTIDO_MOTORES VLV_VELOCIDAD_82
    STRINGS DUPLICATE 'B' VLV_I_82
    STRINGS DUPLICATE 'C' VLV_D_82
    MOVEF_F 0.0 VLV_ERROR_82
    MOVEF_F 0.0 VLV_OLDERROR_82
    MOVEF_F 0.0 VLV_ERRSUM_82
    MOVEF_F 0.0 VLV_U_82
    MATH ABS VLV_VELOCIDAD_82 F.0
    DATAF tmpf739
    DATA8 flag739
    DIVF VLV_VELOCIDAD_82 F.0 tmpf739
    CP_EQF 0.0 F.0 flag739
    SELECTF flag739 0.0 tmpf739 VLV_SENTIDO_82

    JR_NEQF VLV_READER_82 3.0 else740_1
    MOVEF_F 1.0 VLV_READER1_82
    MOVEF_F 4.0 VLV_READER2_82
    JR endif740
  else740_1:
    MOVEF_F 3.0 VLV_READER1_82
    MOVEF_F 1.0 VLV_READER2_82
  else740_2:
  endif740:
  while741:
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_LTEQF F.0 20.0 endwhile741
  whilebody741:
    CALL SENSOR.READPERCENT VLV_READER1_82 F.2
    CALL SENSOR.READPERCENT VLV_READER2_82 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_82 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_82
    ADDF VLV_ERRSUM_82 VLV_ERROR_82 VLV_ERRSUM_82
    MULF VLV_ERROR_82 VLV_KP_82 F.1
    SUBF VLV_ERROR_82 VLV_OLDERROR_82 F.3
    MULF F.3 VLV_KD_82 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_82 VLV_KI_82 F.1
    ADDF F.0 F.1 VLV_U_82
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    ADDF VLV_VELOCIDAD_82 VLV_U_82 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VELOCIDAD_82 VLV_U_82 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_82 VLV_OLDERROR_82
    CALL SENSOR.READPERCENT VLV_READER_82 F.0
    JR_GTF F.0 20.0 whilebody741
  endwhile741:
    CALL TEXT.APPEND VLV_I_82 VLV_D_82 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SL1SPIDCROSSF_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SL1SPIDCROSSF_5:
SUB_F_SMART14PIDF_4:
    MULF VLV_VMAX_90 VGV_SENTIDO_MOTORES VLV_VMAX_90
    STRINGS DUPLICATE 'B' VLV_I_90
    STRINGS DUPLICATE 'C' VLV_D_90
    MULF 10.0 VGV_SENTIDO_MOTORES VLV_V0_90
    MOVEF_F 150.0 VLV_ACCELENCODER_90
    MOVEF_F 0.0 VLV_U_90
    MOVEF_F 0.0 VLV_ERRSUM_90
    MOVEF_F 0.0 VLV_OLDERROR_90
    CALL MOTOR.RESETCOUNT 'C'
  while766:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 or767
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_LTEQF F.0 15.0 endwhile766
  or767:
  whilebody766:
    CALL MOTOR.GETCOUNT 'C' F.2
    DATAF tmpf771
    DATA8 flag771
    DIVF F.2 VLV_ACCELENCODER_90 tmpf771
    CP_EQF 0.0 VLV_ACCELENCODER_90 flag771
    SELECTF flag771 0.0 tmpf771 F.1

    ADDF VLV_VMAX_90 VLV_V0_90 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_V0_90 VLV_VEL_90
    DATA8 flag775
	CP_LTF VLV_VEL_90 VLV_VMAX_90 flag775
	SELECTF flag775 VLV_VEL_90 VLV_VMAX_90 VLV_VEL_90
    MATH ABS VLV_VEL_90 F.0
    DATAF tmpf777
    DATA8 flag777
    DIVF VLV_VEL_90 F.0 tmpf777
    CP_EQF 0.0 F.0 flag777
    SELECTF flag777 0.0 tmpf777 VLV_SENTIDO_90

    CALL SENSOR.READPERCENT 1.0 F.2
    CALL SENSOR.READPERCENT 4.0 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_SENTIDO_90 F.0
    MULF F.0 VGV_SENTIDO_MOTORES VLV_ERROR_90
    MULF VLV_ERRSUM_90 0.9 F.0
    ADDF F.0 VLV_ERROR_90 VLV_ERRSUM_90
    MULF VLV_ERROR_90 VLV_KP_90 F.1
    SUBF VLV_ERROR_90 VLV_OLDERROR_90 F.3
    MULF F.3 VLV_KD_90 F.2
    ADDF F.1 F.2 F.0
    MULF VLV_ERRSUM_90 VLV_KI_90 F.1
    ADDF F.0 F.1 VLV_U_90
    CALL TEXT.APPEND VLV_I_90 VLV_D_90 S.0
    ADDF VLV_VEL_90 VLV_U_90 F.1
    MATH NEGATE F.1 F.0
    SUBF VLV_VEL_90 VLV_U_90 F.1
    CALL MOTOR.STARTSYNC S.0 F.0 F.1
    MOVEF_F VLV_ERROR_90 VLV_OLDERROR_90
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 15.0 whilebody766
    CALL SENSOR.READPERCENT 4.0 F.0
    JR_GTF F.0 15.0 whilebody766
  endwhile766:
    CALL TEXT.APPEND VLV_I_90 VLV_D_90 S.0
    CALL MOTOR.STOP S.0 'False'
RETSUB_F_SMART14PIDF_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SMART14PIDF_4:
SUB_F_BMOVEA_2:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENC_97 F.0 VLV_ENCDIFF_97
    MATH ABS VLV_ENCDIFF_97 F.0
    DATAF tmpf803
    DATA8 flag803
    DIVF VLV_ENCDIFF_97 F.0 tmpf803
    CP_EQF 0.0 F.0 flag803
    SELECTF flag803 0.0 tmpf803 VLV_SIGNO_97

    JR_EQF VLV_ENCDIFF_97 0.0 else804_1
  while805:
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_97 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile805
  whilebody805:
    MULF VLV_SIGNO_97 VLV_V_97 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    CALL MOTOR.GETCOUNT 'A' F.2
    SUBF F.2 VLV_AENC_97 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody805
  endwhile805:
    CALL MOTOR.STOP 'A' 'True'
  else804_1:
  endif804:
RETSUB_F_BMOVEA_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA_2:
SUB_F_BMOVEA0_1:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF -300.0 F.0 VLV_ENCDIFF_98
    MATH ABS VLV_ENCDIFF_98 F.0
    DATAF tmpf818
    DATA8 flag818
    DIVF VLV_ENCDIFF_98 F.0 tmpf818
    CP_EQF 0.0 F.0 flag818
    SELECTF flag818 0.0 tmpf818 VLV_SIGNO_98

    JR_EQF VLV_ENCDIFF_98 0.0 else819_1
    MULF VLV_SIGNO_98 VLV_V_98 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
  while822:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 300.0 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile822
  whilebody822:
    CALL MOTOR.GETCOUNT 'A' F.2
    ADDF F.2 300.0 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 5.0 whilebody822
  endwhile822:
    CALL MOTOR.STOP 'A' 'True'
  else819_1:
  endif819:
RETSUB_F_BMOVEA0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEA0_1:
SUB_F_BMOVEAD_4:
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENCA_102 F.0 VLV_ENCDIFFA_102
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENCD_102 F.0 VLV_ENCDIFFD_102
    MATH ABS VLV_ENCDIFFA_102 F.0
    DATAF tmpf835
    DATA8 flag835
    DIVF VLV_ENCDIFFA_102 F.0 tmpf835
    CP_EQF 0.0 F.0 flag835
    SELECTF flag835 0.0 tmpf835 VLV_SIGNOA_102

    MATH ABS VLV_ENCDIFFD_102 F.0
    DATAF tmpf837
    DATA8 flag837
    DIVF VLV_ENCDIFFD_102 F.0 tmpf837
    CP_EQF 0.0 F.0 flag837
    SELECTF flag837 0.0 tmpf837 VLV_SIGNOD_102

    MATH ABS VLV_ENCDIFFA_102 F.8
    MATH ABS VLV_ENCDIFFD_102 F.9
    DATA8 flag840
	CP_GTF F.8 F.9 flag840
	SELECTF flag840 F.8 F.9 F.7
    MATH ABS F.7 F.6
    DATAF tmpf842
    DATA8 flag842
    DIVF F.6 100.0 tmpf842
    CP_EQF 0.0 100.0 flag842
    SELECTF flag842 0.0 tmpf842 F.5

    DATA8 flag843
	CP_LTF VLV_VA_102 VLV_VD_102 flag843
	SELECTF flag843 VLV_VA_102 VLV_VD_102 F.7
    DATAF tmpf844
    DATA8 flag844
    DIVF F.7 20.0 tmpf844
    CP_EQF 0.0 20.0 flag844
    SELECTF flag844 0.0 tmpf844 F.6

    DATAF tmpf845
    DATA8 flag845
    DIVF F.5 F.6 tmpf845
    CP_EQF 0.0 F.6 flag845
    SELECTF flag845 0.0 tmpf845 F.4

    MULF F.4 650.0 F.3
    MULF F.3 2.0 F.2
    MULF F.2 2.0 F.1
    DATAF tmpf849
    DATA8 flag849
    DIVF F.1 3.0 tmpf849
    CP_EQF 0.0 3.0 flag849
    SELECTF flag849 0.0 tmpf849 F.0

    DATA8 flag850
	CP_GTF F.0 400.0 flag850
	SELECTF flag850 F.0 400.0 VLV_SAFETYTIMER_102
    TIMER_READ timeMC3
  while852:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENCA_102 or853
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENCD_102 endwhile852
  or853:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_102 endwhile852
  whilebody852:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_GTEQF F.0 VLV_AENCA_102 else857_1
    DATAF tmpf859
    DATA8 flag859
    DIVF VLV_VA_102 2.0 tmpf859
    CP_EQF 0.0 2.0 flag859
    SELECTF flag859 0.0 tmpf859 F.2

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.5
    SUBF VLV_AENCA_102 F.5 F.4
    DATAF tmpf862
    DATA8 flag862
    DIVF F.4 10.0 tmpf862
    CP_EQF 0.0 10.0 flag862
    SELECTF flag862 0.0 tmpf862 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag864
	CP_LTF VLV_VA_102 F.1 flag864
	SELECTF flag864 VLV_VA_102 F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif857
  else857_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_LTEQF F.0 VLV_AENCA_102 else857_2
    DATAF tmpf867
    DATA8 flag867
    DIVF VLV_VA_102 2.0 tmpf867
    CP_EQF 0.0 2.0 flag867
    SELECTF flag867 0.0 tmpf867 F.3

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.6
    SUBF F.6 VLV_AENCA_102 F.5
    DATAF tmpf870
    DATA8 flag870
    DIVF F.5 10.0 tmpf870
    CP_EQF 0.0 10.0 flag870
    SELECTF flag870 0.0 tmpf870 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag872
	CP_LTF VLV_VA_102 F.2 flag872
	SELECTF flag872 VLV_VA_102 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif857
  else857_2:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else857_3:
  endif857:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_GTEQF F.0 VLV_AENCD_102 else876_1
    DATAF tmpf878
    DATA8 flag878
    DIVF VLV_VD_102 2.0 tmpf878
    CP_EQF 0.0 2.0 flag878
    SELECTF flag878 0.0 tmpf878 F.2

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.5
    SUBF VLV_AENCD_102 F.5 F.4
    DATAF tmpf881
    DATA8 flag881
    DIVF F.4 10.0 tmpf881
    CP_EQF 0.0 10.0 flag881
    SELECTF flag881 0.0 tmpf881 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag883
	CP_LTF VLV_VD_102 F.1 flag883
	SELECTF flag883 VLV_VD_102 F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif876
  else876_1:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_LTEQF F.0 VLV_AENCD_102 else876_2
    DATAF tmpf886
    DATA8 flag886
    DIVF VLV_VD_102 2.0 tmpf886
    CP_EQF 0.0 2.0 flag886
    SELECTF flag886 0.0 tmpf886 F.3

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.6
    SUBF F.6 VLV_AENCD_102 F.5
    DATAF tmpf889
    DATA8 flag889
    DIVF F.5 10.0 tmpf889
    CP_EQF 0.0 10.0 flag889
    SELECTF flag889 0.0 tmpf889 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag891
	CP_LTF VLV_VD_102 F.2 flag891
	SELECTF flag891 VLV_VD_102 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif876
  else876_2:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else876_3:
  endif876:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENCA_102 or896
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENCD_102 and895
  or896:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_102 whilebody852
  and895:
  endwhile852:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEAD_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD_4:
SUB_F_BMOVEAD0_1:
    MOVEF_F -300.0 VLV_AENCA_103
    MOVEF_F 0.0 VLV_AENCD_103
    CALL MOTOR.GETCOUNT 'A' F.0
    SUBF VLV_AENCA_103 F.0 VLV_ENCDIFFA_103
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENCD_103 F.0 VLV_ENCDIFFD_103
    MATH ABS VLV_ENCDIFFA_103 F.0
    DATAF tmpf906
    DATA8 flag906
    DIVF VLV_ENCDIFFA_103 F.0 tmpf906
    CP_EQF 0.0 F.0 flag906
    SELECTF flag906 0.0 tmpf906 VLV_SIGNOA_103

    MATH ABS VLV_ENCDIFFD_103 F.0
    DATAF tmpf908
    DATA8 flag908
    DIVF VLV_ENCDIFFD_103 F.0 tmpf908
    CP_EQF 0.0 F.0 flag908
    SELECTF flag908 0.0 tmpf908 VLV_SIGNOD_103

    MATH ABS VLV_ENCDIFFA_103 F.8
    MATH ABS VLV_ENCDIFFD_103 F.9
    DATA8 flag911
	CP_GTF F.8 F.9 flag911
	SELECTF flag911 F.8 F.9 F.7
    MATH ABS F.7 F.6
    DATAF tmpf913
    DATA8 flag913
    DIVF F.6 100.0 tmpf913
    CP_EQF 0.0 100.0 flag913
    SELECTF flag913 0.0 tmpf913 F.5

    DATAF tmpf914
    DATA8 flag914
    DIVF VLV_V_103 20.0 tmpf914
    CP_EQF 0.0 20.0 flag914
    SELECTF flag914 0.0 tmpf914 F.6

    DATAF tmpf915
    DATA8 flag915
    DIVF F.5 F.6 tmpf915
    CP_EQF 0.0 F.6 flag915
    SELECTF flag915 0.0 tmpf915 F.4

    MULF F.4 650.0 F.3
    MULF F.3 2.0 F.2
    MULF F.2 2.0 F.1
    DATAF tmpf919
    DATA8 flag919
    DIVF F.1 3.0 tmpf919
    CP_EQF 0.0 3.0 flag919
    SELECTF flag919 0.0 tmpf919 F.0

    DATA8 flag920
	CP_GTF F.0 400.0 flag920
	SELECTF flag920 F.0 400.0 VLV_SAFETYTIMER_103
    TIMER_READ timeMC3
  while922:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENCA_103 or923
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENCD_103 endwhile922
  or923:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_103 endwhile922
  whilebody922:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_GTEQF F.0 VLV_AENCA_103 else927_1
    DATAF tmpf929
    DATA8 flag929
    DIVF VLV_V_103 2.0 tmpf929
    CP_EQF 0.0 2.0 flag929
    SELECTF flag929 0.0 tmpf929 F.2

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.5
    SUBF VLV_AENCA_103 F.5 F.4
    DATAF tmpf932
    DATA8 flag932
    DIVF F.4 10.0 tmpf932
    CP_EQF 0.0 10.0 flag932
    SELECTF flag932 0.0 tmpf932 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag934
	CP_LTF VLV_V_103 F.1 flag934
	SELECTF flag934 VLV_V_103 F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif927
  else927_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_LTEQF F.0 VLV_AENCA_103 else927_2
    DATAF tmpf937
    DATA8 flag937
    DIVF VLV_V_103 2.0 tmpf937
    CP_EQF 0.0 2.0 flag937
    SELECTF flag937 0.0 tmpf937 F.3

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.6
    SUBF F.6 VLV_AENCA_103 F.5
    DATAF tmpf940
    DATA8 flag940
    DIVF F.5 10.0 tmpf940
    CP_EQF 0.0 10.0 flag940
    SELECTF flag940 0.0 tmpf940 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag942
	CP_LTF VLV_V_103 F.2 flag942
	SELECTF flag942 VLV_V_103 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif927
  else927_2:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else927_3:
  endif927:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_GTEQF F.0 VLV_AENCD_103 else946_1
    DATAF tmpf948
    DATA8 flag948
    DIVF VLV_V_103 2.0 tmpf948
    CP_EQF 0.0 2.0 flag948
    SELECTF flag948 0.0 tmpf948 F.2

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.5
    SUBF VLV_AENCD_103 F.5 F.4
    DATAF tmpf951
    DATA8 flag951
    DIVF F.4 10.0 tmpf951
    CP_EQF 0.0 10.0 flag951
    SELECTF flag951 0.0 tmpf951 F.3

    ADDF F.2 F.3 F.1
    DATA8 flag953
	CP_LTF VLV_V_103 F.1 flag953
	SELECTF flag953 VLV_V_103 F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif946
  else946_1:
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_LTEQF F.0 VLV_AENCD_103 else946_2
    DATAF tmpf956
    DATA8 flag956
    DIVF VLV_V_103 2.0 tmpf956
    CP_EQF 0.0 2.0 flag956
    SELECTF flag956 0.0 tmpf956 F.3

    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.6
    SUBF F.6 VLV_AENCD_103 F.5
    DATAF tmpf959
    DATA8 flag959
    DIVF F.5 10.0 tmpf959
    CP_EQF 0.0 10.0 flag959
    SELECTF flag959 0.0 tmpf959 F.4

    ADDF F.3 F.4 F.2
    DATA8 flag961
	CP_LTF VLV_V_103 F.2 flag961
	SELECTF flag961 VLV_V_103 F.2 F.1
    MATH NEGATE F.1 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif946
  else946_2:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else946_3:
  endif946:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    JR_NEQF F.0 VLV_AENCA_103 or966
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    JR_EQF F.0 VLV_AENCD_103 and965
  or966:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_103 whilebody922
  and965:
  endwhile922:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEAD0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEAD0_1:
SUB_F_BMOVEADSAFE_2:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_106 F.0 VLV_DIFFA_106
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_106 F.0 VLV_DIFFD_106
    MATH ABS VLV_DIFFA_106 F.5
    MATH ABS VLV_DIFFD_106 F.6
    DATA8 flag977
	CP_GTF F.5 F.6 flag977
	SELECTF flag977 F.5 F.6 F.4
    DATAF tmpf978
    DATA8 flag978
    DIVF F.4 100.0 tmpf978
    CP_EQF 0.0 100.0 flag978
    SELECTF flag978 0.0 tmpf978 F.3

    DATAF tmpf979
    DATA8 flag979
    DIVF VLV_V_106 20.0 tmpf979
    CP_EQF 0.0 20.0 flag979
    SELECTF flag979 0.0 tmpf979 F.4

    DATAF tmpf980
    DATA8 flag980
    DIVF F.3 F.4 tmpf980
    CP_EQF 0.0 F.4 flag980
    SELECTF flag980 0.0 tmpf980 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag983
	CP_GTF F.0 400.0 flag983
	SELECTF flag983 F.0 400.0 VLV_SAFETYTIMER_106
    MATH ABS VLV_DIFFA_106 F.0
    DATAF tmpf985
    DATA8 flag985
    DIVF VLV_DIFFA_106 F.0 tmpf985
    CP_EQF 0.0 F.0 flag985
    SELECTF flag985 0.0 tmpf985 VLV_SIGNOA_106

    MATH ABS VLV_DIFFD_106 F.0
    DATAF tmpf987
    DATA8 flag987
    DIVF VLV_DIFFD_106 F.0 tmpf987
    CP_EQF 0.0 F.0 flag987
    SELECTF flag987 0.0 tmpf987 VLV_SIGNOD_106

    MULF VLV_V_106 VLV_SIGNOA_106 VLV_VELA_106
    MULF VLV_V_106 VLV_SIGNOD_106 VLV_VELD_106
    CALL MOTOR.SCHEDULESYNC 'AD' VLV_VELA_106 VLV_VELD_106 5.0 'False'

	DATA8 layer990
	DATA8 nos990
	DATA8 busy990
	CALL MOTORDECODEPORTSDESCRIPTOR 'AD' layer990 nos990
	JR_EQ8 0 nos990 motornotbusy990
  motorwaiting990:
	OUTPUT_TEST layer990 nos990 busy990
	JR_EQ8 busy990 0 motornotbusy990
	SLEEP
	JR motorwaiting990
  motornotbusy990:
    CALL LCD.CLEAR
    TIMER_READ timeMC3
  while993:
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 or994
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_EQF F.0 0.0 endwhile993
  or994:
  whilebody993:
    MULF VLV_DIFFA_106 VLV_SIGNOA_106 F.0
    JR_LTEQF F.0 0.0 else997_1
    MOVEF_8 VLV_VELA_106 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    JR endif997
  else997_1:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
  else997_2:
  endif997:
    MULF VLV_DIFFD_106 VLV_SIGNOD_106 F.0
    JR_LTEQF F.0 0.0 else1001_1
    MOVEF_8 VLV_VELD_106 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    JR endif1001
  else1001_1:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
  else1001_2:
  endif1001:
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTEQF F.0 VLV_SAFETYTIMER_106 else1005_1
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
  else1005_1:
  endif1005:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    SUBF VLV_GRADOS_106 F.0 VLV_DIFFA_106
    OUTPUT_GET_COUNT 0 3 getTachoD
	MOVE32_F getTachoD F.0
    SUBF VLV_GRADOS_106 F.0 VLV_DIFFD_106
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_106 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    OUTPUT_READ 0 0 getSpeedA tmpTachoA
	MOVE8_F getSpeedA F.0
    JR_NEQF F.0 0.0 whilebody993
    OUTPUT_READ 0 3 getSpeedD tmpTachoD
	MOVE8_F getSpeedD F.0
    JR_NEQF F.0 0.0 whilebody993
  endwhile993:
    OUTPUT_POWER 0 9 0
	OUTPUT_STOP 0 9 1
RETSUB_F_BMOVEADSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEADSAFE_2:
SUB_F_BMOVED_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_107 F.0 VLV_ENCDIFF_107
    MATH ABS VLV_ENCDIFF_107 F.0
    DATAF tmpf1022
    DATA8 flag1022
    DIVF VLV_ENCDIFF_107 F.0 tmpf1022
    CP_EQF 0.0 F.0 flag1022
    SELECTF flag1022 0.0 tmpf1022 VLV_SIGNO_107

    JR_EQF VLV_ENCDIFF_107 0.0 else1023_1
    MULF VLV_SIGNO_107 VLV_V_107 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
  while1026:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 10.0 endwhile1026
  whilebody1026:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_107 F.1
    MATH ABS F.1 F.0
    JR_GTF F.0 10.0 whilebody1026
  endwhile1026:
    CALL MOTOR.STOP 'D' 'True'
  else1023_1:
  endif1023:
RETSUB_F_BMOVED_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED_2:
SUB_F_BMOVED0_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 else1034_1
  while1036:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTEQF F.0 -10.0 endwhile1036
  whilebody1036:
    MATH NEGATE VLV_V_108 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTF F.0 -10.0 whilebody1036
  endwhile1036:
    CALL MOTOR.STOP 'D' 'True'
    JR endif1034
  else1034_1:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 else1034_2
  while1043:
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_GTEQF F.0 -10.0 endwhile1043
  whilebody1043:
    MOVEF_8 VLV_V_108 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL MOTOR.GETCOUNT 'D' F.0
    JR_LTF F.0 -10.0 whilebody1043
  endwhile1043:
    CALL MOTOR.STOP 'D' 'True'
    JR endif1034
  else1034_2:
    CALL MOTOR.STOP 'D' 'True'
  else1034_3:
  endif1034:
RETSUB_F_BMOVED0_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVED0_1:
SUB_F_BMOVEDTIMER_2:
    TIMER_READ timeMC1
  while1050:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 VLV_T_110 endwhile1050
  whilebody1050:
    MOVEF_8 VLV_V_110 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 VLV_T_110 whilebody1050
  endwhile1050:
    OUTPUT_POWER 0 8 0
	OUTPUT_STOP 0 8 1
RETSUB_F_BMOVEDTIMER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDTIMER_2:
SUB_F_BMOVEDSAFE_2:
    CALL MOTOR.GETCOUNT 'D' F.0
    SUBF VLV_AENC_111 F.0 VLV_ENCDIFF_111
    MATH ABS VLV_ENCDIFF_111 F.0
    DATAF tmpf1058
    DATA8 flag1058
    DIVF VLV_ENCDIFF_111 F.0 tmpf1058
    CP_EQF 0.0 F.0 flag1058
    SELECTF flag1058 0.0 tmpf1058 VLV_SIGNO_111

    MATH ABS VLV_ENCDIFF_111 F.4
    DATAF tmpf1060
    DATA8 flag1060
    DIVF F.4 100.0 tmpf1060
    CP_EQF 0.0 100.0 flag1060
    SELECTF flag1060 0.0 tmpf1060 F.3

    DATAF tmpf1061
    DATA8 flag1061
    DIVF VLV_V_111 20.0 tmpf1061
    CP_EQF 0.0 20.0 flag1061
    SELECTF flag1061 0.0 tmpf1061 F.4

    DATAF tmpf1062
    DATA8 flag1062
    DIVF F.3 F.4 tmpf1062
    CP_EQF 0.0 F.4 flag1062
    SELECTF flag1062 0.0 tmpf1062 F.2

    MULF F.2 650.0 F.1
    MULF F.1 2.0 F.0
    DATA8 flag1065
	CP_GTF F.0 400.0 flag1065
	SELECTF flag1065 F.0 400.0 VLV_SAFETYTIMER_111
    TIMER_READ timeMC3
    JR_EQF VLV_ENCDIFF_111 0.0 else1067_1
  while1068:
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 endwhile1068
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_GTEQF F.0 VLV_SAFETYTIMER_111 endwhile1068
  whilebody1068:
    MULF VLV_SIGNO_111 VLV_V_111 F.0
    MOVEF_8 F.0 setSpeedD
	OUTPUT_SPEED 0 8 setSpeedD
	OUTPUT_START 0 8
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_SAFETYTIMER_111 '%g' 99 S.1
    CALL TEXT.APPEND 'SafetyTimer: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    CALL MOTOR.GETCOUNT 'D' F.2
    SUBF F.2 VLV_AENC_111 F.1
    MATH ABS F.1 F.0
    JR_LTEQF F.0 5.0 and1079
    TIMER_READ timeMC3tmp
	SUB32 timeMC3tmp timeMC3 timeMC3tmp
	MOVE32_F timeMC3tmp F.0
    JR_LTF F.0 VLV_SAFETYTIMER_111 whilebody1068
  and1079:
  endwhile1068:
    CALL MOTOR.STOP 'D' 'True'
  else1067_1:
  endif1067:
RETSUB_F_BMOVEDSAFE_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BMOVEDSAFE_2:
SUB_F_RGBDETECT1_2:
    DATA8 layer1085
	DATA8 no1085
	DATA8 mode81085
	
	MOVEF_8 1.0 no1085
	SUB8 no1085 1 no1085
	DIV8 no1085 4 layer1085
	MATH MOD8 no1085 4 no1085

	MOVEF_8 4.0 mode81085
	
	INPUT_DEVICE READY_RAW layer1085 no1085 0 mode81085 0
    MOVEF_F 15.0 VLV_RED_112
    MOVEF_F 60.0 VLV_YELLOW_112
    MOVEF_F 170.0 VLV_GREEN_112
    MOVEF_F 330.0 VLV_BLUE_112
    MOVEF_F 10.0 VLV_VALUENEGRO_112
    MOVEF_F 100.0 VLV_VALUEBLANCO_112
    MOVEF_F 147.0 VLV_RWHITE_112
    MOVEF_F 143.0 VLV_GWHITE_112
    MOVEF_F 160.0 VLV_BWHITE_112
    MOVEF_F 0.0 VLV_HUE_112
    MOVEF_F 0.0 VLV_SAT_112
    MOVEF_F 0.0 VLV_VALUE_112
    MOVEF_F 0.0 VLV_COLOR_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_112
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_112
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_112
  for1091:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1091
  forbody1091:
    CALL SENSOR.READRAW 1.0 3.0 VLV_RGB_112
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_112 VLV_RGB_112
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_112 VLV_RGB_112
    DATAF tmpf1096
    DATA8 flag1096
    DIVF VLV_RRAW_112 VLV_RWHITE_112 tmpf1096
    CP_EQF 0.0 VLV_RWHITE_112 flag1096
    SELECTF flag1096 0.0 tmpf1096 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    DATAF tmpf1100
    DATA8 flag1100
    DIVF VLV_GRAW_112 VLV_GWHITE_112 tmpf1100
    CP_EQF 0.0 VLV_GWHITE_112 flag1100
    SELECTF flag1100 0.0 tmpf1100 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    DATAF tmpf1104
    DATA8 flag1104
    DIVF VLV_BRAW_112 VLV_BWHITE_112 tmpf1104
    CP_EQF 0.0 VLV_BWHITE_112 flag1104
    SELECTF flag1104 0.0 tmpf1104 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_RNORMA_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.3 VLV_GNORMA_112
    DATA8 flag1110
	CP_GTF F.2 F.3 flag1110
	SELECTF flag1110 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_112 F.2 VLV_BNORMA_112
    DATA8 flag1112
	CP_GTF F.1 F.2 flag1112
	SELECTF flag1112 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    DATA32 milliseconds1114
	MOVEF_32 5.0 milliseconds1114
	DATA32 timer1114
	TIMER_WAIT milliseconds1114 timer1114
	TIMER_READY timer1114
    ADDF VLV_J_112 1.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1091
  endfor1091:
    MOVEF_F 1.0 VLV_J_112
  for1116:
    JR_GTF VLV_J_112 VLV_REPS_112 endfor1116
  forbody1116:
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_RNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_112
    ADDF F.0 F.1 VLV_RNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_GNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_112
    ADDF F.0 F.1 VLV_GNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_BNORMA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_112
    ADDF F.0 F.1 VLV_BNORM_112
    CALL ARRAYGET_FLOAT VLV_J_112 F.0 VLV_MAXA_112
    ADDF VLV_J_112 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_112
    ADDF F.0 F.1 VLV_MAX_112
    ADDF VLV_J_112 2.0 VLV_J_112
    JR_LTEQF VLV_J_112 VLV_REPS_112 forbody1116
  endfor1116:
    DATAF tmpf1134
    DATA8 flag1134
    DIVF VLV_RNORM_112 VLV_REPS_112 tmpf1134
    CP_EQF 0.0 VLV_REPS_112 flag1134
    SELECTF flag1134 0.0 tmpf1134 VLV_RNORM_112

    DATAF tmpf1135
    DATA8 flag1135
    DIVF VLV_GNORM_112 VLV_REPS_112 tmpf1135
    CP_EQF 0.0 VLV_REPS_112 flag1135
    SELECTF flag1135 0.0 tmpf1135 VLV_GNORM_112

    DATAF tmpf1136
    DATA8 flag1136
    DIVF VLV_BNORM_112 VLV_REPS_112 tmpf1136
    CP_EQF 0.0 VLV_REPS_112 flag1136
    SELECTF flag1136 0.0 tmpf1136 VLV_BNORM_112

    DATAF tmpf1137
    DATA8 flag1137
    DIVF VLV_MAX_112 VLV_REPS_112 tmpf1137
    CP_EQF 0.0 VLV_REPS_112 flag1137
    SELECTF flag1137 0.0 tmpf1137 VLV_MAX_112

    DATA8 flag1138
	CP_LTF VLV_RNORM_112 VLV_GNORM_112 flag1138
	SELECTF flag1138 VLV_RNORM_112 VLV_GNORM_112 F.0
    DATA8 flag1139
	CP_LTF F.0 VLV_BNORM_112 flag1139
	SELECTF flag1139 F.0 VLV_BNORM_112 VLV_MIN_112
    JR_NEQF VLV_MAX_112 VLV_MIN_112 else1140_1
    MOVEF_F 0.0 VLV_HUE_112
    JR endif1140
  else1140_1:
    JR_NEQF VLV_MAX_112 VLV_RNORM_112 else1140_2
    JR_LTF VLV_GNORM_112 VLV_BNORM_112 else1141_1
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_112 VLV_MIN_112 F.1
    DATAF tmpf1145
    DATA8 flag1145
    DIVF F.0 F.1 tmpf1145
    CP_EQF 0.0 F.1 flag1145
    SELECTF flag1145 0.0 tmpf1145 VLV_HUE_112

    JR endif1141
  else1141_1:
    SUBF VLV_GNORM_112 VLV_BNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1149
    DATA8 flag1149
    DIVF F.1 F.2 tmpf1149
    CP_EQF 0.0 F.2 flag1149
    SELECTF flag1149 0.0 tmpf1149 F.0

    ADDF F.0 360.0 VLV_HUE_112
  else1141_2:
  endif1141:
    JR endif1140
  else1140_2:
    JR_NEQF VLV_MAX_112 VLV_GNORM_112 else1140_3
    SUBF VLV_BNORM_112 VLV_RNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1154
    DATA8 flag1154
    DIVF F.1 F.2 tmpf1154
    CP_EQF 0.0 F.2 flag1154
    SELECTF flag1154 0.0 tmpf1154 F.0

    ADDF F.0 120.0 VLV_HUE_112
    JR endif1140
  else1140_3:
    SUBF VLV_RNORM_112 VLV_GNORM_112 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_112 VLV_MIN_112 F.2
    DATAF tmpf1159
    DATA8 flag1159
    DIVF F.1 F.2 tmpf1159
    CP_EQF 0.0 F.2 flag1159
    SELECTF flag1159 0.0 tmpf1159 F.0

    ADDF F.0 240.0 VLV_HUE_112
  else1140_4:
  endif1140:
    JR_NEQF VLV_MAX_112 0.0 else1161_1
    MOVEF_F 0.0 VLV_SAT_112
    JR endif1161
  else1161_1:
    DATAF tmpf1162
    DATA8 flag1162
    DIVF VLV_MIN_112 VLV_MAX_112 tmpf1162
    CP_EQF 0.0 VLV_MAX_112 flag1162
    SELECTF flag1162 0.0 tmpf1162 F.0

    SUBF 1.0 F.0 VLV_SAT_112
  else1161_2:
  endif1161:
    MOVEF_F VLV_MAX_112 VLV_VALUE_112
    ADDF VLV_VALUEBLANCO_112 VLV_VALUENEGRO_112 F.0
    DATAF tmpf1165
    DATA8 flag1165
    DIVF F.0 2.0 tmpf1165
    CP_EQF 0.0 2.0 flag1165
    SELECTF flag1165 0.0 tmpf1165 VLV_RGBGREY_112

    ADDF VLV_RNORM_112 VLV_GNORM_112 F.1
    ADDF F.1 VLV_BNORM_112 F.0
    JR_GTF F.0 3.0 else1166_1
    MOVEF_F 0.0 VLV_COLOR_112
    JR endif1166
  else1166_1:
    JR_GTEQF VLV_SAT_112 0.4 else1169_1
    JR_LTEQF VLV_VALUE_112 VLV_RGBGREY_112 else1170_1
    MOVEF_F 6.0 VLV_COLOR_112
    JR endif1170
  else1170_1:
    MOVEF_F 1.0 VLV_COLOR_112
  else1170_2:
  endif1170:
    JR endif1169
  else1169_1:
    JR_LTF VLV_HUE_112 0.0 else1171_1
    JR_GTEQF VLV_HUE_112 VLV_RED_112 else1171_1
    MOVEF_F 5.0 VLV_COLOR_112
    JR endif1171
  else1171_1:
    JR_LTF VLV_HUE_112 VLV_RED_112 else1171_2
    JR_GTEQF VLV_HUE_112 VLV_YELLOW_112 else1171_2
    MOVEF_F 4.0 VLV_COLOR_112
    JR endif1171
  else1171_2:
    JR_LTF VLV_HUE_112 VLV_YELLOW_112 else1171_3
    JR_GTEQF VLV_HUE_112 VLV_GREEN_112 else1171_3
    MOVEF_F 3.0 VLV_COLOR_112
    JR endif1171
  else1171_3:
    JR_LTF VLV_HUE_112 VLV_GREEN_112 else1171_4
    JR_GTEQF VLV_HUE_112 VLV_BLUE_112 else1171_4
    MOVEF_F 2.0 VLV_COLOR_112
    JR endif1171
  else1171_4:
    MOVEF_F 5.0 VLV_COLOR_112
  else1171_5:
  endif1171:
  else1169_2:
  endif1169:
  else1166_2:
  endif1166:
    STRINGS VALUE_FORMATTED VLV_RRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_112 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_112 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_112 VLV_COLOR_124
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1187:
RETSUB_F_RGBDETECT1_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT1_2:
SUB_F_RGBDETECT2_2:
    DATA8 layer1188
	DATA8 no1188
	DATA8 mode81188
	
	MOVEF_8 2.0 no1188
	SUB8 no1188 1 no1188
	DIV8 no1188 4 layer1188
	MATH MOD8 no1188 4 no1188

	MOVEF_8 4.0 mode81188
	
	INPUT_DEVICE READY_RAW layer1188 no1188 0 mode81188 0
    MOVEF_F 15.0 VLV_RED_113
    MOVEF_F 60.0 VLV_YELLOW_113
    MOVEF_F 170.0 VLV_GREEN_113
    MOVEF_F 330.0 VLV_BLUE_113
    MOVEF_F 10.0 VLV_VALUENEGRO_113
    MOVEF_F 100.0 VLV_VALUEBLANCO_113
    MOVEF_F 147.0 VLV_RWHITE_113
    MOVEF_F 143.0 VLV_GWHITE_113
    MOVEF_F 160.0 VLV_BWHITE_113
    MOVEF_F 0.0 VLV_HUE_113
    MOVEF_F 0.0 VLV_SAT_113
    MOVEF_F 0.0 VLV_VALUE_113
    MOVEF_F 0.0 VLV_COLOR_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_113
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_113
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_113
  for1194:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1194
  forbody1194:
    CALL SENSOR.READRAW 2.0 3.0 VLV_RGB_113
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_113 VLV_RGB_113
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_113 VLV_RGB_113
    DATAF tmpf1199
    DATA8 flag1199
    DIVF VLV_RRAW_113 VLV_RWHITE_113 tmpf1199
    CP_EQF 0.0 VLV_RWHITE_113 flag1199
    SELECTF flag1199 0.0 tmpf1199 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    DATAF tmpf1203
    DATA8 flag1203
    DIVF VLV_GRAW_113 VLV_GWHITE_113 tmpf1203
    CP_EQF 0.0 VLV_GWHITE_113 flag1203
    SELECTF flag1203 0.0 tmpf1203 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    DATAF tmpf1207
    DATA8 flag1207
    DIVF VLV_BRAW_113 VLV_BWHITE_113 tmpf1207
    CP_EQF 0.0 VLV_BWHITE_113 flag1207
    SELECTF flag1207 0.0 tmpf1207 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_RNORMA_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.3 VLV_GNORMA_113
    DATA8 flag1213
	CP_GTF F.2 F.3 flag1213
	SELECTF flag1213 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_113 F.2 VLV_BNORMA_113
    DATA8 flag1215
	CP_GTF F.1 F.2 flag1215
	SELECTF flag1215 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    DATA32 milliseconds1217
	MOVEF_32 5.0 milliseconds1217
	DATA32 timer1217
	TIMER_WAIT milliseconds1217 timer1217
	TIMER_READY timer1217
    ADDF VLV_J_113 1.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1194
  endfor1194:
    MOVEF_F 1.0 VLV_J_113
  for1219:
    JR_GTF VLV_J_113 VLV_REPS_113 endfor1219
  forbody1219:
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_RNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_113
    ADDF F.0 F.1 VLV_RNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_GNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_113
    ADDF F.0 F.1 VLV_GNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_BNORMA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_113
    ADDF F.0 F.1 VLV_BNORM_113
    CALL ARRAYGET_FLOAT VLV_J_113 F.0 VLV_MAXA_113
    ADDF VLV_J_113 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_113
    ADDF F.0 F.1 VLV_MAX_113
    ADDF VLV_J_113 2.0 VLV_J_113
    JR_LTEQF VLV_J_113 VLV_REPS_113 forbody1219
  endfor1219:
    DATAF tmpf1237
    DATA8 flag1237
    DIVF VLV_RNORM_113 VLV_REPS_113 tmpf1237
    CP_EQF 0.0 VLV_REPS_113 flag1237
    SELECTF flag1237 0.0 tmpf1237 VLV_RNORM_113

    DATAF tmpf1238
    DATA8 flag1238
    DIVF VLV_GNORM_113 VLV_REPS_113 tmpf1238
    CP_EQF 0.0 VLV_REPS_113 flag1238
    SELECTF flag1238 0.0 tmpf1238 VLV_GNORM_113

    DATAF tmpf1239
    DATA8 flag1239
    DIVF VLV_BNORM_113 VLV_REPS_113 tmpf1239
    CP_EQF 0.0 VLV_REPS_113 flag1239
    SELECTF flag1239 0.0 tmpf1239 VLV_BNORM_113

    DATAF tmpf1240
    DATA8 flag1240
    DIVF VLV_MAX_113 VLV_REPS_113 tmpf1240
    CP_EQF 0.0 VLV_REPS_113 flag1240
    SELECTF flag1240 0.0 tmpf1240 VLV_MAX_113

    DATA8 flag1241
	CP_LTF VLV_RNORM_113 VLV_GNORM_113 flag1241
	SELECTF flag1241 VLV_RNORM_113 VLV_GNORM_113 F.0
    DATA8 flag1242
	CP_LTF F.0 VLV_BNORM_113 flag1242
	SELECTF flag1242 F.0 VLV_BNORM_113 VLV_MIN_113
    JR_NEQF VLV_MAX_113 VLV_MIN_113 else1243_1
    MOVEF_F 0.0 VLV_HUE_113
    JR endif1243
  else1243_1:
    JR_NEQF VLV_MAX_113 VLV_RNORM_113 else1243_2
    JR_LTF VLV_GNORM_113 VLV_BNORM_113 else1244_1
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_113 VLV_MIN_113 F.1
    DATAF tmpf1248
    DATA8 flag1248
    DIVF F.0 F.1 tmpf1248
    CP_EQF 0.0 F.1 flag1248
    SELECTF flag1248 0.0 tmpf1248 VLV_HUE_113

    JR endif1244
  else1244_1:
    SUBF VLV_GNORM_113 VLV_BNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1252
    DATA8 flag1252
    DIVF F.1 F.2 tmpf1252
    CP_EQF 0.0 F.2 flag1252
    SELECTF flag1252 0.0 tmpf1252 F.0

    ADDF F.0 360.0 VLV_HUE_113
  else1244_2:
  endif1244:
    JR endif1243
  else1243_2:
    JR_NEQF VLV_MAX_113 VLV_GNORM_113 else1243_3
    SUBF VLV_BNORM_113 VLV_RNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1257
    DATA8 flag1257
    DIVF F.1 F.2 tmpf1257
    CP_EQF 0.0 F.2 flag1257
    SELECTF flag1257 0.0 tmpf1257 F.0

    ADDF F.0 120.0 VLV_HUE_113
    JR endif1243
  else1243_3:
    SUBF VLV_RNORM_113 VLV_GNORM_113 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_113 VLV_MIN_113 F.2
    DATAF tmpf1262
    DATA8 flag1262
    DIVF F.1 F.2 tmpf1262
    CP_EQF 0.0 F.2 flag1262
    SELECTF flag1262 0.0 tmpf1262 F.0

    ADDF F.0 240.0 VLV_HUE_113
  else1243_4:
  endif1243:
    JR_NEQF VLV_MAX_113 0.0 else1264_1
    MOVEF_F 0.0 VLV_SAT_113
    JR endif1264
  else1264_1:
    DATAF tmpf1265
    DATA8 flag1265
    DIVF VLV_MIN_113 VLV_MAX_113 tmpf1265
    CP_EQF 0.0 VLV_MAX_113 flag1265
    SELECTF flag1265 0.0 tmpf1265 F.0

    SUBF 1.0 F.0 VLV_SAT_113
  else1264_2:
  endif1264:
    MOVEF_F VLV_MAX_113 VLV_VALUE_113
    ADDF VLV_VALUEBLANCO_113 VLV_VALUENEGRO_113 F.0
    DATAF tmpf1268
    DATA8 flag1268
    DIVF F.0 2.0 tmpf1268
    CP_EQF 0.0 2.0 flag1268
    SELECTF flag1268 0.0 tmpf1268 VLV_RGBGREY_113

    ADDF VLV_RNORM_113 VLV_GNORM_113 F.1
    ADDF F.1 VLV_BNORM_113 F.0
    JR_GTF F.0 3.0 else1269_1
    MOVEF_F 0.0 VLV_COLOR_113
    JR endif1269
  else1269_1:
    JR_GTEQF VLV_SAT_113 0.4 else1272_1
    JR_LTEQF VLV_VALUE_113 VLV_RGBGREY_113 else1273_1
    MOVEF_F 6.0 VLV_COLOR_113
    JR endif1273
  else1273_1:
    MOVEF_F 1.0 VLV_COLOR_113
  else1273_2:
  endif1273:
    JR endif1272
  else1272_1:
    JR_LTF VLV_HUE_113 0.0 else1274_1
    JR_GTEQF VLV_HUE_113 VLV_RED_113 else1274_1
    MOVEF_F 5.0 VLV_COLOR_113
    JR endif1274
  else1274_1:
    JR_LTF VLV_HUE_113 VLV_RED_113 else1274_2
    JR_GTEQF VLV_HUE_113 VLV_YELLOW_113 else1274_2
    MOVEF_F 4.0 VLV_COLOR_113
    JR endif1274
  else1274_2:
    JR_LTF VLV_HUE_113 VLV_YELLOW_113 else1274_3
    JR_GTEQF VLV_HUE_113 VLV_GREEN_113 else1274_3
    MOVEF_F 3.0 VLV_COLOR_113
    JR endif1274
  else1274_3:
    JR_LTF VLV_HUE_113 VLV_GREEN_113 else1274_4
    JR_GTEQF VLV_HUE_113 VLV_BLUE_113 else1274_4
    MOVEF_F 2.0 VLV_COLOR_113
    JR endif1274
  else1274_4:
    MOVEF_F 5.0 VLV_COLOR_113
  else1274_5:
  endif1274:
  else1272_2:
  endif1272:
  else1269_2:
  endif1269:
    STRINGS VALUE_FORMATTED VLV_RRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_113 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_113 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_113 VLV_COLOR_124
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1290:
RETSUB_F_RGBDETECT2_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT2_2:
SUB_F_RGBDETECT3_2:
    DATA8 layer1291
	DATA8 no1291
	DATA8 mode81291
	
	MOVEF_8 3.0 no1291
	SUB8 no1291 1 no1291
	DIV8 no1291 4 layer1291
	MATH MOD8 no1291 4 no1291

	MOVEF_8 4.0 mode81291
	
	INPUT_DEVICE READY_RAW layer1291 no1291 0 mode81291 0
    MOVEF_F 15.0 VLV_RED_114
    MOVEF_F 60.0 VLV_YELLOW_114
    MOVEF_F 170.0 VLV_GREEN_114
    MOVEF_F 330.0 VLV_BLUE_114
    MOVEF_F 10.0 VLV_VALUENEGRO_114
    MOVEF_F 100.0 VLV_VALUEBLANCO_114
    MOVEF_F 147.0 VLV_RWHITE_114
    MOVEF_F 143.0 VLV_GWHITE_114
    MOVEF_F 160.0 VLV_BWHITE_114
    MOVEF_F 0.0 VLV_HUE_114
    MOVEF_F 0.0 VLV_SAT_114
    MOVEF_F 0.0 VLV_VALUE_114
    MOVEF_F 0.0 VLV_COLOR_114
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_114
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_114
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_114
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_114
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_114
  for1297:
    JR_GTF VLV_J_114 VLV_REPS_114 endfor1297
  forbody1297:
    CALL SENSOR.READRAW 3.0 3.0 VLV_RGB_114
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_114 VLV_RGB_114
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_114 VLV_RGB_114
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_114 VLV_RGB_114
    DATAF tmpf1302
    DATA8 flag1302
    DIVF VLV_RRAW_114 VLV_RWHITE_114 tmpf1302
    CP_EQF 0.0 VLV_RWHITE_114 flag1302
    SELECTF flag1302 0.0 tmpf1302 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_114 F.0 VLV_RNORMA_114
    DATAF tmpf1306
    DATA8 flag1306
    DIVF VLV_GRAW_114 VLV_GWHITE_114 tmpf1306
    CP_EQF 0.0 VLV_GWHITE_114 flag1306
    SELECTF flag1306 0.0 tmpf1306 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_114 F.0 VLV_GNORMA_114
    DATAF tmpf1310
    DATA8 flag1310
    DIVF VLV_BRAW_114 VLV_BWHITE_114 tmpf1310
    CP_EQF 0.0 VLV_BWHITE_114 flag1310
    SELECTF flag1310 0.0 tmpf1310 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_114 F.0 VLV_BNORMA_114
    CALL ARRAYGET_FLOAT VLV_J_114 F.2 VLV_RNORMA_114
    CALL ARRAYGET_FLOAT VLV_J_114 F.3 VLV_GNORMA_114
    DATA8 flag1316
	CP_GTF F.2 F.3 flag1316
	SELECTF flag1316 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_114 F.2 VLV_BNORMA_114
    DATA8 flag1318
	CP_GTF F.1 F.2 flag1318
	SELECTF flag1318 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_114 F.0 VLV_MAXA_114
    DATA32 milliseconds1320
	MOVEF_32 5.0 milliseconds1320
	DATA32 timer1320
	TIMER_WAIT milliseconds1320 timer1320
	TIMER_READY timer1320
    ADDF VLV_J_114 1.0 VLV_J_114
    JR_LTEQF VLV_J_114 VLV_REPS_114 forbody1297
  endfor1297:
    MOVEF_F 1.0 VLV_J_114
  for1322:
    JR_GTF VLV_J_114 VLV_REPS_114 endfor1322
  forbody1322:
    CALL ARRAYGET_FLOAT VLV_J_114 F.0 VLV_RNORMA_114
    ADDF VLV_J_114 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_114
    ADDF F.0 F.1 VLV_RNORM_114
    CALL ARRAYGET_FLOAT VLV_J_114 F.0 VLV_GNORMA_114
    ADDF VLV_J_114 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_114
    ADDF F.0 F.1 VLV_GNORM_114
    CALL ARRAYGET_FLOAT VLV_J_114 F.0 VLV_BNORMA_114
    ADDF VLV_J_114 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_114
    ADDF F.0 F.1 VLV_BNORM_114
    CALL ARRAYGET_FLOAT VLV_J_114 F.0 VLV_MAXA_114
    ADDF VLV_J_114 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_114
    ADDF F.0 F.1 VLV_MAX_114
    ADDF VLV_J_114 2.0 VLV_J_114
    JR_LTEQF VLV_J_114 VLV_REPS_114 forbody1322
  endfor1322:
    DATAF tmpf1340
    DATA8 flag1340
    DIVF VLV_RNORM_114 VLV_REPS_114 tmpf1340
    CP_EQF 0.0 VLV_REPS_114 flag1340
    SELECTF flag1340 0.0 tmpf1340 VLV_RNORM_114

    DATAF tmpf1341
    DATA8 flag1341
    DIVF VLV_GNORM_114 VLV_REPS_114 tmpf1341
    CP_EQF 0.0 VLV_REPS_114 flag1341
    SELECTF flag1341 0.0 tmpf1341 VLV_GNORM_114

    DATAF tmpf1342
    DATA8 flag1342
    DIVF VLV_BNORM_114 VLV_REPS_114 tmpf1342
    CP_EQF 0.0 VLV_REPS_114 flag1342
    SELECTF flag1342 0.0 tmpf1342 VLV_BNORM_114

    DATAF tmpf1343
    DATA8 flag1343
    DIVF VLV_MAX_114 VLV_REPS_114 tmpf1343
    CP_EQF 0.0 VLV_REPS_114 flag1343
    SELECTF flag1343 0.0 tmpf1343 VLV_MAX_114

    DATA8 flag1344
	CP_LTF VLV_RNORM_114 VLV_GNORM_114 flag1344
	SELECTF flag1344 VLV_RNORM_114 VLV_GNORM_114 F.0
    DATA8 flag1345
	CP_LTF F.0 VLV_BNORM_114 flag1345
	SELECTF flag1345 F.0 VLV_BNORM_114 VLV_MIN_114
    JR_NEQF VLV_MAX_114 VLV_MIN_114 else1346_1
    MOVEF_F 0.0 VLV_HUE_114
    JR endif1346
  else1346_1:
    JR_NEQF VLV_MAX_114 VLV_RNORM_114 else1346_2
    JR_LTF VLV_GNORM_114 VLV_BNORM_114 else1347_1
    SUBF VLV_GNORM_114 VLV_BNORM_114 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_114 VLV_MIN_114 F.1
    DATAF tmpf1351
    DATA8 flag1351
    DIVF F.0 F.1 tmpf1351
    CP_EQF 0.0 F.1 flag1351
    SELECTF flag1351 0.0 tmpf1351 VLV_HUE_114

    JR endif1347
  else1347_1:
    SUBF VLV_GNORM_114 VLV_BNORM_114 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_114 VLV_MIN_114 F.2
    DATAF tmpf1355
    DATA8 flag1355
    DIVF F.1 F.2 tmpf1355
    CP_EQF 0.0 F.2 flag1355
    SELECTF flag1355 0.0 tmpf1355 F.0

    ADDF F.0 360.0 VLV_HUE_114
  else1347_2:
  endif1347:
    JR endif1346
  else1346_2:
    JR_NEQF VLV_MAX_114 VLV_GNORM_114 else1346_3
    SUBF VLV_BNORM_114 VLV_RNORM_114 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_114 VLV_MIN_114 F.2
    DATAF tmpf1360
    DATA8 flag1360
    DIVF F.1 F.2 tmpf1360
    CP_EQF 0.0 F.2 flag1360
    SELECTF flag1360 0.0 tmpf1360 F.0

    ADDF F.0 120.0 VLV_HUE_114
    JR endif1346
  else1346_3:
    SUBF VLV_RNORM_114 VLV_GNORM_114 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_114 VLV_MIN_114 F.2
    DATAF tmpf1365
    DATA8 flag1365
    DIVF F.1 F.2 tmpf1365
    CP_EQF 0.0 F.2 flag1365
    SELECTF flag1365 0.0 tmpf1365 F.0

    ADDF F.0 240.0 VLV_HUE_114
  else1346_4:
  endif1346:
    JR_NEQF VLV_MAX_114 0.0 else1367_1
    MOVEF_F 0.0 VLV_SAT_114
    JR endif1367
  else1367_1:
    DATAF tmpf1368
    DATA8 flag1368
    DIVF VLV_MIN_114 VLV_MAX_114 tmpf1368
    CP_EQF 0.0 VLV_MAX_114 flag1368
    SELECTF flag1368 0.0 tmpf1368 F.0

    SUBF 1.0 F.0 VLV_SAT_114
  else1367_2:
  endif1367:
    MOVEF_F VLV_MAX_114 VLV_VALUE_114
    ADDF VLV_VALUEBLANCO_114 VLV_VALUENEGRO_114 F.0
    DATAF tmpf1371
    DATA8 flag1371
    DIVF F.0 2.0 tmpf1371
    CP_EQF 0.0 2.0 flag1371
    SELECTF flag1371 0.0 tmpf1371 VLV_RGBGREY_114

    ADDF VLV_RNORM_114 VLV_GNORM_114 F.1
    ADDF F.1 VLV_BNORM_114 F.0
    JR_GTF F.0 3.0 else1372_1
    MOVEF_F 0.0 VLV_COLOR_114
    JR endif1372
  else1372_1:
    JR_GTEQF VLV_SAT_114 0.4 else1375_1
    JR_LTEQF VLV_VALUE_114 VLV_RGBGREY_114 else1376_1
    MOVEF_F 6.0 VLV_COLOR_114
    JR endif1376
  else1376_1:
    MOVEF_F 1.0 VLV_COLOR_114
  else1376_2:
  endif1376:
    JR endif1375
  else1375_1:
    JR_LTF VLV_HUE_114 0.0 else1377_1
    JR_GTEQF VLV_HUE_114 VLV_RED_114 else1377_1
    MOVEF_F 5.0 VLV_COLOR_114
    JR endif1377
  else1377_1:
    JR_LTF VLV_HUE_114 VLV_RED_114 else1377_2
    JR_GTEQF VLV_HUE_114 VLV_YELLOW_114 else1377_2
    MOVEF_F 4.0 VLV_COLOR_114
    JR endif1377
  else1377_2:
    JR_LTF VLV_HUE_114 VLV_YELLOW_114 else1377_3
    JR_GTEQF VLV_HUE_114 VLV_GREEN_114 else1377_3
    MOVEF_F 3.0 VLV_COLOR_114
    JR endif1377
  else1377_3:
    JR_LTF VLV_HUE_114 VLV_GREEN_114 else1377_4
    JR_GTEQF VLV_HUE_114 VLV_BLUE_114 else1377_4
    MOVEF_F 2.0 VLV_COLOR_114
    JR endif1377
  else1377_4:
    MOVEF_F 5.0 VLV_COLOR_114
  else1377_5:
  endif1377:
  else1375_2:
  endif1375:
  else1372_2:
  endif1372:
    STRINGS VALUE_FORMATTED VLV_RRAW_114 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_114 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_114 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_114 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_114 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_114 VLV_COLOR_124
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1393:
RETSUB_F_RGBDETECT3_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT3_2:
SUB_F_RGBDETECT4_2:
    DATA8 layer1394
	DATA8 no1394
	DATA8 mode81394
	
	MOVEF_8 4.0 no1394
	SUB8 no1394 1 no1394
	DIV8 no1394 4 layer1394
	MATH MOD8 no1394 4 no1394

	MOVEF_8 4.0 mode81394
	
	INPUT_DEVICE READY_RAW layer1394 no1394 0 mode81394 0
    MOVEF_F 15.0 VLV_RED_115
    MOVEF_F 60.0 VLV_YELLOW_115
    MOVEF_F 170.0 VLV_GREEN_115
    MOVEF_F 330.0 VLV_BLUE_115
    MOVEF_F 10.0 VLV_VALUENEGRO_115
    MOVEF_F 100.0 VLV_VALUEBLANCO_115
    MOVEF_F 147.0 VLV_RWHITE_115
    MOVEF_F 143.0 VLV_GWHITE_115
    MOVEF_F 160.0 VLV_BWHITE_115
    MOVEF_F 0.0 VLV_HUE_115
    MOVEF_F 0.0 VLV_SAT_115
    MOVEF_F 0.0 VLV_VALUE_115
    MOVEF_F 0.0 VLV_COLOR_115
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_RNORMA_115
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_GNORMA_115
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_BNORMA_115
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VLV_MAXA_115
    CALL LCD.CLEAR
    MOVEF_F 1.0 VLV_J_115
  for1400:
    JR_GTF VLV_J_115 VLV_REPS_115 endfor1400
  forbody1400:
    CALL SENSOR.READRAW 4.0 3.0 VLV_RGB_115
    CALL ARRAYGET_FLOAT 0.0 VLV_RRAW_115 VLV_RGB_115
    CALL ARRAYGET_FLOAT 1.0 VLV_GRAW_115 VLV_RGB_115
    CALL ARRAYGET_FLOAT 2.0 VLV_BRAW_115 VLV_RGB_115
    DATAF tmpf1405
    DATA8 flag1405
    DIVF VLV_RRAW_115 VLV_RWHITE_115 tmpf1405
    CP_EQF 0.0 VLV_RWHITE_115 flag1405
    SELECTF flag1405 0.0 tmpf1405 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_115 F.0 VLV_RNORMA_115
    DATAF tmpf1409
    DATA8 flag1409
    DIVF VLV_GRAW_115 VLV_GWHITE_115 tmpf1409
    CP_EQF 0.0 VLV_GWHITE_115 flag1409
    SELECTF flag1409 0.0 tmpf1409 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_115 F.0 VLV_GNORMA_115
    DATAF tmpf1413
    DATA8 flag1413
    DIVF VLV_BRAW_115 VLV_BWHITE_115 tmpf1413
    CP_EQF 0.0 VLV_BWHITE_115 flag1413
    SELECTF flag1413 0.0 tmpf1413 F.2

    MULF F.2 255.0 F.1
    MATH ROUND F.1 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_115 F.0 VLV_BNORMA_115
    CALL ARRAYGET_FLOAT VLV_J_115 F.2 VLV_RNORMA_115
    CALL ARRAYGET_FLOAT VLV_J_115 F.3 VLV_GNORMA_115
    DATA8 flag1419
	CP_GTF F.2 F.3 flag1419
	SELECTF flag1419 F.2 F.3 F.1
    CALL ARRAYGET_FLOAT VLV_J_115 F.2 VLV_BNORMA_115
    DATA8 flag1421
	CP_GTF F.1 F.2 flag1421
	SELECTF flag1421 F.1 F.2 F.0
    CALL ARRAYSTORE_FLOAT VLV_J_115 F.0 VLV_MAXA_115
    DATA32 milliseconds1423
	MOVEF_32 5.0 milliseconds1423
	DATA32 timer1423
	TIMER_WAIT milliseconds1423 timer1423
	TIMER_READY timer1423
    ADDF VLV_J_115 1.0 VLV_J_115
    JR_LTEQF VLV_J_115 VLV_REPS_115 forbody1400
  endfor1400:
    MOVEF_F 1.0 VLV_J_115
  for1425:
    JR_GTF VLV_J_115 VLV_REPS_115 endfor1425
  forbody1425:
    CALL ARRAYGET_FLOAT VLV_J_115 F.0 VLV_RNORMA_115
    ADDF VLV_J_115 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_RNORMA_115
    ADDF F.0 F.1 VLV_RNORM_115
    CALL ARRAYGET_FLOAT VLV_J_115 F.0 VLV_GNORMA_115
    ADDF VLV_J_115 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_GNORMA_115
    ADDF F.0 F.1 VLV_GNORM_115
    CALL ARRAYGET_FLOAT VLV_J_115 F.0 VLV_BNORMA_115
    ADDF VLV_J_115 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_BNORMA_115
    ADDF F.0 F.1 VLV_BNORM_115
    CALL ARRAYGET_FLOAT VLV_J_115 F.0 VLV_MAXA_115
    ADDF VLV_J_115 1.0 F.2
    CALL ARRAYGET_FLOAT F.2 F.1 VLV_MAXA_115
    ADDF F.0 F.1 VLV_MAX_115
    ADDF VLV_J_115 2.0 VLV_J_115
    JR_LTEQF VLV_J_115 VLV_REPS_115 forbody1425
  endfor1425:
    DATAF tmpf1443
    DATA8 flag1443
    DIVF VLV_RNORM_115 VLV_REPS_115 tmpf1443
    CP_EQF 0.0 VLV_REPS_115 flag1443
    SELECTF flag1443 0.0 tmpf1443 VLV_RNORM_115

    DATAF tmpf1444
    DATA8 flag1444
    DIVF VLV_GNORM_115 VLV_REPS_115 tmpf1444
    CP_EQF 0.0 VLV_REPS_115 flag1444
    SELECTF flag1444 0.0 tmpf1444 VLV_GNORM_115

    DATAF tmpf1445
    DATA8 flag1445
    DIVF VLV_BNORM_115 VLV_REPS_115 tmpf1445
    CP_EQF 0.0 VLV_REPS_115 flag1445
    SELECTF flag1445 0.0 tmpf1445 VLV_BNORM_115

    DATAF tmpf1446
    DATA8 flag1446
    DIVF VLV_MAX_115 VLV_REPS_115 tmpf1446
    CP_EQF 0.0 VLV_REPS_115 flag1446
    SELECTF flag1446 0.0 tmpf1446 VLV_MAX_115

    DATA8 flag1447
	CP_LTF VLV_RNORM_115 VLV_GNORM_115 flag1447
	SELECTF flag1447 VLV_RNORM_115 VLV_GNORM_115 F.0
    DATA8 flag1448
	CP_LTF F.0 VLV_BNORM_115 flag1448
	SELECTF flag1448 F.0 VLV_BNORM_115 VLV_MIN_115
    JR_NEQF VLV_MAX_115 VLV_MIN_115 else1449_1
    MOVEF_F 0.0 VLV_HUE_115
    JR endif1449
  else1449_1:
    JR_NEQF VLV_MAX_115 VLV_RNORM_115 else1449_2
    JR_LTF VLV_GNORM_115 VLV_BNORM_115 else1450_1
    SUBF VLV_GNORM_115 VLV_BNORM_115 F.1
    MULF 60.0 F.1 F.0
    SUBF VLV_MAX_115 VLV_MIN_115 F.1
    DATAF tmpf1454
    DATA8 flag1454
    DIVF F.0 F.1 tmpf1454
    CP_EQF 0.0 F.1 flag1454
    SELECTF flag1454 0.0 tmpf1454 VLV_HUE_115

    JR endif1450
  else1450_1:
    SUBF VLV_GNORM_115 VLV_BNORM_115 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_115 VLV_MIN_115 F.2
    DATAF tmpf1458
    DATA8 flag1458
    DIVF F.1 F.2 tmpf1458
    CP_EQF 0.0 F.2 flag1458
    SELECTF flag1458 0.0 tmpf1458 F.0

    ADDF F.0 360.0 VLV_HUE_115
  else1450_2:
  endif1450:
    JR endif1449
  else1449_2:
    JR_NEQF VLV_MAX_115 VLV_GNORM_115 else1449_3
    SUBF VLV_BNORM_115 VLV_RNORM_115 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_115 VLV_MIN_115 F.2
    DATAF tmpf1463
    DATA8 flag1463
    DIVF F.1 F.2 tmpf1463
    CP_EQF 0.0 F.2 flag1463
    SELECTF flag1463 0.0 tmpf1463 F.0

    ADDF F.0 120.0 VLV_HUE_115
    JR endif1449
  else1449_3:
    SUBF VLV_RNORM_115 VLV_GNORM_115 F.2
    MULF 60.0 F.2 F.1
    SUBF VLV_MAX_115 VLV_MIN_115 F.2
    DATAF tmpf1468
    DATA8 flag1468
    DIVF F.1 F.2 tmpf1468
    CP_EQF 0.0 F.2 flag1468
    SELECTF flag1468 0.0 tmpf1468 F.0

    ADDF F.0 240.0 VLV_HUE_115
  else1449_4:
  endif1449:
    JR_NEQF VLV_MAX_115 0.0 else1470_1
    MOVEF_F 0.0 VLV_SAT_115
    JR endif1470
  else1470_1:
    DATAF tmpf1471
    DATA8 flag1471
    DIVF VLV_MIN_115 VLV_MAX_115 tmpf1471
    CP_EQF 0.0 VLV_MAX_115 flag1471
    SELECTF flag1471 0.0 tmpf1471 F.0

    SUBF 1.0 F.0 VLV_SAT_115
  else1470_2:
  endif1470:
    MOVEF_F VLV_MAX_115 VLV_VALUE_115
    ADDF VLV_VALUEBLANCO_115 VLV_VALUENEGRO_115 F.0
    DATAF tmpf1474
    DATA8 flag1474
    DIVF F.0 2.0 tmpf1474
    CP_EQF 0.0 2.0 flag1474
    SELECTF flag1474 0.0 tmpf1474 VLV_RGBGREY_115

    ADDF VLV_RNORM_115 VLV_GNORM_115 F.1
    ADDF F.1 VLV_BNORM_115 F.0
    JR_GTF F.0 3.0 else1475_1
    MOVEF_F 0.0 VLV_COLOR_115
    JR endif1475
  else1475_1:
    JR_GTEQF VLV_SAT_115 0.4 else1478_1
    JR_LTEQF VLV_VALUE_115 VLV_RGBGREY_115 else1479_1
    MOVEF_F 6.0 VLV_COLOR_115
    JR endif1479
  else1479_1:
    MOVEF_F 1.0 VLV_COLOR_115
  else1479_2:
  endif1479:
    JR endif1478
  else1478_1:
    JR_LTF VLV_HUE_115 0.0 else1480_1
    JR_GTEQF VLV_HUE_115 VLV_RED_115 else1480_1
    MOVEF_F 5.0 VLV_COLOR_115
    JR endif1480
  else1480_1:
    JR_LTF VLV_HUE_115 VLV_RED_115 else1480_2
    JR_GTEQF VLV_HUE_115 VLV_YELLOW_115 else1480_2
    MOVEF_F 4.0 VLV_COLOR_115
    JR endif1480
  else1480_2:
    JR_LTF VLV_HUE_115 VLV_YELLOW_115 else1480_3
    JR_GTEQF VLV_HUE_115 VLV_GREEN_115 else1480_3
    MOVEF_F 3.0 VLV_COLOR_115
    JR endif1480
  else1480_3:
    JR_LTF VLV_HUE_115 VLV_GREEN_115 else1480_4
    JR_GTEQF VLV_HUE_115 VLV_BLUE_115 else1480_4
    MOVEF_F 2.0 VLV_COLOR_115
    JR endif1480
  else1480_4:
    MOVEF_F 5.0 VLV_COLOR_115
  else1480_5:
  endif1480:
  else1478_2:
  endif1478:
  else1475_2:
  endif1475:
    STRINGS VALUE_FORMATTED VLV_RRAW_115 '%g' 99 S.1
    CALL TEXT.APPEND 'R: ' S.1 S.0
    CALL LCD.WRITE 33.0 20.0 S.0
    STRINGS VALUE_FORMATTED VLV_GRAW_115 '%g' 99 S.1
    CALL TEXT.APPEND 'G: ' S.1 S.0
    CALL LCD.WRITE 33.0 35.0 S.0
    STRINGS VALUE_FORMATTED VLV_BRAW_115 '%g' 99 S.1
    CALL TEXT.APPEND 'B: ' S.1 S.0
    CALL LCD.WRITE 33.0 50.0 S.0
    STRINGS VALUE_FORMATTED VLV_COLOR_115 '%g' 99 S.1
    CALL TEXT.APPEND 'Color: ' S.1 S.0
    CALL LCD.WRITE 33.0 70.0 S.0
    STRINGS VALUE_FORMATTED VLV_VALUE_115 '%g' 99 S.1
    CALL TEXT.APPEND 'Value: ' S.1 S.0
    CALL LCD.WRITE 33.0 90.0 S.0
    MOVEF_F VLV_COLOR_115 VLV_COLOR_124
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1496:
RETSUB_F_RGBDETECT4_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RGBDETECT4_2:
SUB_F_LEERCOLOR_1:
    JR_NEQF VLV_COLOR_124 0.0 else1497_1
    CALL SPEAKER.PLAY 100.0 'WRO2023/Zero'
    JR endif1497
  else1497_1:
    JR_NEQF VLV_COLOR_124 1.0 else1497_2
    CALL SPEAKER.PLAY 100.0 'WRO2023/Black'
    JR endif1497
  else1497_2:
    JR_NEQF VLV_COLOR_124 2.0 else1497_3
    CALL SPEAKER.PLAY 100.0 'WRO2023/Blue'
    JR endif1497
  else1497_3:
    JR_NEQF VLV_COLOR_124 3.0 else1497_4
    CALL SPEAKER.PLAY 100.0 'WRO2023/Green'
    JR endif1497
  else1497_4:
    JR_NEQF VLV_COLOR_124 4.0 else1497_5
    CALL SPEAKER.PLAY 100.0 'WRO2023/Yellow'
    JR endif1497
  else1497_5:
    JR_NEQF VLV_COLOR_124 5.0 else1497_6
    CALL SPEAKER.PLAY 100.0 'WRO2023/Red'
    JR endif1497
  else1497_6:
    JR_NEQF VLV_COLOR_124 6.0 else1497_7
    CALL SPEAKER.PLAY 100.0 'WRO2023/White'
    JR endif1497
  else1497_7:
    JR_NEQF VLV_COLOR_124 7.0 else1497_8
    CALL SPEAKER.PLAY 100.0 'WRO2023/Brown'
  else1497_8:
  endif1497:
RETSUB_F_LEERCOLOR_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LEERCOLOR_1:
SUB_F_COGER_ABAJO_0:
    MOVEF_F -30.0 VLV_VELOCIDAD_1
    MOVEF_F 5.0 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1506:
    MOVEF_F 40.0 VLV_V_107
    MOVEF_F -220.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1507:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -780.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1508:
    MOVEF_F -40.0 VLV_V_110
    MOVEF_F 350.0 VLV_T_110
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1509:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -300.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1510:
RETSUB_F_COGER_ABAJO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ABAJO_0:
SUB_F_COGER_ARRIBA_0:
    MOVEF_F -20.0 VLV_VELOCIDAD_1
    MOVEF_F 6.5 VLV_DISTANCIA_1
    WRITE32 ENDSUB_F_ENCODERRECTOMM_2:CALLSUB1511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ENCODERRECTOMM_2
CALLSUB1511:
    MOVEF_F 10.0 VLV_V_97
    MOVEF_F -670.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1512:
    MOVEF_F 20.0 VLV_V_107
    MOVEF_F -230.0 VLV_AENC_107
    WRITE32 ENDSUB_F_BMOVED_2:CALLSUB1513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVED_2
CALLSUB1513:
    MOVEF_F 10.0 VLV_V_97
    MOVEF_F -780.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1514:
    MOVEF_F 40.0 VLV_V_111
    MOVEF_F -250.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1515:
    MOVEF_F -40.0 VLV_V_110
    MOVEF_F 800.0 VLV_T_110
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1516:
    MOVEF_F 20.0 VLV_V_97
    MOVEF_F -400.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1517:
RETSUB_F_COGER_ARRIBA_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_COGER_ARRIBA_0:
SUB_F_SOLTAR_TODO_0:
    MOVEF_F 10.0 VLV_V_97
    MOVEF_F -750.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1518:
    MOVEF_F 40.0 VLV_V_111
    MOVEF_F -200.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1519:
    MOVEF_F 10.0 VLV_V_97
    MOVEF_F -500.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1520:
RETSUB_F_SOLTAR_TODO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_TODO_0:
SUB_F_SOLTAR_UNO_0:
    MOVEF_F 10.0 VLV_V_97
    MOVEF_F -760.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1521:
    MOVEF_F 40.0 VLV_V_111
    MOVEF_F -200.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1522:
    MOVEF_F 10.0 VLV_V_97
    MOVEF_F -660.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1523 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1523:
    MOVEF_F 40.0 VLV_V_111
    MOVEF_F -250.0 VLV_AENC_111
    WRITE32 ENDSUB_F_BMOVEDSAFE_2:CALLSUB1524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDSAFE_2
CALLSUB1524:
    MOVEF_F -40.0 VLV_V_110
    MOVEF_F 500.0 VLV_T_110
    WRITE32 ENDSUB_F_BMOVEDTIMER_2:CALLSUB1525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEDTIMER_2
CALLSUB1525:
    MOVEF_F 10.0 VLV_V_97
    MOVEF_F -500.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1526:
RETSUB_F_SOLTAR_UNO_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SOLTAR_UNO_0:
SUB_F_LECTURA_1:
    MOVEF_F 15.0 VLV_V_97
    MOVEF_F -690.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1527:
    MOVEF_F 5.0 VLV_REPS_113
    WRITE32 ENDSUB_F_RGBDETECT2_2:CALLSUB1528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RGBDETECT2_2
CALLSUB1528:
    MOVEF_F VLV_COLOR_113 VLV_READ_132
    MOVEF_F VLV_READ_132 VLV_COLOR_124
    WRITE32 ENDSUB_F_LEERCOLOR_1:CALLSUB1529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LEERCOLOR_1
CALLSUB1529:
    MOVEF_F 15.0 VLV_V_97
    MOVEF_F -200.0 VLV_AENC_97
    WRITE32 ENDSUB_F_BMOVEA_2:CALLSUB1530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BMOVEA_2
CALLSUB1530:
RETSUB_F_LECTURA_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LECTURA_1:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall BUTTONS.CURRENT    // S
{
	OUT_S result 8
	DATA8 ispressed
	
// BIG CASE TREE TO GET ALL POSSIBILITIES

	UI_BUTTON PRESSED 1 ispressed
	JR_NEQ8 ispressed 0 is_1____
is_X____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_X2___
is_XX___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_XX3__
is_XXX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XXX4_
is_XXXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXXX5
is_XXXXX:
	STRINGS DUPLICATE '' result
	RETURN
is_XXXX5:
	STRINGS DUPLICATE 'L' result
	RETURN
is_XXX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XXX45
is_XXX4X:
	STRINGS DUPLICATE 'R' result
	RETURN
is_XXX45:
	STRINGS DUPLICATE 'RL' result
	RETURN
is_XX3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_XX34_
is_XX3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX3X5
is_XX3XX:
	STRINGS DUPLICATE 'D' result
	RETURN
is_XX3X5:
	STRINGS DUPLICATE 'DL' result
	RETURN
is_XX34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_XX345
is_XX34X:
	STRINGS DUPLICATE 'DR' result
	RETURN
is_XX345:
	STRINGS DUPLICATE 'DRL' result
	RETURN
is_X2___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_X23__
is_X2X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X2X4_
is_X2XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2XX5
is_X2XXX:
	STRINGS DUPLICATE 'E' result
	RETURN
is_X2XX5:
	STRINGS DUPLICATE 'EL' result
	RETURN
is_X2X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2X45
is_X2X4X:
	STRINGS DUPLICATE 'ER' result
	RETURN
is_X2X45:
	STRINGS DUPLICATE 'ERL' result
	RETURN
is_X23__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_X234_
is_X23X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X23X5
is_X23XX:
	STRINGS DUPLICATE 'ED' result
	RETURN
is_X23X5:
	STRINGS DUPLICATE 'EDL' result
	RETURN
is_X234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_X2345
is_X234X:
	STRINGS DUPLICATE 'EDR' result
	RETURN
is_X2345:
	STRINGS DUPLICATE 'EDRL' result
	RETURN
is_1____:
	UI_BUTTON PRESSED 2 ispressed
	JR_NEQ8 ispressed 0 is_12___
is_1X___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_1X3__
is_1XX__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1XX4_
is_1XXX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XXX5
is_1XXXX:
	STRINGS DUPLICATE 'U' result
	RETURN
is_1XXX5:
	STRINGS DUPLICATE 'UL' result
	RETURN
is_1XX4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1XX45
is_1XX4X:
	STRINGS DUPLICATE 'UR' result
	RETURN
is_1XX45:
	STRINGS DUPLICATE 'URL' result
	RETURN
is_1X3__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1X34_
is_1X3X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X3X5
is_1X3XX:
	STRINGS DUPLICATE 'UD' result
	RETURN
is_1X3X5:
	STRINGS DUPLICATE 'UDL' result
	RETURN
is_1X34_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_1X345
is_1X34X:
	STRINGS DUPLICATE 'UDR' result
	RETURN
is_1X345:
	STRINGS DUPLICATE 'UDRL' result
	RETURN
is_12___:
	UI_BUTTON PRESSED 3 ispressed
	JR_NEQ8 ispressed 0 is_123__
is_12X__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_12X4_
is_12XX_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12XX5
is_12XXX:
	STRINGS DUPLICATE 'UE' result
	RETURN
is_12XX5:
	STRINGS DUPLICATE 'UEL' result
	RETURN
is_12X4_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12X45
is_12X4X:
	STRINGS DUPLICATE 'UER' result
	RETURN
is_12X45:
	STRINGS DUPLICATE 'UERL' result
	RETURN
is_123__:
	UI_BUTTON PRESSED 4 ispressed
	JR_NEQ8 ispressed 0 is_1234_
is_123X_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_123X5
is_123XX:
	STRINGS DUPLICATE 'UED' result
	RETURN
is_123X5:
	STRINGS DUPLICATE 'UEDL' result
	RETURN
is_1234_:
	UI_BUTTON PRESSED 5 ispressed
	JR_NEQ8 ispressed 0 is_12345
is_1234X:
	STRINGS DUPLICATE 'UEDR' result
	RETURN
is_12345:
	STRINGS DUPLICATE 'UEDRL' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
