Velocidad = 100

kp = 0.15
ki = 0.0003
kd = 2.5

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Diameter = 56

centro = 0

num_bloques = 0

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
include "includes\MRU_MotMed"

include "includes\Giro_MotMed"
include "includes\GirosPerfectos_MotMed"
include "includes\GirosUniversales_MotMed"

include "includes\Aceleracion_MotMed"
include "includes\Deceleracion_MotMed"

include "includes\Siguelineas_MotMed"
include "includes\Siguelineas_MotMed_Smart"

include "includes\Brazo"

include "includes\RGBRead"

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Setup()
Thread.Run = Display
Thread.Run = Stop
'StartArm()
'Program.End()
Main()

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub Setup
  Sensor.SetMode(1,0)
  Sensor.SetMode(2,4)
  Sensor.SetMode(3,0)
  Sensor.SetMode(4,0)
EndSub

Sub StartArm
  
  
  Time.Reset1()
  While Time.Get1() < 800
    MotorA.StartSpeed(85)
    MotorD.StartSpeed(-80)
  EndWhile
  MotorAD.OffAndBrake()

  Program.Delay(100)
  
  Thread.Run = ColocarD
  ColocarA()
  
  MotorA.ResetCount()
  MotorD.ResetCount()
  Program.Delay(100)
EndSub

Sub ColocarA
    Motor.Move("A",-50,350,"True")
EndSub

Sub ColocarD
    Motor.Move("D",90,550,"True")
EndSub

'Subs de control paralelo

Sub Display
  old_B = 0
  old_C = 0
  While "True"
    LCD.StopUpdate()
    LCD.Clear()
    
    LCD.Write(5,15,"Bloques: "+num_bloques)
    
    LCD.Write(5,35,"centro: "+centro)
    
    
    LCD.Write(5,45,"Velocidad de B:  "+MotorB.GetSpeed()*-1)
    LCD.Write(5,55,"Velocidad de C:  "+MotorC.GetSpeed())
    
    LCD.Write(5,65,"rad/s de B:  "+Math.GetRadians(MotorB.GetTacho()-old_B)/0.05*-1)
    LCD.Write(5,75,"rad/s de C:  "+Math.GetRadians(MotorC.GetTacho()-old_C)/0.05)
    
    LCD.Write(5,85,"Encoder de B:  "+MotorB.GetTacho()*-1)
    LCD.Write(5,95,"Encoder de C:  "+MotorC.GetTacho())
    
    LCD.Update()
    Program.Delay(50)
    old_B = MotorB.GetTacho()
    old_C = MotorC.GetTacho()
  EndWhile
EndSub

Sub Stop
  While "True"
    if Buttons.Current = "E" Then
      MotorBC.OffAndBrake()
      MotorAD.OffAndBrake()
      BMoveASafe(60,0)
      BMoveDSafe(60,0)
      Program.End()
    EndIf
  EndWhile
EndSub

'Subs a ejecutar

Sub Main
  
  StartArm()
  GUnivEncMMF(0,30,60)
  GUnivEncMM(30,0,60)
  SL14PIDEnc(25,kp,ki,kd,16.5)
  'Ataca al 1º rojo
  GUnivEncMM(20,-20,98)
  EncoderRectoMM(20,6)
  Coger()
  EncoderRectoMM(-20,6.5)
  GUnivEncMM(-20,20,94)
  'Ataca al 2º rojo
  SL14PIDEnc(25,kp*0.5,ki,kd,9.5)
  GUnivEncMM(20,-20,98)
  EncoderRectoMM(20,5.5) 'EMPUJA MUCHO AL AMARILLO, VER EN OTRAS RUNS
  Coger()
  BMoveA(Velocidad*0.4,-110)

  'Vuelve a linea tras los 2 rojos (Comprueba)
  EncoderRectoMM(-30,9)
  GUnivEncMM(-30,30,88)
  EncoderRectoMM(-30,22)
  MotorBC.OffAndBrake()
  Program.Delay(200)
  
  'Verificamos el lado
  SL14PIDEncF(60,kp,ki,kd,7)
  Time.Reset4()
  SL1SPIDCross(35,kp,ki,kd,3)
  EncoderRectoMM(30,2)
  Tiempohastalinea = Time.Get4()
  'Muestra pantalla
  LCD.Clear()
  LCD.Write(5,5,Tiempohastalinea)
  'Sube hacia los dos rojos
  GUnivEncMM(-30,30,95)
  SL14PIDEncF(40,kp*0.6,ki,kd,20)
  EncoderRectoMMF(40,15)
  SL14PID(30,kp*0.8,ki,kd)
  
  If Tiempohastalinea < 850 Then
    CasoPSOE()
    
  Else
    CasoVOX()
    
  EndIf
  
  'A por las basuras
  
  
  EncoderRectoMM(Velocidad*-0.3,9)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,93)
  'A POR LA MIERDA
  
  SL14PID(Velocidad*0.6,kp,ki,kd)
  Program.Delay(400)
  EncoderRectoMM(Velocidad*-0.3,15)
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,95)
  
  EncoderRectoMM(Velocidad*0.5,48)
  Program.Delay(250)
  
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,97)
  EncoderRectoMM(Velocidad*0.5,27)
  Program.Delay(250)
  
  BMoveA(50,200)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,186)
  EncoderRectoMM(Velocidad*0.5,50)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,95)
  
  1BlancoRectoMM(30,1)
  1NegroRectoMM(20,1)
  EncoderRectoMM(Velocidad*0.3,2)
  
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,80)
  Program.Delay(250)
  
  BMoveA(50,0)
  SL14PIDENC(Velocidad*0.3,kp,ki,kd,10)
  SL14PID(Velocidad*0.6,kp,ki,kd)
  Program.Delay(250)
  
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,95)
  EncoderRectoMM(Velocidad*0.3,6)
  
  BMoveA(50,200)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,180)
  BMoveA(50,0)
  
  EncoderRectoMM(Velocidad*0.7,45)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,94)
  
  EncoderRectoMM(Velocidad*0.8,50)
  EncoderRectoMM(Velocidad*-0.5,35)
  
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,125)
  TiempoRectoMM(Velocidad*-0.8,1200)
  
  FinPrueba()
EndSub

Sub MainPrueba
  
  StartArm()
  
  Soltar()
  
  EncoderRectoMM(Velocidad*-0.3,5.5)
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,94)
  SL31PIDEnc(Velocidad*0.5,kp,ki,kd,35)
  
  EncoderGiroMMF(Velocidad*0.35,Velocidad*0.3,25)
  EncoderGiroMM(Velocidad*0.3,Velocidad*0.35,25)
  
  BMoveA(50,210)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,94)
  BMoveA(50,0)
  
  GUnivEncMM(Velocidad*0.6,Velocidad*0.3,170)
  
  1BlancoRectoMM(30,1)
  1NegroRectoMM(20,1)
  EncoderRectoMM(Velocidad*0.3,2)
  
  BMoveA(50,210)
  
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,80)
  Program.Delay(250)
  
  BMoveA(50,0)
  SL14PIDENC(Velocidad*0.45,kp,ki,kd,25)
  SL14PID(Velocidad*0.6,kp*0.5,ki,kd)
  Program.Delay(250)
  
  EncoderRectoMM(Velocidad*-0.3,2)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,95)
  EncoderRectoMM(Velocidad*0.3,6.5)
  
  BMoveA(50,200)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,178)
  BMoveA(50,0)
  
  EncoderRectoMM(Velocidad*0.7,45)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,84)
  
  EncoderRectoMM(Velocidad*0.8,45)
  EncoderRectoMM(Velocidad*-0.5,35)
  
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,125)
  TiempoRectoMM(Velocidad*-0.8,1200)
  
  FinPrueba()
EndSub

Sub MainControlBrazo
  angle_A = 0
  angle_D = 0  
  
  While "True"
    If Buttons.Current = "U" Then
      MotorA.StartSpeed(30)
    ElseIf Buttons.Current = "D" Then
      MotorA.StartSpeed(-30)
    ElseIf Buttons.Current = "L" Then
      MotorD.StartSpeed(30)
    ElseIf Buttons.Current = "R" Then
      MotorD.StartSpeed(-30)
    Else
      MotorAD.OffAndBrake()
    EndIf
  EndWhile
EndSub

Sub MainControlRuedas
  vel_B = 92
  vel_C = 92
  
  While "True"
    If Buttons.Current = "U" Then
      vel_B -= 0.5
      Program.Delay(1)
    ElseIf Buttons.Current = "D" Then
      vel_B += 0.5
      Program.Delay(1)
    ElseIf Buttons.Current = "L" Then
      vel_C += 1
      Program.Delay(1)
    ElseIf Buttons.Current = "R" Then
      vel_C -= 1
      Program.Delay(1)
    EndIf
    Motor.StartSync("BC",-vel_B,-vel_C)
  EndWhile
EndSub


Sub CasoPSOE
  
  GUnivEncMM(20,-20,96)
  SL31PIDEnc(30,kp,ki,kd,26.5)
  'Ataca al 3º rojo
  GUnivEncMM(-20,20,98)
  EncoderRectoMM(30,7)
  Coger()
  
  
  'Ataca al 4º rojo
  EncoderRectoMM(-30,9)
  GUnivEncMM(-20,20,97)
  SL14PIDEnc(15,kp,ki,kd,9)
  GUnivEncMM(20,-20,96)
  EncoderRectoMM(20,6)
  Coger()
  EncoderRectoMM(-30,7)
  'Dejamos los rojos
  GUnivEncMM(-20,20,93)
  SL14PIDEncF(20,kp,ki,kd,5)
  SL1SPIDCrossF(30,kp,ki,kd,3)
  SL14PIDEnc(30,kp,ki,kd,22.5)
  
  'Levantamos bracete
  GUnivEncMM(Velocidad*-0.2,Velocidad*0.2,97)  
  EncoderRectoMM(Velocidad*0.3,13.5)
  Soltar()
  EncoderRectoMM(Velocidad*-0.3,6)
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,94)
  
  'Atacamos amarillos
  SL31PIDEncF(Velocidad*0.2,kp*1.25,ki,kd,5)
  SL1SPIDCrossF(Velocidad*0.3,kp,ki,kd,4)
  EncoderRectoMM(Velocidad*0.3,1)
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,92)
  EncoderRectoMM(Velocidad*0.3,7)
  Coger()
  
  EncoderRectoMM(-30,6.5)
  GUnivEncMM(30,-30,95)
  SL14PIDEnc(15,kp,ki,kd,11)
  GUnivEncMM(-30,30,96)
  EncoderRectoMM(30,5.5)
  Coger()
  EncoderRectoMM(-30,6)
  
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,92)
  SL14PIDEncF(Velocidad*0.3,kp,ki,kd,3)
  SL1SPIDCrossF(Velocidad*0.3,kp,ki,kd,3)
  EncoderRectoMM(Velocidad*0.3,2)
  
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,92)
  SL14PIDEnc(Velocidad*0.3,kp,ki,kd,20)
  EncoderRectoMM(Velocidad*0.3,15)
  SL14PID(Velocidad*0.3,kp,ki,kd)
  EncoderRectoMM(Velocidad*0.3,2)
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,93)
  SL14PIDEnc(Velocidad*0.3,kp,ki,kd,9)
  'Ataca al 3º amarillo
  GUnivEncMM(30,-30,95)
  EncoderRectoMM(30,4.5)
  Coger()
  'Ataca al 4º amarillo
  EncoderRectoMM(-30,9)
  GUnivEncMM(-20,20,94)
  SL14PIDEnc(30,kp,ki,kd,9)
  GUnivEncMM(20,-20,96)
  EncoderRectoMM(30,5)
  Coger()
  EncoderRectoMM(-30,9)
  GUnivEncMM(Velocidad*0.2,Velocidad*-0.2,93)
  SL1SPIDCross(Velocidad*0.3,kp,ki,kd,4)
  EncoderRectoMM(Velocidad*0.3,3)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,102)
  SL14PIDEnc(Velocidad*0.3,kp,ki,kd,10)
  Soltar()
  
EndSub

Sub CasoVOX
  
  'Ataca al 3º rojo
  EncoderRectoMM(Velocidad*0.3,8.5)
  Coger()
  'Ataca al 4º rojo
  EncoderRectoMM(-30,8)
  GUnivEncMM(30,-30,98)
  SL14PIDEnc(25,kp,ki,kd,7.5)
  GUnivEncMM(-20,20,100)
  EncoderRectoMM(20,6.5)
  Coger()
  
  GUnivEncMM(30,-30,98)
  EncoderRectoMM(30,9)
  
  
  GUnivEncMM(20,-20,105)
  EncoderRectoMM(30,14)
  1BlancoRectoMM(30,1)
  EncoderRectoMM(-30,4)
  Soltar()
  GUnivEncMM(20,-20,94)
  1BlancoRectoMMF(20,1)
  1NegroRectoMM(30,1)
  EncoderRectoMM(30,2.5)
  
  GUnivEncMM(-20,20,93)
  EncoderRectoMM(30,20)
  
  SL14PID(25,kp,ki*1.5,kd)
  
  'Ataca al primer amarillo
  EncoderRectoMM(Velocidad*0.3,9)
  Coger()
  EncoderRectoMM(Velocidad*-0.3,8)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,95)
  SL14PIDEnc(20,kp,ki,kd,9)
  Program.Delay(400)
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,94)
  
  'Ataca al segundo amarillo
  EncoderRectoMM(Velocidad*0.3,5)
  Coger()
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,90)
  EncoderRectoMM(Velocidad*-0.4,15)
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,90)
  TiempoRectoMM(Velocidad*-0.4,1000) 
  EncoderRectoMM(Velocidad*0.8,55)
  1BlancoRectoMM(Velocidad*0.3,1)
  1NegroRectoMM(Velocidad*0.2,1)
  'EncoderRectoMM(Velocidad*0.4,2)
  
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,105)
  
  SL31PIDEnc(Velocidad*0.3,kp,ki,kd,10)
  SL1SPIDCross(Velocidad*0.3,kp,ki,kd,4)
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,100)
  EncoderRectoMM(Velocidad*0.2,1)
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,100)
  
  SL14PIDEnc(30,kp*0.5,ki,kd,8)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,100)
  
  'Ataca al tercer amarillo
  EncoderRectoMM(Velocidad*0.3,4)
  Coger()
  
  EncoderRectoMM(Velocidad*-0.3,8)
  GUnivEncMM(Velocidad*-0.3,Velocidad*0.3,92)
  EncoderRectoMM(Velocidad*0.3,8)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,102)
  
  'Ataca al cuarto amarillo
  EncoderRectoMM(Velocidad*0.3,5)
  Coger()
  EncoderRectoMM(Velocidad*-0.3,9)
  Program.Delay(500)
  
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,100)
  SL31PIDEnc(Velocidad*0.3,kp,ki,kd,8)
  SL1SPIDCross(Velocidad*0.3,kp,ki,kd,4)
  
  EncoderRectoMM(Velocidad*0.3,3)
  GUnivEncMM(Velocidad*0.3,Velocidad*-0.3,96)
  
  SL14PIDEnc(Velocidad*0.3,kp,ki,kd,11)
  
  Soltar()
  
  'Cohete
  
  FinPrueba()
EndSub


Sub FinPrueba
  MotorBC.OffAndBrake()
  MotorAD.OffAndBrake()
  BMoveASafe(20,0)
  BMoveDSafe(20,0)
  Program.End()
EndSub

Function Coger()
  
  
  'Suelta bloques anteriores y Coge el bloque nuevo
  
  Program.Delay(150)
  BMoveA(60,50)

  BMoveD(40,0)
  
  @num_bloques += 1
  BMoveA(70,360)
  MotorAD.OffAndBrake()
  Program.Delay(200)
  BMoveDTimer(-60,500)
  BMoveA(60,-80)
  
EndFunction

Function Soltar()
  
  'EncoderRectoMM(-30,5)
  
  BMoveA(60,250)
  BMoveD(40,-70)
  
  @num_bloques = Math.Max(0, @num_bloques - 4)
  
  BMoveA(60,-660)
  EncoderRectoMM(-30,10)
  
  BMoveA(60,0)
  
EndFunction

Function Giro90Bloques(in number Vel_B, in number Vel_C)
  grados_90 = 82
  If @num_bloques < 3 Then
    
    GUnivEncMM(Vel_B,Vel_C,grados_90)
    
  Else 
    GUnivEncMM(Vel_B,Vel_C,grados_90+2)
    
  EndIf
  
EndFunction


Function Lectura(out number read)
  BmoveA(15,-690)
  RGBDetect2(5,read)
  LeerColor(read)
  BmoveA(15,-200)
EndFunction
