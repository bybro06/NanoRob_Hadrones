Function SL31PID(in number Velocidad, in number kp, in number ki, in number kd)
  'Siguelíneas 1-4 PID
  
  #Valores ideales:
  #KP = 0.18
  #KI = 0.00015
  #KD = 7
  
  Velocidad *= @Sentido_Motores
  
  I = "B"
  D = "C"
  error = 0
  olderror = 0
  errsum = 0
  u = 0
  sentido = Velocidad / Math.Abs(Velocidad)
  
  While Sensor.ReadPercent(3) > 15 Or Sensor.ReadPercent(1) > 15
    error = (Sensor.ReadPercent(3) - Sensor.ReadPercent(1))*sentido*@Sentido_Motores
    errsum += error
    u = error*kp + (error-olderror)*kd + errsum*ki
    Motor.StartSync(I+D, -(Velocidad+u), Velocidad-u)
    olderror = error
  EndWhile
  Motor.Stop(I+D, "True")
EndFunction

Function SL31PIDF(in number Velocidad, in number kp, in number ki, in number kd)
  'Siguelíneas 1-4 PID Sin Frenos
  
  #Valores ideales:
  #KP = 0.18
  #KI = 0.00015
  #KD = 7
  
  Velocidad *= @Sentido_Motores
  
  I = "B"
  D = "C"
  error = 0
  olderror = 0
  errsum = 0
  u = 0
  sentido = Velocidad / Math.Abs(Velocidad)
  
  While Sensor.ReadPercent(3) > 15 Or Sensor.ReadPercent(1) > 15
    error = (Sensor.ReadPercent(3) - Sensor.ReadPercent(1))*sentido*@Sentido_Motores
    errsum += error
    u = error*kp + (error-olderror)*kd + errsum*ki
    Motor.StartSync(I+D, -(Velocidad+u), Velocidad-u)
    olderror = error
  EndWhile
  Motor.Stop(I+D, "False")
EndFunction

'Siguelíneas hasta ambos blancos

Function SL31PIDHastaBlanco(in number Velocidad, in number kp, in number ki, in number kd)
  
  Velocidad *= @Sentido_Motores
  
  I = "B"
  D = "C"
  error = 0
  olderror = 0
  errsum = 0
  u = 0
  sentido = Velocidad / Math.Abs(Velocidad)
  
  While Sensor.ReadPercent(3) < 90 Or Sensor.ReadPercent(1) < 90
    error = (Sensor.ReadPercent(3) - Sensor.ReadPercent(1))*sentido*@Sentido_Motores
    errsum += error
    u = error*kp + (error-olderror)*kd + errsum*ki
    Motor.StartSync(I+D, -(Velocidad+u), Velocidad-u)
    olderror = error
  EndWhile
  Motor.Stop(I+D, "True")
EndFunction

Function SL31PIDHastaBlancoF(in number Velocidad, in number kp, in number ki, in number kd)
  'Siguelíneas 1-4 PID
  
  Velocidad *= @Sentido_Motores
  
  I = "B"
  D = "C"
  error = 0
  olderror = 0
  errsum = 0
  u = 0
  sentido = Velocidad / Math.Abs(Velocidad)
  
  While Sensor.ReadPercent(3) < 90 Or Sensor.ReadPercent(1) < 90
    error = (Sensor.ReadPercent(3) - Sensor.ReadPercent(1))*sentido*@Sentido_Motores
    errsum += error
    u = error*kp + (error-olderror)*kd + errsum*ki
    Motor.StartSync(I+D, -(Velocidad+u), Velocidad-u)
    olderror = error
  EndWhile
  Motor.Stop(I+D, "False")
EndFunction

'Siguelíneas por encoder

Function SL31PIDEnc(in number Velocidad, in number kp, in number ki, in number kd, in number Encoder)
  'Siguelíneas 1-4 PID
  
  Velocidad *= @Sentido_Motores
  
  I = "B"
  D = "C"
  error = 0
  olderror = 0
  errsum = 0
  u = 0
  sentido = Velocidad / Math.Abs(Velocidad)
  
  Encoder = Encoder / (5.6 * Math.Pi) * 360
  
  Start_C = Motor.GetCount("C")
  encoder_C = 0
  
  While Math.Abs(encoder_C) < Encoder
    
    encoder_C = Motor.GetCount("C") - Start_C
    
    error = (Sensor.ReadPercent(3) - Sensor.ReadPercent(1))*sentido*@Sentido_Motores
    errsum += error
    u = error*kp + (error-olderror)*kd + errsum*ki
    Motor.StartSync(I+D, -(Velocidad+u), Velocidad-u)
    olderror = error
  EndWhile
  Motor.Stop(I+D, "True")
EndFunction

Function SL31PIDEncF(in number Velocidad, in number kp, in number ki, in number kd, in number Encoder)
  'Siguelíneas 1-4 PID Sin Frenos
  
  Velocidad *= @Sentido_Motores
  
  I = "B"
  D = "C"
  error = 0
  olderror = 0
  errsum = 0
  u = 0
  sentido = Velocidad / Math.Abs(Velocidad)
  
  Encoder = Encoder / (5.6 * Math.Pi) * 360
  
  Start_C = Motor.GetCount("C")
  encoder_C = 0
  
  While Math.Abs(encoder_C) < Encoder
    
    encoder_C = Motor.GetCount("C") - Start_C
    
    error = (Sensor.ReadPercent(3) - Sensor.ReadPercent(1))*sentido*@Sentido_Motores
    errsum += error
    u = error*kp + (error-olderror)*kd + errsum*ki
    Motor.StartSync(I+D, -(Velocidad+u), Velocidad-u)
    olderror = error
  EndWhile
  Motor.Stop(I+D, "False")
EndFunction

'Siguelíneas hasta x cruces

Function SL31PIDCruces(in number Velocidad, in number kp, in number ki, in number kd, in number Cruces)
  
  SL14PIDF(Velocidad,kp,ki,kd)
  
  i=1
  
  While i < Cruces
    SL14PIDEncF(Velocidad,kp,ki,kd,4)
    SL14PIDF(Velocidad,kp,ki,kd)
    i ++
  EndWhile
  
  MotorBC.OffAndBrake()
  
EndFunction

Function SL31PIDCrucesF(in number Velocidad, in number kp, in number ki, in number kd, in number Cruces)
  
  SL14PIDF(Velocidad,kp,ki,kd)
  
  i=1
  
  While i < Cruces
    SL14PIDEncF(Velocidad,kp,ki,kd,4)
    SL14PIDF(Velocidad,kp,ki,kd)
    i ++
  EndWhile
  
  MotorBC.Off()
  
EndFunction
