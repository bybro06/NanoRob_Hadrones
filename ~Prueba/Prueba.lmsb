DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_VELOCIDAD1_1
DATAF VLV_VELOCIDAD2_1
DATAF VLV_ENCODER_1
DATAF VLV_KP_1
DATAF VLV_KI_1
DATAF VLV_KD_1
DATAF VLV_ERRSUM_1
DATAF VLV_OLDERROR_1
DATAF VLV_DISTANCIA_1
DATAF VLV_ENCODER_INICIO_1
DATAF VLV_ERROR_1
DATAF VLV_CORRECCION_1
DATAF VLV_POTENCIA1_1
DATAF VLV_POTENCIA2_1
DATA32 RUNCOUNTER_F_DISPLAY_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_VELOCIDAD1_1
    MOVEF_F 0.0 VLV_VELOCIDAD2_1
    MOVEF_F 0.0 VLV_ENCODER_1
    MOVEF_F 0.0 VLV_KP_1
    MOVEF_F 0.0 VLV_KI_1
    MOVEF_F 0.0 VLV_KD_1
    MOVEF_F 0.0 VLV_ERRSUM_1
    MOVEF_F 0.0 VLV_OLDERROR_1
    MOVEF_F 0.0 VLV_DISTANCIA_1
    MOVEF_F 0.0 VLV_ENCODER_INICIO_1
    MOVEF_F 0.0 VLV_ERROR_1
    MOVEF_F 0.0 VLV_CORRECCION_1
    MOVEF_F 0.0 VLV_POTENCIA1_1
    MOVEF_F 0.0 VLV_POTENCIA2_1
    MOVE32_32 0 RUNCOUNTER_F_DISPLAY_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_DISPLAY_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_DISPLAY_0 0
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 -1 RUNCOUNTER_F_DISPLAY_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_DISPLAY_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    DATAF F.5
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch80
    WRITE32 ENDSUB_F_DISPLAY_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DISPLAY_0
  dispatch80:
    MOVEF_F 0.0 VLV_VELOCIDAD1_1
    MOVEF_F 0.0 VLV_VELOCIDAD2_1
    MOVEF_F 0.0 VLV_ENCODER_1
    DATA32 tmp0
    CALL GETANDINC32 RUNCOUNTER_F_DISPLAY_0 1  RUNCOUNTER_F_DISPLAY_0 tmp0
    JR_NEQ32 0 tmp0 alreadylaunched0
    OBJECT_START TF_DISPLAY_0
  alreadylaunched0:
    MOVEF_F 20.0 VLV_VELOCIDAD1_1
    MOVEF_F 30.0 VLV_VELOCIDAD2_1
    MOVEF_F 30.0 VLV_ENCODER_1
    WRITE32 ENDSUB_M_GIRO_ENCODER_3:CALLSUB1 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_M_GIRO_ENCODER_3
CALLSUB1:
ENDTHREAD:
    RETURN
SUB_F_DISPLAY_0:
  while2:
  whilebody2:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 -1.0 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder B: ' S.1 S.0
    CALL LCD.WRITE 5.0 5.0 S.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Encoder C: ' S.1 S.0
    CALL LCD.WRITE 5.0 15.0 S.0
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.2
    MULF F.2 -1.0 F.1
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.2
    SUBF F.1 F.2 F.0
    STRINGS VALUE_FORMATTED F.0 '%g' 99 S.1
    CALL TEXT.APPEND 'Diferencia: ' S.1 S.0
    CALL LCD.WRITE 5.0 30.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    DATA32 milliseconds22
	MOVEF_32 100.0 milliseconds22
	DATA32 timer22
	TIMER_WAIT milliseconds22 timer22
	TIMER_READY timer22
    JR whilebody2
  endwhile2:
RETSUB_F_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DISPLAY_0:
SUB_M_GIRO_ENCODER_3:
    MULF VLV_VELOCIDAD1_1 1.0 VLV_VELOCIDAD1_1
    MULF VLV_VELOCIDAD2_1 1.0 VLV_VELOCIDAD2_1
    MOVEF_F 0.1 VLV_KP_1
    MOVEF_F 0.0001 VLV_KI_1
    MOVEF_F 0.1 VLV_KD_1
    MOVEF_F 0.0 VLV_ERRSUM_1
    MOVEF_F 0.0 VLV_OLDERROR_1
    MOVEF_F 3.1415926535897932384 F.2
    MULF 6.24 F.2 F.1
    DATAF tmpf27
    DATA8 flag27
    DIVF VLV_ENCODER_1 F.1 tmpf27
    CP_EQF 0.0 F.1 flag27
    SELECTF flag27 0.0 tmpf27 F.0

    MULF F.0 360.0 VLV_DISTANCIA_1
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.2
    MATH ABS F.2 F.1
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.3
    MATH ABS F.3 F.2
    ADDF F.1 F.2 F.0
    DATAF tmpf34
    DATA8 flag34
    DIVF F.0 2.0 tmpf34
    CP_EQF 0.0 2.0 flag34
    SELECTF flag34 0.0 tmpf34 VLV_ENCODER_INICIO_1

  while35:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    MATH ABS F.4 F.3
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.5
    MATH ABS F.5 F.4
    ADDF F.3 F.4 F.2
    DATAF tmpf41
    DATA8 flag41
    DIVF F.2 2.0 tmpf41
    CP_EQF 0.0 2.0 flag41
    SELECTF flag41 0.0 tmpf41 F.1

    SUBF F.1 VLV_ENCODER_INICIO_1 F.0
    JR_GTEQF F.0 VLV_DISTANCIA_1 endwhile35
  whilebody35:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MATH NEGATE VLV_VELOCIDAD1_1 F.2
    MULF F.1 F.2 F.0
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.2
    MULF F.2 VLV_VELOCIDAD2_1 F.1
    SUBF F.0 F.1 VLV_ERROR_1
    ADDF VLV_ERRSUM_1 VLV_ERROR_1 VLV_ERRSUM_1
    MULF VLV_ERROR_1 VLV_KP_1 F.1
    MULF VLV_ERRSUM_1 VLV_KI_1 F.2
    ADDF F.1 F.2 F.0
    SUBF VLV_ERROR_1 VLV_OLDERROR_1 F.2
    MULF F.2 VLV_KD_1 F.1
    ADDF F.0 F.1 VLV_CORRECCION_1
    ADDF VLV_VELOCIDAD1_1 1.0 F.3
    MATH ABS F.3 F.2
    MATH ABS VLV_VELOCIDAD1_1 F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_CORRECCION_1 F.0
    SUBF VLV_VELOCIDAD2_1 F.0 VLV_POTENCIA1_1
    MULF VLV_VELOCIDAD1_1 -1.0 F.0
    ADDF VLV_VELOCIDAD2_1 1.0 F.4
    MATH ABS F.4 F.3
    MATH ABS VLV_VELOCIDAD2_1 F.4
    SUBF F.3 F.4 F.2
    MULF F.2 VLV_CORRECCION_1 F.1
    ADDF F.0 F.1 VLV_POTENCIA2_1
    MATH NEGATE VLV_POTENCIA1_1 F.0
    MOVEF_8 F.0 setSpeedB
	OUTPUT_SPEED 0 2 setSpeedB
	OUTPUT_START 0 2
    MOVEF_8 VLV_POTENCIA2_1 setSpeedC
	OUTPUT_SPEED 0 4 setSpeedC
	OUTPUT_START 0 4
    MOVEF_F VLV_ERROR_1 VLV_OLDERROR_1
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.4
    MATH ABS F.4 F.3
    OUTPUT_GET_COUNT 0 2 getTachoC
	MOVE32_F getTachoC F.5
    MATH ABS F.5 F.4
    ADDF F.3 F.4 F.2
    DATAF tmpf77
    DATA8 flag77
    DIVF F.2 2.0 tmpf77
    CP_EQF 0.0 2.0 flag77
    SELECTF flag77 0.0 tmpf77 F.1

    SUBF F.1 VLV_ENCODER_INICIO_1 F.0
    JR_LTF F.0 VLV_DISTANCIA_1 whilebody35
  endwhile35:
    OUTPUT_POWER 0 6 0
	OUTPUT_STOP 0 6 1
RETSUB_M_GIRO_ENCODER_3:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_M_GIRO_ENCODER_3:
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall LCD.WRITE     // FFSV
{
	IN_F x
	IN_F y
	IN_S text 252
	
	DATA16 x_16
	DATA16 y_16
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	
	UI_DRAW SELECT_FONT 1
	UI_DRAW TEXT 1 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
