lv_velocidad_1 = 0
lv_encoder_1 = 0
lv_velocidada_2 = 0
lv_velocidadd_2 = 0
lv_timer_2 = 0
lv_velocidad_3 = 0
lv_encoder_3 = 0
lv_velocidad_5 = 0
lv_distancia_5 = 0
lv_velocidad_4 = 0
lv_timer_4 = 0
f_main_0 ()
Sub f_main_0
f_startarm_0 ()
f_coger_0 ()
f_coger_0 ()
f_coger_0 ()
f_coger_0 ()
f_coger_0 ()
Program.Delay ( 5000 )
lv_velocidad_1 = 50
lv_encoder_1 = 0
m_brazo_dencoder_2 ()
EndSub
Sub f_startarm_0
lv_velocidada_2 = 40
lv_velocidadd_2 = 0
lv_timer_2 = 800
m_brazo_adtimer_3 ()
MotorA.ResetCount ()
MotorD.ResetCount ()
lv_velocidad_3 = 30
lv_encoder_3 = - 110
m_brazo_aencoder_2 ()
MotorA.ResetCount ()
MotorD.ResetCount ()
lv_velocidad_3 = 30
lv_encoder_3 = - 130
m_brazo_aencoder_2 ()
EndSub
Sub f_coger_0
lv_velocidad_3 = 50
lv_encoder_3 = - 210
m_brazo_aencoder_2 ()
lv_velocidad_5 = 25
lv_distancia_5 = 6
m_recto_encoder_2 ()
lv_velocidad_3 = 30
lv_encoder_3 = - 60
m_brazo_aencoder_2 ()
Program.Delay ( 200 )
lv_velocidad_4 = 60
lv_timer_4 = 400
m_brazo_dtimer_2 ()
lv_velocidad_3 = 50
lv_encoder_3 = 90
m_brazo_aencoder_2 ()
lv_velocidad_1 = 60
lv_encoder_1 = - 80
m_brazo_dencoder_2 ()
lv_velocidad_3 = 50
lv_encoder_3 = - 130
m_brazo_aencoder_2 ()
EndSub
Sub m_brazo_dencoder_2
lv_encdiff_1 = lv_encoder_1 - Motor.GetCount ( "D" )
lv_signo_1 = lv_encdiff_1 / Math.Abs ( lv_encdiff_1 )
lv_safetytimer_1 = Math.Max ( ( ( Math.abs ( lv_encdiff_1 ) / 100 ) / ( lv_velocidad_1 / 20 ) * 650 * 2 ) , 400 )
Time.Reset3 ()
If lv_encdiff_1 <> 0 Then
While Math.Abs ( Motor.GetCount ( "D" ) - lv_encoder_1 ) > 15 and Time.Get3 () < lv_safetytimer_1
MotorD.StartSpeed ( lv_signo_1 * lv_velocidad_1 )
LCD.Clear ()
LCD.Write ( 5 , 30 , "SafetyTimer: " + lv_safetytimer_1 )
EndWhile
Motor.Stop ( "D" , "True" )
EndIf
EndSub
Sub m_brazo_adtimer_3
Time.Reset1 ()
While Time.Get1 () < lv_timer_2
MotorA.StartSpeed ( lv_velocidada_2 )
MotorD.StartSpeed ( lv_velocidadd_2 )
EndWhile
Motor.Stop ( "AD" , "True" )
EndSub
Sub m_brazo_aencoder_2
lv_encdiff_3 = lv_encoder_3 - Motor.GetCount ( "A" )
lv_signo_3 = lv_encdiff_3 / Math.Abs ( lv_encdiff_3 )
lv_safetytimer_3 = Math.Max ( ( ( Math.abs ( lv_encdiff_3 ) / 100 ) / ( lv_velocidad_3 / 20 ) * 650 * 2 ) , 400 )
Time.Reset3 ()
If lv_encdiff_3 <> 0 Then
While Math.Abs ( Motor.GetCount ( "A" ) - lv_encoder_3 ) > 25 and Time.Get3 () < 2000
MotorA.StartSpeed ( lv_signo_3 * lv_velocidad_3 )
EndWhile
Motor.Stop ( "A" , "True" )
EndIf
EndSub
Sub m_brazo_dtimer_2
Time.Reset1 ()
While Time.Get1 () < lv_timer_4
MotorD.StartSpeed ( lv_velocidad_4 )
EndWhile
MotorD.OffAndBrake ()
EndSub
Sub m_recto_encoder_2
lv_velocidad_5 = lv_velocidad_5 * 1
lv_olderror_5 = 0
lv_errsum_5 = 0
lv_kp_5 = 0.1
lv_ki_5 = 0.0001
lv_kd_5 = 0.1
lv_enc_5 = lv_distancia_5 * 360 / Math.Pi / 6.24
lv_start_b_5 = Motor.GetCount ( "B" ) * - 1
lv_start_c_5 = Motor.GetCount ( "C" )
lv_encoder_c_5 = Motor.GetCount ( "C" ) - lv_start_c_5
While Math.abs ( lv_encoder_c_5 ) < lv_enc_5
lv_encoder_b_5 = Motor.GetCount ( "B" ) * - 1 - lv_start_b_5
lv_encoder_c_5 = Motor.GetCount ( "C" ) - lv_start_c_5
lv_error_5 = ( lv_encoder_b_5 - lv_encoder_c_5 ) * 1
lv_errsum_5 = lv_errsum_5 + lv_error_5
lv_correccion_5 = lv_error_5 * lv_kp_5 + lv_errsum_5 * lv_ki_5 + ( lv_error_5 - lv_olderror_5 ) * lv_kd_5
Motor.StartSync ( "BC" , - ( lv_velocidad_5 - lv_correccion_5 ) , lv_velocidad_5 + lv_correccion_5 )
lv_olderror_5 = lv_error_5
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
