lv_velocidad1_1 = 0
lv_velocidad2_1 = 0
lv_grados_1 = 0
lv_velocidada_2 = 0
lv_velocidadd_2 = 0
lv_timer_2 = 0
lv_velocidad_3 = 0
lv_encoder_3 = 0
lv_velocidad_6 = 0
lv_distancia_6 = 0
lv_velocidad_4 = 0
lv_timer_4 = 0
lv_velocidad_5 = 0
lv_encoder_5 = 0
f_main_0 ()
Sub f_main_0
f_setup_0 ()
lv_velocidad1_1 = 30
lv_velocidad2_1 = - 30
lv_grados_1 = 270
m_giro_grados_3 ()
EndSub
Sub f_setup_0
Sensor.SetMode ( 1 , 0 )
Sensor.SetMode ( 2 , 3 )
Sensor.SetMode ( 3 , 0 )
Sensor.SetMode ( 4 , 0 )
EndSub
Sub m_giro_grados_3
lv_i_1 = "B"
lv_d_1 = "C"
lv_g1_1 = 1035 / 360
lv_signo_1 = ( lv_velocidad1_1 / lv_velocidad2_1 ) / Math.Abs ( lv_velocidad1_1 / lv_velocidad2_1 )
lv_vmin_1 = Math.Min ( Math.Abs ( lv_velocidad1_1 ) , Math.Abs ( lv_velocidad2_1 ) )
lv_vmax_1 = Math.Max ( Math.Abs ( lv_velocidad1_1 ) , Math.Abs ( lv_velocidad2_1 ) )
lv_encoder_1 = lv_grados_1 * lv_g1_1 * ( - 2 / ( lv_signo_1 * lv_vmin_1 / lv_vmax_1 - 1 ) )
Program.Delay ( 100 )
Motor.MoveSync ( lv_i_1 + lv_d_1 , - lv_velocidad1_1 , lv_velocidad2_1 , lv_encoder_1 , "True" )
lv_velocidad1_1 = 0
lv_velocidad2_1 = 0
lv_grados_1 = 0
Program.Delay ( 100 )
EndSub
Sub m_brazo_adtimer_3
Time.Reset1 ()
While Time.Get1 () < lv_timer_2
MotorA.StartSpeed ( lv_velocidada_2 )
MotorD.StartSpeed ( lv_velocidadd_2 )
EndWhile
Motor.Stop ( "AD" , "True" )
EndSub
Sub m_brazo_aencoder_2
lv_encdiff_3 = lv_encoder_3 - Motor.GetCount ( "A" )
lv_signo_3 = lv_encdiff_3 / Math.Abs ( lv_encdiff_3 )
lv_safetytimer_3 = Math.Max ( ( ( Math.abs ( lv_encdiff_3 ) / 100 ) / ( lv_velocidad_3 / 20 ) * 650 * 2 ) , 400 )
Time.Reset3 ()
If lv_encdiff_3 <> 0 Then
While Math.Abs ( Motor.GetCount ( "A" ) - lv_encoder_3 ) > 25 and Time.Get3 () < 2000
MotorA.StartSpeed ( lv_signo_3 * lv_velocidad_3 )
EndWhile
Motor.Stop ( "A" , "True" )
EndIf
EndSub
Sub m_brazo_dtimer_2
Time.Reset1 ()
While Time.Get1 () < lv_timer_4
MotorD.StartSpeed ( lv_velocidad_4 )
EndWhile
MotorD.OffAndBrake ()
EndSub
Sub m_brazo_dencoder_2
lv_encdiff_5 = lv_encoder_5 - Motor.GetCount ( "D" )
lv_signo_5 = lv_encdiff_5 / Math.Abs ( lv_encdiff_5 )
lv_safetytimer_5 = Math.Max ( ( ( Math.abs ( lv_encdiff_5 ) / 100 ) / ( lv_velocidad_5 / 20 ) * 650 * 2 ) , 400 )
Time.Reset3 ()
If lv_encdiff_5 <> 0 Then
While Math.Abs ( Motor.GetCount ( "D" ) - lv_encoder_5 ) > 15 and Time.Get3 () < lv_safetytimer_5
MotorD.StartSpeed ( lv_signo_5 * lv_velocidad_5 )
LCD.Clear ()
LCD.Write ( 5 , 30 , "SafetyTimer: " + lv_safetytimer_5 )
EndWhile
Motor.Stop ( "D" , "True" )
EndIf
EndSub
Sub m_recto_encoder_2
lv_velocidad_6 = lv_velocidad_6 * 1
lv_olderror_6 = 0
lv_errsum_6 = 0
lv_kp_6 = 0.0
lv_ki_6 = 0.000
lv_kd_6 = 0.0
lv_enc_6 = lv_distancia_6 * 360 / Math.Pi / 6.24
lv_start_b_6 = Motor.GetCount ( "B" ) * - 1
lv_start_c_6 = Motor.GetCount ( "C" )
lv_encoder_c_6 = Motor.GetCount ( "C" ) - lv_start_c_6
While Math.abs ( lv_encoder_c_6 ) < lv_enc_6
lv_encoder_b_6 = Motor.GetCount ( "B" ) * - 0.99 - lv_start_b_6
lv_encoder_c_6 = Motor.GetCount ( "C" ) - lv_start_c_6
lv_error_6 = ( lv_encoder_b_6 - lv_encoder_c_6 ) * 1
lv_errsum_6 = lv_errsum_6 + lv_error_6
lv_correccion_6 = lv_error_6 * lv_kp_6 + lv_errsum_6 * lv_ki_6 + ( lv_error_6 - lv_olderror_6 ) * lv_kd_6
Motor.StartSync ( "BC" , - ( lv_velocidad_6 - lv_correccion_6 ) , lv_velocidad_6 + lv_correccion_6 )
lv_olderror_6 = lv_error_6
EndWhile
Motor.Stop ( "BC" , "True" )
EndSub
